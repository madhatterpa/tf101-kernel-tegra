
;; Function set_reset_devices (set_reset_devices)[0:2044] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 24.
verify found no changes in insn with uid = 24.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 19(l0): point = 0
   Insn 8(l0): point = 2
   Insn 24(l0): point = 4
   Insn 13(l0): point = 6
   Insn 7(l0): point = 8
 a0(r135): [3..4]
 a1(r136): [3..8]
Compressing live ranges: from 11 to 3 - 27%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r136,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r136
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a0(r135,l0)
      Pushing a1(r136,l0)
      Popping a1(r136,l0)  -- assign reg 3
      Popping a0(r135,l0)  -- assign reg 2
Disposition:
    0:r135 l0     2    1:r136 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, 14, dead_or_set: 136
insn=13, live_throughout: 13, 14, 136, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, 136, dead_or_set: 135
insn=8, live_throughout: 0, 13, 14, dead_or_set: 135, 136
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 7 (nil))
changing reg in insn 24
changing reg in insn 8
changing reg in insn 7
changing reg in insn 13
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 2 r2 [135]) [0 reset_devices+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 2 r2 [135]) [0 reset_devices+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


set_reset_devices

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,2u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 13 2 init/main.c:146 (set (reg:SI 3 r3 [136])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 13 7 24 2 init/main.c:148 (set (reg/i:SI 0 r0)
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 24 13 8 2 init/main.c:146 (set (reg/f:SI 2 r2 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 24 19 2 init/main.c:146 (set (mem/c/i:SI (reg/f:SI 2 r2 [135]) [0 reset_devices+0 S4 A32])
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 19 8 23 2 init/main.c:148 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 25 NOTE_INSN_DELETED)

(note 25 23 0 NOTE_INSN_DELETED)


;; Function debug_kernel (debug_kernel)[0:2046] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 24.
verify found no changes in insn with uid = 24.
deleting insn with uid = 7.
scanning new insn with uid = 25.
verify found no changes in insn with uid = 25.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 19(l0): point = 0
   Insn 8(l0): point = 2
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 13(l0): point = 8
 a0(r135): [3..4]
 a1(r136): [3..6]
Compressing live ranges: from 11 to 3 - 27%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r136,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r136
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    0:r135 l0     3    1:r136 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=13, live_throughout: 13, 14, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, dead_or_set: 136
insn=25, live_throughout: 0, 13, 14, 136, dead_or_set: 135
insn=8, live_throughout: 0, 13, 14, dead_or_set: 135, 136
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 24 (nil))
changing reg in insn 25
changing reg in insn 8
changing reg in insn 24
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


debug_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{10d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 13 2 NOTE_INSN_DELETED)

(insn 13 9 24 2 init/main.c:199 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 13 25 2 init/main.c:197 (set (reg:SI 2 r2 [136])
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 10 [0xa])
        (nil)))

(insn 25 24 8 2 init/main.c:197 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)
        (nil)))

(insn 8 25 19 2 init/main.c:197 (set (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
        (reg:SI 2 r2 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 10 [0xa])
        (nil)))

(insn 19 8 23 2 init/main.c:199 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 26 NOTE_INSN_DELETED)

(note 26 23 0 NOTE_INSN_DELETED)


;; Function quiet_kernel (quiet_kernel)[0:2047] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 24.
verify found no changes in insn with uid = 24.
deleting insn with uid = 7.
scanning new insn with uid = 25.
verify found no changes in insn with uid = 25.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 19(l0): point = 0
   Insn 8(l0): point = 2
   Insn 25(l0): point = 4
   Insn 24(l0): point = 6
   Insn 13(l0): point = 8
 a0(r135): [3..4]
 a1(r136): [3..6]
Compressing live ranges: from 11 to 3 - 27%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r136): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r136,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r136
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a1(r136,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r136,l0)  -- assign reg 2
Disposition:
    0:r135 l0     3    1:r136 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=13, live_throughout: 13, 14, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, dead_or_set: 136
insn=25, live_throughout: 0, 13, 14, 136, dead_or_set: 135
insn=8, live_throughout: 0, 13, 14, dead_or_set: 135, 136
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 24 (nil))
changing reg in insn 25
changing reg in insn 8
changing reg in insn 24
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


quiet_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{10d,7u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 13 2 NOTE_INSN_DELETED)

(insn 13 9 24 2 init/main.c:205 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 13 25 2 init/main.c:203 (set (reg:SI 2 r2 [136])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 25 24 8 2 init/main.c:203 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)
        (nil)))

(insn 8 25 19 2 init/main.c:203 (set (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
        (reg:SI 2 r2 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 19 8 23 2 init/main.c:205 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 26 NOTE_INSN_DELETED)

(note 26 23 0 NOTE_INSN_DELETED)


;; Function init_setup (init_setup)[0:2050] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 87.
verify found no changes in insn with uid = 87.
deleting insn with uid = 37.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a6 (r172,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r165,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r172: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS

  a0(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 60(l0): point = 0
   Insn 54(l0): point = 2
   Insn 38(l0): point = 5
   Insn 87(l0): point = 7
   Insn 41(l0): point = 9
   Insn 43(l0): point = 11
   Insn 39(l0): point = 13
   Insn 48(l1): point = 16
   Insn 47(l1): point = 18
   Insn 44(l1): point = 20
 a0(r168): [6..7]
 a1(r164): [5..9]
 a2(r165): [5..13]
 a3(r172): [5..11]
 a4(r164): [16..22]
 a5(r165): [16..22]
 a6(r172): [16..22]
Compressing live ranges: from 23 to 8 - 34%
Ranges after the compression:
 a0(r168): [1..2]
 a1(r164): [6..7] [0..3]
 a2(r165): [6..7] [0..5]
 a3(r172): [6..7] [0..4]
+++Allocating 32 bytes for conflict table (uncompressed size 56)
;; a0(r168,l0) conflicts: a1(r164,l0) a2(r165,l0) a3(r172,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r164,l0) conflicts: a2(r165,l0) a3(r172,l0) a0(r168,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r165,l0) conflicts: a1(r164,l0) a3(r172,l0) a0(r168,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r172,l0) conflicts: a1(r164,l0) a2(r165,l0) a0(r168,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=2, blocks=5, points=8
    allocnos=7, copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r168 1r164 2r165 3r172
    modified regnos: 164 165 168 172
    border:
    Pressure: GENERAL_REGS=6
    Reg 168 of GENERAL_REGS has 2 regs less
    Reg 164 of GENERAL_REGS has 2 regs less
    Reg 165 of GENERAL_REGS has 2 regs less
    Reg 172 of GENERAL_REGS has 2 regs less
      Pushing a3(r172,l0)
      Pushing a1(r164,l0)
      Pushing a0(r168,l0)
      Pushing a2(r165,l0)
      Popping a2(r165,l0)  -- assign reg 3
      Popping a0(r168,l0)  -- assign reg 2
      Popping a1(r164,l0)  -- assign reg 1
      Popping a3(r172,l0)  -- assign reg 12
Disposition:
    1:r164 l0     1    2:r165 l0     3    0:r168 l0     2    3:r172 l0    12
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=39, live_throughout: 0, 13, 14, dead_or_set: 165
insn=43, live_throughout: 0, 13, 14, 165, dead_or_set: 172
insn=41, live_throughout: 0, 13, 14, 165, 172, dead_or_set: 164
insn=87, live_throughout: 0, 13, 14, 164, 165, 172, dead_or_set: 168
insn=38, live_throughout: 13, 14, 164, 165, 172, dead_or_set: 0, 168
insn=46, live_throughout: 13, 14, 164, 165, 172, dead_or_set: 
insn=44, live_throughout: 13, 14, 164, 172, dead_or_set: 165
insn=47, live_throughout: 13, 14, 164, 165, 172, dead_or_set: 
insn=48, live_throughout: 13, 14, 164, 165, 172, dead_or_set: 
insn=54, live_throughout: 13, 14, dead_or_set: 0
insn=60, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 164: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 87 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 43 (nil))
changing reg in insn 41
changing reg in insn 47
changing reg in insn 44
changing reg in insn 39
changing reg in insn 44
changing reg in insn 41
changing reg in insn 47
changing reg in insn 47
changing reg in insn 87
changing reg in insn 38
changing reg in insn 43
changing reg in insn 44
Spilling for insn 38.
Spilling for insn 44.

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 2 r2 [168])
                                                        (const_int 4 [0x4])) [0 execute_command+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 2 r2 [168])
                                                        (const_int 4 [0x4])) [0 execute_command+0 S4 A32])

Reloads for insn # 44
Reload 0: reload_out (SI) = (mem/s/f/j:SI (pre_inc:SI (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])) [0 argv_init S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (pre_inc:SI (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])) [0 argv_init S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


init_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={3d,3u,1d} r12={2d,1u} r13={1d,4u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 30{14d,15u,1e} in 10{10 regular + 0 call} insns.
(note 32 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 32 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 33 35 34 2 NOTE_INSN_DELETED)

(note 34 33 39 2 NOTE_INSN_FUNCTION_BEG)

(insn 39 34 43 2 init/main.c:293 (set (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 43 39 41 2 init/main.c:301 (set (reg:SI 12 ip [172])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 41 43 87 2 init/main.c:289 (set (reg/f:SI 1 r1 [orig:164 D.38402 ] [164])
        (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])
            (const_int 124 [0x7c]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 124 [0x7c])))
        (nil)))

(insn 87 41 38 2 init/main.c:293 (set (reg/f:SI 2 r2 [168])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 38 87 46 2 init/main.c:293 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 2 r2 [168])
                (const_int 4 [0x4])) [0 execute_command+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [96.8%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 46 38 42 3 14 "" [1 uses])

(note 42 46 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 44 42 47 3 init/main.c:301 (set (mem/s/f/j:SI (pre_inc:SI (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])) [0 argv_init S4 A32])
        (reg:SI 12 ip [172])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 47 44 48 3 init/main.c:300 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])
            (reg/f:SI 1 r1 [orig:164 D.38402 ] [164]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:165 ivtmp.545 ] [165])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 124 [0x7c]))))
        (nil)))

(jump_insn 48 47 49 3 init/main.c:300 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9677 [0x25cd])
        (nil)))
;; End of basic block 3 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [96.8%]  (dfs_back)
;; Succ edge  4 [3.2%]  (fallthru,loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [3.2%]  (fallthru,loop_exit)
(note 49 48 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 54 49 60 4 init/main.c:303 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 60 54 86 4 init/main.c:303 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 86 60 88 NOTE_INSN_DELETED)

(note 88 86 0 NOTE_INSN_DELETED)


;; Function rdinit_setup (rdinit_setup)[0:2051] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 37.
verify found no changes in insn with uid = 37.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a6 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 29(l0): point = 0
   Insn 23(l0): point = 2
   Insn 7(l0): point = 5
   Insn 37(l0): point = 7
   Insn 10(l0): point = 9
   Insn 12(l0): point = 11
   Insn 8(l0): point = 13
   Insn 17(l1): point = 16
   Insn 16(l1): point = 18
   Insn 13(l1): point = 20
 a0(r137): [6..7]
 a1(r133): [5..9]
 a2(r134): [5..13]
 a3(r141): [5..11]
 a4(r133): [16..22]
 a5(r134): [16..22]
 a6(r141): [16..22]
Compressing live ranges: from 23 to 8 - 34%
Ranges after the compression:
 a0(r137): [1..2]
 a1(r133): [6..7] [0..3]
 a2(r134): [6..7] [0..5]
 a3(r141): [6..7] [0..4]
+++Allocating 32 bytes for conflict table (uncompressed size 56)
;; a0(r137,l0) conflicts: a1(r133,l0) a2(r134,l0) a3(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r133,l0) conflicts: a2(r134,l0) a3(r141,l0) a0(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r134,l0) conflicts: a1(r133,l0) a3(r141,l0) a0(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r141,l0) conflicts: a1(r133,l0) a2(r134,l0) a0(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=2, blocks=5, points=8
    allocnos=7, copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r137 1r133 2r134 3r141
    modified regnos: 133 134 137 141
    border:
    Pressure: GENERAL_REGS=6
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
      Pushing a3(r141,l0)
      Pushing a1(r133,l0)
      Pushing a0(r137,l0)
      Pushing a2(r134,l0)
      Popping a2(r134,l0)  -- assign reg 3
      Popping a0(r137,l0)  -- assign reg 2
      Popping a1(r133,l0)  -- assign reg 1
      Popping a3(r141,l0)  -- assign reg 12
Disposition:
    1:r133 l0     1    2:r134 l0     3    0:r137 l0     2    3:r141 l0    12
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 0, 13, 14, dead_or_set: 134
insn=12, live_throughout: 0, 13, 14, 134, dead_or_set: 141
insn=10, live_throughout: 0, 13, 14, 134, 141, dead_or_set: 133
insn=37, live_throughout: 0, 13, 14, 133, 134, 141, dead_or_set: 137
insn=7, live_throughout: 13, 14, 133, 134, 141, dead_or_set: 0, 137
insn=15, live_throughout: 13, 14, 133, 134, 141, dead_or_set: 
insn=13, live_throughout: 13, 14, 133, 141, dead_or_set: 134
insn=16, live_throughout: 13, 14, 133, 134, 141, dead_or_set: 
insn=17, live_throughout: 13, 14, 133, 134, 141, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 0
insn=29, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 133: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 37 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 12 (nil))
changing reg in insn 10
changing reg in insn 16
changing reg in insn 13
changing reg in insn 8
changing reg in insn 13
changing reg in insn 10
changing reg in insn 16
changing reg in insn 16
changing reg in insn 37
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
Spilling for insn 7.
Spilling for insn 13.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 2 r2 [137])
                                                        (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 2 r2 [137])
                                                        (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/f/j:SI (pre_inc:SI (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])) [0 argv_init S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (pre_inc:SI (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])) [0 argv_init S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


rdinit_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={3d,3u,1d} r12={2d,1u} r13={1d,4u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 30{14d,15u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 12 2 init/main.c:310 (set (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 12 8 10 2 init/main.c:313 (set (reg:SI 12 ip [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 10 12 37 2 init/main.c:306 (set (reg/f:SI 1 r1 [orig:133 D.38437 ] [133])
        (plus:SI (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])
            (const_int 124 [0x7c]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 124 [0x7c])))
        (nil)))

(insn 37 10 7 2 init/main.c:310 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 7 37 15 2 init/main.c:310 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 2 r2 [137])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [96.8%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 15 7 11 3 21 "" [1 uses])

(note 11 15 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 16 3 init/main.c:313 (set (mem/s/f/j:SI (pre_inc:SI (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])) [0 argv_init S4 A32])
        (reg:SI 12 ip [141])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 16 13 17 3 init/main.c:312 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])
            (reg/f:SI 1 r1 [orig:133 D.38437 ] [133]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:134 ivtmp.580 ] [134])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 124 [0x7c]))))
        (nil)))

(jump_insn 17 16 18 3 init/main.c:312 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9677 [0x25cd])
        (nil)))
;; End of basic block 3 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [96.8%]  (dfs_back)
;; Succ edge  4 [3.2%]  (fallthru,loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [3.2%]  (fallthru,loop_exit)
(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 init/main.c:315 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 29 23 36 4 init/main.c:315 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 36 29 38 NOTE_INSN_DELETED)

(note 38 36 0 NOTE_INSN_DELETED)


;; Function smp_setup_processor_id (smp_setup_processor_id)[0:2058] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


smp_setup_processor_id

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 12 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 12 2 13 NOTE_INSN_DELETED)

(note 13 12 0 NOTE_INSN_DELETED)


;; Function thread_info_cache_init (thread_info_cache_init)[0:2059] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


thread_info_cache_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 12 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 12 2 13 NOTE_INSN_DELETED)

(note 13 12 0 NOTE_INSN_DELETED)


;; Function loglevel (loglevel)[0:2048] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 44.
verify found no changes in insn with uid = 44.
deleting insn with uid = 20.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

Pass 0 for finding allocno costs

    a2 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000

   Insn 36(l0): point = 0
   Insn 30(l0): point = 2
   Insn 22(l0): point = 5
   Insn 44(l0): point = 7
   Insn 21(l0): point = 9
   Insn 23(l0): point = 11
   Insn 41(l0): point = 14
   Insn 15(l0): point = 16
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 10(l0): point = 23
   Insn 8(l0): point = 25
   Insn 2(l0): point = 27
   Insn 9(l0): point = 29
   Insn 40(l0): point = 31
 a0(r133): [14..16] [3..11]
 a1(r138): [6..7]
 a2(r139): [6..9]
 a3(r136): [26..31]
Compressing live ranges: from 34 to 9 - 26%
Ranges after the compression:
 a0(r133): [5..6] [0..4]
 a1(r138): [1..2]
 a2(r139): [1..3]
 a3(r136): [7..8]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r133,l0) conflicts: a1(r138,l0) a2(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r138,l0) conflicts: a0(r133,l0) a2(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r139,l0) conflicts: a0(r133,l0) a1(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r136,l0) conflicts:
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  regions=1, blocks=6, points=9
    allocnos=4, copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r138 2r139 3r136
    modified regnos: 133 136 138 139
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a2(r139,l0)
      Pushing a1(r138,l0)
      Pushing a0(r133,l0)
      Pushing a3(r136,l0)
      Popping a3(r136,l0)  -- assign reg 3
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r138,l0)  -- assign reg 3
      Popping a2(r139,l0)  -- assign reg 2
Disposition:
    0:r133 l0     0    3:r136 l0     3    1:r138 l0     3    2:r139 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=40, live_throughout: 0, 13, dead_or_set: 136
insn=9, live_throughout: 0, 13, 136, dead_or_set: 1
insn=2, live_throughout: 1, 13, dead_or_set: 0, 136
insn=8, live_throughout: 1, 13, dead_or_set: 0, 136
insn=10, live_throughout: 13, dead_or_set: 0, 1, 14
insn=12, live_throughout: 13, 14, dead_or_set: 0
insn=13, live_throughout: 13, 14, dead_or_set: 
insn=15, live_throughout: 13, 14, dead_or_set: 133
insn=41, live_throughout: 13, 14, 133, dead_or_set: 
insn=18, live_throughout: 13, 14, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 133
insn=21, live_throughout: 13, 14, 133, dead_or_set: 139
insn=44, live_throughout: 13, 14, 133, 139, dead_or_set: 138
insn=22, live_throughout: 13, 14, 133, dead_or_set: 138, 139
insn=24, live_throughout: 13, 14, 133, dead_or_set: 
insn=30, live_throughout: 13, 14, dead_or_set: 0, 133
insn=36, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 21 (nil))
changing reg in insn 23
changing reg in insn 15
changing reg in insn 30
changing reg in insn 40
changing reg in insn 2
changing reg in insn 2
changing reg in insn 2
changing reg in insn 8
changing reg in insn 44
changing reg in insn 22
changing reg in insn 21
changing reg in insn 22
Spilling for insn 2.
Spilling for insn 22.

Reloads for insn # 2
Reload 0: reload_out (SI) = (mem/f/c/i:SI (pre_modify:SI (reg/f:SI 3 r3 [136])
                                                        (plus:SI (reg/f:SI 3 r3 [136])
                                                            (const_int -12 [0xfffffffffffffff4]))) [0 str+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (pre_modify:SI (reg/f:SI 3 r3 [136])
                                                        (plus:SI (reg/f:SI 3 r3 [136])
                                                            (const_int -12 [0xfffffffffffffff4]))) [0 str+0 S4 A32])

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/f:SI 3 r3 [138]) [0 console_printk+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/f:SI 3 r3 [138]) [0 console_printk+0 S4 A32])
deleting insn with uid = 30.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


loglevel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={3d,1u} r2={3d,1u} r3={5d,4u} r12={2d} r13={1d,9u,2d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 158{133d,22u,3e} in 14{13 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 11 2 NOTE_INSN_DELETED)

(note 11 7 40 2 NOTE_INSN_DELETED)

(insn 40 11 9 2 init/main.c:211 (set (reg/f:SI 3 r3 [136])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))
        (nil)))

(insn 9 40 2 2 init/main.c:219 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 2 9 8 2 init/main.c:211 (set (mem/f/c/i:SI (pre_modify:SI (reg/f:SI 3 r3 [136])
                (plus:SI (reg/f:SI 3 r3 [136])
                    (const_int -12 [0xfffffffffffffff4]))) [0 str+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 3 r3 [136])
        (nil)))

(insn 8 2 10 2 init/main.c:219 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(call_insn 10 8 12 2 init/main.c:219 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_option") [flags 0x41] <function_decl 0x10a82500 get_option>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 10 13 2 init/main.c:219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 init/main.c:219 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 41 3 init/main.c:224 (set (reg:SI 0 r0 [orig:133 D.37739 ] [133])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 41 15 42 3 (set (pc)
        (label_ref 24)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 42 41 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 42 19 4 31 "" [1 uses])

(note 19 18 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 19 21 4 init/main.c:221 (set (reg:SI 0 r0 [orig:133 D.37739 ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 21 23 44 4 init/main.c:220 (set (reg:SI 2 r2 [orig:139 newlevel ] [139])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 newlevel+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 newlevel+0 S4 A32])
        (nil)))

(insn 44 21 22 4 init/main.c:220 (set (reg/f:SI 3 r3 [138])
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)
        (nil)))

(insn 22 44 24 4 init/main.c:220 (set (mem/s/j:SI (reg/f:SI 3 r3 [138]) [0 console_printk+0 S4 A32])
        (reg:SI 2 r2 [orig:139 newlevel ] [139])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 24 22 25 5 32 "" [1 uses])

(note 25 24 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 25 43 5 init/main.c:225 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 43 36 45 NOTE_INSN_DELETED)

(note 45 43 0 NOTE_INSN_DELETED)


;; Function do_one_initcall (do_one_initcall)[0:2065]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 155.
verify found no changes in insn with uid = 155.
deleting insn with uid = 10.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 27 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)

Pass 0 for finding allocno costs

    a13 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a3(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r174,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a13(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r144,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a18(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r193: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a3(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r174,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a13(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r144,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a18(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 142(l0): point = 0
   Insn 136(l0): point = 2
   Insn 129(l0): point = 5
   Insn 126(l0): point = 7
   Insn 128(l0): point = 9
   Insn 127(l0): point = 11
   Insn 121(l0): point = 14
   Insn 120(l0): point = 16
   Insn 119(l0): point = 18
   Insn 118(l0): point = 20
   Insn 115(l0): point = 23
   Insn 114(l0): point = 25
   Insn 111(l0): point = 27
   Insn 113(l0): point = 29
   Insn 112(l0): point = 31
   Insn 106(l0): point = 34
   Insn 105(l0): point = 36
   Insn 103(l0): point = 38
   Insn 100(l0): point = 41
   Insn 96(l0): point = 43
   Insn 94(l0): point = 45
   Insn 95(l0): point = 47
   Insn 93(l0): point = 49
   Insn 88(l0): point = 52
   Insn 87(l0): point = 54
   Insn 86(l0): point = 56
   Insn 151(l0): point = 58
   Insn 150(l0): point = 60
   Insn 80(l0): point = 63
   Insn 79(l0): point = 65
   Insn 78(l0): point = 67
   Insn 77(l0): point = 69
   Insn 72(l0): point = 72
   Insn 71(l0): point = 74
   Insn 70(l0): point = 76
   Insn 67(l0): point = 79
   Insn 56(l0): point = 81
   Insn 54(l0): point = 83
   Insn 66(l0): point = 85
   Insn 53(l0): point = 87
   Insn 50(l0): point = 90
   Insn 49(l0): point = 92
   Insn 148(l0): point = 95
   Insn 44(l0): point = 97
   Insn 146(l0): point = 99
   Insn 38(l0): point = 101
   Insn 147(l0): point = 103
   Insn 39(l0): point = 105
   Insn 37(l0): point = 107
   Insn 41(l0): point = 109
   Insn 35(l0): point = 111
   Insn 43(l0): point = 119
   Insn 42(l0): point = 121
   Insn 33(l0): point = 123
   Insn 32(l0): point = 125
   Insn 31(l0): point = 127
   Insn 29(l0): point = 129
   Insn 28(l0): point = 131
   Insn 27(l0): point = 133
   Insn 26(l0): point = 135
   Insn 25(l0): point = 137
   Insn 23(l0): point = 139
   Insn 22(l0): point = 141
   Insn 20(l0): point = 143
   Insn 24(l0): point = 145
   Insn 21(l0): point = 147
   Insn 19(l0): point = 149
   Insn 13(l0): point = 152
   Insn 12(l0): point = 154
   Insn 9(l0): point = 156
   Insn 11(l0): point = 158
   Insn 155(l0): point = 160
   Insn 2(l0): point = 162
   Insn 153(l0): point = 164
   Insn 152(l0): point = 166
 a0(r138): [95..129] [3..90]
 a1(r186): [10..20]
 a2(r143): [12..162]
 a3(r187): [17..18]
 a4(r137): [37..38]
 a5(r174): [42..60]
 a6(r139): [42..156]
 a7(r176): [55..56]
 a8(r159): [70..87]
 a9(r170): [75..76]
 a10(r160): [82..83]
 a11(r192): [100..107]
 a12(r155): [102..123]
 a13(r193): [104..105]
 a14(r140): [115..133] [112..113]
 a15(r152): [128..145]
 a16(r151): [142..149]
 a17(r144): [150..166]
 a18(r147): [155..158]
 a19(r146): [159..160]
Compressing live ranges: from 169 to 43 - 25%
Ranges after the compression:
 a0(r138): [19..30] [0..18]
 a1(r186): [1..5]
 a2(r143): [2..41]
 a3(r187): [3..4]
 a4(r137): [6..7]
 a5(r174): [8..11]
 a6(r139): [8..37]
 a7(r176): [9..10]
 a8(r159): [12..17]
 a9(r170): [13..14]
 a10(r160): [15..16]
 a11(r192): [20..24]
 a12(r155): [21..28]
 a13(r193): [22..23]
 a14(r140): [27..31] [25..26]
 a15(r152): [29..33]
 a16(r151): [32..34]
 a17(r144): [35..42]
 a18(r147): [36..38]
 a19(r146): [39..40]
+++Allocating 160 bytes for conflict table (uncompressed size 160)
;; a0(r138,l0) conflicts: a1(r186,l0) a2(r143,l0) a3(r187,l0) a4(r137,l0) a5(r174,l0) a6(r139,l0) a7(r176,l0) a8(r159,l0) a9(r170,l0) a10(r160,l0) a11(r192,l0) a12(r155,l0) a13(r193,l0) a14(r140,l0) a15(r152,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r186,l0) conflicts: a0(r138,l0) a2(r143,l0) a3(r187,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a2(r143,l0) conflicts: a0(r138,l0) a1(r186,l0) a3(r187,l0) a4(r137,l0) a5(r174,l0) a6(r139,l0) a7(r176,l0) a8(r159,l0) a9(r170,l0) a10(r160,l0) a11(r192,l0) a12(r155,l0) a13(r193,l0) a14(r140,l0) a15(r152,l0) a16(r151,l0) a17(r144,l0) a18(r147,l0) a19(r146,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r187,l0) conflicts: a0(r138,l0) a1(r186,l0) a2(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r137,l0) conflicts: a0(r138,l0) a2(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r174,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a7(r176,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r139,l0) conflicts: a0(r138,l0) a2(r143,l0) a5(r174,l0) a7(r176,l0) a8(r159,l0) a9(r170,l0) a10(r160,l0) a11(r192,l0) a12(r155,l0) a13(r193,l0) a14(r140,l0) a15(r152,l0) a16(r151,l0) a17(r144,l0) a18(r147,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r176,l0) conflicts: a0(r138,l0) a2(r143,l0) a5(r174,l0) a6(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r159,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a9(r170,l0) a10(r160,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r170,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a8(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r160,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a8(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r192,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a12(r155,l0) a13(r193,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a12(r155,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a11(r192,l0) a13(r193,l0) a14(r140,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a13(r193,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a11(r192,l0) a12(r155,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a14(r140,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a12(r155,l0) a15(r152,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a15(r152,l0) conflicts: a0(r138,l0) a2(r143,l0) a6(r139,l0) a14(r140,l0) a16(r151,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a16(r151,l0) conflicts: a2(r143,l0) a6(r139,l0) a15(r152,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a17(r144,l0) conflicts: a2(r143,l0) a6(r139,l0) a18(r147,l0) a19(r146,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a18(r147,l0) conflicts: a2(r143,l0) a6(r139,l0) a17(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r146,l0) conflicts: a2(r143,l0) a17(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=15, points=43
    allocnos=20, copies=0, conflicts=0, ranges=22

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r138 1r186 2r143 3r187 4r137 5r174 6r139 7r176 8r159 9r170 10r160 11r192 12r155 13r193 14r140 15r152 16r151 17r144 18r147 19r146
    modified regnos: 137 138 139 140 143 144 146 147 151 152 155 159 160 170 174 176 186 187 192 193
    border:
    Pressure: GENERAL_REGS=10
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 186 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 4 regs less
    Reg 187 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 192 of GENERAL_REGS has 3 regs less
    Reg 155 of GENERAL_REGS has 3 regs less
    Reg 193 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 152 of GENERAL_REGS has 4 regs less
    Reg 151 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
      Pushing a19(r146,l0)
      Pushing a18(r147,l0)
      Pushing a10(r160,l0)
      Pushing a9(r170,l0)
      Pushing a7(r176,l0)
      Pushing a4(r137,l0)
      Pushing a3(r187,l0)
      Pushing a8(r159,l0)
      Pushing a17(r144,l0)
      Pushing a16(r151,l0)
      Pushing a1(r186,l0)
      Pushing a13(r193,l0)
      Pushing a11(r192,l0)
      Pushing a12(r155,l0)
      Pushing a14(r140,l0)
      Pushing a15(r152,l0)
      Pushing a6(r139,l0)
      Pushing a5(r174,l0)
      Pushing a2(r143,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 4
      Popping a2(r143,l0)  -- assign reg 5
      Popping a5(r174,l0)  -- assign reg 6
      Popping a6(r139,l0)  -- assign reg 7
      Popping a15(r152,l0)  -- assign reg 6
      Popping a14(r140,l0)  -- assign reg 8
      Popping a12(r155,l0)  -- assign reg 10
      Popping a11(r192,l0)  -- assign reg 3
      Popping a13(r193,l0)  -- assign reg 12
      Popping a1(r186,l0)  -- assign reg 2
      Popping a16(r151,l0)  -- assign reg 3
      Popping a17(r144,l0)  -- assign reg 3
      Popping a8(r159,l0)  -- assign reg 0
      Popping a3(r187,l0)  -- assign reg 3
      Popping a4(r137,l0)  -- assign reg 3
      Popping a7(r176,l0)  -- assign reg 3
      Popping a9(r170,l0)  -- assign reg 3
      Popping a10(r160,l0)  -- assign reg 3
      Popping a18(r147,l0)  -- assign reg 2
      Popping a19(r146,l0)  -- assign reg 2
Disposition:
    4:r137 l0     3    0:r138 l0     4    6:r139 l0     7   14:r140 l0     8
    2:r143 l0     5   17:r144 l0     3   19:r146 l0     2   18:r147 l0     2
   16:r151 l0     3   15:r152 l0     6   12:r155 l0    10    8:r159 l0     0
   10:r160 l0     3    9:r170 l0     3    5:r174 l0     6    7:r176 l0     3
    1:r186 l0     2    3:r187 l0     3   11:r192 l0     3   13:r193 l0    12
New iteration of spill/restore move
+++Costs: overall 3500, reg 3500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=152, live_throughout: 0, 13, dead_or_set: 144
insn=153, live_throughout: 0, 13, dead_or_set: 144
insn=2, live_throughout: 13, 144, dead_or_set: 0, 143
insn=155, live_throughout: 13, 143, 144, dead_or_set: 146
insn=11, live_throughout: 13, 143, 144, dead_or_set: 146, 147
insn=9, live_throughout: 13, 143, 144, 147, dead_or_set: 139
insn=12, live_throughout: 13, 139, 143, 144, dead_or_set: 147
insn=13, live_throughout: 13, 139, 143, 144, dead_or_set: 
insn=19, live_throughout: 13, 139, 143, dead_or_set: 144, 151
insn=21, live_throughout: 13, 139, 143, 151, dead_or_set: 1
insn=24, live_throughout: 1, 13, 139, 143, 151, dead_or_set: 152
insn=20, live_throughout: 1, 13, 139, 143, 151, 152, dead_or_set: 0
insn=22, live_throughout: 0, 1, 13, 139, 143, 152, dead_or_set: 2, 151
insn=23, live_throughout: 13, 139, 143, 152, dead_or_set: 0, 1, 2, 14
insn=25, live_throughout: 13, 139, 143, 152, dead_or_set: 0
insn=26, live_throughout: 13, 139, 143, 152, dead_or_set: 0, 14
insn=27, live_throughout: 13, 139, 143, 152, dead_or_set: 140
insn=28, live_throughout: 13, 139, 140, 143, 152, dead_or_set: 0, 14
insn=29, live_throughout: 13, 139, 140, 143, 152, dead_or_set: 0, 138
insn=31, live_throughout: 13, 138, 139, 140, 143, dead_or_set: 0, 152
insn=32, live_throughout: 13, 138, 139, 140, 143, dead_or_set: 0, 14
insn=33, live_throughout: 13, 138, 139, 140, 143, dead_or_set: 155
insn=42, live_throughout: 13, 138, 139, 140, 143, 155, dead_or_set: 1
insn=43, live_throughout: 1, 13, 138, 139, 140, 143, 155, dead_or_set: 2
insn=35, live_throughout: 1, 2, 13, 138, 139, 143, dead_or_set: 140, 155
insn=41, live_throughout: 1, 2, 13, 138, 139, 143, 155, dead_or_set: 0
insn=37, live_throughout: 0, 1, 2, 13, 138, 139, 143, 155, dead_or_set: 192
insn=39, live_throughout: 0, 1, 2, 13, 138, 139, 143, 155, 192, dead_or_set: 193
insn=147, live_throughout: 0, 1, 2, 13, 138, 139, 143, 155, 192, dead_or_set: 193
insn=38, live_throughout: 0, 1, 2, 13, 138, 139, 143, dead_or_set: 155, 192
insn=146, live_throughout: 0, 1, 2, 13, 138, 139, 143, dead_or_set: 192
insn=44, live_throughout: 13, 138, 139, 143, dead_or_set: 0, 1, 2, 14
insn=148, live_throughout: 13, 14, 138, 139, 143, dead_or_set: 
insn=47, live_throughout: 13, 139, 143, dead_or_set: 
insn=49, live_throughout: 13, 139, 143, dead_or_set: 0, 14
insn=50, live_throughout: 13, 14, 139, 143, dead_or_set: 0, 138
insn=51, live_throughout: 13, 14, 138, 139, 143, dead_or_set: 
insn=53, live_throughout: 13, 14, 138, 139, 143, dead_or_set: 159
insn=66, live_throughout: 13, 14, 138, 139, 143, 159, dead_or_set: 
insn=54, live_throughout: 13, 14, 24, 138, 139, 143, 159, dead_or_set: 160
insn=56, live_throughout: 13, 14, 24, 138, 139, 143, 159, dead_or_set: 160
insn=67, live_throughout: 13, 14, 138, 139, 143, 159, dead_or_set: 
insn=70, live_throughout: 13, 14, 138, 139, 143, 159, dead_or_set: 170
insn=71, live_throughout: 13, 14, 138, 139, 143, 159, dead_or_set: 170
insn=72, live_throughout: 13, 14, 138, 139, 143, 159, dead_or_set: 
insn=77, live_throughout: 13, 138, 139, 143, dead_or_set: 0, 159
insn=78, live_throughout: 0, 13, 138, 139, 143, dead_or_set: 1
insn=79, live_throughout: 0, 1, 13, 138, 139, 143, dead_or_set: 2
insn=80, live_throughout: 13, 138, 139, 143, dead_or_set: 0, 1, 2, 14
insn=81, live_throughout: 13, 14, 138, 139, 143, dead_or_set: 
insn=150, live_throughout: 13, 14, 138, 139, 143, dead_or_set: 174
insn=151, live_throughout: 13, 14, 138, 139, 143, dead_or_set: 174
insn=86, live_throughout: 13, 14, 138, 139, 143, 174, dead_or_set: 176
insn=87, live_throughout: 13, 14, 138, 139, 143, 174, dead_or_set: 176
insn=88, live_throughout: 13, 14, 138, 139, 143, 174, dead_or_set: 
insn=93, live_throughout: 13, 138, 139, 143, 174, dead_or_set: 0
insn=95, live_throughout: 0, 13, 138, 139, 143, 174, dead_or_set: 2
insn=94, live_throughout: 0, 2, 13, 138, 139, 143, 174, dead_or_set: 1
insn=96, live_throughout: 13, 138, 139, 143, 174, dead_or_set: 0, 1, 2, 14
insn=100, live_throughout: 13, 14, 138, 143, dead_or_set: 139, 174
insn=101, live_throughout: 13, 14, 138, 143, dead_or_set: 
insn=103, live_throughout: 13, 14, 138, 143, dead_or_set: 137
insn=105, live_throughout: 13, 14, 138, 143, dead_or_set: 137
insn=106, live_throughout: 13, 14, 138, 143, dead_or_set: 
insn=112, live_throughout: 13, 138, 143, dead_or_set: 1
insn=113, live_throughout: 1, 13, 138, 143, dead_or_set: 2
insn=111, live_throughout: 1, 2, 13, 138, 143, dead_or_set: 0
insn=114, live_throughout: 13, 138, 143, dead_or_set: 0, 1, 2, 14
insn=115, live_throughout: 13, 14, 138, 143, dead_or_set: 
insn=116, live_throughout: 13, 14, 138, 143, dead_or_set: 
insn=118, live_throughout: 13, 14, 138, 143, dead_or_set: 186
insn=119, live_throughout: 13, 14, 138, 143, 186, dead_or_set: 187
insn=120, live_throughout: 13, 14, 138, 143, 186, dead_or_set: 187
insn=121, live_throughout: 13, 14, 138, 143, 186, dead_or_set: 
insn=127, live_throughout: 13, 138, 186, dead_or_set: 1, 143
insn=128, live_throughout: 1, 13, 138, dead_or_set: 2, 186
insn=126, live_throughout: 1, 2, 13, 138, dead_or_set: 0
insn=129, live_throughout: 13, 138, dead_or_set: 0, 1, 2, 14
insn=130, live_throughout: 13, 14, 138, dead_or_set: 
insn=136, live_throughout: 13, 14, dead_or_set: 0, 138
insn=142, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 146: (insn_list:REG_DEP_TRUE 155 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 159: (insn_list:REG_DEP_TRUE 53 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 54 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 86 (nil))
init_insns for 186: (insn_list:REG_DEP_TRUE 118 (nil))
init_insns for 193: (insn_list:REG_DEP_TRUE 147 (nil))
changing reg in insn 103
changing reg in insn 105
changing reg in insn 50
changing reg in insn 29
changing reg in insn 66
changing reg in insn 66
changing reg in insn 136
changing reg in insn 79
changing reg in insn 43
changing reg in insn 9
changing reg in insn 100
changing reg in insn 87
changing reg in insn 27
changing reg in insn 35
changing reg in insn 2
changing reg in insn 127
changing reg in insn 49
changing reg in insn 42
changing reg in insn 28
changing reg in insn 21
changing reg in insn 153
changing reg in insn 152
changing reg in insn 153
changing reg in insn 19
changing reg in insn 9
changing reg in insn 155
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 22
changing reg in insn 24
changing reg in insn 31
changing reg in insn 25
changing reg in insn 33
changing reg in insn 35
changing reg in insn 35
changing reg in insn 53
changing reg in insn 77
changing reg in insn 70
changing reg in insn 56
changing reg in insn 70
changing reg in insn 54
changing reg in insn 70
changing reg in insn 71
changing reg in insn 151
changing reg in insn 150
changing reg in insn 151
changing reg in insn 100
changing reg in insn 86
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 118
changing reg in insn 128
changing reg in insn 119
changing reg in insn 119
changing reg in insn 120
changing reg in insn 38
changing reg in insn 37
changing reg in insn 38
changing reg in insn 146
changing reg in insn 39
changing reg in insn 147
Spilling for insn 152.
Using reg 2 for reload 0
Spilling for insn 147.
Spilling for insn 146.
Spilling for insn 56.
Spilling for insn 150.
Using reg 3 for reload 0
Spilling for insn 100.

Reloads for insn # 152
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 147
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 146
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A64])

Reloads for insn # 56
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 0 r0 [159])
                                                        (const_int 16 [0x10])) [0 msgbuf+0 S1 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 0 r0 [159])
                                                        (const_int 16 [0x10])) [0 msgbuf+0 S1 A32])

Reloads for insn # 150
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 100
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 6 r6 [174])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 6 r6 [174])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 26.
rescanning insn with uid = 28.
deleting insn with uid = 28.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 44.
rescanning insn with uid = 49.
deleting insn with uid = 49.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 114.
verify found no changes in insn with uid = 129.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 27 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)


do_one_initcall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,16u,1d} r1={17d,6u} r2={21d,11u} r3={22d,12u} r4={2d,5u} r5={1d,5u} r6={3d,5u,1d} r7={1d,2u} r8={1d,1u} r9={1d,1u} r10={2d,2u} r11={2d,3u} r12={12d,1u} r13={1d,31u,2d} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={19d,6u} r25={2d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1351{1237d,108u,6e} in 77{67 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 157 2 NOTE_INSN_DELETED)

(insn 157 7 152 2 init/main.c:679 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 152 157 153 2 init/main.c:679 (set (reg:SI 3 r3 [144])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 153 152 2 2 init/main.c:679 (set (reg:SI 3 r3 [144])
        (and:SI (reg:SI 3 r3 [144])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 153 155 2 init/main.c:678 (set (reg/v/f:SI 5 r5 [orig:143 fn ] [143])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 155 2 11 2 init/main.c:682 (set (reg/f:SI 2 r2 [146])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 11 155 9 2 init/main.c:682 (set (reg:SI 2 r2 [orig:147 initcall_debug ] [147])
        (mem/c/i:SI (plus:SI (reg/f:SI 2 r2 [146])
                (const_int 12 [0xc])) [0 initcall_debug+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 initcall_debug+0 S4 A32])
        (nil)))

(insn 9 11 12 2 init/main.c:679 (set (reg/v:SI 7 r7 [orig:139 count ] [139])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [144])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 9 13 2 init/main.c:682 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:147 initcall_debug ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 init/main.c:682 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 5 [r5] 7 [r7] 13 [sp]
;; live  out 	 3 [r3] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 36 14 19 3 NOTE_INSN_DELETED)

(insn 19 36 21 3 init/main.c:665 (set (reg/f:SI 3 r3 [orig:151 <variable>.task ] [151])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [144])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 19 24 3 init/main.c:665 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:143 fn ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 24 21 20 3 init/main.c:666 (set (reg/f:SI 6 r6 [152])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))
        (nil)))

(insn 20 24 22 3 init/main.c:665 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11a9f360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11a9f360>)
        (nil)))

(insn 22 20 23 3 init/main.c:665 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:151 <variable>.task ] [151])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 23 22 25 3 init/main.c:665 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 25 23 26 3 init/main.c:666 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 26 25 27 3 init/main.c:666 (parallel [
            (call (mem:SI (symbol_ref:SI ("ktime_get") [flags 0x41] <function_decl 0x11299080 ktime_get>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 27 26 28 3 init/main.c:666 (set (reg/v:DI 8 r8 [orig:140 calltime ] [140])
        (mem/s:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S8 A64])) 163 {*arm_movdi} (nil))

(call_insn 28 27 29 3 init/main.c:667 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 5 r5 [orig:143 fn ] [143]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (nil))

(insn 29 28 31 3 init/main.c:667 (set (reg/v:SI 4 r4 [orig:138 ret ] [138])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 31 29 32 3 init/main.c:668 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 32 31 33 3 init/main.c:668 (parallel [
            (call (mem:SI (symbol_ref:SI ("ktime_get") [flags 0x41] <function_decl 0x11299080 ktime_get>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 33 32 42 3 init/main.c:668 (set (reg:DI 10 sl [155])
        (mem/s:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 42 33 43 3 init/main.c:671 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:143 fn ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 35 3 init/main.c:671 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:138 ret ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 35 43 41 3 init/main.c:671 (parallel [
            (set (reg:DI 10 sl [155])
                (minus:DI (reg:DI 10 sl [155])
                    (reg/v:DI 8 r8 [orig:140 calltime ] [140])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (nil))

(insn 41 35 37 3 init/main.c:671 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11add730>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11add730>)
        (nil)))

(insn 37 41 39 3 init/main.c:671 (set (reg:SI 3 r3 [192])
        (lshiftrt:SI (reg:SI 10 sl [155])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (nil))

(insn 39 37 147 3 init/main.c:671 (set (reg:SI 12 ip [orig:193+4 ] [193])
        (lshiftrt:SI (reg:SI 11 fp [+4 ])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(insn 147 39 38 3 init/main.c:671 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [orig:193+4 ] [193])) 167 {*arm_movsi_insn} (nil))

(insn 38 147 146 3 init/main.c:671 (set (reg:SI 3 r3 [192])
        (ior:SI (ashift:SI (reg:SI 11 fp [+4 ])
                (const_int 22 [0x16]))
            (reg:SI 3 r3 [192]))) 270 {*arith_shiftsi} (nil))

(insn 146 38 44 3 init/main.c:671 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg:SI 3 r3 [192])) 167 {*arm_movsi_insn} (nil))

(call_insn 44 146 148 3 init/main.c:671 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 148 44 149 3 (set (pc)
        (label_ref 51)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 149 148 47)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 47 149 48 4 37 "" [1 uses])

(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 49 48 50 4 init/main.c:685 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 5 r5 [orig:143 fn ] [143]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (nil))

(insn 50 49 51 4 init/main.c:685 (set (reg/v:SI 4 r4 [orig:138 ret ] [138])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 51 50 52 5 38 "" [1 uses])

(note 52 51 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 57 52 58 5 NOTE_INSN_DELETED)

(note 58 57 60 5 NOTE_INSN_DELETED)

(note 60 58 61 5 NOTE_INSN_DELETED)

(note 61 60 63 5 NOTE_INSN_DELETED)

(note 63 61 64 5 NOTE_INSN_DELETED)

(note 64 63 65 5 NOTE_INSN_DELETED)

(note 65 64 53 5 NOTE_INSN_DELETED)

(insn 53 65 66 5 init/main.c:687 (set (reg/f:SI 0 r0 [159])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 66 53 54 5 init/main.c:689 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg/v:SI 4 r4 [orig:138 ret ] [138])
                    (const_int 0 [0x0]))
                (ne:SI (reg/v:SI 4 r4 [orig:138 ret ] [138])
                    (const_int -19 [0xffffffffffffffed])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 54 66 56 5 init/main.c:687 (set (reg:SI 3 r3 [160])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 56 54 67 5 init/main.c:687 (set (mem/s/j:QI (plus:SI (reg/f:SI 0 r0 [159])
                (const_int 16 [0x10])) [0 msgbuf+0 S1 A32])
        (reg:QI 3 r3 [160])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 67 56 68 5 init/main.c:689 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 68 67 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 70 68 71 6 init/main.c:689 discrim 1 (set (reg:SI 3 r3 [orig:170 initcall_debug ] [170])
        (mem/c/i:SI (plus:SI (reg/f:SI 0 r0 [159])
                (const_int 12 [0xc])) [0 initcall_debug+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 0 r0 [159])
                (const_int 12 [0xc])) [0 initcall_debug+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 initcall_debug+0 S4 A32])
            (nil))))

(insn 71 70 72 6 init/main.c:689 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:170 initcall_debug ] [170])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 6 init/main.c:689 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 73 72 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 77 73 78 7 init/main.c:690 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 0 r0 [159])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 78 77 79 7 init/main.c:690 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11b105d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11b105d0>)
        (nil)))

(insn 79 78 80 7 init/main.c:690 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:138 ret ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn 80 79 81 7 init/main.c:690 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  6 [71.0%] 
;; Pred edge  5 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 81 80 82 8 39 "" [2 uses])

(note 82 81 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 84 82 158 8 NOTE_INSN_DELETED)

(insn 158 84 150 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 150 158 151 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 6 r6 [174])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 151 150 86 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 6 r6 [174])
        (and:SI (reg:SI 6 r6 [174])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 86 151 87 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [orig:176 <variable>.preempt_count ] [176])
        (mem/s/j:SI (plus:SI (reg:SI 6 r6 [174])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 6 r6 [174])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 87 86 88 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:176 <variable>.preempt_count ] [176])
            (reg/v:SI 7 r7 [orig:139 count ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  9 [51.2%]  (fallthru)
;; Succ edge  10 [48.8%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  8 [51.2%]  (fallthru)
(note 89 88 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 93 89 95 9 init/main.c:693 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 95 93 94 9 init/main.c:693 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 94 95 96 9 init/main.c:693 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11b10930>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11b10930>)
        (nil)))

(call_insn 96 94 100 9 init/main.c:693 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcat") [flags 0x41] <function_decl 0x10bb1500 strlcat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 100 96 101 9 init/main.c:694 (set (mem/s/j:SI (plus:SI (reg:SI 6 r6 [174])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg/v:SI 7 r7 [orig:139 count ] [139])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  8 [48.8%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 101 100 102 10 40 "" [1 uses])

(note 102 101 104 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 104 102 103 10 NOTE_INSN_DELETED)

(insn 103 104 105 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:137 _flags ] [137])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118201))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 105 103 106 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:137 _flags ] [137])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 106 105 107 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  10 [29.0%]  (fallthru)
(note 107 106 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 112 107 113 11 init/main.c:697 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11b10db0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11b10db0>)
        (nil)))

(insn 113 112 111 11 init/main.c:697 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 111 113 114 11 init/main.c:697 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 114 111 115 11 init/main.c:697 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcat") [flags 0x41] <function_decl 0x10bb1500 strlcat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 115 114 116 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104761)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 116 115 117 12 41 "" [1 uses])

(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 12 init/main.c:700 (set (reg/f:SI 2 r2 [186])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 119 118 120 12 init/main.c:700 (set (reg:SI 3 r3 [orig:187 msgbuf ] [187])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [186])
                    (const_int 16 [0x10])) [0 msgbuf+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [0 msgbuf+0 S1 A32]))
        (nil)))

(insn 120 119 121 12 init/main.c:700 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:187 msgbuf ] [187])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 12 init/main.c:700 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 130)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 122 121 127 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 127 122 128 13 init/main.c:701 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:143 fn ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 128 127 126 13 init/main.c:701 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [186])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 126 128 129 13 init/main.c:701 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11b089c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11b089c0>)
        (nil)))

(call_insn 129 126 130 13 init/main.c:701 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 130 129 131 14 42 "" [1 uses])

(note 131 130 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 136 131 142 14 init/main.c:705 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:138 ret ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 142 136 154 14 init/main.c:705 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 154 142 156 NOTE_INSN_DELETED)

(note 156 154 0 NOTE_INSN_DELETED)


;; Function parse_early_options (parse_early_options)[0:2055] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 22.
verify found no changes in insn with uid = 22.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 13(l0): point = 0
   Insn 8(l0): point = 2
   Insn 22(l0): point = 4
   Insn 12(l0): point = 6
   Insn 9(l0): point = 8
   Insn 10(l0): point = 10
   Insn 11(l0): point = 12
   Insn 2(l0): point = 14
 a0(r135): [3..4]
 a1(r133): [11..14]
Compressing live ranges: from 17 to 4 - 23%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r133): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r133,l0) conflicts:
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r133
    modified regnos: 133 135
    border:
    Pressure: GENERAL_REGS=5
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a1(r133,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 12
      Popping a1(r133,l0)  -- assign reg 1
Disposition:
    1:r133 l0     1    0:r135 l0    12
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 133
insn=11, live_throughout: 13, 133, dead_or_set: 2
insn=10, live_throughout: 2, 13, dead_or_set: 1, 133
insn=9, live_throughout: 1, 2, 13, dead_or_set: 0
insn=12, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=22, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 135
insn=8, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 135
insn=13, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
init_insns for 135: (insn_list:REG_DEP_TRUE 22 (nil))
changing reg in insn 2
changing reg in insn 10
changing reg in insn 22
changing reg in insn 8
Spilling for insn 8.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 10.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


parse_early_options

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,2u} r3={3d,1u} r12={3d,1u} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{129d,12u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 2 2 NOTE_INSN_DELETED)

(insn 2 6 11 2 init/main.c:409 (set (reg/v/f:SI 1 r1 [orig:133 cmdline ] [133])
        (reg:SI 0 r0 [ cmdline ])) 167 {*arm_movsi_insn} (nil))

(insn 11 2 9 2 init/main.c:410 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 11 12 2 init/main.c:410 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11b10f00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11b10f00>)
        (nil)))

(insn 12 9 22 2 init/main.c:410 (set (reg:SI 3 r3)
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 22 12 8 2 init/main.c:410 (set (reg/f:SI 12 ip [135])
        (symbol_ref:SI ("do_early_param") [flags 0x3] <function_decl 0x11a52d00 do_early_param>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("do_early_param") [flags 0x3] <function_decl 0x11a52d00 do_early_param>)
        (nil)))

(insn 8 22 13 2 init/main.c:410 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [135])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_early_param") [flags 0x3] <function_decl 0x11a52d00 do_early_param>)
        (nil)))

(call_insn 13 8 21 2 init/main.c:410 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("parse_args") [flags 0x41] <function_decl 0x10ddb900 parse_args>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 21 13 23 NOTE_INSN_DELETED)

(note 23 21 0 NOTE_INSN_DELETED)


;; Function rest_init (rest_init)[0:2053]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 60.
verify found no changes in insn with uid = 60.
deleting insn with uid = 23.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:102000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS

  a0(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:102000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 49(l0): point = 0
   Insn 48(l0): point = 2
   Insn 47(l0): point = 4
   Insn 46(l0): point = 6
   Insn 45(l0): point = 8
   Insn 41(l0): point = 10
   Insn 40(l0): point = 12
   Insn 39(l0): point = 14
   Insn 38(l0): point = 16
   Insn 34(l0): point = 18
   Insn 33(l0): point = 20
   Insn 32(l0): point = 22
   Insn 28(l0): point = 24
   Insn 27(l0): point = 26
   Insn 25(l0): point = 28
   Insn 24(l0): point = 30
   Insn 60(l0): point = 32
   Insn 59(l0): point = 34
   Insn 21(l0): point = 36
   Insn 58(l0): point = 38
   Insn 20(l0): point = 40
   Insn 19(l0): point = 42
   Insn 17(l0): point = 44
   Insn 16(l0): point = 46
   Insn 15(l0): point = 48
   Insn 12(l0): point = 50
   Insn 13(l0): point = 52
   Insn 14(l0): point = 54
   Insn 10(l0): point = 56
   Insn 7(l0): point = 58
   Insn 9(l0): point = 60
   Insn 8(l0): point = 62
   Insn 5(l0): point = 64
 a0(r145): [5..38]
 a1(r152): [5..6]
 a2(r151): [7..8]
 a3(r149): [13..14]
 a4(r148): [15..16]
 a5(r143): [31..32]
 a6(r138): [43..46]
Compressing live ranges: from 67 to 13 - 19%
Ranges after the compression:
 a0(r145): [0..10]
 a1(r152): [0..1]
 a2(r151): [2..3]
 a3(r149): [4..5]
 a4(r148): [6..7]
 a5(r143): [8..9]
 a6(r138): [11..12]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r145,l0) conflicts: a1(r152,l0) a2(r151,l0) a3(r149,l0) a4(r148,l0) a5(r143,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r152,l0) conflicts: a0(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r151,l0) conflicts: a0(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r149,l0) conflicts: a0(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r148,l0) conflicts: a0(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r143,l0) conflicts: a0(r145,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a6(r138,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a3(r149)<->a4(r148)@125:shuffle
  cp1:a1(r152)<->a2(r151)@125:shuffle
  regions=1, blocks=3, points=13
    allocnos=7, copies=2, conflicts=5, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r145 1r152 2r151 3r149 4r148 5r143 6r138
    modified regnos: 138 143 145 148 149 151 152
    border:
    Pressure: GENERAL_REGS=4
    Reg 145 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a4(r148,l0)
      Pushing a3(r149,l0)
      Pushing a6(r138,l0)
      Pushing a5(r143,l0)
      Pushing a2(r151,l0)
      Pushing a1(r152,l0)
      Pushing a0(r145,l0)
      Popping a0(r145,l0)  -- assign reg 4
      Popping a1(r152,l0)  -- assign reg 3
      Popping a2(r151,l0)  -- assign reg 3
      Popping a5(r143,l0)  -- assign reg 3
      Popping a6(r138,l0)  -- assign reg 4
      Popping a3(r149,l0)  -- assign reg 3
      Popping a4(r148,l0)  -- assign reg 3
Disposition:
    6:r138 l0     4    5:r143 l0     3    0:r145 l0     4    4:r148 l0     3
    3:r149 l0     3    2:r151 l0     3    1:r152 l0     3
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 14
insn=8, live_throughout: 13, dead_or_set: 1
insn=9, live_throughout: 1, 13, dead_or_set: 2
insn=7, live_throughout: 1, 2, 13, dead_or_set: 0
insn=10, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=14, live_throughout: 13, dead_or_set: 2
insn=13, live_throughout: 2, 13, dead_or_set: 1
insn=12, live_throughout: 1, 2, 13, dead_or_set: 0
insn=15, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=16, live_throughout: 13, dead_or_set: 0, 138
insn=17, live_throughout: 13, 138, dead_or_set: 14
insn=19, live_throughout: 13, dead_or_set: 0, 138
insn=20, live_throughout: 0, 13, dead_or_set: 1
insn=58, live_throughout: 0, 1, 13, dead_or_set: 145
insn=21, live_throughout: 13, 145, dead_or_set: 0, 1, 14
insn=59, live_throughout: 0, 13, dead_or_set: 145
insn=60, live_throughout: 0, 13, 145, dead_or_set: 143
insn=24, live_throughout: 13, 145, dead_or_set: 0, 143
insn=25, live_throughout: 13, 145, dead_or_set: 14
insn=27, live_throughout: 13, 145, dead_or_set: 0
insn=28, live_throughout: 13, 145, dead_or_set: 0, 14
insn=32, live_throughout: 13, 145, dead_or_set: 0
insn=33, live_throughout: 13, 145, dead_or_set: 0, 14
insn=34, live_throughout: 13, 145, dead_or_set: 
insn=38, live_throughout: 13, 145, dead_or_set: 148
insn=39, live_throughout: 13, 145, dead_or_set: 148, 149
insn=40, live_throughout: 13, 145, dead_or_set: 149
insn=41, live_throughout: 13, 145, dead_or_set: 14
insn=45, live_throughout: 13, 14, 145, dead_or_set: 151
insn=46, live_throughout: 13, 14, 145, dead_or_set: 151, 152
insn=47, live_throughout: 13, 14, dead_or_set: 145, 152
insn=48, live_throughout: 13, 14, dead_or_set: 
insn=49, live_throughout: 13, 14, dead_or_set: 
init_insns for 143: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 47 (nil))
changing reg in insn 16
changing reg in insn 19
changing reg in insn 60
changing reg in insn 24
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 47
changing reg in insn 45
changing reg in insn 40
changing reg in insn 38
changing reg in insn 32
changing reg in insn 46
changing reg in insn 39
changing reg in insn 45
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 47
Spilling for insn 58.
Using reg 3 for reload 0
Spilling for insn 24.
Spilling for insn 40.
Spilling for insn 47.

Reloads for insn # 58
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem/f/c/i:SI (reg/f:SI 3 r3 [143]) [0 kthreadd_task+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (reg/f:SI 3 r3 [143]) [0 kthreadd_task+0 S4 A32])

Reloads for insn # 40
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 47
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 49.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


rest_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={16d,7u} r1={14d,3u} r2={13d,2u} r3={17d,6u} r4={3d,7u,4d} r12={11d} r13={1d,13u} r14={10d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1238{1195d,39u,4e} in 34{24 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 11 2 NOTE_INSN_DELETED)

(note 11 6 18 2 NOTE_INSN_DELETED)

(note 18 11 22 2 NOTE_INSN_DELETED)

(note 22 18 26 2 NOTE_INSN_DELETED)

(note 26 22 30 2 NOTE_INSN_DELETED)

(note 30 26 5 2 NOTE_INSN_DELETED)

(call_insn 5 30 8 2 init/main.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("rcu_scheduler_starting") [flags 0x41] <function_decl 0x10d6a480 rcu_scheduler_starting>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 8 5 9 2 init/main.c:368 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 7 2 init/main.c:368 (set (reg:SI 2 r2)
        (const_int 2560 [0xa00])) 167 {*arm_movsi_insn} (nil))

(insn 7 9 10 2 init/main.c:368 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kernel_init") [flags 0x3] <function_decl 0x11a3bc80 kernel_init>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_init") [flags 0x3] <function_decl 0x11a3bc80 kernel_init>)
        (nil)))

(call_insn 10 7 14 2 init/main.c:368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_thread") [flags 0x41] <function_decl 0x10ab8900 kernel_thread>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 14 10 13 2 init/main.c:370 (set (reg:SI 2 r2)
        (const_int 1536 [0x600])) 167 {*arm_movsi_insn} (nil))

(insn 13 14 12 2 init/main.c:370 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 13 15 2 init/main.c:370 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kthreadd") [flags 0x41] <function_decl 0x119ac180 kthreadd>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("kthreadd") [flags 0x41] <function_decl 0x119ac180 kthreadd>)
        (nil)))

(call_insn 15 12 16 2 init/main.c:370 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_thread") [flags 0x41] <function_decl 0x10ab8900 kernel_thread>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 15 17 2 init/main.c:370 (set (reg/v:SI 4 r4 [orig:138 pid ] [138])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 19 2 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10d64600 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 19 17 20 2 init/main.c:372 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:138 pid ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 62 2 init/main.c:372 (set (reg:SI 1 r1)
        (symbol_ref:SI ("init_pid_ns") [flags 0xc0] <var_decl 0x10f01540 init_pid_ns>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_pid_ns") [flags 0xc0] <var_decl 0x10f01540 init_pid_ns>)
        (nil)))

(insn 62 20 58 2 init/main.c:380 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 58 62 21 2 init/main.c:380 (set (reg:SI 4 r4 [145])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 21 58 59 2 init/main.c:372 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_task_by_pid_ns") [flags 0x41] <function_decl 0x11342000 find_task_by_pid_ns>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 59 21 60 2 init/main.c:380 (set (reg:SI 4 r4 [145])
        (and:SI (reg:SI 4 r4 [145])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 60 59 24 2 init/main.c:372 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("kthreadd_task") [flags 0xc0] <var_decl 0x119a3b40 kthreadd_task>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("kthreadd_task") [flags 0xc0] <var_decl 0x119a3b40 kthreadd_task>)
        (nil)))

(insn 24 60 25 2 init/main.c:372 (set (mem/f/c/i:SI (reg/f:SI 3 r3 [143]) [0 kthreadd_task+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 27 2 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10d64680 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 27 25 28 2 init/main.c:374 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(call_insn 28 27 32 2 init/main.c:374 (parallel [
            (call (mem:SI (symbol_ref:SI ("complete") [flags 0x41] <function_decl 0x10d64000 complete>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 32 28 33 2 init/main.c:380 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 2 init/main.c:380 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_idle_bootup_task") [flags 0x41] <function_decl 0x112b7480 init_idle_bootup_task>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 33 38 2 init/main.c:381 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 12103554)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 38 34 39 2 init/main.c:381 (set (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
        (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 39 38 40 2 init/main.c:381 (set (reg:SI 3 r3 [149])
        (plus:SI (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 40 39 41 2 init/main.c:381 (set (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 45 2 init/main.c:382 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x112be200 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 45 41 46 2 init/main.c:385 (set (reg:SI 3 r3 [orig:151 <variable>.preempt_count ] [151])
        (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 46 45 47 2 init/main.c:385 (set (reg:SI 3 r3 [152])
        (plus:SI (reg:SI 3 r3 [orig:151 <variable>.preempt_count ] [151])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 47 46 48 2 init/main.c:385 (set (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [152])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 init/main.c:385 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 12104066)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(call_insn/j 49 48 50 2 init/main.c:386 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_idle") [flags 0x41] <function_decl 0x10c8ed80 cpu_idle>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 50 49 61)

(note 61 50 0 NOTE_INSN_DELETED)


;; Function run_init_process (run_init_process)[0:2069]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 14(l0): point = 0
   Insn 13(l0): point = 2
   Insn 7(l0): point = 4
   Insn 12(l0): point = 6
   Insn 23(l0): point = 8
   Insn 6(l0): point = 10
 a0(r137): [3..8]
 a1(r134): [7..10]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r137): [0..2]
 a1(r134): [1..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r137,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r134,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r137 1r134
    modified regnos: 134 137
    border:
    Pressure: GENERAL_REGS=4
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r134,l0)
      Pushing a0(r137,l0)
      Popping a0(r137,l0)  -- assign reg 2
      Popping a1(r134,l0)  -- assign reg 1
Disposition:
    1:r134 l0     1    0:r137 l0     2
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 0, 13, 14, dead_or_set: 134
insn=23, live_throughout: 0, 13, 14, 134, dead_or_set: 137
insn=12, live_throughout: 0, 13, 14, 137, dead_or_set: 1, 134
insn=7, live_throughout: 0, 1, 13, 14, dead_or_set: 137
insn=13, live_throughout: 0, 1, 13, 14, dead_or_set: 2, 137
insn=14, live_throughout: 13, 14, dead_or_set: 0, 1, 2
init_insns for 134: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 6
changing reg in insn 23
changing reg in insn 12
changing reg in insn 7
changing reg in insn 23
changing reg in insn 7
changing reg in insn 7
changing reg in insn 13
Spilling for insn 7.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/s/f/j:SI (post_modify:SI (reg/f:SI 2 r2 [137])
                                                        (plus:SI (reg/f:SI 2 r2 [137])
                                                            (const_int 136 [0x88]))) [0 argv_init+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (post_modify:SI (reg/f:SI 2 r2 [137])
                                                        (plus:SI (reg/f:SI 2 r2 [137])
                                                            (const_int 136 [0x88]))) [0 argv_init+0 S4 A32])
deleting insn with uid = 12.
deleting insn with uid = 13.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


run_init_process

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,2u} r2={4d,3u} r3={2d} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 137{126d,11u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 23 2 init/main.c:747 (set (reg/f:SI 1 r1 [134])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 23 6 7 2 init/main.c:747 (set (reg/f:SI 2 r2 [137])
        (reg/f:SI 1 r1 [134])) 167 {*arm_movsi_insn} (nil))

(insn 7 23 14 2 init/main.c:747 (set (mem/s/f/j:SI (post_modify:SI (reg/f:SI 2 r2 [137])
                (plus:SI (reg/f:SI 2 r2 [137])
                    (const_int 136 [0x88]))) [0 argv_init+0 S4 A32])
        (reg:SI 0 r0 [ init_filename ])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 2 r2 [137])
        (nil)))

(call_insn/j 14 7 15 2 init/main.c:748 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_execve") [flags 0x41] <function_decl 0x11490800 kernel_execve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 15 14 24)

(note 24 15 0 NOTE_INSN_DELETED)


;; Function init_post (init_post)[0:2070]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 75.
verify found no changes in insn with uid = 75.
deleting insn with uid = 8.
scanning new insn with uid = 76.
verify found no changes in insn with uid = 76.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)

Pass 0 for finding allocno costs

    a0 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r140,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r140,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 60(l0): point = 0
   Insn 59(l0): point = 2
   Insn 57(l0): point = 4
   Insn 56(l0): point = 6
   Insn 54(l0): point = 8
   Insn 53(l0): point = 10
   Insn 51(l0): point = 12
   Insn 50(l0): point = 14
   Insn 48(l0): point = 16
   Insn 47(l0): point = 18
   Insn 43(l0): point = 21
   Insn 41(l0): point = 23
   Insn 42(l0): point = 25
   Insn 38(l0): point = 27
   Insn 37(l0): point = 29
   Insn 35(l0): point = 32
   Insn 34(l0): point = 34
   Insn 33(l0): point = 36
   Insn 32(l0): point = 38
   Insn 29(l0): point = 41
   Insn 27(l0): point = 43
   Insn 28(l0): point = 45
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 21(l0): point = 52
   Insn 20(l0): point = 54
   Insn 19(l0): point = 56
   Insn 17(l0): point = 58
   Insn 16(l0): point = 60
   Insn 15(l0): point = 62
   Insn 14(l0): point = 64
   Insn 9(l0): point = 66
   Insn 76(l0): point = 68
   Insn 75(l0): point = 70
   Insn 13(l0): point = 72
   Insn 74(l0): point = 74
   Insn 73(l0): point = 76
   Insn 6(l0): point = 78
   Insn 18(l0): point = 80
   Insn 5(l0): point = 82
 a0(r148): [26..38]
 a1(r134): [30..36]
 a2(r145): [46..80]
 a3(r135): [50..56]
 a4(r136): [59..64]
 a5(r144): [59..60]
 a6(r143): [61..62]
 a7(r142): [65..72]
 a8(r138): [67..68]
 a9(r139): [67..70]
 a10(r140): [73..76]
Compressing live ranges: from 85 to 20 - 23%
Ranges after the compression:
 a0(r148): [0..3]
 a1(r134): [1..2]
 a2(r145): [4..19]
 a3(r135): [5..6]
 a4(r136): [7..11]
 a5(r144): [7..8]
 a6(r143): [9..10]
 a7(r142): [12..16]
 a8(r138): [13..14]
 a9(r139): [13..15]
 a10(r140): [17..18]
+++Allocating 88 bytes for conflict table (uncompressed size 88)
;; a0(r148,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r134,l0) conflicts: a0(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r145,l0) conflicts: a3(r135,l0) a5(r144,l0) a4(r136,l0) a6(r143,l0) a7(r142,l0) a8(r138,l0) a9(r139,l0) a10(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r135,l0) conflicts: a2(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r136,l0) conflicts: a2(r145,l0) a5(r144,l0) a6(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r144,l0) conflicts: a2(r145,l0) a4(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r143,l0) conflicts: a2(r145,l0) a4(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r142,l0) conflicts: a2(r145,l0) a8(r138,l0) a9(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r138,l0) conflicts: a2(r145,l0) a7(r142,l0) a9(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r139,l0) conflicts: a2(r145,l0) a7(r142,l0) a8(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r140,l0) conflicts: a2(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r144)<->a6(r143)@125:shuffle
  regions=1, blocks=7, points=20
    allocnos=11, copies=1, conflicts=4, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r148 1r134 2r145 3r135 4r136 5r144 6r143 7r142 8r138 9r139 10r140
    modified regnos: 134 135 136 138 139 140 142 143 144 145 148
    border:
    Pressure: GENERAL_REGS=4
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
      Pushing a9(r139,l0)
      Pushing a8(r138,l0)
      Pushing a7(r142,l0)
      Pushing a6(r143,l0)
      Pushing a5(r144,l0)
      Pushing a4(r136,l0)
      Pushing a3(r135,l0)
      Pushing a1(r134,l0)
      Pushing a10(r140,l0)
      Pushing a2(r145,l0)
      Pushing a0(r148,l0)
      Popping a0(r148,l0)  -- assign reg 4
      Popping a2(r145,l0)  -- assign reg 4
      Popping a10(r140,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
      Popping a3(r135,l0)  -- assign reg 0
      Popping a4(r136,l0)  -- assign reg 3
      Popping a5(r144,l0)  -- assign reg 2
      Popping a6(r143,l0)  -- assign reg 2
      Popping a7(r142,l0)  -- assign reg 3
      Popping a8(r138,l0)  -- assign reg 2
      Popping a9(r139,l0)  -- assign reg 1
Disposition:
    1:r134 l0     0    3:r135 l0     0    4:r136 l0     3    8:r138 l0     2
    9:r139 l0     1   10:r140 l0     3    7:r142 l0     3    6:r143 l0     2
    5:r144 l0     2    2:r145 l0     4    0:r148 l0     4
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 14
insn=18, live_throughout: 13, dead_or_set: 145
insn=6, live_throughout: 13, 145, dead_or_set: 14
insn=73, live_throughout: 13, 145, dead_or_set: 140
insn=74, live_throughout: 13, 145, dead_or_set: 140
insn=13, live_throughout: 13, 145, dead_or_set: 140, 142
insn=75, live_throughout: 13, 142, 145, dead_or_set: 139
insn=76, live_throughout: 13, 139, 142, 145, dead_or_set: 138
insn=9, live_throughout: 13, 142, 145, dead_or_set: 138, 139
insn=14, live_throughout: 13, 145, dead_or_set: 136, 142
insn=15, live_throughout: 13, 136, 145, dead_or_set: 143
insn=16, live_throughout: 13, 136, 145, dead_or_set: 143, 144
insn=17, live_throughout: 13, 145, dead_or_set: 136, 144
insn=19, live_throughout: 13, 145, dead_or_set: 135
insn=20, live_throughout: 13, 135, 145, dead_or_set: 
insn=21, live_throughout: 13, 135, 145, dead_or_set: 
insn=23, live_throughout: 13, 145, dead_or_set: 0, 135
insn=24, live_throughout: 13, 145, dead_or_set: 0, 14
insn=28, live_throughout: 13, dead_or_set: 1, 145
insn=27, live_throughout: 1, 13, dead_or_set: 0
insn=29, live_throughout: 13, dead_or_set: 0, 1, 14
insn=30, live_throughout: 13, dead_or_set: 
insn=32, live_throughout: 13, dead_or_set: 148
insn=33, live_throughout: 13, 148, dead_or_set: 134
insn=34, live_throughout: 13, 134, 148, dead_or_set: 
insn=35, live_throughout: 13, 134, 148, dead_or_set: 
insn=37, live_throughout: 13, 148, dead_or_set: 0, 134
insn=38, live_throughout: 13, 148, dead_or_set: 0, 14
insn=42, live_throughout: 13, dead_or_set: 1, 148
insn=41, live_throughout: 1, 13, dead_or_set: 0
insn=43, live_throughout: 13, dead_or_set: 0, 1, 14
insn=44, live_throughout: 13, dead_or_set: 
insn=47, live_throughout: 13, dead_or_set: 0
insn=48, live_throughout: 13, dead_or_set: 0, 14
insn=50, live_throughout: 13, dead_or_set: 0
insn=51, live_throughout: 13, dead_or_set: 0, 14
insn=53, live_throughout: 13, dead_or_set: 0
insn=54, live_throughout: 13, dead_or_set: 0, 14
insn=56, live_throughout: 13, dead_or_set: 0
insn=57, live_throughout: 13, dead_or_set: 0, 14
insn=59, live_throughout: 13, dead_or_set: 0
insn=60, live_throughout: 13, dead_or_set: 0, 14
init_insns for 138: (insn_list:REG_DEP_TRUE 76 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 75 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 32 (nil))
changing reg in insn 33
changing reg in insn 37
changing reg in insn 34
changing reg in insn 19
changing reg in insn 23
changing reg in insn 20
changing reg in insn 14
changing reg in insn 17
changing reg in insn 15
changing reg in insn 16
changing reg in insn 15
changing reg in insn 76
changing reg in insn 9
changing reg in insn 75
changing reg in insn 9
changing reg in insn 74
changing reg in insn 73
changing reg in insn 74
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 28
changing reg in insn 19
changing reg in insn 32
changing reg in insn 42
changing reg in insn 33
Spilling for insn 73.
Using reg 2 for reload 0
Spilling for insn 9.
Spilling for insn 17.

Reloads for insn # 73
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 2 r2 [138]) [0 system_state+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 2 r2 [138]) [0 system_state+0 S4 A32])

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
                                                        (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
                                                        (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])
deleting insn with uid = 23.
deleting insn with uid = 37.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 60.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)


init_post

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,12u} r1={15d,3u} r2={16d,4u} r3={16d,5u,2d} r4={2d,4u} r12={12d} r13={1d,18u} r14={12d,1u} r15={11d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={13d,2u} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r81={11d} r82={11d} r83={11d} r84={11d} r85={11d} r86={11d} r87={11d} r88={11d} r89={11d} r90={11d} r91={11d} r92={11d} r93={11d} r94={11d} r95={11d} r96={11d} r97={11d} r98={11d} r99={11d} r100={11d} r101={11d} r102={11d} r103={11d} r104={11d} r105={11d} r106={11d} r107={11d} r108={11d} r109={11d} r110={11d} r111={11d} r112={11d} r113={11d} r114={11d} r115={11d} r116={11d} r117={11d} r118={11d} r119={11d} r120={11d} r121={11d} r122={11d} r123={11d} r124={11d} r125={11d} r126={11d} r127={11d} 
;;    total ref usage 1369{1318d,49u,2e} in 39{28 regular + 11 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 2 5 2 NOTE_INSN_DELETED)

(call_insn 5 11 18 2 init/main.c:757 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x11a1fd00 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 18 5 6 2 init/main.c:766 (set (reg/f:SI 4 r4 [145])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 6 18 78 2 init/main.c:758 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_initmem") [flags 0x41] <function_decl 0x11a52000 free_initmem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 78 6 73 2 init/main.c:764 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 73 78 74 2 init/main.c:764 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 74 73 13 2 init/main.c:764 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 3 r3 [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 74 75 2 init/main.c:764 (set (reg/f:SI 3 r3 [orig:142 <variable>.task ] [142])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [140])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 75 13 76 2 init/main.c:760 (set (reg:SI 1 r1 [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 76 75 9 2 init/main.c:760 (set (reg/f:SI 2 r2 [138])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 9 76 14 2 init/main.c:760 (set (mem/c/i:SI (reg/f:SI 2 r2 [138]) [0 system_state+0 S4 A32])
        (reg:SI 1 r1 [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 14 9 15 2 init/main.c:764 (set (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:142 <variable>.task ] [142])
                (const_int 936 [0x3a8])) [0 <variable>.signal+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/main.c:764 (set (reg:SI 2 r2 [orig:143 <variable>.flags ] [143])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
                (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
                (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])
        (nil)))

(insn 16 15 17 2 init/main.c:764 (set (reg:SI 2 r2 [144])
        (ior:SI (reg:SI 2 r2 [orig:143 <variable>.flags ] [143])
            (const_int 64 [0x40]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
                (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])
        (nil)))

(insn 17 16 19 2 init/main.c:764 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 D.38070 ] [136])
                (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])
        (reg:SI 2 r2 [144])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 20 2 init/main.c:766 (set (reg/f:SI 0 r0 [orig:135 ramdisk_execute_command.440 ] [135])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [145])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
        (nil)))

(insn 20 19 21 2 init/main.c:766 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:135 ramdisk_execute_command.440 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 2 init/main.c:766 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 22 21 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 24 22 28 3 init/main.c:767 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 28 24 27 3 init/main.c:768 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [145])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
        (nil)))

(insn 27 28 29 3 init/main.c:768 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11b21d00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11b21d00>)
        (nil)))

(call_insn 29 27 30 3 init/main.c:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 30 29 31 4 59 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 init/main.c:778 (set (reg/f:SI 4 r4 [148])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 33 32 34 4 init/main.c:778 (set (reg/f:SI 0 r0 [orig:134 execute_command.441 ] [134])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                (const_int 4 [0x4])) [0 execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 execute_command+0 S4 A32])
        (nil)))

(insn 34 33 35 4 init/main.c:778 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:134 execute_command.441 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 4 init/main.c:778 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 36 35 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 38 36 42 5 init/main.c:779 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 38 41 5 init/main.c:780 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                (const_int 4 [0x4])) [0 execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 execute_command+0 S4 A32])
        (nil)))

(insn 41 42 43 5 init/main.c:780 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11add780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11add780>)
        (nil)))

(call_insn 43 41 44 5 init/main.c:780 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 43 45 6 60 "" [1 uses])

(note 45 44 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 6 init/main.c:783 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11b2d090>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11b2d090>)
        (nil)))

(call_insn 48 47 50 6 init/main.c:783 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 50 48 51 6 init/main.c:784 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11b2d150>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11b2d150>)
        (nil)))

(call_insn 51 50 53 6 init/main.c:784 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 53 51 54 6 init/main.c:785 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11b2d210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11b2d210>)
        (nil)))

(call_insn 54 53 56 6 init/main.c:785 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 56 54 57 6 init/main.c:786 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11b2d2d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11b2d2d0>)
        (nil)))

(call_insn 57 56 59 6 init/main.c:786 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 59 57 60 6 init/main.c:788 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11ac8680>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11ac8680>)
        (nil)))

(call_insn 60 59 61 6 init/main.c:788 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 61 60 77)

(note 77 61 0 NOTE_INSN_DELETED)


;; Function kernel_init (kernel_init)[0:2071] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 128.
verify found no changes in insn with uid = 128.
deleting insn with uid = 17.
scanning new insn with uid = 129.
verify found no changes in insn with uid = 129.
deleting insn with uid = 23.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 17 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 30 (    2)

Pass 0 for finding allocno costs

    a17 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r163,l2) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r133,l2) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a14(r133,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r163,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a14(r133,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r163,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 115(l0): point = 0
   Insn 109(l0): point = 2
   Insn 104(l0): point = 4
   Insn 101(l0): point = 7
   Insn 100(l0): point = 9
   Insn 99(l0): point = 11
   Insn 96(l0): point = 14
   Insn 95(l0): point = 16
   Insn 93(l0): point = 18
   Insn 91(l0): point = 20
   Insn 92(l0): point = 22
   Insn 90(l0): point = 24
   Insn 87(l0): point = 27
   Insn 86(l0): point = 29
   Insn 83(l0): point = 32
   Insn 82(l0): point = 34
   Insn 81(l0): point = 36
   Insn 80(l0): point = 38
   Insn 79(l0): point = 40
   Insn 78(l0): point = 42
   Insn 77(l0): point = 44
   Insn 76(l0): point = 46
   Insn 73(l0): point = 49
   Insn 72(l0): point = 51
   Insn 69(l0): point = 54
   Insn 68(l0): point = 56
   Insn 66(l0): point = 58
   Insn 65(l0): point = 60
   Insn 64(l0): point = 62
   Insn 63(l0): point = 64
   Insn 123(l0): point = 67
   Insn 47(l0): point = 69
   Insn 46(l0): point = 71
   Insn 45(l0): point = 73
   Insn 44(l0): point = 75
   Insn 43(l0): point = 77
   Insn 42(l0): point = 79
   Insn 58(l0): point = 81
   Insn 41(l0): point = 83
   Insn 48(l0): point = 85
   Insn 40(l0): point = 87
   Insn 121(l0): point = 90
   Insn 36(l0): point = 92
   Insn 25(l0): point = 94
   Insn 22(l0): point = 96
   Insn 128(l0): point = 98
   Insn 26(l0): point = 100
   Insn 24(l0): point = 102
   Insn 129(l0): point = 104
   Insn 21(l0): point = 106
   Insn 20(l0): point = 108
   Insn 15(l0): point = 110
   Insn 13(l0): point = 112
   Insn 14(l0): point = 114
   Insn 8(l0): point = 116
   Insn 126(l0): point = 118
   Insn 7(l0): point = 120
   Insn 125(l0): point = 122
   Insn 60(l2): point = 125
   Insn 59(l2): point = 127
   Insn 53(l2): point = 130
   Insn 52(l2): point = 132
   Insn 38(l1): point = 135
   Insn 37(l1): point = 137
   Insn 31(l1): point = 140
   Insn 30(l1): point = 142
 a0(r159): [10..24]
 a1(r161): [10..11]
 a2(r155): [28..38]
 a3(r158): [28..29]
 a4(r156): [35..36]
 a5(r163): [67..81]
 a6(r133): [67..85]
 a7(r164): [90..92]
 a8(r145): [97..98]
 a9(r149): [97..106]
 a10(r134): [90..100]
 a11(r150): [103..104]
 a12(r148): [107..108]
 a13(r142): [109..122]
 a14(r133): [125..134]
 a15(r163): [125..134]
 a16(r134): [135..144]
 a17(r164): [135..144]
Compressing live ranges: from 145 to 27 - 18%
Ranges after the compression:
 a0(r159): [0..2]
 a1(r161): [0..1]
 a2(r155): [3..7]
 a3(r158): [3..4]
 a4(r156): [5..6]
 a5(r163): [23..24] [8..9]
 a6(r133): [23..24] [8..10]
 a7(r164): [25..26] [11..12]
 a8(r145): [13..14]
 a9(r149): [13..18]
 a10(r134): [25..26] [11..15]
 a11(r150): [16..17]
 a12(r148): [19..20]
 a13(r142): [21..22]
+++Allocating 112 bytes for conflict table (uncompressed size 144)
;; a0(r159,l0) conflicts: a1(r161,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r161,l0) conflicts: a0(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r155,l0) conflicts: a3(r158,l0) a4(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r158,l0) conflicts: a2(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r156,l0) conflicts: a2(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r163,l0) conflicts: a6(r133,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a6(r133,l0) conflicts: a5(r163,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a7(r164,l0) conflicts: a10(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a8(r145,l0) conflicts: a10(r134,l0) a9(r149,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a9(r149,l0) conflicts: a10(r134,l0) a8(r145,l0) a11(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a10(r134,l0) conflicts: a7(r164,l0) a8(r145,l0) a9(r149,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a11(r150,l0) conflicts: a9(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r148,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r142,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=3, blocks=15, points=27
    allocnos=18, copies=0, conflicts=8, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r159 1r161 2r155 3r158 4r156 5r163 6r133 7r164 8r145 9r149 10r134 11r150 12r148 13r142
    modified regnos: 133 134 142 145 148 149 150 155 156 158 159 161 163 164
    border:
    Pressure: GENERAL_REGS=4
    Reg 159 of GENERAL_REGS has 3 regs less
    Reg 163 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 164 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
      Pushing a12(r148,l0)
      Pushing a11(r150,l0)
      Pushing a4(r156,l0)
      Pushing a3(r158,l0)
      Pushing a1(r161,l0)
      Pushing a2(r155,l0)
      Pushing a9(r149,l0)
      Pushing a8(r145,l0)
      Pushing a7(r164,l0)
      Pushing a5(r163,l0)
      Pushing a10(r134,l0)
      Pushing a6(r133,l0)
      Pushing a0(r159,l0)
      Pushing a13(r142,l0)
      Popping a13(r142,l0)  -- assign reg 4
      Popping a0(r159,l0)  -- assign reg 4
      Popping a6(r133,l0)  -- assign reg 4
      Popping a10(r134,l0)  -- assign reg 4
      Popping a5(r163,l0)  -- assign reg 5
      Popping a7(r164,l0)  -- assign reg 5
      Popping a8(r145,l0)  -- assign reg 3
      Popping a9(r149,l0)  -- assign reg 2
      Popping a2(r155,l0)  -- assign reg 3
      Popping a1(r161,l0)  -- assign reg 3
      Popping a3(r158,l0)  -- assign reg 2
      Popping a4(r156,l0)  -- assign reg 2
      Popping a11(r150,l0)  -- assign reg 3
      Popping a12(r148,l0)  -- assign reg 3
Disposition:
    6:r133 l0     4   10:r134 l0     4   13:r142 l0     4    8:r145 l0     3
   12:r148 l0     3    9:r149 l0     2   11:r150 l0     3    2:r155 l0     3
    4:r156 l0     2    3:r158 l0     2    0:r159 l0     4    1:r161 l0     3
    5:r163 l0     5    7:r164 l0     5
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=125, live_throughout: 13, dead_or_set: 142
insn=7, live_throughout: 13, 142, dead_or_set: 0
insn=126, live_throughout: 0, 13, dead_or_set: 142
insn=8, live_throughout: 13, 142, dead_or_set: 0, 14
insn=14, live_throughout: 13, 142, dead_or_set: 1
insn=13, live_throughout: 1, 13, 142, dead_or_set: 0
insn=15, live_throughout: 13, 142, dead_or_set: 0, 1, 14
insn=20, live_throughout: 13, dead_or_set: 142, 148
insn=21, live_throughout: 13, dead_or_set: 148, 149
insn=129, live_throughout: 13, 149, dead_or_set: 150
insn=24, live_throughout: 13, 149, dead_or_set: 0, 150
insn=26, live_throughout: 0, 13, 149, dead_or_set: 134
insn=128, live_throughout: 0, 13, 134, 149, dead_or_set: 145
insn=22, live_throughout: 0, 13, 134, dead_or_set: 145, 149
insn=25, live_throughout: 13, 134, dead_or_set: 0, 14
insn=36, live_throughout: 13, 134, dead_or_set: 164
insn=121, live_throughout: 13, 134, 164, dead_or_set: 
insn=35, live_throughout: 13, 134, 164, dead_or_set: 
insn=30, live_throughout: 13, 164, dead_or_set: 0, 134
insn=31, live_throughout: 13, 134, 164, dead_or_set: 0, 14
insn=33, live_throughout: 13, 134, 164, dead_or_set: 
insn=37, live_throughout: 13, 134, 164, dead_or_set: 
insn=38, live_throughout: 13, 134, 164, dead_or_set: 
insn=40, live_throughout: 13, dead_or_set: 14
insn=48, live_throughout: 13, dead_or_set: 133
insn=41, live_throughout: 13, 133, dead_or_set: 14
insn=58, live_throughout: 13, 133, dead_or_set: 163
insn=42, live_throughout: 13, 133, 163, dead_or_set: 14
insn=43, live_throughout: 13, 133, 163, dead_or_set: 14
insn=44, live_throughout: 13, 133, 163, dead_or_set: 0, 14
insn=45, live_throughout: 13, 133, 163, dead_or_set: 14
insn=46, live_throughout: 13, 133, 163, dead_or_set: 14
insn=47, live_throughout: 13, 133, 163, dead_or_set: 14
insn=123, live_throughout: 13, 133, 163, dead_or_set: 
insn=57, live_throughout: 13, 133, 163, dead_or_set: 
insn=52, live_throughout: 13, 163, dead_or_set: 0, 133
insn=53, live_throughout: 13, 133, 163, dead_or_set: 0, 14
insn=55, live_throughout: 13, 133, 163, dead_or_set: 
insn=59, live_throughout: 13, 133, 163, dead_or_set: 
insn=60, live_throughout: 13, 133, 163, dead_or_set: 
insn=63, live_throughout: 13, dead_or_set: 0
insn=64, live_throughout: 0, 13, dead_or_set: 1
insn=65, live_throughout: 0, 1, 13, dead_or_set: 2
insn=66, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=68, live_throughout: 13, dead_or_set: 0
insn=69, live_throughout: 13, dead_or_set: 
insn=72, live_throughout: 13, dead_or_set: 0
insn=73, live_throughout: 13, dead_or_set: 0, 14
insn=74, live_throughout: 13, dead_or_set: 
insn=76, live_throughout: 13, dead_or_set: 0
insn=77, live_throughout: 13, dead_or_set: 0, 14
insn=78, live_throughout: 13, dead_or_set: 0
insn=79, live_throughout: 13, dead_or_set: 0, 14
insn=80, live_throughout: 13, dead_or_set: 155
insn=81, live_throughout: 13, 155, dead_or_set: 156
insn=82, live_throughout: 13, 155, dead_or_set: 156
insn=83, live_throughout: 13, 155, dead_or_set: 
insn=86, live_throughout: 13, 155, dead_or_set: 158
insn=87, live_throughout: 13, dead_or_set: 155, 158
insn=88, live_throughout: 13, dead_or_set: 
insn=90, live_throughout: 13, dead_or_set: 159
insn=92, live_throughout: 13, 159, dead_or_set: 1
insn=91, live_throughout: 1, 13, 159, dead_or_set: 0
insn=93, live_throughout: 13, 159, dead_or_set: 0, 1, 14
insn=95, live_throughout: 13, 159, dead_or_set: 0
insn=96, live_throughout: 13, 159, dead_or_set: 
insn=99, live_throughout: 13, 159, dead_or_set: 161
insn=100, live_throughout: 13, dead_or_set: 159, 161
insn=101, live_throughout: 13, dead_or_set: 14
insn=102, live_throughout: 13, dead_or_set: 
insn=104, live_throughout: 13, dead_or_set: 0, 14
insn=109, live_throughout: 13, 14, dead_or_set: 0
insn=115, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 145: (insn_list:REG_DEP_TRUE 128 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 129 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 80 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 81 (nil))
init_insns for 158: (insn_list:REG_DEP_TRUE 86 (nil))
init_insns for 159: (insn_list:REG_DEP_TRUE 90 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 99 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 58 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 36 (nil))
changing reg in insn 52
changing reg in insn 48
changing reg in insn 52
changing reg in insn 59
changing reg in insn 59
changing reg in insn 30
changing reg in insn 26
changing reg in insn 30
changing reg in insn 37
changing reg in insn 37
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 20
changing reg in insn 13
changing reg in insn 128
changing reg in insn 22
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 129
changing reg in insn 24
changing reg in insn 80
changing reg in insn 87
changing reg in insn 81
changing reg in insn 81
changing reg in insn 81
changing reg in insn 82
changing reg in insn 86
changing reg in insn 87
changing reg in insn 90
changing reg in insn 100
changing reg in insn 91
changing reg in insn 99
changing reg in insn 100
changing reg in insn 58
changing reg in insn 59
changing reg in insn 36
changing reg in insn 37
Spilling for insn 125.
Using reg 3 for reload 0
Spilling for insn 22.
Spilling for insn 87.
Spilling for insn 100.

Reloads for insn # 125
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/f/c/i:SI (reg/f:SI 3 r3 [145]) [0 cad_pid+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (reg/f:SI 3 r3 [145]) [0 cad_pid+0 S4 A32])

Reloads for insn # 87
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [155])
                                                        (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [155])
                                                        (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])

Reloads for insn # 100
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [159])
                                                        (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [159])
                                                        (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 47.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 104.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 17 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 30 (    2)


kernel_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={32d,14u} r1={24d,3u} r2={25d,4u} r3={27d,7u,1d} r4={7d,9u,2d} r5={2d,2u} r12={21d} r13={1d,35u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={25d,5u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} 
;;    total ref usage 2468{2385d,80u,3e} in 67{47 regular + 20 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 131 2 NOTE_INSN_DELETED)

(insn 131 10 125 2 init/main.c:805 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 125 131 7 2 init/main.c:805 (set (reg:SI 4 r4 [142])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 125 126 2 init/main.c:797 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 126 7 8 2 init/main.c:805 (set (reg:SI 4 r4 [142])
        (and:SI (reg:SI 4 r4 [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 8 126 14 2 init/main.c:797 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_completion") [flags 0x41] <function_decl 0x10d1ac00 wait_for_completion>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 8 13 2 init/main.c:805 (set (reg:SI 1 r1)
        (symbol_ref:SI ("cpu_all_bits") [flags 0xc0] <var_decl 0x10c81900 cpu_all_bits>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_all_bits") [flags 0xc0] <var_decl 0x10c81900 cpu_all_bits>)
        (nil)))

(insn 13 14 15 2 init/main.c:805 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 4 r4 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 13 20 2 init/main.c:805 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("set_cpus_allowed_ptr") [flags 0x41] <function_decl 0x11332480 set_cpus_allowed_ptr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 15 21 2 init/main.c:807 (set (reg/f:SI 3 r3 [orig:148 <variable>.task ] [148])
        (mem/s/f/j:SI (plus:SI (reg:SI 4 r4 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 129 2 init/main.c:807 (set (reg/f:SI 2 r2 [orig:149 <variable>.pid ] [149])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:148 <variable>.task ] [148])
                (const_int 592 [0x250])) [0 <variable>.pid+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 129 21 24 2 init/main.c:809 (set (reg/f:SI 3 r3 [150])
        (symbol_ref:SI ("setup_max_cpus") [flags 0xc0] <var_decl 0x10c98de0 setup_max_cpus>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("setup_max_cpus") [flags 0xc0] <var_decl 0x10c98de0 setup_max_cpus>)
        (nil)))

(insn 24 129 26 2 init/main.c:809 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 3 r3 [150]) [0 setup_max_cpus+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("setup_max_cpus") [flags 0xc0] <var_decl 0x10c98de0 setup_max_cpus>) [0 setup_max_cpus+0 S4 A32])
        (nil)))

(insn 26 24 128 2 init/main.c:741 (set (reg/v/f:SI 4 r4 [orig:134 fn ] [134])
        (symbol_ref:SI ("__initcall_start") [flags 0xc0] <var_decl 0x11a8fa80 __initcall_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__initcall_start") [flags 0xc0] <var_decl 0x11a8fa80 __initcall_start>)
        (nil)))

(insn 128 26 22 2 init/main.c:807 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("cad_pid") [flags 0xc0] <var_decl 0x1132e420 cad_pid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cad_pid") [flags 0xc0] <var_decl 0x1132e420 cad_pid>)
        (nil)))

(insn 22 128 25 2 init/main.c:807 (set (mem/f/c/i:SI (reg/f:SI 3 r3 [145]) [0 cad_pid+0 S4 A32])
        (reg/f:SI 2 r2 [orig:149 <variable>.pid ] [149])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 22 36 2 init/main.c:809 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_prepare_cpus") [flags 0x41] <function_decl 0x10c9f900 smp_prepare_cpus>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 36 25 121 2 init/main.c:741 discrim 1 (set (reg/f:SI 5 r5 [164])
        (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)
        (nil)))

(jump_insn 121 36 122 2 (set (pc)
        (label_ref 33)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 122 121 35)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 35 122 29 3 66 "" [1 uses])

(note 29 35 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 3 init/main.c:742 (set (reg:SI 0 r0)
        (mem/f:SI (post_inc:SI (reg/v/f:SI 4 r4 [orig:134 fn ] [134])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/v/f:SI 4 r4 [orig:134 fn ] [134])
        (nil)))

(call_insn 31 30 33 3 init/main.c:742 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_one_initcall") [flags 0x3] <function_decl 0x10a49a00 do_one_initcall>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 33 31 34 4 65 "" [1 uses])

(note 34 33 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 34 38 4 init/main.c:741 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:134 fn ] [134])
            (reg/f:SI 5 r5 [164]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:134 fn ] [134])
            (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>))
        (nil)))

(jump_insn 38 37 39 4 init/main.c:741 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 39 48 5 init/main.c:812 (parallel [
            (call (mem:SI (symbol_ref:SI ("lockup_detector_init") [flags 0x41] <function_decl 0x112b7e80 lockup_detector_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 48 40 41 5 init/main.c:714 (set (reg/v/f:SI 4 r4 [orig:133 fn ] [133])
        (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)
        (nil)))

(call_insn 41 48 58 5 init/main.c:814 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_init") [flags 0x41] <function_decl 0x10ca2180 smp_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 58 41 42 5 init/main.c:714 discrim 1 (set (reg/f:SI 5 r5 [163])
        (symbol_ref:SI ("__initcall_end") [flags 0xc0] <var_decl 0x11a8fae0 __initcall_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__initcall_end") [flags 0xc0] <var_decl 0x11a8fae0 __initcall_end>)
        (nil)))

(call_insn 42 58 43 5 init/main.c:815 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_init_smp") [flags 0x41] <function_decl 0x112b7300 sched_init_smp>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 43 42 44 5 init/main.c:728 (parallel [
            (call (mem:SI (symbol_ref:SI ("usermodehelper_init") [flags 0x41] <function_decl 0x10d84a80 usermodehelper_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 44 43 45 5 init/main.c:729 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("shmem_init") [flags 0x41] <function_decl 0x11a3b300 shmem_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(call_insn 45 44 46 5 init/main.c:730 (parallel [
            (call (mem:SI (symbol_ref:SI ("driver_init") [flags 0x41] <function_decl 0x11564a80 driver_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 46 45 47 5 init/main.c:731 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_irq_proc") [flags 0x41] <function_decl 0x115f3500 init_irq_proc>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 47 46 123 5 init/main.c:733 (parallel [
            (call (mem:SI (symbol_ref:SI ("usermodehelper_enable") [flags 0x41] <function_decl 0x10d84b80 usermodehelper_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 123 47 124 5 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 124 123 57)

;; Start of basic block ( 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  7 [91.0%] 
(code_label 57 124 51 6 68 "" [1 uses])

(note 51 57 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 6 init/main.c:715 (set (reg:SI 0 r0)
        (mem/f:SI (post_inc:SI (reg/v/f:SI 4 r4 [orig:133 fn ] [133])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/v/f:SI 4 r4 [orig:133 fn ] [133])
        (nil)))

(call_insn 53 52 55 6 init/main.c:715 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_one_initcall") [flags 0x3] <function_decl 0x10a49a00 do_one_initcall>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  5 [100.0%] 
(code_label 55 53 56 7 67 "" [1 uses])

(note 56 55 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 60 7 init/main.c:714 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 fn ] [133])
            (reg/f:SI 5 r5 [163]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:133 fn ] [133])
            (symbol_ref:SI ("__initcall_end") [flags 0xc0] <var_decl 0x11a8fae0 __initcall_end>))
        (nil)))

(jump_insn 60 59 61 7 init/main.c:714 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 7 -> ( 6 8)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [91.0%] 
;; Succ edge  8 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [9.0%]  (fallthru,loop_exit)
(note 61 60 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 67 61 63 8 NOTE_INSN_DELETED)

(insn 63 67 64 8 init/main.c:820 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11b3de10>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11b3de10>)
        (nil)))

(insn 64 63 65 8 init/main.c:820 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 8 init/main.c:820 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 68 8 init/main.c:820 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_open") [flags 0x41] <function_decl 0x1146d100 sys_open>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 68 66 69 8 init/main.c:820 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 70 8 init/main.c:820 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  8 [0.0%]  (fallthru)
(note 70 69 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 72 70 73 9 init/main.c:821 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11add870>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11add870>)
        (nil)))

(call_insn 73 72 74 9 init/main.c:821 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 74 73 75 10 69 "" [1 uses])

(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 10 init/main.c:823 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 76 78 10 init/main.c:823 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_dup") [flags 0x41] <function_decl 0x11468980 sys_dup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 78 77 79 10 init/main.c:824 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 79 78 80 10 init/main.c:824 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_dup") [flags 0x41] <function_decl 0x11468980 sys_dup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 80 79 81 10 init/main.c:830 (set (reg/f:SI 3 r3 [155])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 81 80 82 10 init/main.c:830 (set (reg/f:SI 2 r2 [orig:156 ramdisk_execute_command ] [156])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
            (nil))))

(insn 82 81 83 10 init/main.c:830 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:156 ramdisk_execute_command ] [156])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 10 init/main.c:830 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  11 [15.0%]  (fallthru)
;; Succ edge  12 [85.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  10 [15.0%]  (fallthru)
(note 84 83 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 86 84 87 11 init/main.c:831 (set (reg/f:SI 2 r2 [158])
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11b3c440>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11b3c440>)
        (nil)))

(insn 87 86 88 11 init/main.c:831 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [155])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (reg/f:SI 2 r2 [158])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11b3c440>)
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [85.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 70 "" [1 uses])

(note 89 88 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 94 89 90 12 NOTE_INSN_DELETED)

(insn 90 94 92 12 init/main.c:833 (set (reg/f:SI 4 r4 [159])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 92 90 91 12 init/main.c:833 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 91 92 93 12 init/main.c:833 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [159])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
        (nil)))

(call_insn 93 91 95 12 init/main.c:833 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_access") [flags 0x41] <function_decl 0x1146d200 sys_access>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 95 93 96 12 init/main.c:833 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 96 95 97 12 init/main.c:833 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  12 [39.0%]  (fallthru)
(note 97 96 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 99 97 100 13 init/main.c:834 (set (reg:SI 3 r3 [161])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 100 99 101 13 init/main.c:834 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [159])
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (reg:SI 3 r3 [161])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 101 100 102 13 init/main.c:835 (parallel [
            (call (mem:SI (symbol_ref:SI ("prepare_namespace") [flags 0x41] <function_decl 0x10a49b00 prepare_namespace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  12 [61.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 102 101 103 14 71 "" [1 uses])

(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn 104 103 109 14 init/main.c:844 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("init_post") [flags 0x3] <function_decl 0x11a78c80 init_post>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 109 104 115 14 init/main.c:846 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 115 109 127 14 init/main.c:846 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 127 115 130 NOTE_INSN_DELETED)

(note 130 127 0 NOTE_INSN_DELETED)


;; Function unknown_bootoption (unknown_bootoption)[0:2049] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 272.
verify found no changes in insn with uid = 272.
deleting insn with uid = 254.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 50 count 68 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 50 count 68 (    2)

Pass 0 for finding allocno costs

    a50 (r212,l1) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r212,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r211,l2) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r211,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r210,l2) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r209,l3) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r208,l3) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r208,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r207,l3) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r207,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r206,l3) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r200,l2) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r170,l1) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r155,l1) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r154,l1) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r154,l3) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r154,l2) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r148,l3) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r146,l3) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r145,l2) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r136,l2) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r135,l2) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a6(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:140000
  a13(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a29(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r135,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r136,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r145,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a35(r154,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r210,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r211,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a38(r200,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r146,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a40(r154,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r206,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r207,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r208,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r209,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r148,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a46(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a47(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a49(r155,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a50(r212,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a51(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a52(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a53(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a54(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a55(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r212: preferred GENERAL_REGS, alternative NO_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a6(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:140000
  a13(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a29(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r135,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r136,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r145,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a35(r154,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r210,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r211,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a38(r200,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r146,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a40(r154,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r206,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r207,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r208,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r209,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r148,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a46(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a47(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a49(r155,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a50(r212,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a51(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a52(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a53(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a54(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a55(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 237(l0): point = 0
   Insn 231(l0): point = 2
   Insn 220(l0): point = 5
   Insn 222(l0): point = 7
   Insn 224(l0): point = 9
   Insn 272(l0): point = 11
   Insn 219(l0): point = 13
   Insn 269(l0): point = 16
   Insn 198(l0): point = 18
   Insn 196(l0): point = 20
   Insn 193(l0): point = 22
   Insn 267(l0): point = 25
   Insn 245(l0): point = 27
   Insn 213(l0): point = 29
   Insn 157(l0): point = 31
   Insn 155(l0): point = 33
   Insn 156(l0): point = 35
   Insn 265(l0): point = 38
   Insn 165(l0): point = 40
   Insn 185(l0): point = 42
   Insn 171(l0): point = 44
   Insn 164(l0): point = 46
   Insn 149(l0): point = 48
   Insn 147(l0): point = 51
   Insn 146(l0): point = 53
   Insn 144(l0): point = 56
   Insn 143(l0): point = 58
   Insn 142(l0): point = 60
   Insn 141(l0): point = 62
   Insn 138(l0): point = 65
   Insn 137(l0): point = 67
   Insn 135(l0): point = 70
   Insn 134(l0): point = 72
   Insn 132(l0): point = 75
   Insn 131(l0): point = 77
   Insn 128(l0): point = 79
   Insn 127(l0): point = 81
   Insn 126(l0): point = 83
   Insn 124(l0): point = 86
   Insn 123(l0): point = 88
   Insn 263(l0): point = 91
   Insn 104(l0): point = 93
   Insn 102(l0): point = 95
   Insn 103(l0): point = 97
   Insn 119(l0): point = 100
   Insn 58(l0): point = 102
   Insn 59(l0): point = 104
   Insn 54(l0): point = 107
   Insn 53(l0): point = 109
   Insn 52(l0): point = 111
   Insn 259(l0): point = 114
   Insn 45(l0): point = 116
   Insn 44(l0): point = 118
   Insn 42(l0): point = 120
   Insn 41(l0): point = 122
   Insn 46(l0): point = 124
   Insn 43(l0): point = 126
   Insn 38(l0): point = 128
   Insn 36(l0): point = 130
   Insn 35(l0): point = 132
   Insn 33(l0): point = 134
   Insn 37(l0): point = 136
   Insn 31(l0): point = 139
   Insn 30(l0): point = 141
   Insn 29(l0): point = 143
   Insn 28(l0): point = 145
   Insn 257(l0): point = 148
   Insn 23(l0): point = 150
   Insn 21(l0): point = 152
   Insn 19(l0): point = 155
   Insn 18(l0): point = 157
   Insn 17(l0): point = 159
   Insn 16(l0): point = 161
   Insn 14(l0): point = 163
   Insn 13(l0): point = 165
   Insn 10(l0): point = 168
   Insn 4(l0): point = 170
   Insn 9(l0): point = 172
   Insn 217(l2): point = 175
   Insn 216(l2): point = 177
   Insn 215(l2): point = 179
   Insn 244(l2): point = 182
   Insn 247(l2): point = 184
   Insn 209(l2): point = 186
   Insn 243(l2): point = 188
   Insn 190(l3): point = 191
   Insn 189(l3): point = 193
   Insn 187(l3): point = 195
   Insn 181(l3): point = 198
   Insn 179(l3): point = 201
   Insn 178(l3): point = 203
   Insn 175(l3): point = 205
   Insn 174(l3): point = 207
   Insn 172(l3): point = 209
   Insn 173(l3): point = 211
   Insn 168(l3): point = 214
   Insn 166(l3): point = 216
   Insn 162(l3): point = 219
   Insn 161(l3): point = 221
   Insn 121(l1): point = 224
   Insn 120(l1): point = 226
   Insn 117(l1): point = 228
   Insn 114(l1): point = 231
   Insn 113(l1): point = 233
   Insn 111(l1): point = 235
   Insn 110(l1): point = 237
   Insn 99(l1): point = 240
   Insn 98(l1): point = 242
   Insn 97(l1): point = 244
   Insn 261(l1): point = 247
   Insn 242(l1): point = 249
   Insn 241(l1): point = 251
   Insn 79(l1): point = 253
   Insn 77(l1): point = 256
   Insn 76(l1): point = 258
   Insn 75(l1): point = 260
   Insn 73(l1): point = 263
   Insn 72(l1): point = 265
   Insn 69(l1): point = 267
   Insn 68(l1): point = 269
   Insn 67(l1): point = 271
   Insn 66(l1): point = 273
   Insn 64(l1): point = 275
   Insn 63(l1): point = 277
   Insn 62(l1): point = 279
   Insn 61(l1): point = 281
 a0(r201): [6..13]
 a1(r136): [25..35] [6..15]
 a2(r135): [25..33] [8..15]
 a3(r198): [10..11]
 a4(r145): [25..31] [10..15]
 a5(r154): [114..170] [100..106] [19..90] [10..15]
 a6(r196): [19..20]
 a7(r193): [21..22]
 a8(r146): [38..48] [21..24]
 a9(r211): [25..27]
 a10(r210): [25..29]
 a11(r182): [47..62] [34..37]
 a12(r155): [127..172] [114..124] [100..106] [45..90] [36..37]
 a13(r208): [38..40]
 a14(r206): [38..42]
 a15(r209): [38..44]
 a16(r207): [38..46]
 a17(r183): [49..60]
 a18(r181): [68..77]
 a19(r144): [100..102] [89..90]
 a20(r137): [98..99]
 a21(r212): [100..100]
 a22(r143): [100..104]
 a23(r166): [119..122]
 a24(r151): [121..130]
 a25(r163): [133..134]
 a26(r162): [142..143]
 a27(r161): [144..145]
 a28(r156): [155..163] [146..147]
 a29(r159): [151..152]
 a30(r158): [158..159]
 a31(r157): [160..161]
 a32(r135): [175..190]
 a33(r136): [175..190]
 a34(r145): [175..190]
 a35(r154): [175..190]
 a36(r210): [175..190]
 a37(r211): [175..190]
 a38(r200): [178..179]
 a39(r146): [191..223]
 a40(r154): [191..223]
 a41(r206): [191..223]
 a42(r207): [191..223]
 a43(r208): [191..223]
 a44(r209): [191..223]
 a45(r148): [212..223] [191..195]
 a46(r143): [224..283]
 a47(r144): [224..283]
 a48(r154): [224..283]
 a49(r155): [224..283]
 a50(r212): [224..283]
 a51(r137): [256..281] [240..246]
 a52(r141): [236..244]
 a53(r168): [254..275] [238..246]
 a54(r140): [252..253]
 a55(r170): [259..260]
 Rebuilding regno allocno list for 200
 Rebuilding regno allocno list for 170
 Rebuilding regno allocno list for 168
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 140
Compressing live ranges: from 284 to 89 - 31%
Ranges after the compression:
 a0(r201): [0..4]
 a1(r136): [66..69] [11..17] [0..5]
 a2(r135): [66..69] [11..15] [1..5]
 a3(r198): [2..3]
 a4(r145): [66..69] [11..14] [2..5]
 a5(r154): [66..88] [41..64] [37..40] [6..34] [2..5]
 a6(r196): [6..7]
 a7(r193): [8..9]
 a8(r146): [70..73] [20..27] [8..10]
 a9(r211): [66..69] [11..12]
 a10(r210): [66..69] [11..13]
 a11(r182): [26..30] [16..19]
 a12(r155): [74..88] [46..65] [41..45] [37..40] [24..34] [18..19]
 a13(r208): [70..73] [20..21]
 a14(r206): [70..73] [20..22]
 a15(r209): [70..73] [20..23]
 a16(r207): [70..73] [20..25]
 a17(r183): [28..29]
 a18(r181): [31..32]
 a19(r144): [74..88] [37..38] [33..34]
 a20(r137): [83..87] [77..79] [35..36]
 a21(r212): [74..88] [37..37]
 a22(r143): [74..88] [37..39]
 a23(r166): [42..44]
 a24(r151): [43..47]
 a25(r163): [48..49]
 a26(r162): [50..51]
 a27(r161): [52..53]
 a28(r156): [58..63] [54..55]
 a29(r159): [56..57]
 a30(r158): [59..60]
 a31(r157): [61..62]
 a38(r200): [67..68]
 a45(r148): [72..73] [70..71]
 a52(r141): [75..78]
 a53(r168): [82..86] [76..79]
 a54(r140): [80..81]
 a55(r170): [84..85]
+++Allocating 304 bytes for conflict table (uncompressed size 448)
;; a0(r201,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r198,l0) a4(r145,l0) a5(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r136,l0) conflicts: a0(r201,l0) a2(r135,l0) a3(r198,l0) a4(r145,l0) a5(r154,l0) a9(r211,l0) a10(r210,l0) a11(r182,l0) a38(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r135,l0) conflicts: a0(r201,l0) a1(r136,l0) a3(r198,l0) a4(r145,l0) a5(r154,l0) a9(r211,l0) a10(r210,l0) a38(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r198,l0) conflicts: a0(r201,l0) a1(r136,l0) a2(r135,l0) a4(r145,l0) a5(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r145,l0) conflicts: a0(r201,l0) a1(r136,l0) a2(r135,l0) a3(r198,l0) a5(r154,l0) a9(r211,l0) a10(r210,l0) a38(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r154,l0) conflicts: a0(r201,l0) a1(r136,l0) a2(r135,l0) a3(r198,l0) a4(r145,l0) a6(r196,l0) a7(r193,l0) a8(r146,l0) a9(r211,l0) a10(r210,l0) a11(r182,l0) a12(r155,l0) a13(r208,l0) a14(r206,l0) a15(r209,l0) a16(r207,l0) a17(r183,l0) a18(r181,l0) a19(r144,l0) a20(r137,l0) a21(r212,l0) a22(r143,l0) a23(r166,l0) a24(r151,l0) a25(r163,l0) a26(r162,l0) a27(r161,l0) a28(r156,l0) a29(r159,l0) a30(r158,l0) a31(r157,l0) a38(r200,l0) a45(r148,l0) a52(r141,l0) a53(r168,l0) a54(r140,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r196,l0) conflicts: a5(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r193,l0) conflicts: a5(r154,l0) a8(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r146,l0) conflicts: a5(r154,l0) a7(r193,l0) a11(r182,l0) a12(r155,l0) a13(r208,l0) a14(r206,l0) a15(r209,l0) a16(r207,l0) a45(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a9(r211,l0) conflicts: a1(r136,l0) a2(r135,l0) a4(r145,l0) a5(r154,l0) a10(r210,l0) a38(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r210,l0) conflicts: a1(r136,l0) a2(r135,l0) a4(r145,l0) a5(r154,l0) a9(r211,l0) a38(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r182,l0) conflicts: a1(r136,l0) a5(r154,l0) a8(r146,l0) a12(r155,l0) a17(r183,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r155,l0) conflicts: a5(r154,l0) a8(r146,l0) a11(r182,l0) a16(r207,l0) a17(r183,l0) a18(r181,l0) a19(r144,l0) a20(r137,l0) a21(r212,l0) a22(r143,l0) a23(r166,l0) a24(r151,l0) a25(r163,l0) a26(r162,l0) a27(r161,l0) a28(r156,l0) a29(r159,l0) a30(r158,l0) a31(r157,l0) a52(r141,l0) a53(r168,l0) a54(r140,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a13(r208,l0) conflicts: a5(r154,l0) a8(r146,l0) a14(r206,l0) a15(r209,l0) a16(r207,l0) a45(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a14(r206,l0) conflicts: a5(r154,l0) a8(r146,l0) a13(r208,l0) a15(r209,l0) a16(r207,l0) a45(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a15(r209,l0) conflicts: a5(r154,l0) a8(r146,l0) a13(r208,l0) a14(r206,l0) a16(r207,l0) a45(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a16(r207,l0) conflicts: a5(r154,l0) a8(r146,l0) a12(r155,l0) a13(r208,l0) a14(r206,l0) a15(r209,l0) a45(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a17(r183,l0) conflicts: a5(r154,l0) a11(r182,l0) a12(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r181,l0) conflicts: a5(r154,l0) a12(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r144,l0) conflicts: a5(r154,l0) a12(r155,l0) a20(r137,l0) a21(r212,l0) a22(r143,l0) a52(r141,l0) a53(r168,l0) a54(r140,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a20(r137,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a21(r212,l0) a22(r143,l0) a52(r141,l0) a53(r168,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a21(r212,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a20(r137,l0) a22(r143,l0) a52(r141,l0) a53(r168,l0) a54(r140,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a22(r143,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a20(r137,l0) a21(r212,l0) a52(r141,l0) a53(r168,l0) a54(r140,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a23(r166,l0) conflicts: a5(r154,l0) a12(r155,l0) a24(r151,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a24(r151,l0) conflicts: a5(r154,l0) a12(r155,l0) a23(r166,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a25(r163,l0) conflicts: a5(r154,l0) a12(r155,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a26(r162,l0) conflicts: a5(r154,l0) a12(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r161,l0) conflicts: a5(r154,l0) a12(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r156,l0) conflicts: a5(r154,l0) a12(r155,l0) a30(r158,l0) a31(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r159,l0) conflicts: a5(r154,l0) a12(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a30(r158,l0) conflicts: a5(r154,l0) a12(r155,l0) a28(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a31(r157,l0) conflicts: a5(r154,l0) a12(r155,l0) a28(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a38(r200,l0) conflicts: a1(r136,l0) a2(r135,l0) a4(r145,l0) a5(r154,l0) a9(r211,l0) a10(r210,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a45(r148,l0) conflicts: a5(r154,l0) a8(r146,l0) a13(r208,l0) a14(r206,l0) a15(r209,l0) a16(r207,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a52(r141,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a20(r137,l0) a21(r212,l0) a22(r143,l0) a53(r168,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a53(r168,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a20(r137,l0) a21(r212,l0) a22(r143,l0) a52(r141,l0) a55(r170,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a54(r140,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a21(r212,l0) a22(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a55(r170,l0) conflicts: a5(r154,l0) a12(r155,l0) a19(r144,l0) a20(r137,l0) a21(r212,l0) a22(r143,l0) a53(r168,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a6(r196)<->a7(r193)@125:shuffle
  cp1:a6(r196)<->a8(r146)@125:shuffle
  cp2:a1(r136)<->a12(r155)@1000:move
  cp3:a8(r146)<->a17(r183)@1000:move
  cp4:a11(r182)<->a16(r207)@1000:move
  cp5:a12(r155)<->a15(r209)@125:shuffle
  cp6:a27(r161)<->a28(r156)@125:shuffle
  cp7:a26(r162)<->a27(r161)@125:shuffle
  cp8:a30(r158)<->a31(r157)@125:shuffle
  regions=4, blocks=34, points=89
    allocnos=56, copies=9, conflicts=1, ranges=71

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 13 15 14 12 11 10 9 8 7 6 5 4 3 2
    all: 0r201 1r136 2r135 3r198 4r145 5r154 6r196 7r193 8r146 9r211 10r210 11r182 12r155 13r208 14r206 15r209 16r207 17r183 18r181 19r144 20r137 21r212 22r143 23r166 24r151 25r163 26r162 27r161 28r156 29r159 30r158 31r157 38r200 45r148 52r141 53r168 54r140 55r170
    modified regnos: 135 136 137 140 141 143 144 145 146 148 151 154 155 156 157 158 159 161 162 163 166 168 170 181 182 183 193 196 198 200 201 206 207 208 209 210 211 212
    border:
    Pressure: GENERAL_REGS=11
    Reg 201 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 4 regs less
    Reg 196 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 4 regs less
    Reg 211 of GENERAL_REGS has 1 regs less
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 182 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 4 regs less
    Reg 208 of GENERAL_REGS has 4 regs less
    Reg 206 of GENERAL_REGS has 4 regs less
    Reg 209 of GENERAL_REGS has 4 regs less
    Reg 207 of GENERAL_REGS has 4 regs less
    Reg 183 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 212 of GENERAL_REGS has 4 regs less
    Reg 143 of GENERAL_REGS has 4 regs less
    Reg 166 of GENERAL_REGS has 2 regs less
    Reg 151 of GENERAL_REGS has 3 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 200 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
    Reg 168 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
      Pushing a31(r157,l0)
      Pushing a30(r158,l0)
      Pushing a29(r159,l0)
      Pushing a27(r161,l0)
      Pushing a26(r162,l0)
      Pushing a28(r156,l0)
      Pushing a55(r170,l0)
      Pushing a38(r200,l0)
      Pushing a25(r163,l0)
      Pushing a18(r181,l0)
      Pushing a10(r210,l0)
      Pushing a9(r211,l0)
      Pushing a7(r193,l0)
      Pushing a6(r196,l0)
      Pushing a3(r198,l0)
      Pushing a54(r140,l0)
      Pushing a45(r148,l0)
      Pushing a17(r183,l0)
      Pushing a0(r201,l0)
      Pushing a11(r182,l0)
      Pushing a2(r135,l0)
      Pushing a1(r136,l0)
      Pushing a4(r145,l0)
      Pushing a23(r166,l0)
      Pushing a52(r141,l0)
      Pushing a24(r151,l0)
      Pushing a15(r209,l0)
      Pushing a14(r206,l0)
      Pushing a13(r208,l0)
      Pushing a16(r207,l0)
      Pushing a8(r146,l0)
      Pushing a21(r212,l0)(potential spill: pri=1818, cost=20000)
      Pushing a53(r168,l0)
      Pushing a20(r137,l0)
      Pushing a19(r144,l0)
      Pushing a22(r143,l0)
      Pushing a5(r154,l0)
      Pushing a12(r155,l0)
      Popping a12(r155,l0)  -- assign reg 4
      Popping a5(r154,l0)  -- assign reg 5
      Popping a22(r143,l0)  -- assign reg 6
      Popping a19(r144,l0)  -- assign reg 7
      Popping a20(r137,l0)  -- assign reg 8
      Popping a53(r168,l0)  -- assign reg 10
      Popping a21(r212,l0)  -- assign reg 9
      Popping a8(r146,l0)  -- assign reg 6
      Popping a16(r207,l0)  -- assign reg 7
      Popping a13(r208,l0)  -- assign reg 8
      Popping a14(r206,l0)  -- assign reg 10
      Popping a15(r209,l0)  -- assign reg 4
      Popping a24(r151,l0)  -- assign reg 6
      Popping a52(r141,l0)  -- assign reg 3
      Popping a23(r166,l0)  -- assign reg 2
      Popping a4(r145,l0)  -- assign reg 3
      Popping a1(r136,l0)  -- assign reg 4
      Popping a2(r135,l0)  -- assign reg 2
      Popping a11(r182,l0)  -- assign reg 7
      Popping a0(r201,l0)  -- assign reg 1
      Popping a17(r183,l0)  -- assign reg 6
      Popping a45(r148,l0)  -- assign reg 1
      Popping a54(r140,l0)  -- assign reg 3
      Popping a3(r198,l0)  -- assign reg 0
      Popping a6(r196,l0)  -- assign reg 6
      Popping a7(r193,l0)  -- assign reg 3
      Popping a9(r211,l0)  -- assign reg 1
      Popping a10(r210,l0)  -- assign reg 0
      Popping a18(r181,l0)  -- assign reg 0
      Popping a25(r163,l0)  -- assign reg 3
      Popping a38(r200,l0)  -- assign reg 12
      Popping a55(r170,l0)  -- assign reg 3
      Popping a28(r156,l0)  -- assign reg 0
      Popping a26(r162,l0)  -- assign reg 0
      Popping a27(r161,l0)  -- assign reg 0
      Popping a29(r159,l0)  -- assign reg 3
      Popping a30(r158,l0)  -- assign reg 3
      Popping a31(r157,l0)  -- assign reg 3
Disposition:
    2:r135 l0     2    1:r136 l0     4   20:r137 l0     8   54:r140 l0     3
   52:r141 l0     3   22:r143 l0     6   19:r144 l0     7    4:r145 l0     3
    8:r146 l0     6   45:r148 l0     1   24:r151 l0     6    5:r154 l0     5
   12:r155 l0     4   28:r156 l0     0   31:r157 l0     3   30:r158 l0     3
   29:r159 l0     3   27:r161 l0     0   26:r162 l0     0   25:r163 l0     3
   23:r166 l0     2   53:r168 l0    10   55:r170 l0     3   18:r181 l0     0
   11:r182 l0     7   17:r183 l0     6    7:r193 l0     3    6:r196 l0     6
    3:r198 l0     0   38:r200 l0    12    0:r201 l0     1   14:r206 l0    10
   16:r207 l0     7   13:r208 l0     8   15:r209 l0     4   10:r210 l0     0
    9:r211 l0     1   21:r212 l0     9
New iteration of spill/restore move
+++Costs: overall -12250, reg -12250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 0, 13, dead_or_set: 1, 155
insn=4, live_throughout: 0, 13, 24, 155, dead_or_set: 154
insn=10, live_throughout: 0, 13, 154, 155, dead_or_set: 
insn=13, live_throughout: 13, 154, 155, dead_or_set: 0, 14
insn=14, live_throughout: 13, 154, 155, dead_or_set: 0, 156
insn=16, live_throughout: 13, 154, 155, 156, dead_or_set: 157
insn=17, live_throughout: 13, 154, 155, 156, dead_or_set: 157, 158
insn=18, live_throughout: 13, 154, 155, 156, dead_or_set: 158
insn=19, live_throughout: 13, 154, 155, 156, dead_or_set: 
insn=21, live_throughout: 13, 154, 155, dead_or_set: 159
insn=23, live_throughout: 13, 154, 155, dead_or_set: 159
insn=257, live_throughout: 13, 154, 155, dead_or_set: 
insn=26, live_throughout: 13, 154, 155, 156, dead_or_set: 
insn=28, live_throughout: 13, 154, 155, dead_or_set: 156, 161
insn=29, live_throughout: 13, 154, 155, dead_or_set: 161, 162
insn=30, live_throughout: 13, 154, 155, dead_or_set: 162
insn=31, live_throughout: 13, 154, 155, dead_or_set: 
insn=37, live_throughout: 13, 154, 155, dead_or_set: 0
insn=33, live_throughout: 0, 13, 154, 155, dead_or_set: 163
insn=35, live_throughout: 0, 13, 154, 155, dead_or_set: 163
insn=36, live_throughout: 0, 13, 154, 155, dead_or_set: 151
insn=38, live_throughout: 13, 151, 154, 155, dead_or_set: 0, 14
insn=43, live_throughout: 0, 13, 151, 154, dead_or_set: 1, 155
insn=46, live_throughout: 0, 1, 13, 151, 154, dead_or_set: 155
insn=41, live_throughout: 1, 13, 151, 154, 155, dead_or_set: 0, 166
insn=42, live_throughout: 1, 13, 154, 155, 166, dead_or_set: 0, 151
insn=44, live_throughout: 0, 1, 13, 154, 155, dead_or_set: 2, 166
insn=45, live_throughout: 13, 154, 155, dead_or_set: 0, 1, 2, 14
insn=259, live_throughout: 13, 154, 155, dead_or_set: 
insn=49, live_throughout: 13, dead_or_set: 
insn=52, live_throughout: 13, dead_or_set: 0
insn=53, live_throughout: 0, 13, dead_or_set: 1
insn=54, live_throughout: 13, dead_or_set: 0, 1, 14
insn=56, live_throughout: 13, 154, 155, dead_or_set: 
insn=59, live_throughout: 13, 154, 155, dead_or_set: 143
insn=58, live_throughout: 13, 143, 154, 155, dead_or_set: 144
insn=119, live_throughout: 13, 143, 144, 154, 155, dead_or_set: 212
insn=118, live_throughout: 13, 143, 144, 154, 155, 212, dead_or_set: 
insn=61, live_throughout: 13, 143, 144, 154, 155, 212, dead_or_set: 137
insn=62, live_throughout: 13, 137, 143, 144, 154, 155, 212, dead_or_set: 0
insn=63, live_throughout: 13, 137, 143, 144, 154, 155, 212, dead_or_set: 0, 14
insn=64, live_throughout: 13, 137, 143, 144, 154, 155, 212, dead_or_set: 0, 168
insn=66, live_throughout: 13, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 0
insn=67, live_throughout: 0, 13, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 1
insn=68, live_throughout: 0, 1, 13, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 2
insn=69, live_throughout: 13, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 0, 1, 2, 14
insn=72, live_throughout: 13, 14, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 0
insn=73, live_throughout: 13, 14, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 
insn=75, live_throughout: 13, 14, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 170
insn=76, live_throughout: 13, 14, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 170
insn=77, live_throughout: 13, 14, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 
insn=79, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 140, 168
insn=241, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 140
insn=242, live_throughout: 13, 14, 143, 154, 155, 212, dead_or_set: 144
insn=261, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 
insn=95, live_throughout: 13, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 
insn=97, live_throughout: 13, 137, 143, 144, 154, 155, 168, 212, dead_or_set: 141
insn=98, live_throughout: 13, 137, 141, 143, 144, 154, 155, 168, 212, dead_or_set: 
insn=99, live_throughout: 13, 137, 141, 143, 144, 154, 155, 168, 212, dead_or_set: 
insn=103, live_throughout: 13, dead_or_set: 1, 137
insn=102, live_throughout: 1, 13, dead_or_set: 0
insn=104, live_throughout: 13, dead_or_set: 0, 1, 14
insn=263, live_throughout: 13, 14, dead_or_set: 
insn=107, live_throughout: 13, 141, 143, 144, 154, 155, 168, 212, dead_or_set: 
insn=110, live_throughout: 13, 141, 143, 144, 154, 155, 212, dead_or_set: 0, 168
insn=111, live_throughout: 13, 143, 144, 154, 155, 212, dead_or_set: 0, 14, 141
insn=113, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 0
insn=114, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 
insn=115, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 
insn=117, live_throughout: 13, 14, 144, 154, 155, 212, dead_or_set: 143
insn=120, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 
insn=121, live_throughout: 13, 14, 143, 144, 154, 155, 212, dead_or_set: 
insn=123, live_throughout: 13, 14, 154, 155, dead_or_set: 144
insn=124, live_throughout: 13, 14, 154, 155, dead_or_set: 
insn=126, live_throughout: 13, 154, 155, dead_or_set: 0
insn=127, live_throughout: 0, 13, 154, 155, dead_or_set: 1
insn=128, live_throughout: 13, 154, 155, dead_or_set: 0, 1, 14
insn=131, live_throughout: 13, 14, 154, 155, dead_or_set: 0, 181
insn=132, live_throughout: 13, 14, 154, 155, 181, dead_or_set: 
insn=134, live_throughout: 13, 14, 154, 155, 181, dead_or_set: 
insn=135, live_throughout: 13, 14, 154, 155, 181, dead_or_set: 
insn=137, live_throughout: 13, 14, 154, 155, dead_or_set: 181
insn=138, live_throughout: 13, 14, 154, 155, dead_or_set: 
insn=139, live_throughout: 13, 14, 154, 155, dead_or_set: 
insn=141, live_throughout: 13, 14, 154, 155, dead_or_set: 182
insn=142, live_throughout: 13, 14, 154, 155, 182, dead_or_set: 183
insn=143, live_throughout: 13, 14, 154, 155, 182, 183, dead_or_set: 
insn=144, live_throughout: 13, 14, 154, 155, 182, 183, dead_or_set: 
insn=146, live_throughout: 13, 14, 154, 155, 182, 183, dead_or_set: 
insn=147, live_throughout: 13, 14, 154, 155, 182, 183, dead_or_set: 
insn=149, live_throughout: 13, 14, 154, 155, 182, dead_or_set: 146, 183
insn=164, live_throughout: 13, 14, 146, 154, 155, dead_or_set: 182, 207
insn=171, live_throughout: 13, 14, 146, 154, 207, dead_or_set: 155, 209
insn=185, live_throughout: 13, 14, 146, 154, 207, 209, dead_or_set: 206
insn=165, live_throughout: 13, 14, 146, 154, 206, 207, 209, dead_or_set: 208
insn=265, live_throughout: 13, 14, 146, 154, 206, 207, 208, 209, dead_or_set: 
insn=152, live_throughout: 13, 14, 154, 155, 182, dead_or_set: 
insn=156, live_throughout: 13, 14, 154, 182, dead_or_set: 136, 155
insn=155, live_throughout: 13, 14, 136, 154, dead_or_set: 135, 182
insn=157, live_throughout: 13, 14, 135, 136, 154, dead_or_set: 145
insn=213, live_throughout: 13, 14, 135, 136, 145, 154, dead_or_set: 210
insn=245, live_throughout: 13, 14, 135, 136, 145, 154, 210, dead_or_set: 211
insn=267, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 
insn=188, live_throughout: 13, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=161, live_throughout: 13, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=162, live_throughout: 13, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=166, live_throughout: 13, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=168, live_throughout: 13, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=169, live_throughout: 13, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=173, live_throughout: 13, 146, 154, 206, 207, 208, 209, dead_or_set: 1, 148
insn=172, live_throughout: 1, 13, 146, 154, 206, 207, 208, 209, dead_or_set: 0
insn=174, live_throughout: 0, 1, 13, 146, 154, 206, 207, 208, 209, dead_or_set: 2
insn=175, live_throughout: 13, 146, 154, 206, 207, 208, 209, dead_or_set: 0, 1, 2, 14
insn=178, live_throughout: 13, 14, 146, 154, 206, 207, 208, 209, dead_or_set: 0
insn=179, live_throughout: 13, 14, 146, 154, 206, 207, 208, 209, dead_or_set: 
insn=181, live_throughout: 13, 14, 154, 206, 207, 208, 209, dead_or_set: 146
insn=182, live_throughout: 13, 14, 146, 154, 206, 207, 208, 209, dead_or_set: 
insn=187, live_throughout: 13, 14, 146, 154, 206, 207, 208, 209, dead_or_set: 148
insn=189, live_throughout: 13, 14, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=190, live_throughout: 13, 14, 146, 148, 154, 206, 207, 208, 209, dead_or_set: 
insn=191, live_throughout: 13, 14, 146, 154, dead_or_set: 
insn=193, live_throughout: 13, 14, 146, 154, dead_or_set: 193
insn=196, live_throughout: 13, 14, 154, dead_or_set: 146, 193, 196
insn=198, live_throughout: 13, 14, dead_or_set: 154, 196
insn=269, live_throughout: 13, 14, dead_or_set: 
insn=212, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 
insn=243, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 
insn=209, live_throughout: 13, 14, 24, 135, 136, 154, 210, 211, dead_or_set: 145
insn=247, live_throughout: 13, 14, 24, 135, 145, 154, 210, 211, dead_or_set: 136
insn=244, live_throughout: 13, 14, 136, 145, 154, 210, 211, dead_or_set: 135
insn=210, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 
insn=215, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 200
insn=216, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 200
insn=217, live_throughout: 13, 14, 135, 136, 145, 154, 210, 211, dead_or_set: 
insn=219, live_throughout: 13, 14, 135, 136, 145, 154, dead_or_set: 201
insn=272, live_throughout: 13, 14, 135, 136, 145, 154, 201, dead_or_set: 198
insn=224, live_throughout: 13, 14, 135, 136, 201, dead_or_set: 145, 154, 198
insn=222, live_throughout: 13, 14, 136, 201, dead_or_set: 135
insn=220, live_throughout: 13, 14, dead_or_set: 136, 201
insn=225, live_throughout: 13, 14, dead_or_set: 
insn=231, live_throughout: 13, 14, dead_or_set: 0
insn=237, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 159: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 75 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 141 (nil))
init_insns for 193: (insn_list:REG_DEP_TRUE 193 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 272 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 215 (nil))
init_insns for 201: (insn_list:REG_DEP_TRUE 219 (nil))
init_insns for 206: (insn_list:REG_DEP_TRUE 185 (nil))
init_insns for 207: (insn_list:REG_DEP_TRUE 164 (nil))
init_insns for 208: (insn_list:REG_DEP_TRUE 165 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 213 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 245 (nil))
init_insns for 212: (insn_list:REG_DEP_TRUE 119 (nil))
changing reg in insn 244
changing reg in insn 155
changing reg in insn 244
changing reg in insn 222
changing reg in insn 247
changing reg in insn 156
changing reg in insn 157
changing reg in insn 247
changing reg in insn 220
changing reg in insn 61
changing reg in insn 103
changing reg in insn 67
changing reg in insn 62
changing reg in insn 79
changing reg in insn 241
changing reg in insn 241
changing reg in insn 97
changing reg in insn 111
changing reg in insn 98
changing reg in insn 117
changing reg in insn 59
changing reg in insn 120
changing reg in insn 117
changing reg in insn 97
changing reg in insn 75
changing reg in insn 61
changing reg in insn 75
changing reg in insn 120
changing reg in insn 242
changing reg in insn 58
changing reg in insn 242
changing reg in insn 123
changing reg in insn 157
changing reg in insn 209
changing reg in insn 215
changing reg in insn 243
changing reg in insn 224
changing reg in insn 209
changing reg in insn 215
changing reg in insn 149
changing reg in insn 181
changing reg in insn 196
changing reg in insn 187
changing reg in insn 181
changing reg in insn 161
changing reg in insn 187
changing reg in insn 189
changing reg in insn 173
changing reg in insn 36
changing reg in insn 46
changing reg in insn 42
changing reg in insn 4
changing reg in insn 110
changing reg in insn 171
changing reg in insn 168
changing reg in insn 244
changing reg in insn 224
changing reg in insn 79
changing reg in insn 198
changing reg in insn 172
changing reg in insn 126
changing reg in insn 66
changing reg in insn 29
changing reg in insn 17
changing reg in insn 9
changing reg in insn 46
changing reg in insn 171
changing reg in insn 156
changing reg in insn 137
changing reg in insn 35
changing reg in insn 23
changing reg in insn 146
changing reg in insn 134
changing reg in insn 43
changing reg in insn 37
changing reg in insn 36
changing reg in insn 30
changing reg in insn 18
changing reg in insn 14
changing reg in insn 28
changing reg in insn 16
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 41
changing reg in insn 44
changing reg in insn 64
changing reg in insn 110
changing reg in insn 79
changing reg in insn 68
changing reg in insn 75
changing reg in insn 76
changing reg in insn 131
changing reg in insn 137
changing reg in insn 141
changing reg in insn 164
changing reg in insn 155
changing reg in insn 142
changing reg in insn 142
changing reg in insn 149
changing reg in insn 143
changing reg in insn 193
changing reg in insn 196
changing reg in insn 196
changing reg in insn 198
changing reg in insn 272
changing reg in insn 224
changing reg in insn 215
changing reg in insn 216
changing reg in insn 219
changing reg in insn 222
changing reg in insn 220
changing reg in insn 185
changing reg in insn 187
changing reg in insn 164
changing reg in insn 168
changing reg in insn 166
changing reg in insn 165
changing reg in insn 166
changing reg in insn 171
changing reg in insn 174
changing reg in insn 213
changing reg in insn 215
changing reg in insn 215
changing reg in insn 245
changing reg in insn 247
changing reg in insn 119
changing reg in insn 120
Spilling for insn 23.
Spilling for insn 35.
Spilling for insn 166.
Spilling for insn 168.
Spilling for insn 198.
Spilling for insn 224.
Spilling for insn 222.
Spilling for insn 220.

Reloads for insn # 23
Reload 0: reload_out (QI) = (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                                                        (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                                                        (const_int -1 [0xffffffffffffffff])) [0 S1 A8])

Reloads for insn # 35
Reload 0: reload_out (QI) = (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                                                        (const_int -2 [0xfffffffffffffffe])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                                                        (const_int -2 [0xfffffffffffffffe])) [0 S1 A8])

Reloads for insn # 166
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [207])
                                                        (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [207])
                                                        (const_int 80 [0x50])) [0 panic_later+0 S4 A32])

Reloads for insn # 168
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [207])
                                                        (const_int 84 [0x54])) [0 panic_param+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [207])
                                                        (const_int 84 [0x54])) [0 panic_param+0 S4 A32])

Reloads for insn # 198
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg:SI 6 r6 [196])
                                                        (const_int 136 [0x88])) [0 envp_init S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg:SI 6 r6 [196])
                                                        (const_int 136 [0x88])) [0 envp_init S4 A32])

Reloads for insn # 224
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:145 i ] [145])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 0 r0 [198])) [0 argv_init S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:145 i ] [145])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 0 r0 [198])) [0 argv_init S4 A32])

Reloads for insn # 222
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 1 r1 [201])
                                                        (const_int 84 [0x54])) [0 panic_param+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 1 r1 [201])
                                                        (const_int 84 [0x54])) [0 panic_param+0 S4 A32])

Reloads for insn # 220
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 1 r1 [201])
                                                        (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 1 r1 [201])
                                                        (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
deleting insn with uid = 14.
deleting insn with uid = 44.
deleting insn with uid = 149.
deleting insn with uid = 164.
deleting insn with uid = 156.
deleting insn with uid = 173.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 104.
rescanning insn with uid = 111.
deleting insn with uid = 111.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 175.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 50 count 68 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 50 count 68 (    2)


unknown_bootoption

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={26d,27u,1d} r1={19d,12u} r2={16d,5u} r3={21d,14u,1d} r4={4d,15u} r5={1d,12u} r6={6d,13u,2d} r7={3d,6u} r8={2d,4u} r9={1d,1u} r10={2d,4u} r12={12d,1u} r13={1d,43u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={30d,21u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1438{1255d,179u,4e} in 120{110 regular + 10 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 7 6 2 NOTE_INSN_DELETED)

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 4 2 init/main.c:236 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 1 r1 [ val ])
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                (reg:SI 1 r1 [ val ]))
        ]) 174 {*movsi_compare0} (nil))

(insn 4 9 10 2 init/main.c:234 (set (reg/v/f:SI 5 r5 [orig:154 param ] [154])
        (reg:SI 0 r0 [ param ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 10 4 11 2 init/main.c:236 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  8 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn/i 13 11 16 3 init/main.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 13 17 3 init/main.c:238 (set (reg:SI 3 r3 [157])
        (plus:SI (reg:SI 0 r0 [156])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 3 init/main.c:238 (set (reg:SI 3 r3 [158])
        (plus:SI (reg/v/f:SI 5 r5 [orig:154 param ] [154])
            (reg:SI 3 r3 [157]))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 3 init/main.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:155 val ] [155])
            (reg:SI 3 r3 [158]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 3 init/main.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  3 [0.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 23 4 init/main.c:239 (set (reg:SI 3 r3 [159])
        (const_int 61 [0x3d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 61 [0x3d])
        (nil)))

(insn 23 21 257 4 init/main.c:239 (set (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 3 r3 [159])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 61 [0x3d])
        (nil)))

(jump_insn 257 23 258 4 (set (pc)
        (label_ref 56)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 258 257 26)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 26 258 27 5 77 "" [1 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 init/main.c:240 (set (reg:SI 0 r0 [161])
        (plus:SI (reg:SI 0 r0 [156])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 5 init/main.c:240 (set (reg:SI 0 r0 [162])
        (plus:SI (reg/v/f:SI 5 r5 [orig:154 param ] [154])
            (reg:SI 0 r0 [161]))) 4 {*arm_addsi3} (nil))

(insn 30 29 31 5 init/main.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:155 val ] [155])
            (reg:SI 0 r0 [162]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 5 init/main.c:240 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)
;; Succ edge  7 [0.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
(note 32 31 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 39 32 37 6 NOTE_INSN_DELETED)

(insn 37 39 33 6 init/main.c:242 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:155 val ] [155])) 167 {*arm_movsi_insn} (nil))

(insn 33 37 35 6 init/main.c:241 (set (reg:SI 3 r3 [163])
        (const_int 61 [0x3d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 61 [0x3d])
        (nil)))

(insn 35 33 36 6 init/main.c:241 (set (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
                (const_int -2 [0xfffffffffffffffe])) [0 S1 A8])
        (reg:QI 3 r3 [163])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 61 [0x3d])
        (nil)))

(insn 36 35 38 6 init/main.c:242 (set (reg/f:SI 6 r6 [orig:151 D.37769 ] [151])
        (plus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(call_insn/i 38 36 43 6 init/main.c:242 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 43 38 46 6 init/main.c:242 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:155 val ] [155])) 167 {*arm_movsi_insn} (nil))

(insn 46 43 41 6 init/main.c:243 (set (reg/v/f:SI 4 r4 [orig:155 val ] [155])
        (reg/f:SI 6 r6 [orig:151 D.37769 ] [151])) 167 {*arm_movsi_insn} (nil))

(insn 41 46 42 6 init/main.c:242 (set (reg:SI 2 r2 [166])
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 42 41 45 6 init/main.c:242 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [orig:151 D.37769 ] [151])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 42 259 6 init/main.c:242 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memmove") [flags 0x41] <function_decl 0x51154d80 memmove>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 259 45 260 6 (set (pc)
        (label_ref 56)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 260 259 49)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%] 
(code_label 49 260 50 7 78 "" [1 uses])

(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 53 7 init/main.c:245 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11b56450>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11b56450>)
        (nil)))

(insn 53 52 54 7 init/main.c:245 (set (reg:SI 1 r1)
        (const_int 245 [0xf5])) 167 {*arm_movsi_insn} (nil))

(call_insn 54 53 55 7 init/main.c:245 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 55 54 56)

;; Start of basic block ( 2 4 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 9 [r9]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 9 [r9]
;; live  kill	

;; Pred edge  2 [0.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 56 55 57 8 76 "" [3 uses])

(note 57 56 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 58 8 init/main.c:163 (set (reg/v/f:SI 6 r6 [orig:143 p ] [143])
        (symbol_ref:SI ("__setup_start") [flags 0xc0] <var_decl 0x11a54420 __setup_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__setup_start") [flags 0xc0] <var_decl 0x11a54420 __setup_start>)
        (nil)))

(insn 58 59 119 8 init/main.c:161 (set (reg/v:SI 7 r7 [orig:144 had_early_param ] [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 119 58 118 8 init/main.c:182 (set (reg/f:SI 9 r9 [212])
        (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 15) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 8 [r8] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  15 [86.0%]  (dfs_back)
(code_label 118 119 60 9 83 "" [1 uses])

(note 60 118 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 70 60 61 9 NOTE_INSN_DELETED)

(insn 61 70 62 9 init/main.c:165 (set (reg/f:SI 8 r8 [orig:137 D.38255 ] [137])
        (mem/s/f/j:SI (reg/v/f:SI 6 r6 [orig:143 p ] [143]) [0 <variable>.str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 9 init/main.c:165 (set (reg:SI 0 r0)
        (reg/f:SI 8 r8 [orig:137 D.38255 ] [137])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 63 62 64 9 init/main.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 64 63 66 9 init/main.c:165 (set (reg:SI 10 sl [168])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 66 64 67 9 init/main.c:166 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:154 param ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 9 init/main.c:166 (set (reg:SI 1 r1)
        (reg/f:SI 8 r8 [orig:137 D.38255 ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 9 init/main.c:166 (set (reg:SI 2 r2)
        (reg:SI 10 sl [168])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 69 68 72 9 init/main.c:166 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 72 69 73 9 init/main.c:166 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 73 72 74 9 init/main.c:166 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 10 init/main.c:167 (set (reg:SI 3 r3 [orig:170 <variable>.early ] [170])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:143 p ] [143])
                (const_int 8 [0x8])) [0 <variable>.early+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:143 p ] [143])
                (const_int 8 [0x8])) [0 <variable>.early+0 S4 A32])
        (nil)))

(insn 76 75 77 10 init/main.c:167 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:170 <variable>.early ] [170])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 78 10 init/main.c:167 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 78 77 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 80 78 81 11 NOTE_INSN_DELETED)

(note 81 80 83 11 NOTE_INSN_DELETED)

(note 83 81 84 11 NOTE_INSN_DELETED)

(note 84 83 86 11 NOTE_INSN_DELETED)

(note 86 84 87 11 NOTE_INSN_DELETED)

(note 87 86 88 11 NOTE_INSN_DELETED)

(note 88 87 79 11 NOTE_INSN_DELETED)

(insn 79 88 241 11 init/main.c:172 (set (reg:SI 3 r3 [orig:140 D.38248 ] [140])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 5 r5 [orig:154 param ] [154])
                    (reg:SI 10 sl [168])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 241 79 242 11 init/main.c:173 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg:SI 3 r3 [orig:140 D.38248 ] [140])
                    (const_int 61 [0x3d]))
                (eq:SI (reg:SI 3 r3 [orig:140 D.38248 ] [140])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (nil))

(insn 242 241 261 11 init/main.c:173 (set (reg/v:SI 7 r7 [orig:144 had_early_param ] [144])
        (if_then_else:SI (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 7 r7 [orig:144 had_early_param ] [144])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (nil))

(jump_insn 261 242 262 11 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 262 261 95)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 95 262 96 12 80 "" [1 uses])

(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 98 12 init/main.c:174 (set (reg/f:SI 3 r3 [orig:141 D.38244 ] [141])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:143 p ] [143])
                (const_int 4 [0x4])) [0 <variable>.setup_func+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 12 init/main.c:174 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:141 D.38244 ] [141])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 12 init/main.c:174 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [0.0%]  (fallthru,loop_exit)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 8 [r8] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru,loop_exit)
(note 100 99 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 103 100 102 13 init/main.c:175 (set (reg:SI 1 r1)
        (reg/f:SI 8 r8 [orig:137 D.38255 ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 102 103 104 13 init/main.c:175 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11b39ec0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11b39ec0>)
        (nil)))

(call_insn 104 102 263 13 init/main.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 263 104 264 13 (set (pc)
        (label_ref 225)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 33)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  33 [100.0%] 

(barrier 264 263 107)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [100.0%] 
(code_label 107 264 108 14 81 "" [1 uses])

(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 109 108 112 14 NOTE_INSN_DELETED)

(note 112 109 110 14 NOTE_INSN_DELETED)

(insn 110 112 111 14 init/main.c:178 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 5 r5 [orig:154 param ] [154])
            (reg:SI 10 sl [168]))) 4 {*arm_addsi3} (nil))

(call_insn 111 110 113 14 init/main.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 3 r3 [orig:141 D.38244 ] [141]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 113 111 114 14 init/main.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 114 113 115 14 init/main.c:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 300 [0x12c])
        (nil)))
;; End of basic block 14 -> ( 33 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  33 [3.0%]  (loop_exit)
;; Succ edge  15 [97.0%]  (fallthru)

;; Start of basic block ( 9 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  14 [97.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 115 114 116 15 79 "" [2 uses])

(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 120 15 init/main.c:181 (set (reg/v/f:SI 6 r6 [orig:143 p ] [143])
        (plus:SI (reg/v/f:SI 6 r6 [orig:143 p ] [143])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 120 117 121 15 init/main.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 6 r6 [orig:143 p ] [143])
            (reg/f:SI 9 r9 [212]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 6 r6 [orig:143 p ] [143])
            (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>))
        (nil)))

(jump_insn 121 120 122 15 init/main.c:182 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 15 -> ( 9 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  9 [86.0%]  (dfs_back)
;; Succ edge  16 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [14.0%]  (fallthru,loop_exit)
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 16 init/main.c:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:144 had_early_param ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 16 init/main.c:249 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3567 [0xdef])
        (nil)))
;; End of basic block 16 -> ( 33 17)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  33 [35.7%] 
;; Succ edge  17 [64.3%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  16 [64.3%]  (fallthru)
(note 125 124 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 129 125 126 17 NOTE_INSN_DELETED)

(insn 126 129 127 17 init/main.c:253 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:154 param ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 17 init/main.c:253 (set (reg:SI 1 r1)
        (const_int 46 [0x2e])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 128 127 131 17 init/main.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 131 128 132 17 init/main.c:253 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [181])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 132 131 133 17 init/main.c:253 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  18 [85.0%]  (fallthru)
;; Succ edge  20 [15.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [85.0%]  (fallthru)
(note 133 132 134 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 18 init/main.c:253 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:155 val ] [155])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 135 134 136 18 init/main.c:253 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 18 -> ( 33 19)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  33 [10.1%] 
;; Succ edge  19 [89.9%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [89.9%]  (fallthru)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 19 init/main.c:253 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [181])
            (reg/v/f:SI 4 r4 [orig:155 val ] [155]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 138 137 139 19 init/main.c:253 discrim 2 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 19 -> ( 33 20)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  33 [39.0%] 
;; Succ edge  20 [61.0%]  (fallthru)

;; Start of basic block ( 17 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  17 [15.0%] 
;; Pred edge  19 [61.0%]  (fallthru)
(code_label 139 138 140 20 84 "" [1 uses])

(note 140 139 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 20 init/main.c:256 (set (reg/f:SI 7 r7 [182])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 142 141 143 20 init/main.c:256 (set (reg/f:SI 6 r6 [orig:183 panic_later ] [183])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [182])
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 80 [0x50]))) [0 panic_later+0 S4 A32])
        (nil)))

(insn 143 142 144 20 init/main.c:256 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 6 r6 [orig:183 panic_later ] [183])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 145 20 init/main.c:256 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
        (nil)))
;; End of basic block 20 -> ( 33 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  33 [78.4%] 
;; Succ edge  21 [21.6%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [21.6%]  (fallthru)
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 21 init/main.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:155 val ] [155])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 147 146 148 21 init/main.c:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  22 [85.0%]  (fallthru)
;; Succ edge  23 [15.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 4 [r4] 8 [r8] 10 [sl]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4] 8 [r8] 10 [sl]
;; live  kill	

;; Pred edge  21 [85.0%]  (fallthru)
(note 148 147 171 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 171 148 185 22 init/main.c:267 (set (reg:SI 4 r4 [209])
        (minus:SI (reg/v/f:SI 4 r4 [orig:155 val ] [155])
            (reg/v/f:SI 5 r5 [orig:154 param ] [154]))) 28 {*arm_subsi3_insn} (nil))

(insn 185 171 165 22 init/main.c:262 discrim 1 (set (reg/f:SI 10 sl [206])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 136 [0x88])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 136 [0x88])))
        (nil)))

(insn 165 185 265 22 init/main.c:264 (set (reg/f:SI 8 r8 [208])
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11ae3740>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11ae3740>)
        (nil)))

(jump_insn 265 165 266 22 (set (pc)
        (label_ref 182)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 28)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  28 [100.0%] 

(barrier 266 265 152)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  21 [15.0%] 
(code_label 152 266 153 23 85 "" [1 uses])

(note 153 152 155 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 155 153 157 23 init/main.c:259 (set (reg/v/f:SI 2 r2 [orig:135 param.868 ] [135])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [182])
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 84 [0x54]))) [0 panic_param+0 S4 A32])
        (nil)))

(insn 157 155 213 23 init/main.c:259 (set (reg/v:SI 3 r3 [orig:145 i ] [145])
        (reg/f:SI 4 r4 [orig:136 panic_later_lsm.842 ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 213 157 245 23 init/main.c:274 discrim 1 (set (reg/f:SI 0 r0 [210])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 245 213 267 23 init/main.c:277 (set (reg/f:SI 1 r1 [211])
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11ae3780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11ae3780>)
        (nil)))

(jump_insn 267 245 268 23 (set (pc)
        (label_ref 210)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  31 [100.0%] 

(barrier 268 267 188)

;; Start of basic block ( 28) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [95.5%] 
(code_label 188 268 160 24 90 "" [1 uses])

(note 160 188 161 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 24 init/main.c:263 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:146 i ] [146])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 162 161 163 24 init/main.c:263 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 169)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  25 [28.0%]  (fallthru)
;; Succ edge  26 [72.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  24 [28.0%]  (fallthru)
(note 163 162 166 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 166 163 168 25 init/main.c:264 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [207])
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
        (reg/f:SI 8 r8 [208])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11ae3740>)
        (nil)))

(insn 168 166 169 25 init/main.c:265 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 7 r7 [207])
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:154 param ] [154])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  24 [72.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 169 168 170 26 88 "" [1 uses])

(note 170 169 176 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 176 170 172 26 NOTE_INSN_DELETED)

(insn 172 176 174 26 init/main.c:267 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:154 param ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 174 172 175 26 init/main.c:267 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [209])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 175 174 178 26 init/main.c:267 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 178 175 179 26 init/main.c:267 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 179 178 180 26 init/main.c:267 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 26 -> ( 29 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  29 [4.5%]  (loop_exit)
;; Succ edge  27 [95.5%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  26 [95.5%]  (fallthru)
(note 180 179 181 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 27 init/main.c:262 (set (reg/v:SI 6 r6 [orig:146 i ] [146])
        (plus:SI (reg/v:SI 6 r6 [orig:146 i ] [146])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  28 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 22) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru,dfs_back)
;; Pred edge  22 [100.0%] 
(code_label 182 181 183 28 86 "" [1 uses])

(note 183 182 187 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 187 183 189 28 init/main.c:262 discrim 1 (set (reg/f:SI 1 r1 [orig:148 D.37792 ] [148])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:146 i ] [146])
                    (const_int 4 [0x4]))
                (reg/f:SI 10 sl [206])) [0 envp_init S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 189 187 190 28 init/main.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:148 D.37792 ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 190 189 191 28 init/main.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 28 -> ( 24 29)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  24 [95.5%] 
;; Succ edge  29 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 26 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6]
;; live  kill	

;; Pred edge  26 [4.5%]  (loop_exit)
;; Pred edge  28 [4.5%]  (fallthru,loop_exit)
(code_label 191 190 192 29 89 "" [1 uses])

(note 192 191 195 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 195 192 193 29 NOTE_INSN_DELETED)

(insn 193 195 196 29 init/main.c:270 (set (reg/f:SI 3 r3 [193])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 196 193 198 29 init/main.c:270 (set (reg:SI 6 r6 [196])
        (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:146 i ] [146])
                (const_int 4 [0x4]))
            (reg/f:SI 3 r3 [193]))) 270 {*arith_shiftsi} (nil))

(insn 198 196 269 29 init/main.c:270 (set (mem/s/f/j:SI (plus:SI (reg:SI 6 r6 [196])
                (const_int 136 [0x88])) [0 envp_init S4 A32])
        (reg/v/f:SI 5 r5 [orig:154 param ] [154])) 167 {*arm_movsi_insn} (nil))

(jump_insn 269 198 270 29 (set (pc)
        (label_ref 225)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 33)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  33 [100.0%] 

(barrier 270 269 212)

;; Start of basic block ( 31) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  31 [97.1%] 
(code_label 212 270 201 30 92 "" [1 uses])

(note 201 212 243 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 243 201 209 30 init/main.c:277 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:145 i ] [145])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(insn 209 243 247 30 init/main.c:274 (set (reg/v:SI 3 r3 [orig:145 i ] [145])
        (plus:SI (reg/v:SI 3 r3 [orig:145 i ] [145])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 247 209 244 30 init/main.c:277 (set (reg/f:SI 4 r4 [orig:136 panic_later_lsm.842 ] [136])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 4 r4 [orig:136 panic_later_lsm.842 ] [136])
            (reg/f:SI 1 r1 [211]))) 240 {*movsicc_insn} (nil))

(insn 244 247 210 30 init/main.c:277 (set (reg/v/f:SI 2 r2 [orig:135 param.868 ] [135])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v/f:SI 2 r2 [orig:135 param.868 ] [135])
            (reg/v/f:SI 5 r5 [orig:154 param ] [154]))) 240 {*movsicc_insn} (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  31 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 30 23) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  30 [100.0%]  (fallthru,dfs_back)
;; Pred edge  23 [100.0%] 
(code_label 210 244 211 31 87 "" [1 uses])

(note 211 210 215 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 215 211 216 31 init/main.c:233 (set (reg/f:SI 12 ip [200])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:145 i ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [210])) [0 argv_init S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:145 i ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [210])) [0 argv_init S4 A32])
        (nil)))

(insn 216 215 217 31 init/main.c:233 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [200])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 217 216 218 31 init/main.c:233 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9706 [0x25ea])
        (nil)))
;; End of basic block 31 -> ( 30 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  30 [97.1%] 
;; Succ edge  32 [2.9%]  (fallthru,loop_exit)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  31 [2.9%]  (fallthru,loop_exit)
(note 218 217 219 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 272 32 init/main.c:233 (set (reg/f:SI 1 r1 [201])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 272 219 224 32 init/main.c:280 (set (reg/f:SI 0 r0 [198])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 224 272 222 32 init/main.c:280 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 3 r3 [orig:145 i ] [145])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [198])) [0 argv_init S4 A32])
        (reg/v/f:SI 5 r5 [orig:154 param ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 222 224 220 32 init/main.c:233 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 1 r1 [201])
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])
        (reg/v/f:SI 2 r2 [orig:135 param.868 ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 220 222 225 32 init/main.c:233 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 1 r1 [201])
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
        (reg/f:SI 4 r4 [orig:136 panic_later_lsm.842 ] [136])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 32 -> ( 33)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 16 19 20 32 18 13 14 29) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  16 [35.7%] 
;; Pred edge  19 [39.0%] 
;; Pred edge  20 [78.4%] 
;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  18 [10.1%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [3.0%]  (loop_exit)
;; Pred edge  29 [100.0%] 
(code_label 225 220 226 33 82 "" [7 uses])

(note 226 225 231 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 231 226 237 33 init/main.c:283 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 237 231 271 33 init/main.c:283 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 33 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 271 237 273 NOTE_INSN_DELETED)

(note 273 271 0 NOTE_INSN_DELETED)


;; Function parse_early_param (parse_early_param)[0:2056] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 25(l0): point = 1
   Insn 24(l0): point = 3
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 18(l0): point = 9
   Insn 15(l0): point = 11
   Insn 17(l0): point = 13
   Insn 16(l0): point = 15
   Insn 8(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 5(l0): point = 24
 a0(r133): [2..24]
 a1(r143): [2..3]
 a2(r134): [21..22]
Compressing live ranges: from 27 to 5 - 18%
Ranges after the compression:
 a0(r133): [0..4]
 a1(r143): [0..1]
 a2(r134): [2..3]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts: a1(r143,l0) a2(r134,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r143,l0) conflicts: a0(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r134,l0) conflicts: a0(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=5, points=5
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r133 1r143 2r134
    modified regnos: 133 134 143
    border:
    Pressure: GENERAL_REGS=5
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a2(r134,l0)
      Pushing a1(r143,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a1(r143,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 3
Disposition:
    0:r133 l0     4    2:r134 l0     3    1:r143 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 133
insn=6, live_throughout: 13, 14, 133, dead_or_set: 134
insn=7, live_throughout: 13, 14, 133, dead_or_set: 134
insn=8, live_throughout: 13, 14, 133, dead_or_set: 
insn=16, live_throughout: 13, 133, dead_or_set: 1
insn=17, live_throughout: 1, 13, 133, dead_or_set: 2
insn=15, live_throughout: 1, 2, 13, 133, dead_or_set: 0
insn=18, live_throughout: 13, 133, dead_or_set: 0, 1, 2, 14
insn=21, live_throughout: 13, 133, dead_or_set: 0
insn=22, live_throughout: 13, 133, dead_or_set: 0, 14
insn=24, live_throughout: 13, 14, 133, dead_or_set: 143
insn=25, live_throughout: 13, 14, dead_or_set: 133, 143
insn=31, live_throughout: 13, 14, dead_or_set: 
init_insns for 133: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 134: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 24 (nil))
changing reg in insn 5
changing reg in insn 21
changing reg in insn 15
changing reg in insn 25
changing reg in insn 6
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 24
changing reg in insn 25
Spilling for insn 25.

Reloads for insn # 25
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [133])
                                                        (const_int 20 [0x14])) [0 done+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [133])
                                                        (const_int 20 [0x14])) [0 done+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


parse_early_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,2u} r1={4d,1u} r2={4d,1u} r3={5d,2u} r4={1d,4u,1d} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 268{249d,18u,1e} in 12{10 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/main.c:419 (set (reg/f:SI 4 r4 [133])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 6 5 7 2 init/main.c:419 (set (reg:SI 3 r3 [orig:134 done ] [134])
        (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [133])
                (const_int 20 [0x14])) [0 done+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [133])
                (const_int 20 [0x14])) [0 done+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                        (const_int 20 [0x14]))) [0 done+0 S4 A32])
            (nil))))

(insn 7 6 8 2 init/main.c:419 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 done ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/main.c:419 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 9 17 3 init/main.c:423 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(insn 17 16 15 3 init/main.c:423 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(insn 15 17 18 3 init/main.c:423 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 4 r4 [133])
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(call_insn 18 15 21 3 init/main.c:423 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 18 22 3 init/main.c:424 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 4 r4 [133])
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(call_insn 22 21 24 3 init/main.c:424 (parallel [
            (call (mem:SI (symbol_ref:SI ("parse_early_options") [flags 0x3] <function_decl 0x10a57480 parse_early_options>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 24 22 25 3 init/main.c:425 (set (reg:SI 3 r3 [143])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 25 24 31 3 init/main.c:425 (set (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [133])
                (const_int 20 [0x14])) [0 done+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 31 25 34 4 99 "" [1 uses])

(note 34 31 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 34 36 NOTE_INSN_DELETED)

(note 36 35 0 NOTE_INSN_DELETED)


;; Function start_kernel (start_kernel)[0:2061] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 249.
verify found no changes in insn with uid = 249.
deleting insn with uid = 195.
scanning new insn with uid = 250.
verify found no changes in insn with uid = 250.
deleting insn with uid = 163.
scanning new insn with uid = 251.
verify found no changes in insn with uid = 251.
deleting insn with uid = 158.
scanning new insn with uid = 252.
verify found no changes in insn with uid = 252.
deleting insn with uid = 98.
scanning new insn with uid = 253.
verify found no changes in insn with uid = 253.
deleting insn with uid = 94.
scanning new insn with uid = 254.
verify found no changes in insn with uid = 254.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 17 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)

Pass 0 for finding allocno costs

    a0 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r185,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r152,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a20(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a25(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a26(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a28(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a29(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a30(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r210: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS

  a0(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r152,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a20(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a25(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a26(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a28(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a29(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a30(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 238(l0): point = 0
   Insn 237(l0): point = 2
   Insn 236(l0): point = 4
   Insn 235(l0): point = 6
   Insn 234(l0): point = 8
   Insn 233(l0): point = 10
   Insn 232(l0): point = 12
   Insn 231(l0): point = 14
   Insn 229(l0): point = 16
   Insn 228(l0): point = 18
   Insn 227(l0): point = 20
   Insn 226(l0): point = 22
   Insn 224(l0): point = 24
   Insn 223(l0): point = 26
   Insn 222(l0): point = 28
   Insn 221(l0): point = 30
   Insn 220(l0): point = 32
   Insn 219(l0): point = 34
   Insn 225(l0): point = 36
   Insn 216(l0): point = 39
   Insn 214(l0): point = 42
   Insn 213(l0): point = 44
   Insn 212(l0): point = 46
   Insn 211(l0): point = 48
   Insn 210(l0): point = 50
   Insn 207(l0): point = 53
   Insn 204(l0): point = 55
   Insn 201(l0): point = 57
   Insn 203(l0): point = 59
   Insn 202(l0): point = 61
   Insn 198(l0): point = 64
   Insn 197(l0): point = 66
   Insn 196(l0): point = 68
   Insn 249(l0): point = 70
   Insn 193(l0): point = 72
   Insn 190(l0): point = 74
   Insn 188(l0): point = 77
   Insn 187(l0): point = 79
   Insn 186(l0): point = 81
   Insn 185(l0): point = 83
   Insn 183(l0): point = 86
   Insn 182(l0): point = 88
   Insn 181(l0): point = 90
   Insn 180(l0): point = 92
   Insn 176(l0): point = 95
   Insn 175(l0): point = 97
   Insn 174(l0): point = 99
   Insn 171(l0): point = 102
   Insn 170(l0): point = 104
   Insn 169(l0): point = 106
   Insn 168(l0): point = 108
   Insn 167(l0): point = 110
   Insn 166(l0): point = 112
   Insn 165(l0): point = 114
   Insn 250(l0): point = 116
   Insn 164(l0): point = 118
   Insn 162(l0): point = 120
   Insn 161(l0): point = 122
   Insn 251(l0): point = 124
   Insn 159(l0): point = 126
   Insn 155(l0): point = 129
   Insn 154(l0): point = 131
   Insn 151(l0): point = 134
   Insn 150(l0): point = 136
   Insn 148(l0): point = 138
   Insn 147(l0): point = 140
   Insn 146(l0): point = 142
   Insn 145(l0): point = 144
   Insn 144(l0): point = 146
   Insn 143(l0): point = 148
   Insn 142(l0): point = 150
   Insn 141(l0): point = 152
   Insn 140(l0): point = 154
   Insn 139(l0): point = 156
   Insn 138(l0): point = 158
   Insn 137(l0): point = 160
   Insn 136(l0): point = 162
   Insn 135(l0): point = 164
   Insn 134(l0): point = 166
   Insn 131(l0): point = 169
   Insn 130(l0): point = 171
   Insn 129(l0): point = 173
   Insn 126(l0): point = 176
   Insn 125(l0): point = 178
   Insn 123(l0): point = 180
   Insn 122(l0): point = 182
   Insn 121(l0): point = 184
   Insn 120(l0): point = 186
   Insn 119(l0): point = 188
   Insn 115(l0): point = 190
   Insn 114(l0): point = 192
   Insn 113(l0): point = 194
   Insn 112(l0): point = 196
   Insn 111(l0): point = 198
   Insn 110(l0): point = 200
   Insn 109(l0): point = 202
   Insn 108(l0): point = 204
   Insn 107(l0): point = 206
   Insn 106(l0): point = 208
   Insn 105(l0): point = 210
   Insn 104(l0): point = 212
   Insn 99(l0): point = 214
   Insn 252(l0): point = 216
   Insn 103(l0): point = 218
   Insn 100(l0): point = 220
   Insn 101(l0): point = 222
   Insn 96(l0): point = 224
   Insn 253(l0): point = 226
   Insn 102(l0): point = 228
   Insn 93(l0): point = 230
   Insn 90(l0): point = 232
   Insn 89(l0): point = 234
   Insn 87(l0): point = 236
   Insn 88(l0): point = 238
   Insn 82(l0): point = 240
   Insn 81(l0): point = 242
   Insn 80(l0): point = 244
   Insn 79(l0): point = 246
   Insn 78(l0): point = 248
   Insn 77(l0): point = 250
   Insn 76(l0): point = 252
   Insn 74(l0): point = 254
   Insn 75(l0): point = 256
   Insn 72(l0): point = 258
   Insn 70(l0): point = 260
   Insn 65(l0): point = 262
   Insn 71(l0): point = 264
   Insn 62(l0): point = 266
   Insn 59(l0): point = 268
   Insn 60(l0): point = 270
   Insn 61(l0): point = 272
   Insn 55(l0): point = 274
   Insn 54(l0): point = 276
   Insn 53(l0): point = 278
   Insn 50(l0): point = 280
   Insn 47(l0): point = 282
   Insn 38(l0): point = 284
   Insn 49(l0): point = 286
   Insn 48(l0): point = 288
   Insn 43(l0): point = 290
   Insn 42(l0): point = 292
   Insn 37(l0): point = 294
   Insn 36(l0): point = 296
   Insn 34(l0): point = 298
   Insn 32(l0): point = 300
   Insn 33(l0): point = 302
   Insn 29(l0): point = 304
   Insn 28(l0): point = 306
   Insn 27(l0): point = 308
   Insn 26(l0): point = 310
   Insn 25(l0): point = 312
   Insn 24(l0): point = 314
   Insn 23(l0): point = 316
   Insn 22(l0): point = 318
   Insn 21(l0): point = 320
   Insn 20(l0): point = 322
   Insn 19(l0): point = 324
   Insn 17(l0): point = 326
   Insn 18(l0): point = 328
   Insn 16(l0): point = 330
   Insn 12(l0): point = 332
   Insn 11(l0): point = 334
   Insn 254(l0): point = 336
   Insn 52(l0): point = 338
   Insn 9(l0): point = 340
   Insn 247(l0): point = 342
   Insn 246(l0): point = 344
   Insn 7(l0): point = 346
   Insn 6(l0): point = 348
   Insn 5(l0): point = 350
 a0(r210): [15..36]
 a1(r143): [40..46]
 a2(r209): [47..48]
 a3(r198): [54..92]
 a4(r200): [54..81]
 a5(r144): [60..68]
 a6(r204): [62..72]
 a7(r205): [69..70]
 a8(r201): [73..74]
 a9(r146): [75..90]
 a10(r199): [82..83]
 a11(r196): [98..108]
 a12(r147): [100..106]
 a13(r194): [115..116]
 a14(r195): [115..118]
 a15(r191): [123..124]
 a16(r192): [123..126]
 a17(r141): [137..138]
 a18(r142): [179..180]
 a19(r152): [185..344]
 a20(r186): [185..186]
 a21(r185): [187..188]
 a22(r183): [215..216]
 a23(r178): [219..224]
 a24(r162): [223..338]
 a25(r177): [225..230]
 a26(r179): [225..226]
 a27(r148): [257..284]
 a28(r150): [309..340]
 a29(r139): [311..330]
 a30(r149): [335..336]
Compressing live ranges: from 353 to 57 - 16%
Ranges after the compression:
 a0(r210): [0..1]
 a1(r143): [2..3]
 a2(r209): [4..5]
 a3(r198): [6..20]
 a4(r200): [6..16]
 a5(r144): [7..9]
 a6(r204): [8..12]
 a7(r205): [10..11]
 a8(r201): [13..14]
 a9(r146): [15..19]
 a10(r199): [17..18]
 a11(r196): [21..24]
 a12(r147): [22..23]
 a13(r194): [25..26]
 a14(r195): [25..27]
 a15(r191): [28..29]
 a16(r192): [28..30]
 a17(r141): [31..32]
 a18(r142): [33..34]
 a19(r152): [35..56]
 a20(r186): [35..36]
 a21(r185): [37..38]
 a22(r183): [39..40]
 a23(r178): [41..43]
 a24(r162): [42..54]
 a25(r177): [44..46]
 a26(r179): [44..45]
 a27(r148): [47..48]
 a28(r150): [49..55]
 a29(r139): [50..51]
 a30(r149): [52..53]
+++Allocating 208 bytes for conflict table (uncompressed size 248)
;; a0(r210,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r143,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r209,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r198,l0) conflicts: a4(r200,l0) a5(r144,l0) a6(r204,l0) a7(r205,l0) a8(r201,l0) a9(r146,l0) a10(r199,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r200,l0) conflicts: a3(r198,l0) a5(r144,l0) a6(r204,l0) a7(r205,l0) a8(r201,l0) a9(r146,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r144,l0) conflicts: a4(r200,l0) a3(r198,l0) a6(r204,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a6(r204,l0) conflicts: a4(r200,l0) a3(r198,l0) a5(r144,l0) a7(r205,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r205,l0) conflicts: a4(r200,l0) a3(r198,l0) a6(r204,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r201,l0) conflicts: a4(r200,l0) a3(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r146,l0) conflicts: a4(r200,l0) a3(r198,l0) a10(r199,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r199,l0) conflicts: a3(r198,l0) a9(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r196,l0) conflicts: a12(r147,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a12(r147,l0) conflicts: a11(r196,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r194,l0) conflicts: a14(r195,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r195,l0) conflicts: a13(r194,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a15(r191,l0) conflicts: a16(r192,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a16(r192,l0) conflicts: a15(r191,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r141,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r142,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r152,l0) conflicts: a20(r186,l0) a21(r185,l0) a22(r183,l0) a23(r178,l0) a24(r162,l0) a26(r179,l0) a25(r177,l0) a27(r148,l0) a28(r150,l0) a29(r139,l0) a30(r149,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a20(r186,l0) conflicts: a19(r152,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r185,l0) conflicts: a19(r152,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a22(r183,l0) conflicts: a19(r152,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a23(r178,l0) conflicts: a19(r152,l0) a24(r162,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a24(r162,l0) conflicts: a19(r152,l0) a23(r178,l0) a26(r179,l0) a25(r177,l0) a27(r148,l0) a28(r150,l0) a29(r139,l0) a30(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a25(r177,l0) conflicts: a19(r152,l0) a24(r162,l0) a26(r179,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a26(r179,l0) conflicts: a19(r152,l0) a24(r162,l0) a25(r177,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a27(r148,l0) conflicts: a19(r152,l0) a24(r162,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a28(r150,l0) conflicts: a19(r152,l0) a24(r162,l0) a29(r139,l0) a30(r149,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a29(r139,l0) conflicts: a19(r152,l0) a24(r162,l0) a28(r150,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a30(r149,l0) conflicts: a19(r152,l0) a24(r162,l0) a28(r150,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a8(r201)<->a9(r146)@125:shuffle
  cp1:a6(r204)<->a8(r201)@125:shuffle
  cp2:a23(r178)<->a26(r179)@125:shuffle
  cp3:a23(r178)<->a25(r177)@125:shuffle
  cp4:a20(r186)<->a21(r185)@125:shuffle
  regions=1, blocks=15, points=57
    allocnos=31, copies=5, conflicts=9, ranges=31

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r210 1r143 2r209 3r198 4r200 5r144 6r204 7r205 8r201 9r146 10r199 11r196 12r147 13r194 14r195 15r191 16r192 17r141 18r142 19r152 20r186 21r185 22r183 23r178 24r162 25r177 26r179 27r148 28r150 29r139 30r149
    modified regnos: 139 141 142 143 144 146 147 148 149 150 152 162 177 178 179 183 185 186 191 192 194 195 196 198 199 200 201 204 205 209 210
    border:
    Pressure: GENERAL_REGS=7
    Reg 210 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 4 regs less
    Reg 200 of GENERAL_REGS has 4 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 196 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 5 regs less
    Reg 183 of GENERAL_REGS has 4 regs less
    Reg 178 of GENERAL_REGS has 3 regs less
    Reg 162 of GENERAL_REGS has 4 regs less
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 179 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 4 regs less
    Reg 150 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
      Pushing a30(r149,l0)
      Pushing a21(r185,l0)
      Pushing a20(r186,l0)
      Pushing a18(r142,l0)
      Pushing a17(r141,l0)
      Pushing a16(r192,l0)
      Pushing a15(r191,l0)
      Pushing a14(r195,l0)
      Pushing a13(r194,l0)
      Pushing a10(r199,l0)
      Pushing a8(r201,l0)
      Pushing a7(r205,l0)
      Pushing a2(r209,l0)
      Pushing a12(r147,l0)
      Pushing a9(r146,l0)
      Pushing a6(r204,l0)
      Pushing a26(r179,l0)
      Pushing a25(r177,l0)
      Pushing a11(r196,l0)
      Pushing a5(r144,l0)
      Pushing a1(r143,l0)
      Pushing a0(r210,l0)
      Pushing a23(r178,l0)
      Pushing a29(r139,l0)
      Pushing a28(r150,l0)
      Pushing a22(r183,l0)
      Pushing a27(r148,l0)
      Pushing a4(r200,l0)
      Pushing a3(r198,l0)
      Pushing a24(r162,l0)
      Pushing a19(r152,l0)
      Popping a19(r152,l0)  -- assign reg 4
      Popping a24(r162,l0)  -- assign reg 5
      Popping a3(r198,l0)  -- assign reg 4
      Popping a4(r200,l0)  -- assign reg 5
      Popping a27(r148,l0)  -- assign reg 6
      Popping a22(r183,l0)  -- assign reg 12
      Popping a28(r150,l0)  -- assign reg 6
      Popping a29(r139,l0)  -- assign reg 7
      Popping a23(r178,l0)  -- assign reg 3
      Popping a0(r210,l0)  -- assign reg 4
      Popping a1(r143,l0)  -- assign reg 3
      Popping a5(r144,l0)  -- assign reg 2
      Popping a11(r196,l0)  -- assign reg 3
      Popping a25(r177,l0)  -- assign reg 3
      Popping a26(r179,l0)  -- assign reg 1
      Popping a6(r204,l0)  -- assign reg 1
      Popping a9(r146,l0)  -- assign reg 1
      Popping a12(r147,l0)  -- assign reg 0
      Popping a2(r209,l0)  -- assign reg 3
      Popping a7(r205,l0)  -- assign reg 3
      Popping a8(r201,l0)  -- assign reg 1
      Popping a10(r199,l0)  -- assign reg 3
      Popping a13(r194,l0)  -- assign reg 3
      Popping a14(r195,l0)  -- assign reg 2
      Popping a15(r191,l0)  -- assign reg 3
      Popping a16(r192,l0)  -- assign reg 2
      Popping a17(r141,l0)  -- assign reg 3
      Popping a18(r142,l0)  -- assign reg 3
      Popping a20(r186,l0)  -- assign reg 3
      Popping a21(r185,l0)  -- assign reg 3
      Popping a30(r149,l0)  -- assign reg 3
Disposition:
   29:r139 l0     7   17:r141 l0     3   18:r142 l0     3    1:r143 l0     3
    5:r144 l0     2    9:r146 l0     1   12:r147 l0     0   27:r148 l0     6
   30:r149 l0     3   28:r150 l0     6   19:r152 l0     4   24:r162 l0     5
   25:r177 l0     3   23:r178 l0     3   26:r179 l0     1   22:r183 l0    12
   21:r185 l0     3   20:r186 l0     3   15:r191 l0     3   16:r192 l0     2
   13:r194 l0     3   14:r195 l0     2   11:r196 l0     3    3:r198 l0     4
   10:r199 l0     3    4:r200 l0     5    8:r201 l0     1    6:r204 l0     1
    7:r205 l0     3    2:r209 l0     3    0:r210 l0     4
New iteration of spill/restore move
+++Costs: overall -10250, reg -10250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 14
insn=6, live_throughout: 13, dead_or_set: 0, 14
insn=7, live_throughout: 13, dead_or_set: 
insn=246, live_throughout: 13, dead_or_set: 152
insn=247, live_throughout: 13, dead_or_set: 152
insn=9, live_throughout: 13, 152, dead_or_set: 150
insn=52, live_throughout: 13, 150, 152, dead_or_set: 162
insn=254, live_throughout: 13, 150, 152, 162, dead_or_set: 149
insn=11, live_throughout: 13, 150, 152, 162, dead_or_set: 149
insn=12, live_throughout: 13, 150, 152, 162, dead_or_set: 14
insn=16, live_throughout: 13, 150, 152, 162, dead_or_set: 139
insn=18, live_throughout: 13, 139, 150, 152, 162, dead_or_set: 1
insn=17, live_throughout: 1, 13, 139, 150, 152, 162, dead_or_set: 0
insn=19, live_throughout: 13, 139, 150, 152, 162, dead_or_set: 0, 1, 14
insn=20, live_throughout: 13, 139, 150, 152, 162, dead_or_set: 0
insn=21, live_throughout: 0, 13, 139, 150, 152, 162, dead_or_set: 1
insn=22, live_throughout: 13, 139, 150, 152, 162, dead_or_set: 0, 1, 14
insn=23, live_throughout: 13, 139, 150, 152, 162, dead_or_set: 0
insn=24, live_throughout: 0, 13, 139, 150, 152, 162, dead_or_set: 1
insn=25, live_throughout: 13, 139, 150, 152, 162, dead_or_set: 0, 1, 14
insn=26, live_throughout: 13, 150, 152, 162, dead_or_set: 0, 139
insn=27, live_throughout: 0, 13, 152, 162, dead_or_set: 1, 150
insn=28, live_throughout: 13, 152, 162, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 152, 162, dead_or_set: 14
insn=33, live_throughout: 13, 152, 162, dead_or_set: 1
insn=32, live_throughout: 1, 13, 152, 162, dead_or_set: 0
insn=34, live_throughout: 13, 152, 162, dead_or_set: 0, 1, 14
insn=36, live_throughout: 13, 152, 162, dead_or_set: 0
insn=37, live_throughout: 13, 152, 162, dead_or_set: 0, 14
insn=42, live_throughout: 13, 152, 162, dead_or_set: 0
insn=43, live_throughout: 13, 152, 162, dead_or_set: 0, 14
insn=48, live_throughout: 0, 13, 152, 162, dead_or_set: 1
insn=49, live_throughout: 0, 1, 13, 152, 162, dead_or_set: 2
insn=38, live_throughout: 0, 1, 2, 13, 152, 162, dead_or_set: 148
insn=47, live_throughout: 1, 2, 13, 148, 152, 162, dead_or_set: 0
insn=50, live_throughout: 13, 148, 152, 162, dead_or_set: 0, 1, 2, 14
insn=53, live_throughout: 13, 148, 152, 162, dead_or_set: 0
insn=54, live_throughout: 13, 148, 152, 162, dead_or_set: 0
insn=55, live_throughout: 13, 148, 152, 162, dead_or_set: 0, 14
insn=61, live_throughout: 0, 13, 148, 152, 162, dead_or_set: 2
insn=60, live_throughout: 0, 2, 13, 148, 152, 162, dead_or_set: 1
insn=59, live_throughout: 1, 2, 13, 148, 152, 162, dead_or_set: 0
insn=62, live_throughout: 13, 148, 152, 162, dead_or_set: 0, 1, 2, 14
insn=71, live_throughout: 0, 13, 148, 152, 162, dead_or_set: 1
insn=65, live_throughout: 1, 13, 148, 152, 162, dead_or_set: 0
insn=70, live_throughout: 1, 13, 148, 152, 162, dead_or_set: 0
insn=72, live_throughout: 13, 148, 152, 162, dead_or_set: 0, 1, 14
insn=75, live_throughout: 13, 152, 162, dead_or_set: 1, 148
insn=74, live_throughout: 1, 13, 152, 162, dead_or_set: 0
insn=76, live_throughout: 13, 152, 162, dead_or_set: 0, 1, 14
insn=77, live_throughout: 13, 152, 162, dead_or_set: 14
insn=78, live_throughout: 13, 152, 162, dead_or_set: 14
insn=79, live_throughout: 13, 152, 162, dead_or_set: 14
insn=80, live_throughout: 13, 152, 162, dead_or_set: 0
insn=81, live_throughout: 13, 152, 162, dead_or_set: 0, 14
insn=82, live_throughout: 13, 152, 162, dead_or_set: 14
insn=88, live_throughout: 13, 152, 162, dead_or_set: 1
insn=87, live_throughout: 1, 13, 152, 162, dead_or_set: 0
insn=89, live_throughout: 13, 152, 162, dead_or_set: 0, 1, 14
insn=90, live_throughout: 13, 152, 162, dead_or_set: 14
insn=93, live_throughout: 13, 152, 162, dead_or_set: 177
insn=102, live_throughout: 13, 152, 162, 177, dead_or_set: 2
insn=253, live_throughout: 2, 13, 152, 162, 177, dead_or_set: 179
insn=96, live_throughout: 2, 13, 152, 162, dead_or_set: 177, 178, 179
insn=101, live_throughout: 2, 13, 152, 178, dead_or_set: 1, 162
insn=100, live_throughout: 1, 2, 13, 152, 178, dead_or_set: 0
insn=103, live_throughout: 0, 1, 2, 13, 152, dead_or_set: 3, 178
insn=252, live_throughout: 0, 1, 2, 3, 13, 152, dead_or_set: 183
insn=99, live_throughout: 0, 1, 2, 3, 13, 152, dead_or_set: 183
insn=104, live_throughout: 13, 152, dead_or_set: 0, 1, 2, 3, 14
insn=105, live_throughout: 13, 152, dead_or_set: 0
insn=106, live_throughout: 13, 152, dead_or_set: 0, 14
insn=107, live_throughout: 13, 152, dead_or_set: 14
insn=108, live_throughout: 13, 152, dead_or_set: 14
insn=109, live_throughout: 13, 152, dead_or_set: 14
insn=110, live_throughout: 13, 152, dead_or_set: 14
insn=111, live_throughout: 13, 152, dead_or_set: 14
insn=112, live_throughout: 13, 152, dead_or_set: 14
insn=113, live_throughout: 13, 152, dead_or_set: 14
insn=114, live_throughout: 13, 152, dead_or_set: 14
insn=115, live_throughout: 13, 152, dead_or_set: 14
insn=119, live_throughout: 13, 152, dead_or_set: 185
insn=120, live_throughout: 13, 152, dead_or_set: 185, 186
insn=121, live_throughout: 13, dead_or_set: 152, 186
insn=122, live_throughout: 13, dead_or_set: 
insn=123, live_throughout: 13, dead_or_set: 142
insn=125, live_throughout: 13, dead_or_set: 142
insn=126, live_throughout: 13, dead_or_set: 
insn=129, live_throughout: 13, dead_or_set: 0
insn=130, live_throughout: 13, dead_or_set: 0, 14
insn=131, live_throughout: 13, dead_or_set: 
insn=132, live_throughout: 13, dead_or_set: 
insn=134, live_throughout: 13, dead_or_set: 14
insn=135, live_throughout: 13, dead_or_set: 14
insn=136, live_throughout: 13, dead_or_set: 14
insn=137, live_throughout: 13, dead_or_set: 14
insn=138, live_throughout: 13, dead_or_set: 0, 14
insn=139, live_throughout: 13, dead_or_set: 14
insn=140, live_throughout: 13, dead_or_set: 14
insn=141, live_throughout: 13, dead_or_set: 14
insn=142, live_throughout: 13, dead_or_set: 14
insn=143, live_throughout: 13, dead_or_set: 14
insn=144, live_throughout: 13, dead_or_set: 14
insn=145, live_throughout: 13, dead_or_set: 14
insn=146, live_throughout: 13, dead_or_set: 0, 14
insn=147, live_throughout: 13, dead_or_set: 14
insn=148, live_throughout: 13, dead_or_set: 141
insn=150, live_throughout: 13, dead_or_set: 141
insn=151, live_throughout: 13, dead_or_set: 
insn=154, live_throughout: 13, dead_or_set: 0
insn=155, live_throughout: 13, dead_or_set: 0, 14
insn=156, live_throughout: 13, dead_or_set: 
insn=159, live_throughout: 13, dead_or_set: 192
insn=251, live_throughout: 13, 192, dead_or_set: 191
insn=161, live_throughout: 13, dead_or_set: 191, 192
insn=162, live_throughout: 13, dead_or_set: 
insn=164, live_throughout: 13, dead_or_set: 195
insn=250, live_throughout: 13, 195, dead_or_set: 194
insn=165, live_throughout: 13, dead_or_set: 194, 195
insn=166, live_throughout: 13, dead_or_set: 14
insn=167, live_throughout: 13, dead_or_set: 14
insn=168, live_throughout: 13, dead_or_set: 196
insn=169, live_throughout: 13, 196, dead_or_set: 147
insn=170, live_throughout: 13, 147, 196, dead_or_set: 
insn=171, live_throughout: 13, 147, 196, dead_or_set: 
insn=174, live_throughout: 13, 196, dead_or_set: 0, 147
insn=175, live_throughout: 0, 13, dead_or_set: 1, 196
insn=176, live_throughout: 13, dead_or_set: 0, 1, 14
insn=178, live_throughout: 13, dead_or_set: 
insn=180, live_throughout: 13, dead_or_set: 198
insn=181, live_throughout: 13, 198, dead_or_set: 146
insn=182, live_throughout: 13, 146, 198, dead_or_set: 
insn=183, live_throughout: 13, 146, 198, dead_or_set: 
insn=185, live_throughout: 13, 146, 198, dead_or_set: 199
insn=186, live_throughout: 13, 146, 198, dead_or_set: 199, 200
insn=187, live_throughout: 13, 146, 198, 200, dead_or_set: 
insn=188, live_throughout: 13, 146, 198, 200, dead_or_set: 
insn=190, live_throughout: 13, 198, 200, dead_or_set: 146, 201
insn=193, live_throughout: 13, 198, 200, dead_or_set: 201, 204
insn=249, live_throughout: 13, 198, 200, 204, dead_or_set: 205
insn=196, live_throughout: 13, 198, 200, 204, dead_or_set: 144, 205
insn=197, live_throughout: 13, 144, 198, 200, 204, dead_or_set: 
insn=198, live_throughout: 13, 144, 198, 200, 204, dead_or_set: 
insn=202, live_throughout: 13, 144, 198, 200, dead_or_set: 1, 204
insn=203, live_throughout: 1, 13, 198, 200, dead_or_set: 2, 144
insn=201, live_throughout: 1, 2, 13, 198, 200, dead_or_set: 0
insn=204, live_throughout: 13, 198, 200, dead_or_set: 0, 1, 2, 14
insn=207, live_throughout: 13, dead_or_set: 198, 200
insn=208, live_throughout: 13, dead_or_set: 
insn=210, live_throughout: 13, dead_or_set: 14
insn=211, live_throughout: 13, dead_or_set: 209
insn=212, live_throughout: 13, dead_or_set: 143, 209
insn=213, live_throughout: 13, 143, dead_or_set: 
insn=214, live_throughout: 13, 143, dead_or_set: 
insn=216, live_throughout: 13, dead_or_set: 14, 143
insn=217, live_throughout: 13, dead_or_set: 
insn=225, live_throughout: 13, dead_or_set: 210
insn=219, live_throughout: 13, 210, dead_or_set: 14
insn=220, live_throughout: 13, 210, dead_or_set: 14
insn=221, live_throughout: 13, 210, dead_or_set: 14
insn=222, live_throughout: 13, 210, dead_or_set: 14
insn=223, live_throughout: 13, 210, dead_or_set: 14
insn=224, live_throughout: 13, 210, dead_or_set: 14
insn=226, live_throughout: 13, 210, dead_or_set: 0
insn=227, live_throughout: 13, 210, dead_or_set: 0, 14
insn=228, live_throughout: 13, 210, dead_or_set: 14
insn=229, live_throughout: 13, 210, dead_or_set: 14
insn=231, live_throughout: 13, dead_or_set: 0, 210
insn=232, live_throughout: 13, dead_or_set: 0, 14
insn=233, live_throughout: 13, dead_or_set: 14
insn=234, live_throughout: 13, dead_or_set: 14
insn=235, live_throughout: 13, dead_or_set: 14
insn=236, live_throughout: 13, dead_or_set: 0, 14
insn=237, live_throughout: 13, dead_or_set: 14
insn=238, live_throughout: 13, dead_or_set: 14
init_insns for 149: (insn_list:REG_DEP_TRUE 254 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 93 (nil))
init_insns for 179: (insn_list:REG_DEP_TRUE 253 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 252 (nil))
init_insns for 185: (insn_list:REG_DEP_TRUE 119 (nil))
init_insns for 186: (insn_list:REG_DEP_TRUE 121 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 251 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 159 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 250 (nil))
init_insns for 195: (insn_list:REG_DEP_TRUE 164 (nil))
init_insns for 196: (insn_list:REG_DEP_TRUE 168 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 180 (nil))
init_insns for 199: (insn_list:REG_DEP_TRUE 185 (nil))
init_insns for 205: (insn_list:REG_DEP_TRUE 249 (nil))
init_insns for 209: (insn_list:REG_DEP_TRUE 211 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 225 (nil))
changing reg in insn 16
changing reg in insn 26
changing reg in insn 23
changing reg in insn 20
changing reg in insn 17
changing reg in insn 148
changing reg in insn 150
changing reg in insn 123
changing reg in insn 125
changing reg in insn 212
changing reg in insn 216
changing reg in insn 213
changing reg in insn 196
changing reg in insn 197
changing reg in insn 203
changing reg in insn 181
changing reg in insn 190
changing reg in insn 182
changing reg in insn 169
changing reg in insn 174
changing reg in insn 170
changing reg in insn 38
changing reg in insn 75
changing reg in insn 54
changing reg in insn 254
changing reg in insn 11
changing reg in insn 9
changing reg in insn 27
changing reg in insn 24
changing reg in insn 21
changing reg in insn 18
changing reg in insn 247
changing reg in insn 246
changing reg in insn 247
changing reg in insn 121
changing reg in insn 119
changing reg in insn 16
changing reg in insn 120
changing reg in insn 119
changing reg in insn 52
changing reg in insn 65
changing reg in insn 53
changing reg in insn 101
changing reg in insn 74
changing reg in insn 70
changing reg in insn 93
changing reg in insn 102
changing reg in insn 96
changing reg in insn 96
changing reg in insn 103
changing reg in insn 253
changing reg in insn 96
changing reg in insn 252
changing reg in insn 99
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 121
changing reg in insn 251
changing reg in insn 161
changing reg in insn 159
changing reg in insn 250
changing reg in insn 165
changing reg in insn 164
changing reg in insn 165
changing reg in insn 168
changing reg in insn 175
changing reg in insn 169
changing reg in insn 180
changing reg in insn 207
changing reg in insn 181
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 207
changing reg in insn 187
changing reg in insn 190
changing reg in insn 193
changing reg in insn 193
changing reg in insn 202
changing reg in insn 197
changing reg in insn 249
changing reg in insn 196
changing reg in insn 211
changing reg in insn 212
changing reg in insn 225
changing reg in insn 231
changing reg in insn 226
Spilling for insn 246.
Using reg 3 for reload 0
Spilling for insn 11.
Spilling for insn 53.
Spilling for insn 65.
Spilling for insn 99.
Spilling for insn 121.
Spilling for insn 161.
Spilling for insn 165.
Spilling for insn 207.

Reloads for insn # 246
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 11
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [149])
                                                        (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [149])
                                                        (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])

Reloads for insn # 53
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                                                        (const_int 88 [0x58])) [0 saved_command_line+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                                                        (const_int 88 [0x58])) [0 saved_command_line+0 S4 A32])

Reloads for insn # 65
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                                                        (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                                                        (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])

Reloads for insn # 99
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 121
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 161
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [191])
                                                        (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [191])
                                                        (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])

Reloads for insn # 165
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [194]) [0 gfp_allowed_mask+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [194]) [0 gfp_allowed_mask+0 S4 A32])

Reloads for insn # 207
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 4 r4 [198]) [0 initrd_start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 4 r4 [198]) [0 initrd_start+0 S4 A32])
deleting insn with uid = 174.
deleting insn with uid = 202.
deleting insn with uid = 203.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 89.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 106.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 110.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 112.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 114.
verify found no changes in insn with uid = 115.
verify found no changes in insn with uid = 130.
verify found no changes in insn with uid = 134.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 142.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 144.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 146.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 167.
verify found no changes in insn with uid = 176.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 210.
rescanning insn with uid = 216.
deleting insn with uid = 216.
verify found no changes in insn with uid = 219.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 222.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 228.
verify found no changes in insn with uid = 229.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 234.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 236.
verify found no changes in insn with uid = 237.
verify found no changes in insn with uid = 238.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 17 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)


start_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={95d,27u} r1={89d,18u} r2={79d,7u} r3={89d,19u} r4={4d,8u,2d} r5={2d,7u} r6={2d,7u} r7={1d,4u} r12={74d,1u} r13={1d,90u} r14={73d,1u} r15={72d} r16={72d} r17={72d} r18={72d} r19={72d} r20={72d} r21={72d} r22={72d} r23={72d} r24={84d,7u} r27={72d} r28={72d} r29={72d} r30={72d} r31={72d} r32={72d} r33={72d} r34={72d} r35={72d} r36={72d} r37={72d} r38={72d} r39={72d} r40={72d} r41={72d} r42={72d} r43={72d} r44={72d} r45={72d} r46={72d} r47={72d} r48={72d} r49={72d} r50={72d} r51={72d} r52={72d} r53={72d} r54={72d} r55={72d} r56={72d} r57={72d} r58={72d} r59={72d} r60={72d} r61={72d} r62={72d} r63={72d} r64={72d} r65={72d} r66={72d} r67={72d} r68={72d} r69={72d} r70={72d} r71={72d} r72={72d} r73={72d} r74={72d} r75={72d} r76={72d} r77={72d} r78={72d} r79={72d} r80={72d} r81={72d} r82={72d} r83={72d} r84={72d} r85={72d} r86={72d} r87={72d} r88={72d} r89={72d} r90={72d} r91={72d} r92={72d} r93={72d} r94={72d} r95={72d} r96={72d} r97={72d} r98={72d} r99={72d} r100={72d} r101={72d} r102={72d} r103={72d} r104={72d} r105={72d} r106={72d} r107={72d} r108={72d} r109={72d} r110={72d} r111={72d} r112={72d} r113={72d} r114={72d} r115={72d} r116={72d} r117={72d} r118={72d} r119={72d} r120={72d} r121={72d} r122={72d} r123={72d} r124={72d} r125={72d} r126={72d} r127={72d} 
;;    total ref usage 8711{8513d,196u,2e} in 168{96 regular + 72 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 14 2 NOTE_INSN_FUNCTION_BEG)

(note 14 2 35 2 NOTE_INSN_DELETED)

(note 35 14 44 2 NOTE_INSN_DELETED)

(note 44 35 46 2 NOTE_INSN_DELETED)

(note 46 44 51 2 NOTE_INSN_DELETED)

(note 51 46 56 2 NOTE_INSN_DELETED)

(note 56 51 58 2 NOTE_INSN_DELETED)

(note 58 56 63 2 NOTE_INSN_DELETED)

(note 63 58 97 2 NOTE_INSN_DELETED)

(note 97 63 124 2 NOTE_INSN_DELETED)

(note 124 97 5 2 NOTE_INSN_DELETED)

(call_insn 5 124 6 2 init/main.c:472 (parallel [
            (call (mem:SI (symbol_ref/i:SI ("smp_setup_processor_id") [flags 0x1] <function_decl 0x10ca2280 smp_setup_processor_id>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 6 5 7 2 init/main.c:486 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cgroup_init_early") [flags 0x41] <function_decl 0x11385c00 cgroup_init_early>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 7 6 256 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105913)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 256 7 246 2 init/main.c:434 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 246 256 247 2 init/main.c:434 (set (reg:SI 4 r4 [152])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 247 246 9 2 init/main.c:434 (set (reg:SI 4 r4 [152])
        (and:SI (reg:SI 4 r4 [152])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 247 52 2 init/main.c:489 (set (reg:SI 6 r6 [150])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 52 9 254 2 init/main.c:341 (set (reg/f:SI 5 r5 [162])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 254 52 11 2 init/main.c:489 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 11 254 12 2 init/main.c:489 (set (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [149])
                (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])
        (reg:QI 6 r6 [150])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(call_insn 12 11 16 2 init/main.c:495 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_init") [flags 0x41] <function_decl 0x1185d480 tick_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 16 12 18 2 init/main.c:434 (set (reg:SI 7 r7 [orig:139 D.38262 ] [139])
        (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 16 17 2 init/main.c:436 (set (reg:SI 1 r1)
        (reg:SI 6 r6 [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 17 18 19 2 init/main.c:436 (set (reg:SI 0 r0)
        (reg:SI 7 r7 [orig:139 D.38262 ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 17 20 2 init/main.c:436 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 19 21 2 init/main.c:437 (set (reg:SI 0 r0)
        (reg:SI 7 r7 [orig:139 D.38262 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 init/main.c:437 (set (reg:SI 1 r1)
        (reg:SI 6 r6 [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(call_insn 22 21 23 2 init/main.c:437 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_active") [flags 0x41] <function_decl 0x10c85680 set_cpu_active>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 22 24 2 init/main.c:438 (set (reg:SI 0 r0)
        (reg:SI 7 r7 [orig:139 D.38262 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 2 init/main.c:438 (set (reg:SI 1 r1)
        (reg:SI 6 r6 [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(call_insn 25 24 26 2 init/main.c:438 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_present") [flags 0x41] <function_decl 0x10c85580 set_cpu_present>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 2 init/main.c:439 (set (reg:SI 0 r0)
        (reg:SI 7 r7 [orig:139 D.38262 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 init/main.c:439 (set (reg:SI 1 r1)
        (reg:SI 6 r6 [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(call_insn 28 27 29 2 init/main.c:439 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_possible") [flags 0x41] <function_decl 0x10c85500 set_cpu_possible>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 29 28 33 2 init/main.c:497 (parallel [
            (call (mem:SI (symbol_ref:SI ("page_address_init") [flags 0x41] <function_decl 0x111b9a00 page_address_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 33 29 32 2 init/main.c:498 (set (reg:SI 1 r1)
        (symbol_ref:SI ("linux_banner") [flags 0xc0] <var_decl 0x10a4fe40 linux_banner>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("linux_banner") [flags 0xc0] <var_decl 0x10a4fe40 linux_banner>)
        (nil)))

(insn 32 33 34 2 init/main.c:498 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11aee220>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11aee220>)
        (nil)))

(call_insn 34 32 36 2 init/main.c:498 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 36 34 37 2 init/main.c:499 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(call_insn 37 36 42 2 init/main.c:499 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_arch") [flags 0x41] <function_decl 0x10a49a80 setup_arch>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 37 43 2 init/main.c:341 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(call_insn/i 43 42 48 2 init/main.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 48 43 49 2 init/main.c:341 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 38 2 init/main.c:341 (set (reg:SI 2 r2)
        (const_int 1073741823 [0x3fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 38 49 47 2 init/main.c:502 (set (reg/f:SI 6 r6 [orig:148 command_line.422 ] [148])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 command_line+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 38 50 2 init/main.c:341 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 50 47 53 2 init/main.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_bootmem") [flags 0x41] <function_decl 0x114b6380 __alloc_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 53 50 54 2 init/main.c:341 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                (const_int 88 [0x58])) [0 saved_command_line+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 2 init/main.c:342 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [orig:148 command_line.422 ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 55 54 61 2 init/main.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 61 55 60 2 init/main.c:342 (set (reg:SI 2 r2)
        (const_int 1073741823 [0x3fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 60 61 59 2 init/main.c:342 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 59 60 62 2 init/main.c:342 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 62 59 71 2 init/main.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_bootmem") [flags 0x41] <function_decl 0x114b6380 __alloc_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 71 62 65 2 init/main.c:343 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(insn 65 71 70 2 init/main.c:342 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 70 65 72 2 init/main.c:343 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                (const_int 88 [0x58])) [0 saved_command_line+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 88 [0x58]))) [0 saved_command_line+0 S4 A32])
        (nil)))

(call_insn 72 70 75 2 init/main.c:343 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 75 72 74 2 init/main.c:344 (set (reg:SI 1 r1)
        (reg/f:SI 6 r6 [orig:148 command_line.422 ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 74 75 76 2 init/main.c:344 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 static_command_line+0 S4 A32])
        (nil)))

(call_insn 76 74 77 2 init/main.c:344 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 77 76 78 2 init/main.c:503 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_nr_cpu_ids") [flags 0x41] <function_decl 0x10ca2100 setup_nr_cpu_ids>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 78 77 79 2 init/main.c:504 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_per_cpu_areas") [flags 0x41] <function_decl 0x10ca2880 setup_per_cpu_areas>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 79 78 80 2 init/main.c:505 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_prepare_boot_cpu") [flags 0x41] <function_decl 0x10ca2080 smp_prepare_boot_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 80 79 81 2 init/main.c:507 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 81 80 82 2 init/main.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("build_all_zonelists") [flags 0x41] <function_decl 0x10c53300 build_all_zonelists>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 82 81 88 2 init/main.c:508 (parallel [
            (call (mem:SI (symbol_ref:SI ("page_alloc_init") [flags 0x41] <function_decl 0x10cd6a80 page_alloc_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 88 82 87 2 init/main.c:510 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(insn 87 88 89 2 init/main.c:510 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11ae73c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11ae73c0>)
        (nil)))

(call_insn 89 87 90 2 init/main.c:510 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 90 89 93 2 init/main.c:511 (parallel [
            (call (mem:SI (symbol_ref:SI ("parse_early_param") [flags 0x3] <function_decl 0x10a57400 parse_early_param>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 93 90 102 2 init/main.c:512 (set (reg/f:SI 3 r3 [177])
        (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>)
        (nil)))

(insn 102 93 253 2 init/main.c:512 (set (reg:SI 2 r2)
        (reg/f:SI 3 r3 [177])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>)
        (nil)))

(insn 253 102 96 2 init/main.c:512 (set (reg/f:SI 1 r1 [179])
        (symbol_ref:SI ("__stop___param") [flags 0xc0] <var_decl 0x11a754e0 __stop___param>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__stop___param") [flags 0xc0] <var_decl 0x11a754e0 __stop___param>)
        (nil)))

(insn 96 253 101 2 init/main.c:512 (set (reg:SI 3 r3 [178])
        (minus:SI (reg/f:SI 1 r1 [179])
            (reg/f:SI 3 r3 [177]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (minus:SI (symbol_ref:SI ("__stop___param") [flags 0xc0] <var_decl 0x11a754e0 __stop___param>)
            (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>))
        (nil)))

(insn 101 96 100 2 init/main.c:512 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [162])
                (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 static_command_line+0 S4 A32])
        (nil)))

(insn 100 101 103 2 init/main.c:512 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11ae4120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11ae4120>)
        (nil)))

(insn 103 100 252 2 init/main.c:512 (set (reg:SI 3 r3)
        (ashiftrt:SI (reg:SI 3 r3 [178])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 252 103 99 2 init/main.c:512 (set (reg/f:SI 12 ip [183])
        (symbol_ref:SI ("unknown_bootoption") [flags 0x3] <function_decl 0x11a52800 unknown_bootoption>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("unknown_bootoption") [flags 0x3] <function_decl 0x11a52800 unknown_bootoption>)
        (nil)))

(insn 99 252 104 2 init/main.c:512 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [183])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("unknown_bootoption") [flags 0x3] <function_decl 0x11a52800 unknown_bootoption>)
        (nil)))

(call_insn 104 99 105 2 init/main.c:512 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("parse_args") [flags 0x41] <function_decl 0x10ddb900 parse_args>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 105 104 106 2 init/main.c:519 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 106 105 107 2 init/main.c:519 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_log_buf") [flags 0x41] <function_decl 0x10a57d00 setup_log_buf>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 107 106 108 2 init/main.c:520 (parallel [
            (call (mem:SI (symbol_ref:SI ("pidhash_init") [flags 0x41] <function_decl 0x113bf200 pidhash_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 108 107 109 2 init/main.c:521 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfs_caches_init_early") [flags 0x41] <function_decl 0x10feaa80 vfs_caches_init_early>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 109 108 110 2 init/main.c:522 (parallel [
            (call (mem:SI (symbol_ref:SI ("sort_main_extable") [flags 0x41] <function_decl 0x10e04e00 sort_main_extable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 110 109 111 2 init/main.c:523 (parallel [
            (call (mem:SI (symbol_ref:SI ("trap_init") [flags 0x41] <function_decl 0x112b7a80 trap_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 111 110 112 2 init/main.c:460 (parallel [
            (call (mem:SI (symbol_ref:SI ("mem_init") [flags 0x41] <function_decl 0x111e0480 mem_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 112 111 113 2 init/main.c:461 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_init") [flags 0x41] <function_decl 0x10e39700 kmem_cache_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 113 112 114 2 init/main.c:462 (parallel [
            (call (mem:SI (symbol_ref:SI ("percpu_init_late") [flags 0x41] <function_decl 0x10ca2900 percpu_init_late>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 114 113 115 2 init/main.c:464 (parallel [
            (call (mem:SI (symbol_ref:SI ("vmalloc_init") [flags 0x41] <function_decl 0x115b4580 vmalloc_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 115 114 119 2 init/main.c:531 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_init") [flags 0x41] <function_decl 0x112b7280 sched_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 119 115 120 2 init/main.c:536 (set (reg:SI 3 r3 [orig:185 <variable>.preempt_count ] [185])
        (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 120 119 121 2 init/main.c:536 (set (reg:SI 3 r3 [186])
        (plus:SI (reg:SI 3 r3 [orig:185 <variable>.preempt_count ] [185])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 121 120 122 2 init/main.c:536 (set (mem/s/j:SI (plus:SI (reg:SI 4 r4 [152])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [186])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 2 init/main.c:536 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 12123394)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 123 122 125 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:142 _flags ] [142])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118201))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 125 123 126 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:142 _flags ] [142])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 126 125 127 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 132)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 127 126 129 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 129 127 130 3 init/main.c:538 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11b6d770>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11b6d770>)
        (nil)))

(call_insn 130 129 131 3 init/main.c:538 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 131 130 132 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105913)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 132 131 133 4 103 "" [1 uses])

(note 133 132 149 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 149 133 134 4 NOTE_INSN_DELETED)

(call_insn 134 149 135 4 init/main.c:542 (parallel [
            (call (mem:SI (symbol_ref:SI ("idr_init_cache") [flags 0x41] <function_decl 0x11385b80 idr_init_cache>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 135 134 136 4 init/main.c:543 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_event_init") [flags 0x41] <function_decl 0x11430600 perf_event_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 136 135 137 4 init/main.c:544 (parallel [
            (call (mem:SI (symbol_ref:SI ("rcu_init") [flags 0x41] <function_decl 0x10d64a00 rcu_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 137 136 138 4 init/main.c:545 (parallel [
            (call (mem:SI (symbol_ref:SI ("radix_tree_init") [flags 0x41] <function_decl 0x10ef4180 radix_tree_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 138 137 139 4 init/main.c:547 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("early_irq_init") [flags 0x41] <function_decl 0x115f3680 early_irq_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(call_insn 139 138 140 4 init/main.c:548 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_IRQ") [flags 0x41] <function_decl 0x11212d80 init_IRQ>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 140 139 141 4 init/main.c:549 (parallel [
            (call (mem:SI (symbol_ref:SI ("prio_tree_init") [flags 0x41] <function_decl 0x11a3bf00 prio_tree_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 141 140 142 4 init/main.c:550 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_timers") [flags 0x41] <function_decl 0x10d01f00 init_timers>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 142 141 143 4 init/main.c:551 (parallel [
            (call (mem:SI (symbol_ref:SI ("hrtimers_init") [flags 0x41] <function_decl 0x112a1380 hrtimers_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 143 142 144 4 init/main.c:552 (parallel [
            (call (mem:SI (symbol_ref:SI ("softirq_init") [flags 0x41] <function_decl 0x115d0f80 softirq_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 144 143 145 4 init/main.c:553 (parallel [
            (call (mem:SI (symbol_ref:SI ("timekeeping_init") [flags 0x41] <function_decl 0x10b86200 timekeeping_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 145 144 146 4 init/main.c:554 (parallel [
            (call (mem:SI (symbol_ref:SI ("time_init") [flags 0x41] <function_decl 0x11a52180 time_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 146 145 147 4 init/main.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("profile_init") [flags 0x41] <function_decl 0x1177f280 profile_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(call_insn 147 146 148 4 init/main.c:556 (parallel [
            (call (mem:SI (symbol_ref:SI ("call_function_init") [flags 0x41] <function_decl 0x10c9fc80 call_function_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 148 147 150 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 3 r3 [orig:141 _flags ] [141])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118201))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 150 148 151 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:141 _flags ] [141])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 151 150 152 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 152 151 154 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 154 152 155 5 init/main.c:558 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11adda50>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11adda50>)
        (nil)))

(call_insn 155 154 156 5 init/main.c:558 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 156 155 157 6 104 "" [1 uses])

(note 157 156 159 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 159 157 251 6 init/main.c:560 (set (reg:SI 2 r2 [192])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 251 159 161 6 init/main.c:560 (set (reg/f:SI 3 r3 [191])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 161 251 162 6 init/main.c:560 (set (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [191])
                (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])
        (reg:QI 2 r2 [192])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 162 161 164 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104761)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 164 162 250 6 init/main.c:564 (set (reg:SI 2 r2 [195])
        (const_int 16777215 [0xffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 16777215 [0xffffff])
        (nil)))

(insn 250 164 165 6 init/main.c:564 (set (reg/f:SI 3 r3 [194])
        (symbol_ref:SI ("gfp_allowed_mask") [flags 0xc0] <var_decl 0x10cd82a0 gfp_allowed_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("gfp_allowed_mask") [flags 0xc0] <var_decl 0x10cd82a0 gfp_allowed_mask>)
        (nil)))

(insn 165 250 166 6 init/main.c:564 (set (mem/c/i:SI (reg/f:SI 3 r3 [194]) [0 gfp_allowed_mask+0 S4 A32])
        (reg:SI 2 r2 [195])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 16777215 [0xffffff])
        (nil)))

(call_insn 166 165 167 6 init/main.c:566 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_init_late") [flags 0x41] <function_decl 0x10e60880 kmem_cache_init_late>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 167 166 168 6 init/main.c:573 (parallel [
            (call (mem:SI (symbol_ref:SI ("console_init") [flags 0x41] <function_decl 0x11588300 console_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 168 167 169 6 init/main.c:574 (set (reg/f:SI 3 r3 [196])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 169 168 170 6 init/main.c:574 (set (reg/f:SI 0 r0 [orig:147 panic_later.428 ] [147])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [196])
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 80 [0x50]))) [0 panic_later+0 S4 A32])
        (nil)))

(insn 170 169 171 6 init/main.c:574 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:147 panic_later.428 ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 171 170 172 6 init/main.c:574 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 178)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 13 [sp]


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  6 [0.0%]  (fallthru)
(note 172 171 175 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 175 172 176 7 init/main.c:575 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [196])
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 84 [0x54]))) [0 panic_param+0 S4 A32])
        (nil)))

(call_insn 176 175 177 7 init/main.c:575 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 177 176 178)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%] 
(code_label 178 177 179 8 105 "" [1 uses])

(note 179 178 180 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 8 init/main.c:587 (set (reg/f:SI 4 r4 [198])
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114a4f00 initrd_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114a4f00 initrd_start>)
        (nil)))

(insn 181 180 182 8 init/main.c:587 (set (reg:SI 1 r1 [orig:146 initrd_start.430 ] [146])
        (mem/c/i:SI (reg/f:SI 4 r4 [198]) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114a4f00 initrd_start>) [0 initrd_start+0 S4 A32])
        (nil)))

(insn 182 181 183 8 init/main.c:587 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:146 initrd_start.430 ] [146])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 183 182 184 8 init/main.c:587 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 184 183 185 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 186 9 init/main.c:587 discrim 1 (set (reg/f:SI 3 r3 [199])
        (symbol_ref:SI ("initrd_below_start_ok") [flags 0xc0] <var_decl 0x114a4ea0 initrd_below_start_ok>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("initrd_below_start_ok") [flags 0xc0] <var_decl 0x114a4ea0 initrd_below_start_ok>)
        (nil)))

(insn 186 185 187 9 init/main.c:587 discrim 1 (set (reg:SI 5 r5 [orig:200 initrd_below_start_ok ] [200])
        (mem/c/i:SI (reg/f:SI 3 r3 [199]) [0 initrd_below_start_ok+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_below_start_ok") [flags 0xc0] <var_decl 0x114a4ea0 initrd_below_start_ok>) [0 initrd_below_start_ok+0 S4 A32])
        (nil)))

(insn 187 186 188 9 init/main.c:587 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:200 initrd_below_start_ok ] [200])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 188 187 189 9 init/main.c:587 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 189 188 191 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 191 189 192 10 NOTE_INSN_DELETED)

(note 192 191 190 10 NOTE_INSN_DELETED)

(insn 190 192 193 10 init/main.c:588 (set (reg:SI 1 r1 [201])
        (plus:SI (reg:SI 1 r1 [orig:146 initrd_start.430 ] [146])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 193 190 249 10 init/main.c:588 (set (reg:SI 1 r1 [204])
        (lshiftrt:SI (reg:SI 1 r1 [201])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 249 193 196 10 init/main.c:588 (set (reg/f:SI 3 r3 [205])
        (symbol_ref:SI ("min_low_pfn") [flags 0xc0] <var_decl 0x114a4480 min_low_pfn>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("min_low_pfn") [flags 0xc0] <var_decl 0x114a4480 min_low_pfn>)
        (nil)))

(insn 196 249 197 10 init/main.c:588 (set (reg:SI 2 r2 [orig:144 min_low_pfn.432 ] [144])
        (mem/c/i:SI (reg/f:SI 3 r3 [205]) [0 min_low_pfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("min_low_pfn") [flags 0xc0] <var_decl 0x114a4480 min_low_pfn>) [0 min_low_pfn+0 S4 A32])
        (nil)))

(insn 197 196 198 10 init/main.c:587 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [204])
            (reg:SI 2 r2 [orig:144 min_low_pfn.432 ] [144]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 198 197 199 10 init/main.c:587 discrim 2 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  11 [0.0%]  (fallthru)
;; Succ edge  12 [100.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [0.0%]  (fallthru)
(note 199 198 201 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 201 199 204 11 init/main.c:589 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x10e89900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x10e89900>)
        (nil)))

(call_insn 204 201 207 11 init/main.c:589 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 207 204 208 11 init/main.c:593 (set (mem/c/i:SI (reg/f:SI 4 r4 [198]) [0 initrd_start+0 S4 A32])
        (reg:SI 5 r5 [orig:200 initrd_below_start_ok ] [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 8 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 208 207 209 12 106 "" [3 uses])

(note 209 208 210 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(call_insn 210 209 211 12 init/main.c:600 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_per_cpu_pageset") [flags 0x41] <function_decl 0x111e0780 setup_per_cpu_pageset>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 211 210 212 12 init/main.c:602 (set (reg/f:SI 3 r3 [209])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 212 211 213 12 init/main.c:602 (set (reg/f:SI 3 r3 [orig:143 late_time_init.433 ] [143])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [209])
                (const_int 2072 [0x818])) [0 late_time_init+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                    (const_int 2072 [0x818]))) [0 late_time_init+0 S4 A32])
        (nil)))

(insn 213 212 214 12 init/main.c:602 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:143 late_time_init.433 ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 214 213 215 12 init/main.c:602 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  13 [78.3%]  (fallthru)
;; Succ edge  14 [21.6%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  12 [78.3%]  (fallthru)
(note 215 214 216 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(call_insn 216 215 217 13 init/main.c:603 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:143 late_time_init.433 ] [143]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  12 [21.6%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 217 216 218 14 107 "" [1 uses])

(note 218 217 225 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 225 218 219 14 init/main.c:614 (set (reg/f:SI 4 r4 [210])
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>)
        (nil)))

(call_insn 219 225 220 14 init/main.c:604 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_clock_init") [flags 0x41] <function_decl 0x11332800 sched_clock_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 220 219 221 14 init/main.c:605 (parallel [
            (call (mem:SI (symbol_ref:SI ("calibrate_delay") [flags 0x41] <function_decl 0x1149bc00 calibrate_delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 221 220 222 14 init/main.c:606 (parallel [
            (call (mem:SI (symbol_ref:SI ("pidmap_init") [flags 0x41] <function_decl 0x113bf280 pidmap_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 222 221 223 14 init/main.c:607 (parallel [
            (call (mem:SI (symbol_ref:SI ("anon_vma_init") [flags 0x41] <function_decl 0x1187ce80 anon_vma_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 223 222 224 14 init/main.c:612 (parallel [
            (call (mem:SI (symbol_ref/i:SI ("thread_info_cache_init") [flags 0x1] <function_decl 0x11359880 thread_info_cache_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 224 223 226 14 init/main.c:613 (parallel [
            (call (mem:SI (symbol_ref:SI ("cred_init") [flags 0x41] <function_decl 0x112ac480 cred_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 226 224 227 14 init/main.c:614 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 4 r4 [210]) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(call_insn 227 226 228 14 init/main.c:614 (parallel [
            (call (mem:SI (symbol_ref:SI ("fork_init") [flags 0x41] <function_decl 0x11a3bd80 fork_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 228 227 229 14 init/main.c:615 (parallel [
            (call (mem:SI (symbol_ref:SI ("proc_caches_init") [flags 0x41] <function_decl 0x11342700 proc_caches_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 229 228 231 14 init/main.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("buffer_init") [flags 0x41] <function_decl 0x1197b680 buffer_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 231 229 232 14 init/main.c:620 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 4 r4 [210]) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(call_insn 232 231 233 14 init/main.c:620 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfs_caches_init") [flags 0x41] <function_decl 0x10feab00 vfs_caches_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 233 232 234 14 init/main.c:621 (parallel [
            (call (mem:SI (symbol_ref:SI ("signals_init") [flags 0x41] <function_decl 0x11269280 signals_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 234 233 235 14 init/main.c:623 (parallel [
            (call (mem:SI (symbol_ref:SI ("page_writeback_init") [flags 0x41] <function_decl 0x1178b780 page_writeback_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 235 234 236 14 init/main.c:625 (parallel [
            (call (mem:SI (symbol_ref:SI ("proc_root_init") [flags 0x41] <function_decl 0x11036280 proc_root_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 236 235 237 14 init/main.c:627 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cgroup_init") [flags 0x41] <function_decl 0x11385c80 cgroup_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(call_insn 237 236 238 14 init/main.c:632 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_writebuffer_bugs") [flags 0x41] <function_decl 0x11a3b800 check_writebuffer_bugs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 238 237 248 14 init/main.c:640 (parallel [
            (call (mem:SI (symbol_ref:SI ("rest_init") [flags 0x3] <function_decl 0x11a52c00 rest_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 248 238 255 NOTE_INSN_DELETED)

(note 255 248 0 NOTE_INSN_DELETED)


;; Function do_early_param (do_early_param)[0:2054] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 26 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 29 (  2.4)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a7 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a5(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r151: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a5(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 74(l0): point = 0
   Insn 68(l0): point = 2
   Insn 82(l0): point = 5
   Insn 60(l0): point = 7
   Insn 7(l0): point = 9
   Insn 3(l0): point = 11
   Insn 2(l0): point = 13
   Insn 62(l1): point = 16
   Insn 61(l1): point = 18
   Insn 15(l1): point = 20
   Insn 56(l1): point = 23
   Insn 53(l1): point = 26
   Insn 52(l1): point = 28
   Insn 79(l1): point = 30
   Insn 48(l1): point = 33
   Insn 47(l1): point = 35
   Insn 45(l1): point = 37
   Insn 44(l1): point = 39
   Insn 40(l1): point = 42
   Insn 39(l1): point = 44
   Insn 36(l1): point = 46
   Insn 34(l1): point = 48
   Insn 31(l1): point = 51
   Insn 30(l1): point = 53
   Insn 81(l1): point = 55
   Insn 27(l1): point = 57
   Insn 25(l1): point = 59
   Insn 80(l1): point = 61
   Insn 21(l1): point = 64
   Insn 20(l1): point = 66
   Insn 17(l1): point = 68
   Insn 16(l1): point = 70
   Insn 13(l1): point = 73
   Insn 12(l1): point = 75
   Insn 11(l1): point = 77
 a0(r151): [5..7]
 a1(r133): [5..9]
 a2(r140): [5..11]
 a3(r139): [5..13]
 a4(r133): [16..79]
 a5(r139): [16..79]
 a6(r140): [16..79]
 a7(r151): [16..79]
 a8(r141): [76..77]
 Rebuilding regno allocno list for 141
Compressing live ranges: from 80 to 9 - 11%
Ranges after the compression:
 a0(r151): [5..8] [0..1]
 a1(r133): [5..8] [0..2]
 a2(r140): [5..8] [0..3]
 a3(r139): [5..8] [0..4]
 a8(r141): [6..7]
+++Allocating 40 bytes for conflict table (uncompressed size 72)
;; a0(r151,l0) conflicts: a1(r133,l0) a2(r140,l0) a3(r139,l0) a8(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r133,l0) conflicts: a0(r151,l0) a2(r140,l0) a3(r139,l0) a8(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r140,l0) conflicts: a0(r151,l0) a1(r133,l0) a3(r139,l0) a8(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r139,l0) conflicts: a0(r151,l0) a1(r133,l0) a2(r140,l0) a8(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r141,l0) conflicts: a0(r151,l0) a1(r133,l0) a2(r140,l0) a3(r139,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  regions=2, blocks=12, points=9
    allocnos=9, copies=0, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r151 1r133 2r140 3r139 8r141
    modified regnos: 133 139 140 141 151
    border:
    Pressure: GENERAL_REGS=7
    Reg 151 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
      Pushing a8(r141,l0)
      Pushing a2(r140,l0)
      Pushing a0(r151,l0)
      Pushing a3(r139,l0)
      Pushing a1(r133,l0)
      Popping a1(r133,l0)  -- assign reg 4
      Popping a3(r139,l0)  -- assign reg 5
      Popping a0(r151,l0)  -- assign reg 6
      Popping a2(r140,l0)  -- assign reg 7
      Popping a8(r141,l0)  -- assign reg 3
Disposition:
    1:r133 l0     4    3:r139 l0     5    2:r140 l0     7    8:r141 l0     3
    0:r151 l0     6
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=3, live_throughout: 13, 14, 139, dead_or_set: 1, 140
insn=7, live_throughout: 13, 14, 139, 140, dead_or_set: 133
insn=60, live_throughout: 13, 14, 133, 139, 140, dead_or_set: 151
insn=82, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=59, live_throughout: 0, 13, 133, 139, 140, 151, dead_or_set: 
insn=11, live_throughout: 0, 13, 133, 139, 140, 151, dead_or_set: 141
insn=12, live_throughout: 0, 13, 133, 139, 140, 151, dead_or_set: 141
insn=13, live_throughout: 0, 13, 133, 139, 140, 151, dead_or_set: 
insn=16, live_throughout: 0, 13, 133, 139, 140, 151, dead_or_set: 1
insn=17, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0, 1, 14
insn=20, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0
insn=21, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 
insn=22, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 
insn=80, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 1
insn=25, live_throughout: 1, 13, 133, 139, 140, 151, dead_or_set: 0
insn=27, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0, 1, 14
insn=81, live_throughout: 0, 13, 14, 133, 139, 140, 151, dead_or_set: 1
insn=30, live_throughout: 1, 13, 14, 133, 139, 140, 151, dead_or_set: 0
insn=31, live_throughout: 1, 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=34, live_throughout: 1, 13, 133, 139, 140, 151, dead_or_set: 0
insn=36, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0, 1, 14
insn=39, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 0
insn=40, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=41, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 
insn=44, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0
insn=45, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0, 14
insn=47, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 0
insn=48, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=79, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0
insn=52, live_throughout: 0, 13, 133, 139, 140, 151, dead_or_set: 1
insn=53, live_throughout: 13, 133, 139, 140, 151, dead_or_set: 0, 1, 14
insn=54, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=56, live_throughout: 13, 14, 139, 140, 151, dead_or_set: 133
insn=57, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=15, live_throughout: 13, 14, 133, 139, 140, 151, dead_or_set: 0
insn=61, live_throughout: 0, 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=62, live_throughout: 0, 13, 14, 133, 139, 140, 151, dead_or_set: 
insn=68, live_throughout: 13, 14, dead_or_set: 0
insn=74, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 60 (nil))
changing reg in insn 56
changing reg in insn 7
changing reg in insn 45
changing reg in insn 61
changing reg in insn 56
changing reg in insn 34
changing reg in insn 16
changing reg in insn 11
changing reg in insn 11
changing reg in insn 61
changing reg in insn 2
changing reg in insn 52
changing reg in insn 25
changing reg in insn 15
changing reg in insn 3
changing reg in insn 44
changing reg in insn 11
changing reg in insn 12
changing reg in insn 60
changing reg in insn 61


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 36.
rescanning insn with uid = 45.
deleting insn with uid = 45.
verify found no changes in insn with uid = 53.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 26 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 17 count 29 (  2.4)


do_early_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,12u} r1={10d,5u} r2={6d} r3={7d,1u} r4={2d,6u,2d} r5={1d,3u} r6={1d,1u} r7={1d,1u} r12={6d} r13={1d,16u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={11d,6u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 668{614d,52u,2e} in 35{30 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 init/main.c:391 (set (reg/v/f:SI 5 r5 [orig:139 param ] [139])
        (reg:SI 0 r0 [ param ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 7 2 init/main.c:391 (set (reg/v/f:SI 7 r7 [orig:140 val ] [140])
        (reg:SI 1 r1 [ val ])) 167 {*arm_movsi_insn} (nil))

(insn 7 3 60 2 init/main.c:394 (set (reg/v/f:SI 4 r4 [orig:133 p ] [133])
        (symbol_ref:SI ("__setup_start") [flags 0xc0] <var_decl 0x11a54420 __setup_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__setup_start") [flags 0xc0] <var_decl 0x11a54420 __setup_start>)
        (nil)))

(insn 60 7 82 2 init/main.c:394 discrim 1 (set (reg/f:SI 6 r6 [151])
        (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>)
        (nil)))

(jump_insn 82 60 83 2 init/main.c:394 (set (pc)
        (label_ref 57)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%] 

(barrier 83 82 59)

;; Start of basic block ( 10) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [91.0%] 
(code_label 59 83 10 3 116 "" [1 uses])

(note 10 59 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 init/main.c:395 (set (reg:SI 3 r3 [orig:141 <variable>.early ] [141])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 p ] [133])
                (const_int 8 [0x8])) [0 <variable>.early+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 p ] [133])
                (const_int 8 [0x8])) [0 <variable>.early+0 S4 A32])
        (nil)))

(insn 12 11 13 3 init/main.c:395 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 <variable>.early ] [141])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 init/main.c:395 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 14 16 4 NOTE_INSN_DELETED)

(insn 16 18 17 4 init/main.c:395 discrim 1 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:133 p ] [133]) [0 <variable>.str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 17 16 20 4 init/main.c:395 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 17 21 4 init/main.c:395 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 init/main.c:395 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%]  (fallthru)
(code_label 22 21 23 5 113 "" [1 uses])

(note 23 22 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 28 23 80 5 NOTE_INSN_DELETED)

(insn 80 28 25 5 init/main.c:396 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11b9acf0>)) 167 {*arm_movsi_insn} (nil))

(insn 25 80 27 5 init/main.c:396 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:139 param ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 27 25 81 5 init/main.c:396 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 81 27 30 5 init/main.c:397 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x11b9af30>)) 167 {*arm_movsi_insn} (nil))

(insn 30 81 31 5 init/main.c:395 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 5 init/main.c:395 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%]  (fallthru)
(note 32 31 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 37 32 34 6 NOTE_INSN_DELETED)

(insn 34 37 36 6 init/main.c:397 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:133 p ] [133]) [0 <variable>.str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 36 34 39 6 init/main.c:397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 36 40 6 init/main.c:395 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 6 init/main.c:395 discrim 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  6 [50.0%]  (fallthru)
(code_label 41 40 42 7 114 "" [1 uses])

(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 43 42 46 7 NOTE_INSN_DELETED)

(note 46 43 44 7 NOTE_INSN_DELETED)

(insn 44 46 45 7 init/main.c:399 (set (reg:SI 0 r0)
        (reg/v/f:SI 7 r7 [orig:140 val ] [140])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 47 7 init/main.c:399 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 p ] [133])
                                (const_int 4 [0x4])) [0 <variable>.setup_func+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 45 48 7 init/main.c:399 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 7 init/main.c:399 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [0.0%]  (fallthru)
(note 49 48 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 79 49 52 8 init/main.c:400 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11af05c0>)) 167 {*arm_movsi_insn} (nil))

(insn 52 79 53 8 init/main.c:400 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:139 param ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 53 52 54 8 init/main.c:400 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 54 53 55 9 115 "" [3 uses])

(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 9 init/main.c:394 (set (reg/v/f:SI 4 r4 [orig:133 p ] [133])
        (plus:SI (reg/v/f:SI 4 r4 [orig:133 p ] [133])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 9 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 57 56 58 10 112 "" [1 uses])

(note 58 57 15 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 15 58 61 10 init/main.c:395 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:139 param ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 61 15 62 10 init/main.c:394 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 p ] [133])
            (reg/f:SI 6 r6 [151]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:133 p ] [133])
            (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>))
        (nil)))

(jump_insn 62 61 63 10 init/main.c:394 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 10 -> ( 3 11)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [91.0%] 
;; Succ edge  11 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  10 [9.0%]  (fallthru,loop_exit)
(note 63 62 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 68 63 74 11 init/main.c:406 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 74 68 84 11 init/main.c:406 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 84 74 85 NOTE_INSN_DELETED)

(note 85 84 0 NOTE_INSN_DELETED)

