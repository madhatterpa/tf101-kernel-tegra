
;; Function readonly (readonly)[0:2703] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

In insn 16, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 16 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 23.
deferring deletion of insn with uid = 16.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



readonly

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,2u} r134={1d} r135={1d,1u} r136={1d,1u} r137={1d,3u} r138={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 54{21d,33u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 135[15,1] 136[16,1] 137[17,1] 138[18,1] 139[19,1] 140[20,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 15, 16
;; rd  kill	(3)
9, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:43 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:44 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/do_mounts.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:44 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 13 3 init/do_mounts.c:45 (set (reg:SI 133 [ D.52645 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138 139 140
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16
;; rd  gen 	(5)
12, 17, 18, 19, 20
;; rd  kill	(6)
12, 13, 17, 18, 19, 20

;; Pred edge  2 [61.0%] 
(code_label 13 10 14 4 2 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 17 4 init/do_mounts.c:46 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 17 15 18 4 init/do_mounts.c:46 (set (reg:SI 139 [ root_mountflags ])
        (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 init/do_mounts.c:46 (set (reg:SI 140)
        (ior:SI (reg:SI 139 [ root_mountflags ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 19 18 20 4 init/do_mounts.c:46 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 init/do_mounts.c:47 (set (reg:SI 133 [ D.52645 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 134
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20
;; rd  gen 	(2)
0, 14
;; rd  kill	(3)
0, 1, 14

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 21 20 22 5 3 "" [0 uses])

(note 22 21 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 22 33 5 init/do_mounts.c:48 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52645 ])) 167 {*arm_movsi_insn} (nil))

(insn 33 27 0 5 init/do_mounts.c:48 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 16.
deleting insn with uid = 23.
ending the processing of deferred insns

;; Function readwrite (readwrite)[0:2704] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

In insn 16, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 16 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 23.
deferring deletion of insn with uid = 16.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



readwrite

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,2u} r134={1d} r135={1d,1u} r136={1d,1u} r137={1d,3u} r138={1d} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 54{21d,33u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 135[15,1] 136[16,1] 137[17,1] 138[18,1] 139[19,1] 140[20,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 15, 16
;; rd  kill	(3)
9, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:51 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:52 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/do_mounts.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 13 3 init/do_mounts.c:53 (set (reg:SI 133 [ D.52654 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138 139 140
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16
;; rd  gen 	(5)
12, 17, 18, 19, 20
;; rd  kill	(6)
12, 13, 17, 18, 19, 20

;; Pred edge  2 [61.0%] 
(code_label 13 10 14 4 8 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 17 4 init/do_mounts.c:54 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 17 15 18 4 init/do_mounts.c:54 (set (reg:SI 139 [ root_mountflags ])
        (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 init/do_mounts.c:54 (set (reg:SI 140)
        (and:SI (reg:SI 139 [ root_mountflags ])
            (const_int -2 [0xfffffffffffffffe]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 18 20 4 init/do_mounts.c:54 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 init/do_mounts.c:55 (set (reg:SI 133 [ D.52654 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 134
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20
;; rd  gen 	(2)
0, 14
;; rd  kill	(3)
0, 1, 14

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 21 20 22 5 9 "" [0 uses])

(note 22 21 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 22 33 5 init/do_mounts.c:56 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52654 ])) 167 {*arm_movsi_insn} (nil))

(insn 33 27 0 5 init/do_mounts.c:56 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 16.
deleting insn with uid = 23.
ending the processing of deferred insns

;; Function rootwait_setup (rootwait_setup)[0:2709] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

In insn 17, replacing
 (reg:SI 138)
 with (const_int 1 [0x1])
Changes to insn 17 not recognized
 Setting REG_EQUAL note

In insn 18, replacing
 (reg:SI 138)
 with (const_int 1 [0x1])
Changes to insn 18 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 21.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



rootwait_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,2u} r134={1d} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 50{19d,31u,0e} in 11{11 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 135[15,1] 136[16,1] 137[17,1] 138[18,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 15, 16
;; rd  kill	(3)
9, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:227 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:228 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/do_mounts.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 13 3 init/do_mounts.c:229 (set (reg:SI 133 [ D.52778 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16
;; rd  gen 	(3)
12, 17, 18
;; rd  kill	(4)
12, 13, 17, 18

;; Pred edge  2 [61.0%] 
(code_label 13 10 14 4 14 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 init/do_mounts.c:230 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 4 init/do_mounts.c:230 (set (reg:SI 138)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 init/do_mounts.c:230 (set (mem/c/i:SI (reg/f:SI 137) [0 root_wait+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 17 19 4 init/do_mounts.c:231 (set (reg:SI 133 [ D.52778 ])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 134
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18
;; rd  gen 	(2)
0, 14
;; rd  kill	(3)
0, 1, 14

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 19 18 20 5 15 "" [0 uses])

(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 20 31 5 init/do_mounts.c:232 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52778 ])) 167 {*arm_movsi_insn} (nil))

(insn 31 25 0 5 init/do_mounts.c:232 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 21.
ending the processing of deferred insns

;; Function root_data_setup (root_data_setup)[0:2710] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 12, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 12 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



root_data_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(4)
0, 11, 12, 13
;; rd  kill	(5)
0, 1, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:238 (set (reg/v/f:SI 134 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:239 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts.c:239 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])
        (reg/v/f:SI 134 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 12 2 init/do_mounts.c:241 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 init/do_mounts.c:241 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 0 2 init/do_mounts.c:241 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function fs_names_setup (fs_names_setup)[0:2711] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 12, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 12 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



fs_names_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(4)
0, 11, 12, 13
;; rd  kill	(5)
0, 1, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:245 (set (reg/v/f:SI 134 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:246 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts.c:246 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])
        (reg/v/f:SI 134 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 12 2 init/do_mounts.c:248 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 init/do_mounts.c:248 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 0 2 init/do_mounts.c:248 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function load_ramdisk (load_ramdisk)[0:2702] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 8, replacing
 (reg:SI 1 r1)
 with (const_int 0 [0x0])
Changes to insn 8 not profitable

In insn 18, replacing
 (reg:SI 134 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 18 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 6.
deferring deletion of insn with uid = 2.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



load_ramdisk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,6u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 158{136d,22u,0e} in 10{9 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,1] 135[133,1] 136[134,1] 137[135,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(6)
1, 131, 132, 133, 134, 135
;; rd  kill	(11)
0, 1, 2, 3, 16, 17, 131, 132, 133, 134, 135

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 init/do_mounts.c:37 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:37 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 10 2 init/do_mounts.c:37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtol") [flags 0x41] <function_decl 0x10a77e80 simple_strtol>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 11 2 init/do_mounts.c:37 (set (reg:SI 133 [ D.52634 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/do_mounts.c:37 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 init/do_mounts.c:37 (set (reg:SI 137)
        (and:SI (reg:SI 133 [ D.52634 ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 init/do_mounts.c:37 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 18 2 init/do_mounts.c:39 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 18 14 24 2 init/do_mounts.c:39 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 24 18 0 2 init/do_mounts.c:39 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 6, 9, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 6.
ending the processing of deferred insns

;; Function root_dev_setup (root_dev_setup)[0:2708] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 7, replacing
 (plus:SI (reg/f:SI 135)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 7 not profitable

In insn 16, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 16 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



root_dev_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 154{135d,19u,0e} in 10{9 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,1] 135[133,1] 136[134,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(5)
0, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 3, 16, 17, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/do_mounts.c:219 (set (reg/v/f:SI 134 [ line ])
        (reg:SI 0 r0 [ line ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:220 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts.c:220 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 135)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 8 7 9 2 init/do_mounts.c:220 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 9 8 10 2 init/do_mounts.c:220 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ line ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 init/do_mounts.c:220 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 10 12 2 init/do_mounts.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 16 2 init/do_mounts.c:222 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 init/do_mounts.c:222 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 22 16 0 2 init/do_mounts.c:222 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 9, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function root_delay_setup (root_delay_setup)[0:2712] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 8, replacing
 (reg:SI 1 r1)
 with (const_int 0 [0x0])
Changes to insn 8 not profitable

In insn 17, replacing
 (reg:SI 134 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 17 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 6.
deferring deletion of insn with uid = 2.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



root_delay_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,6u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d} r136={1d,1u} 
;;    total ref usage 156{135d,21u,0e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,1] 135[133,1] 136[134,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(5)
1, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 3, 16, 17, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 init/do_mounts.c:253 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:253 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 10 2 init/do_mounts.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 11 2 init/do_mounts.c:253 (set (reg:SI 133 [ root_delay.888 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/do_mounts.c:253 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 init/do_mounts.c:253 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])
        (reg:SI 133 [ root_delay.888 ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 17 2 init/do_mounts.c:255 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 17 13 23 2 init/do_mounts.c:255 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 23 17 0 2 init/do_mounts.c:255 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 6, 9, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 6.
ending the processing of deferred insns

;; Function do_mount_root (do_mount_root)[0:2714] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 7 3 }
;; 3 succs { 5 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)

In insn 12, replacing
 (reg/f:SI 145)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
Changes to insn 12 not profitable

In insn 20, replacing
 (reg/f:SI 145)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
Changes to insn 20 not profitable

In insn 21, replacing
 (reg/f:SI 145)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
Changes to insn 21 not profitable

In insn 67, replacing
 (reg/f:SI 169)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)
Changes to insn 67 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 74.
deferring deletion of insn with uid = 48.
deferring deletion of insn with uid = 47.
deferring deletion of insn with uid = 46.
deferring deletion of insn with uid = 45.
deferring deletion of insn with uid = 44.
deferring deletion of insn with uid = 43.
deferring deletion of insn with uid = 42.
deferring deletion of insn with uid = 36.
deferring deletion of insn with uid = 35.
deferring deletion of insn with uid = 34.
deferring deletion of insn with uid = 33.
deferring deletion of insn with uid = 23.
deferring deletion of insn with uid = 20.
deferring deletion of insn with uid = 11.
deferring deletion of insn with uid = 2.
Deleted 16 trivially dead insns

Number of successful forward propagations: 0



do_mount_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,8u} r1={6d,3u} r2={6d,3u} r3={6d,3u} r11={1d,7u} r12={4d} r13={1d,16u,3d} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,7u} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d} r134={1d} r135={1d} r136={1d,3u} r137={2d,1u} r138={1d,1u} r139={1d,3u,1d} r140={1d} r141={1d} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d} r147={1d,3u} r148={1d,3u} r149={1d,4u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d} r155={1d} r156={1d} r157={1d,2u} r158={1d,2u} r159={1d,3u} r160={1d,1u} r161={1d} r162={1d} r163={1d} r164={1d} r165={1d} r166={1d} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} 
;;    total ref usage 516{414d,98u,4e} in 46{43 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372
0[0,8] 1[8,6] 2[14,6] 3[20,6] 11[26,1] 12[27,4] 13[31,1] 14[32,4] 15[36,3] 16[39,3] 17[42,3] 18[45,3] 19[48,3] 20[51,3] 21[54,3] 22[57,3] 23[60,3] 24[63,5] 25[68,1] 26[69,1] 27[70,3] 28[73,3] 29[76,3] 30[79,3] 31[82,3] 32[85,3] 33[88,3] 34[91,3] 35[94,3] 36[97,3] 37[100,3] 38[103,3] 39[106,3] 40[109,3] 41[112,3] 42[115,3] 43[118,3] 44[121,3] 45[124,3] 46[127,3] 47[130,3] 48[133,3] 49[136,3] 50[139,3] 51[142,3] 52[145,3] 53[148,3] 54[151,3] 55[154,3] 56[157,3] 57[160,3] 58[163,3] 59[166,3] 60[169,3] 61[172,3] 62[175,3] 63[178,3] 64[181,3] 65[184,3] 66[187,3] 67[190,3] 68[193,3] 69[196,3] 70[199,3] 71[202,3] 72[205,3] 73[208,3] 74[211,3] 75[214,3] 76[217,3] 77[220,3] 78[223,3] 79[226,3] 80[229,3] 81[232,3] 82[235,3] 83[238,3] 84[241,3] 85[244,3] 86[247,3] 87[250,3] 88[253,3] 89[256,3] 90[259,3] 91[262,3] 92[265,3] 93[268,3] 94[271,3] 95[274,3] 96[277,3] 97[280,3] 98[283,3] 99[286,3] 100[289,3] 101[292,3] 102[295,3] 103[298,3] 104[301,3] 105[304,3] 106[307,3] 107[310,3] 108[313,3] 109[316,3] 110[319,3] 111[322,3] 112[325,3] 113[328,3] 114[331,3] 115[334,3] 116[337,3] 117[340,3] 118[343,3] 119[346,3] 120[349,3] 121[352,3] 122[355,3] 123[358,3] 124[361,3] 125[364,3] 126[367,3] 127[370,3] 133[373,1] 134[374,1] 135[375,1] 136[376,1] 137[377,2] 138[379,1] 139[380,1] 140[381,1] 141[382,1] 142[383,1] 143[384,1] 144[385,1] 145[386,1] 146[387,1] 147[388,1] 148[389,1] 149[390,1] 150[391,1] 151[392,1] 152[393,1] 153[394,1] 154[395,1] 155[396,1] 156[397,1] 157[398,1] 158[399,1] 159[400,1] 160[401,1] 161[402,1] 162[403,1] 163[404,1] 164[405,1] 165[406,1] 166[407,1] 167[408,1] 168[409,1] 169[410,1] 170[411,1] 171[412,1] 172[413,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 136 141 142 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(10)
7, 13, 19, 25, 26, 30, 31, 35, 68, 69
;; rd  gen 	(8)
6, 66, 376, 382, 383, 384, 385, 386
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 63, 64, 65, 66, 67, 376, 382, 383, 384, 385, 386

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 init/do_mounts.c:289 (set (reg/v/f:SI 142 [ fs ])
        (reg:SI 1 r1 [ fs ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 init/do_mounts.c:289 (set (reg/v:SI 143 [ flags ])
        (reg:SI 2 r2 [ flags ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 init/do_mounts.c:289 (set (reg/v/f:SI 144 [ data ])
        (reg:SI 3 r3 [ data ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 init/do_mounts.c:290 (set (reg/f:SI 145)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 12 2 init/do_mounts.c:290 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 144 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 12 10 13 2 init/do_mounts.c:290 (set (reg:SI 1 r1)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
        (nil)))

(insn 13 12 14 2 init/do_mounts.c:290 (set (reg:SI 2 r2)
        (reg/v/f:SI 142 [ fs ])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 init/do_mounts.c:290 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ flags ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 init/do_mounts.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 17 2 init/do_mounts.c:290 (set (reg/v:SI 136 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 init/do_mounts.c:291 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 init/do_mounts.c:291 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145
;; rd  out 	(16)
6, 13, 19, 25, 26, 30, 31, 66, 68, 69, 376, 382, 383, 384, 385, 386


;; Succ edge  7 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 138 139 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145
;; live  gen 	 0 [r0] 24 [cc] 133 134 135 138 139 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168
;; live  kill	 14 [lr]
;; rd  in  	(16)
6, 13, 19, 25, 26, 30, 31, 66, 68, 69, 376, 382, 383, 384, 385, 386
;; rd  gen 	(30)
5, 64, 373, 374, 375, 379, 380, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 63, 64, 65, 66, 67, 373, 374, 375, 379, 380, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409

;; Pred edge  2 [0.0%]  (fallthru)
(note 19 18 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 22 3 init/do_mounts.c:294 (set (reg:SI 0 r0)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
        (nil)))

(call_insn 22 21 24 3 init/do_mounts.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chdir") [flags 0x41] <function_decl 0x12110280 sys_chdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 24 22 25 3 init/do_mounts.c:295 (set (reg:SI 148)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 25 24 26 3 init/do_mounts.c:295 (set (reg:SI 147)
        (and:SI (reg:SI 148)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 26 25 27 3 init/do_mounts.c:295 (set (reg/f:SI 149 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 init/do_mounts.c:295 (set (reg/f:SI 150 [ <variable>.fs ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ <variable>.task ])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 init/do_mounts.c:295 (set (reg/f:SI 151 [ <variable>.pwd.mnt ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 150 [ <variable>.fs ])
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 init/do_mounts.c:295 (set (reg/f:SI 152 [ <variable>.mnt_sb ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 151 [ <variable>.pwd.mnt ])
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 3 init/do_mounts.c:295 (set (reg:SI 139 [ ROOT_DEV.894 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 152 [ <variable>.mnt_sb ])
                (const_int 8 [0x8])) [0 <variable>.s_dev+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 3 init/do_mounts.c:295 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 37 3 init/do_mounts.c:295 (set (mem/c/i:SI (reg/f:SI 153) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 139 [ ROOT_DEV.894 ])) 167 {*arm_movsi_insn} (nil))

(insn 37 32 38 3 init/do_mounts.c:296 (set (reg/f:SI 157 [ <variable>.fs ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ <variable>.task ])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 3 init/do_mounts.c:296 (set (reg/f:SI 158 [ <variable>.pwd.mnt ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 157 [ <variable>.fs ])
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 3 init/do_mounts.c:296 (set (reg/f:SI 159 [ <variable>.mnt_sb ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 158 [ <variable>.pwd.mnt ])
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 3 init/do_mounts.c:296 (set (reg/f:SI 160 [ <variable>.s_type ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 159 [ <variable>.mnt_sb ])
                (const_int 32 [0x20])) [0 <variable>.s_type+0 S4 A256])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 49 3 init/do_mounts.c:296 (set (reg/f:SI 138 [ D.52856 ])
        (mem/s/f/j:SI (reg/f:SI 160 [ <variable>.s_type ]) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 41 50 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168 [ <variable>.s_flags ])
        (mem/s/j:SI (plus:SI (reg/f:SI 159 [ <variable>.mnt_sb ])
                (const_int 52 [0x34])) [0 <variable>.s_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167)
        (and:SI (reg:SI 168 [ <variable>.s_flags ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 51 50 52 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 53 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; rd  out 	(44)
5, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  gen 	 137
;; live  kill	
;; rd  in  	(44)
5, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409
;; rd  gen 	(1)
378
;; rd  kill	(2)
377, 378

;; Pred edge  3 [50.0%]  (fallthru)
(note 53 52 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 57 4 init/do_mounts.c:296 discrim 2 (set (reg/f:SI 137 [ iftmp.895 ])
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x121b9920>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; rd  out 	(45)
5, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; live  gen 	 137
;; live  kill	
;; rd  in  	(44)
5, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409
;; rd  gen 	(1)
377
;; rd  kill	(2)
377, 378

;; Pred edge  3 [50.0%] 
(code_label 57 54 58 5 41 "" [1 uses])

(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 5 init/do_mounts.c:296 discrim 1 (set (reg/f:SI 137 [ iftmp.895 ])
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1217b540>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; rd  out 	(45)
5, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 170 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 169 170 171 172
;; live  kill	 14 [lr]
;; rd  in  	(46)
5, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409
;; rd  gen 	(5)
3, 410, 411, 412, 413
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 410, 411, 412, 413

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 60 59 61 6 42 "" [0 uses])

(note 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 6 init/do_mounts.c:296 discrim 3 (set (reg/f:SI 169)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 170)
        (lshiftrt:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 64 63 65 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 172)
        (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 64 66 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 66 65 67 6 init/do_mounts.c:296 discrim 3 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 0 r0)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)
        (nil)))

(insn 68 67 69 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 138 [ D.52856 ])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 2 r2)
        (reg/f:SI 137 [ iftmp.895 ])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 6 init/do_mounts.c:296 discrim 3 (set (reg:SI 3 r3)
        (reg:SI 170)) 167 {*arm_movsi_insn} (nil))

(call_insn 71 70 72 6 init/do_mounts.c:296 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(50)
3, 13, 19, 25, 26, 30, 31, 64, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 140
;; live  kill	
;; rd  in  	(52)
3, 6, 13, 19, 25, 26, 30, 31, 64, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413
;; rd  gen 	(2)
0, 381
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 381

;; Pred edge  2 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 72 71 73 7 40 "" [1 uses])

(note 73 72 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 73 84 7 init/do_mounts.c:302 (set (reg/i:SI 0 r0)
        (reg/v:SI 136 [ err ])) 167 {*arm_movsi_insn} (nil))

(insn 84 78 0 7 init/do_mounts.c:302 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(52)
0, 13, 19, 25, 26, 30, 31, 64, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 11.
deleting insn with uid = 20.
deleting insn with uid = 23.
deleting insn with uid = 33.
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 36.
deleting insn with uid = 42.
deleting insn with uid = 43.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 46.
deleting insn with uid = 47.
deleting insn with uid = 48.
deleting insn with uid = 74.
ending the processing of deferred insns

;; Function mount_block_root (mount_block_root)[0:2715] (unlikely executed)

Disambiguating loop 3 with multiple latches
Merged latch edges of loop 3
changing bb of uid 253
  unscanned insn
changing bb of uid 61
  from 6 to 29
changing bb of uid 62
  from 6 to 29
changing bb of uid 64
  from 6 to 29
changing bb of uid 65
  from 6 to 29
Fallthru edge 3->29 redirected to 29
;; 7 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 29 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 6
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25
;;
;; Loop 4
;;  header 16, latch 20
;;  depth 1, outer 0
;;  nodes: 16 20 17 23 21 19 18
;;
;; Loop 5
;;  header 23, latch 21
;;  depth 2, outer 4
;;  nodes: 23 21 19 18 17
;;
;; Loop 3
;;  header 29, latch 6
;;  depth 1, outer 0
;;  nodes: 29 6 4 5
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 12 9 8 11 10
;;
;; Loop 2
;;  header 11, latch 11
;;  depth 2, outer 1
;;  nodes: 11
;; 2 succs { 3 7 }
;; 3 succs { 29 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 29 }
;; 29 succs { 4 15 }
;; 7 succs { 14 }
;; 8 succs { 9 10 }
;; 9 succs { 13 }
;; 10 succs { 11 }
;; 11 succs { 11 12 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 8 15 }
;; 15 succs { 16 }
;; 16 succs { 23 }
;; 17 succs { 20 18 }
;; 18 succs { 28 19 }
;; 19 succs { 21 22 }
;; 20 succs { 16 }
;; 21 succs { 23 }
;; 22 succs { }
;; 23 succs { 17 24 }
;; 24 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 25 27 }
;; 27 succs { }
;; 28 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 38 count 64 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 38 count 70 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 38 count 71 (  2.4)

In insn 57, replacing
 (subreg:QI (reg:SI 183) 0)
 with (const_int 0 [0x0])
Changes to insn 57 not profitable

In insn 58, replacing
 (subreg:QI (reg:SI 183) 0)
 with (const_int 0 [0x0])
Changes to insn 58 not recognized
 Setting REG_EQUAL note

In insn 112, replacing
 (subreg:QI (reg:SI 190) 0)
 with (const_int 0 [0x0])
Changes to insn 112 not profitable

In insn 113, replacing
 (subreg:QI (reg:SI 190) 0)
 with (const_int 0 [0x0])
Changes to insn 113 not recognized
 Setting REG_EQUAL note

In insn 126, replacing
 (subreg:QI (reg:SI 192) 0)
 with (const_int 0 [0x0])
Changes to insn 126 not profitable

In insn 127, replacing
 (subreg:QI (reg:SI 192) 0)
 with (const_int 0 [0x0])
Changes to insn 127 not recognized
 Setting REG_EQUAL note

In insn 174, replacing
 (reg/f:SI 199)
 with (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)
Changes to insn 174 not profitable

In insn 179, replacing
 (reg/f:SI 202)
 with (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)
Changes to insn 179 not profitable

In insn 184, replacing
 (reg/f:SI 203)
 with (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
Changes to insn 184 not profitable

In insn 196, replacing
 (reg/f:SI 206)
 with (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)
Changes to insn 196 not profitable

In insn 200, replacing
 (reg/f:SI 207)
 with (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)
Changes to insn 200 not profitable

In insn 207, replacing
 (reg/f:SI 208)
 with (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)
Changes to insn 207 not profitable

In insn 224, replacing
 (reg/f:SI 212)
 with (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)
Changes to insn 224 not profitable

In insn 233, replacing
 (reg/f:SI 215)
 with (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
Changes to insn 233 not profitable


try_optimize_cfg iteration 1

deferring rescan insn with uid = 54.
Edge 4->6 redirected to 7
merging block 6 into block 5
deferring deletion of insn with uid = 59.
changing bb of uid 60
deferring deletion of insn with uid = 60.
Merged blocks 5 and 6.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

deferring deletion of insn with uid = 232.
deferring deletion of insn with uid = 213.
deferring deletion of insn with uid = 183.
deferring deletion of insn with uid = 173.
deferring deletion of insn with uid = 172.
deferring deletion of insn with uid = 159.
deferring deletion of insn with uid = 126.
deferring deletion of insn with uid = 112.
deferring deletion of insn with uid = 100.
deferring deletion of insn with uid = 87.
deferring deletion of insn with uid = 75.
deferring deletion of insn with uid = 74.
deferring deletion of insn with uid = 71.
deferring deletion of insn with uid = 57.
deferring deletion of insn with uid = 46.
deferring deletion of insn with uid = 40.
Deleted 16 trivially dead insns

Number of successful forward propagations: 0



mount_block_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={39d,27u} r1={32d,12u} r2={23d,2u} r3={22d,1u} r11={1d,28u} r12={21d} r13={1d,48u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={31d,11u} r25={1d,30u,8d} r26={1d,27u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r161={1d,1u} r162={2d,2u} r163={1d,3u} r164={1d,2u} r165={1d,2u} r166={6d,9u} r167={2d,4u} r168={2d,2u} r169={1d,5u} r170={1d,2u} r171={1d,1u} r172={2d,3u} r173={1d,3u} r174={2d,4u} r175={1d,8u} r176={1d} r177={1d} r178={1d} r179={1d,1u} r180={2d,2u} r181={1d,1u} r182={1d,1u} r183={1d,2u} r184={1d} r185={1d} r186={1d} r187={1d} r188={1d,1u} r189={1d} r190={1d,2u} r191={1d} r192={1d,2u} r193={1d} r194={1d,3u} r195={1d,2u} r196={1d,1u} r197={1d,1u} r198={1d,5u} r199={1d,1u} r200={1d} r201={1d} r202={1d,1u} r203={1d,1u} r204={1d} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,2u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,3u} r215={1d,1u} r216={1d} r217={1d,1u} 
;;    total ref usage 2749{2461d,280u,8e} in 131{111 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0
  dense invalidated 	
0[0,39] 1[39,32] 2[71,23] 3[94,22] 11[116,1] 12[117,21] 13[138,1] 14[139,21] 15[160,20] 16[180,20] 17[200,20] 18[220,20] 19[240,20] 20[260,20] 21[280,20] 22[300,20] 23[320,20] 24[340,31] 25[371,1] 26[372,1] 27[373,20] 28[393,20] 29[413,20] 30[433,20] 31[453,20] 32[473,20] 33[493,20] 34[513,20] 35[533,20] 36[553,20] 37[573,20] 38[593,20] 39[613,20] 40[633,20] 41[653,20] 42[673,20] 43[693,20] 44[713,20] 45[733,20] 46[753,20] 47[773,20] 48[793,20] 49[813,20] 50[833,20] 51[853,20] 52[873,20] 53[893,20] 54[913,20] 55[933,20] 56[953,20] 57[973,20] 58[993,20] 59[1013,20] 60[1033,20] 61[1053,20] 62[1073,20] 63[1093,20] 64[1113,20] 65[1133,20] 66[1153,20] 67[1173,20] 68[1193,20] 69[1213,20] 70[1233,20] 71[1253,20] 72[1273,20] 73[1293,20] 74[1313,20] 75[1333,20] 76[1353,20] 77[1373,20] 78[1393,20] 79[1413,20] 80[1433,20] 81[1453,20] 82[1473,20] 83[1493,20] 84[1513,20] 85[1533,20] 86[1553,20] 87[1573,20] 88[1593,20] 89[1613,20] 90[1633,20] 91[1653,20] 92[1673,20] 93[1693,20] 94[1713,20] 95[1733,20] 96[1753,20] 97[1773,20] 98[1793,20] 99[1813,20] 100[1833,20] 101[1853,20] 102[1873,20] 103[1893,20] 104[1913,20] 105[1933,20] 106[1953,20] 107[1973,20] 108[1993,20] 109[2013,20] 110[2033,20] 111[2053,20] 112[2073,20] 113[2093,20] 114[2113,20] 115[2133,20] 116[2153,20] 117[2173,20] 118[2193,20] 119[2213,20] 120[2233,20] 121[2253,20] 122[2273,20] 123[2293,20] 124[2313,20] 125[2333,20] 126[2353,20] 127[2373,20] 161[2393,1] 162[2394,2] 163[2396,1] 164[2397,1] 165[2398,1] 166[2399,6] 167[2405,2] 168[2407,2] 169[2409,1] 170[2410,1] 171[2411,1] 172[2412,2] 173[2414,1] 174[2415,2] 175[2417,1] 176[2418,1] 177[2419,1] 178[2420,1] 179[2421,1] 180[2422,2] 181[2424,1] 182[2425,1] 183[2426,1] 184[2427,1] 185[2428,1] 186[2429,1] 187[2430,1] 188[2431,1] 189[2432,1] 190[2433,1] 191[2434,1] 192[2435,1] 193[2436,1] 194[2437,1] 195[2438,1] 196[2439,1] 197[2440,1] 198[2441,1] 199[2442,1] 200[2443,1] 201[2444,1] 202[2445,1] 203[2446,1] 204[2447,1] 205[2448,1] 206[2449,1] 207[2450,1] 208[2451,1] 209[2452,1] 210[2453,1] 211[2454,1] 212[2455,1] 213[2456,1] 214[2457,1] 215[2458,1] 216[2459,1] 217[2460,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 175 178 179 180 181 182
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 169 175 178 179 180 181 182
;; live  kill	 14 [lr]
;; rd  in  	(10)
38, 70, 93, 115, 116, 137, 138, 159, 371, 372
;; rd  gen 	(9)
36, 369, 2409, 2417, 2420, 2421, 2423, 2424, 2425
;; rd  kill	(60)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2409, 2417, 2420, 2421, 2422, 2423, 2424, 2425

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 0 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 30 33 31 2 init/do_mounts.c:305 (set (reg/v/f:SI 179 [ name ])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 2 init/do_mounts.c:305 (set (reg/v:SI 180 [ flags ])
        (reg:SI 1 r1 [ flags ])) 167 {*arm_movsi_insn} (nil))

(note 32 31 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 36 2 init/do_mounts.c:306 (set (reg/f:SI 181)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 init/do_mounts.c:306 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 181) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 init/do_mounts.c:306 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 38 37 39 2 init/do_mounts.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x11479e80 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 38 41 2 init/do_mounts.c:306 (set (reg/v/f:SI 175 [ fs_names ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 41 39 42 2 init/do_mounts.c:265 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 2 init/do_mounts.c:265 (set (reg/f:SI 169 [ root_fs_names.889 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 2 init/do_mounts.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 169 [ root_fs_names.889 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 2 init/do_mounts.c:265 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; rd  out 	(17)
36, 70, 93, 115, 116, 137, 138, 369, 371, 372, 2409, 2417, 2420, 2421, 2423, 2424, 2425


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  8 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; live  gen 	 0 [r0] 1 [r1] 166
;; live  kill	 14 [lr]
;; rd  in  	(17)
36, 70, 93, 115, 116, 137, 138, 369, 371, 372, 2409, 2417, 2420, 2421, 2423, 2424, 2425
;; rd  gen 	(2)
35, 2404
;; rd  kill	(27)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2399, 2400, 2401, 2402, 2403, 2404

;; Pred edge  2 [100.0%]  (fallthru)
(note 45 44 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 3 init/do_mounts.c:266 (set (reg:SI 1 r1)
        (reg/f:SI 169 [ root_fs_names.889 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 48 47 49 3 init/do_mounts.c:266 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 49 48 63 3 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; rd  out 	(18)
35, 70, 93, 115, 116, 137, 138, 369, 371, 372, 2404, 2409, 2417, 2420, 2421, 2423, 2424, 2425


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
35, 70, 93, 115, 116, 137, 138, 366, 371, 372, 2403, 2409, 2410, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427
;; rd  gen 	(1)
367
;; rd  kill	(31)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370

;; Pred edge  7 [91.0%] 
(code_label 63 49 52 4 50 "" [1 uses])

(note 52 63 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 init/do_mounts.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 4 init/do_mounts.c:268 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 254)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; rd  out 	(21)
35, 70, 93, 115, 116, 137, 138, 367, 371, 372, 2403, 2409, 2410, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 183 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  gen 	 183 184
;; live  kill	
;; rd  in  	(21)
35, 70, 93, 115, 116, 137, 138, 367, 371, 372, 2403, 2409, 2410, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427
;; rd  gen 	(2)
2426, 2427
;; rd  kill	(2)
2426, 2427

;; Pred edge  4 [28.0%]  (fallthru)
(note 55 54 56 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 58 5 init/do_mounts.c:269 (set (reg:SI 183)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 58 56 254 5 init/do_mounts.c:269 (set (mem:QI (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (subreg:QI (reg:SI 183) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; rd  out 	(21)
35, 70, 93, 115, 116, 137, 138, 367, 371, 372, 2403, 2409, 2410, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 3 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 166 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  gen 	 24 [cc] 166 170
;; live  kill	
;; rd  in  	(23)
35, 70, 93, 115, 116, 137, 138, 367, 369, 371, 372, 2403, 2404, 2409, 2410, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427
;; rd  gen 	(3)
366, 2403, 2410
;; rd  kill	(38)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2399, 2400, 2401, 2402, 2403, 2404, 2410

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [72.0%] 
(code_label 254 58 253 7 67 "" [1 uses])

(note 253 254 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 61 253 62 7 init/do_mounts.c:267 discrim 1 (set (reg:SI 170 [ D.53045 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 62 61 64 7 init/do_mounts.c:267 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 64 62 65 7 init/do_mounts.c:267 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 69 7 init/do_mounts.c:267 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 7 -> ( 4 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180
;; rd  out 	(21)
35, 70, 93, 115, 116, 137, 138, 366, 371, 372, 2403, 2409, 2410, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427


;; Succ edge  4 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 171 172 185 186
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; live  gen 	 0 [r0] 166 171 172 185 186
;; live  kill	 14 [lr]
;; rd  in  	(17)
36, 70, 93, 115, 116, 137, 138, 369, 371, 372, 2409, 2417, 2420, 2421, 2423, 2424, 2425
;; rd  gen 	(6)
34, 2402, 2411, 2413, 2428, 2429
;; rd  kill	(32)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2399, 2400, 2401, 2402, 2403, 2404, 2411, 2412, 2413, 2428, 2429

;; Pred edge  2 [0.0%] 
(code_label 69 65 70 8 48 "" [1 uses])

(note 70 69 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(call_insn 72 70 73 8 init/do_mounts.c:272 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_filesystem_list") [flags 0x41] <function_decl 0x1118fb80 get_filesystem_list>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 73 72 76 8 init/do_mounts.c:272 (set (reg/v:SI 171 [ len ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 76 73 77 8 init/do_mounts.c:275 (set (mem:QI (plus:SI (reg/v/f:SI 175 [ fs_names ])
                (reg/v:SI 171 [ len ])) [0 S1 A8])
        (subreg:QI (reg/f:SI 169 [ root_fs_names.889 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 77 76 78 8 init/do_mounts.c:276 (set (reg/v/f:SI 172 [ p ])
        (plus:SI (reg/v/f:SI 175 [ fs_names ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 78 77 120 8 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; rd  out 	(22)
34, 70, 93, 115, 116, 137, 138, 369, 371, 372, 2402, 2409, 2411, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164 165 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 164 165 187 188
;; live  kill	 14 [lr]
;; rd  in  	(37)
32, 34, 70, 93, 115, 116, 137, 138, 361, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(6)
32, 363, 2397, 2398, 2430, 2431
;; rd  kill	(56)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2397, 2398, 2430, 2431

;; Pred edge  15 [91.0%] 
(code_label 120 78 81 9 56 "" [1 uses])

(note 81 120 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 9 init/do_mounts.c:277 (set (reg/v/f:SI 165 [ p.1169 ])
        (plus:SI (reg/v/f:SI 172 [ p ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 83 82 84 9 init/do_mounts.c:277 (set (reg:SI 0 r0)
        (reg/v/f:SI 165 [ p.1169 ])) 167 {*arm_movsi_insn} (nil))

(insn 84 83 85 9 init/do_mounts.c:277 (set (reg:SI 1 r1)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 86 9 init/do_mounts.c:277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 85 88 9 init/do_mounts.c:277 (set (reg/v/f:SI 164 [ p.1170 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 88 86 89 9 init/do_mounts.c:278 (set (reg:SI 188)
        (zero_extend:SI (mem:QI (reg/v/f:SI 165 [ p.1169 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 89 88 90 9 init/do_mounts.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 9 [0x9]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 9 init/do_mounts.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180
;; rd  out 	(36)
32, 70, 93, 115, 116, 137, 138, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  10 [72.0%]  (fallthru)
;; Succ edge  11 [28.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 175 179 180
;; live  gen 	 162
;; live  kill	
;; rd  in  	(36)
32, 70, 93, 115, 116, 137, 138, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(1)
2395
;; rd  kill	(2)
2394, 2395

;; Pred edge  9 [72.0%]  (fallthru)
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 95 10 init/do_mounts.c:278 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180
;; rd  out 	(35)
32, 70, 93, 115, 116, 137, 138, 363, 371, 372, 2393, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180
;; live  gen 	 168
;; live  kill	
;; rd  in  	(36)
32, 70, 93, 115, 116, 137, 138, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(1)
2408
;; rd  kill	(2)
2407, 2408

;; Pred edge  9 [28.0%] 
(code_label 95 92 96 11 53 "" [1 uses])

(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 106 11 init/do_mounts.c:278 (set (reg:SI 168 [ ivtmp.1163 ])
        (reg/v/f:SI 172 [ p ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180
;; rd  out 	(36)
32, 70, 93, 115, 116, 137, 138, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2408, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168
;; lr  def 	 24 [cc] 161 162 163 166 168 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180
;; live  gen 	 24 [cc] 161 162 163 166 168 189
;; live  kill	
;; rd  in  	(39)
32, 70, 93, 115, 116, 137, 138, 362, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2401, 2402, 2407, 2408, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(7)
362, 2393, 2394, 2396, 2401, 2407, 2432
;; rd  kill	(44)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2393, 2394, 2395, 2396, 2399, 2400, 2401, 2402, 2403, 2404, 2407, 2408, 2432

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  12 [86.0%]  (dfs_back)
(code_label 106 97 98 12 55 "" [1 uses])

(note 98 106 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 101 12 init/do_mounts.c:280 discrim 1 (set (reg:SI 163 [ temp.1171 ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 168 [ ivtmp.1163 ])
                    (const_int 2 [0x2])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 101 99 102 12 init/do_mounts.c:280 discrim 1 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (subreg/s/u:QI (reg:SI 163 [ temp.1171 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 102 101 103 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 103 102 104 12 init/do_mounts.c:280 discrim 1 (set (reg:SI 168 [ ivtmp.1163 ])
        (plus:SI (reg:SI 168 [ ivtmp.1163 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 104 103 105 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 161 [ fs_names.1173 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 107 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) 167 {*arm_movsi_insn} (nil))

(insn 107 105 108 12 init/do_mounts.c:280 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ temp.1171 ])
            (const_int 10 [0xa]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 108 107 109 12 init/do_mounts.c:280 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 106)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 12 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 166 168 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 166 168 175 179 180
;; rd  out 	(34)
32, 70, 93, 115, 116, 137, 138, 362, 371, 372, 2393, 2394, 2396, 2397, 2398, 2401, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  12 [86.0%]  (dfs_back)
;; Succ edge  13 [14.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 166 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 175 179 180
;; live  gen 	 166 190 191
;; live  kill	
;; rd  in  	(34)
32, 70, 93, 115, 116, 137, 138, 362, 371, 372, 2393, 2394, 2396, 2397, 2398, 2401, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(3)
2400, 2433, 2434
;; rd  kill	(8)
2399, 2400, 2401, 2402, 2403, 2404, 2433, 2434

;; Pred edge  12 [14.0%]  (fallthru)
(note 109 108 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 13 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 161 [ fs_names.1173 ])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 113 13 init/do_mounts.c:282 (set (reg:SI 190)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 113 111 114 13 init/do_mounts.c:282 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (subreg:QI (reg:SI 190) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180
;; rd  out 	(34)
32, 70, 93, 115, 116, 137, 138, 362, 371, 372, 2393, 2394, 2396, 2397, 2398, 2400, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 10) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164
;; lr  def 	 166 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180
;; live  gen 	 166 172
;; live  kill	
;; rd  in  	(38)
32, 70, 93, 115, 116, 137, 138, 362, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(2)
2399, 2412
;; rd  kill	(8)
2399, 2400, 2401, 2402, 2403, 2404, 2412, 2413

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 114 113 115 14 54 "" [0 uses])

(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 14 init/do_mounts.c:282 (set (reg/v/f:SI 172 [ p ])
        (reg/v/f:SI 164 [ p.1170 ])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 118 14 init/do_mounts.c:282 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; rd  out 	(35)
32, 70, 93, 115, 116, 137, 138, 362, 363, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2407, 2409, 2411, 2412, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 8) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(39)
32, 34, 70, 93, 115, 116, 137, 138, 362, 363, 369, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(1)
361
;; rd  kill	(31)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 118 117 119 15 52 "" [0 uses])

(note 119 118 121 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 121 119 122 15 init/do_mounts.c:276 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 172 [ p ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 15 init/do_mounts.c:276 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 15 -> ( 9 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180
;; rd  out 	(37)
32, 34, 70, 93, 115, 116, 137, 138, 361, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2407, 2409, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2428, 2429, 2430, 2431, 2432, 2433, 2434


;; Succ edge  9 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru)

;; Start of basic block ( 15 7) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  gen 	 192 193
;; live  kill	
;; rd  in  	(43)
32, 34, 35, 70, 93, 115, 116, 137, 138, 361, 366, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434
;; rd  gen 	(2)
2435, 2436
;; rd  kill	(2)
2435, 2436

;; Pred edge  15 [9.0%]  (fallthru)
;; Pred edge  7 [9.0%]  (fallthru)
(code_label 123 122 124 16 51 "" [0 uses])

(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 127 16 init/do_mounts.c:285 (set (reg:SI 192)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 127 125 128 16 init/do_mounts.c:285 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (subreg:QI (reg:SI 192) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; rd  out 	(45)
32, 34, 35, 70, 93, 115, 116, 137, 138, 361, 366, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2417, 2420, 2421, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 21) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; live  gen 	 174
;; live  kill	
;; rd  in  	(56)
30, 32, 34, 35, 70, 93, 115, 116, 137, 138, 359, 361, 366, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(1)
2416
;; rd  kill	(2)
2415, 2416

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  21 [100.0%]  (fallthru)
(code_label 128 127 129 17 57 ("retry") [0 uses])

(note 129 128 130 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 190 17 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; rd  out 	(55)
30, 32, 34, 35, 70, 93, 115, 116, 137, 138, 359, 361, 366, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 24) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 179 180
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 173 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 173 194
;; live  kill	 14 [lr]
;; rd  in  	(55)
28, 30, 32, 34, 35, 70, 93, 115, 116, 137, 138, 350, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(4)
30, 359, 2414, 2437
;; rd  kill	(54)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2414, 2437

;; Pred edge  24 [100.0%] 
(code_label 190 130 133 18 63 "" [1 uses])

(note 133 190 134 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 18 init/do_mounts.c:318 (set (reg/f:SI 194)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 135 134 136 18 init/do_mounts.c:318 (set (reg:SI 0 r0)
        (reg/v/f:SI 179 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 18 init/do_mounts.c:318 (set (reg:SI 1 r1)
        (reg/v/f:SI 174 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 18 init/do_mounts.c:318 (set (reg:SI 2 r2)
        (reg/v:SI 180 [ flags ])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 18 init/do_mounts.c:318 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 194)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 139 138 140 18 init/do_mounts.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 140 139 141 18 init/do_mounts.c:318 (set (reg/v:SI 173 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 141 140 142 18 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -13 [0xfffffffffffffff3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 142 141 248 18 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; rd  out 	(51)
30, 70, 93, 115, 116, 137, 138, 359, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  21 [29.0%] 
;; Succ edge  19 [71.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(51)
30, 70, 93, 115, 116, 137, 138, 359, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(1)
358
;; rd  kill	(31)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370

;; Pred edge  18 [71.0%]  (fallthru)
(note 248 142 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 248 144 19 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 249 19 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 19 -> ( 29 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; rd  out 	(51)
30, 70, 93, 115, 116, 137, 138, 358, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  29 [50.0%] 
;; Succ edge  20 [50.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(51)
30, 70, 93, 115, 116, 137, 138, 358, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(1)
357
;; rd  kill	(31)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370

;; Pred edge  19 [50.0%]  (fallthru)
(note 249 144 145 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 145 249 146 20 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -22 [0xffffffffffffffea]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 146 145 149 20 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 20 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 194
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 194
;; rd  out 	(51)
30, 70, 93, 115, 116, 137, 138, 357, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  22 [29.0%] 
;; Succ edge  23 [71.0%]  (fallthru)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; live  gen 	 180
;; live  kill	
;; rd  in  	(51)
30, 70, 93, 115, 116, 137, 138, 359, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(1)
2422
;; rd  kill	(2)
2422, 2423

;; Pred edge  18 [29.0%] 
(code_label 149 146 150 21 61 "" [1 uses])

(note 150 149 151 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 154 21 init/do_mounts.c:323 (set (reg/v:SI 180 [ flags ])
        (ior:SI (reg/v:SI 180 [ flags ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 21 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180
;; rd  out 	(50)
30, 70, 93, 115, 116, 137, 138, 359, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 174 177 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; live  gen 	 0 [r0] 174 177 195 196
;; live  kill	 14 [lr]
;; rd  in  	(51)
30, 70, 93, 115, 116, 137, 138, 357, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(5)
28, 2415, 2419, 2438, 2439
;; rd  kill	(26)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2415, 2416, 2419, 2438, 2439

;; Pred edge  20 [29.0%] 
(code_label 154 151 155 22 60 "" [1 uses])

(note 155 154 156 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 22 init/do_mounts.c:317 (set (reg:SI 0 r0)
        (reg/v/f:SI 174 [ p ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 157 156 158 22 init/do_mounts.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 158 157 160 22 init/do_mounts.c:317 (set (reg:SI 195)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 160 158 161 22 init/do_mounts.c:317 (set (reg:SI 196)
        (plus:SI (reg:SI 195)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 161 160 165 22 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (plus:SI (reg/v/f:SI 174 [ p ])
            (reg:SI 196))) 4 {*arm_addsi3} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; rd  out 	(50)
28, 70, 93, 115, 116, 137, 138, 357, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 197 198 199 200 201 202 203 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 197 198 199 200 201 202 203 204
;; live  kill	 14 [lr]
;; rd  in  	(51)
30, 70, 93, 115, 116, 137, 138, 357, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(8)
2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447
;; rd  kill	(29)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447

;; Pred edge  20 [71.0%]  (fallthru)
(note 165 161 166 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 23 init/do_mounts.c:334 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 23 init/do_mounts.c:334 (set (reg/f:SI 198)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 168 167 169 23 init/do_mounts.c:334 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 197) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 23 init/do_mounts.c:334 (set (reg:SI 1 r1)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(call_insn 170 169 171 23 init/do_mounts.c:334 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 171 170 174 23 init/do_mounts.c:336 (set (reg/f:SI 199)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)) 167 {*arm_movsi_insn} (nil))

(insn 174 171 175 23 init/do_mounts.c:336 (set (reg:SI 0 r0)
        (reg/f:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)
        (nil)))

(insn 175 174 176 23 init/do_mounts.c:336 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 194)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 177 23 init/do_mounts.c:336 (set (reg:SI 2 r2)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(call_insn 177 176 178 23 init/do_mounts.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 178 177 179 23 init/do_mounts.c:338 (set (reg/f:SI 202)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 23 init/do_mounts.c:338 (set (reg:SI 0 r0)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)
        (nil)))

(call_insn 180 179 181 23 init/do_mounts.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 181 180 182 23 init/do_mounts.c:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 182 181 184 23 init/do_mounts.c:345 (set (reg/f:SI 203)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) 167 {*arm_movsi_insn} (nil))

(insn 184 182 185 23 init/do_mounts.c:345 (set (reg:SI 0 r0)
        (reg/f:SI 203)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
        (nil)))

(insn 185 184 186 23 init/do_mounts.c:345 (set (reg:SI 1 r1)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(call_insn 186 185 188 23 init/do_mounts.c:345 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 23 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(59)
30, 70, 93, 115, 116, 137, 138, 357, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448



;; Start of basic block ( 17 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; live  gen 	 24 [cc] 205
;; live  kill	
;; rd  in  	(58)
28, 30, 32, 34, 35, 70, 93, 115, 116, 137, 138, 357, 359, 361, 366, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(2)
350, 2448
;; rd  kill	(32)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2448

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 188 186 189 24 58 "" [0 uses])

(note 189 188 191 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 24 init/do_mounts.c:317 discrim 1 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/v/f:SI 174 [ p ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 192 191 193 24 init/do_mounts.c:317 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 24 init/do_mounts.c:317 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 24 -> ( 18 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180
;; rd  out 	(55)
28, 30, 32, 34, 35, 70, 93, 115, 116, 137, 138, 350, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448


;; Succ edge  18 [100.0%] 
;; Succ edge  25 [0.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 167 206 207
;; live  kill	 14 [lr]
;; rd  in  	(55)
28, 30, 32, 34, 35, 70, 93, 115, 116, 137, 138, 350, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(4)
14, 2406, 2449, 2450
;; rd  kill	(25)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2405, 2406, 2449, 2450

;; Pred edge  24 [0.0%]  (fallthru)
(note 194 193 195 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 195 194 196 25 init/do_mounts.c:348 (set (reg/f:SI 206)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)) 167 {*arm_movsi_insn} (nil))

(insn 196 195 197 25 init/do_mounts.c:348 (set (reg:SI 0 r0)
        (reg/f:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)
        (nil)))

(call_insn 197 196 198 25 init/do_mounts.c:348 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 198 197 199 25 init/do_mounts.c:349 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 199 198 200 25 init/do_mounts.c:350 (set (reg/f:SI 207)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)) 167 {*arm_movsi_insn} (nil))

(insn 200 199 201 25 init/do_mounts.c:350 (set (reg:SI 0 r0)
        (reg/f:SI 207)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)
        (nil)))

(call_insn 201 200 202 25 init/do_mounts.c:350 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 202 201 218 25 init/do_mounts.c:351 (set (reg/v/f:SI 167 [ p.1164 ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; rd  out 	(54)
14, 70, 93, 115, 116, 137, 138, 350, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u233(11){ }u234(13){ }u235(25){ }u236(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 176 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	 0 [r0] 1 [r1] 167 176 208 209 210
;; live  kill	 14 [lr]
;; rd  in  	(61)
10, 14, 70, 93, 115, 116, 137, 138, 344, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2405, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450, 2451, 2452, 2453, 2454
;; rd  gen 	(6)
10, 2405, 2418, 2451, 2452, 2453
;; rd  kill	(27)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2405, 2406, 2418, 2451, 2452, 2453

;; Pred edge  27 [0.0%] 
(code_label 218 202 205 26 65 "" [1 uses])

(note 205 218 206 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 206 205 207 26 init/do_mounts.c:352 (set (reg/f:SI 208)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)) 167 {*arm_movsi_insn} (nil))

(insn 207 206 208 26 init/do_mounts.c:352 (set (reg:SI 0 r0)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)
        (nil)))

(insn 208 207 209 26 init/do_mounts.c:352 (set (reg:SI 1 r1)
        (reg/v/f:SI 167 [ p.1164 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 209 208 210 26 init/do_mounts.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 210 209 211 26 init/do_mounts.c:351 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 167 [ p.1164 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 211 210 212 26 init/do_mounts.c:351 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 212 211 214 26 init/do_mounts.c:351 discrim 2 (set (reg:SI 209)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 214 212 215 26 init/do_mounts.c:351 discrim 2 (set (reg:SI 210)
        (plus:SI (reg:SI 209)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 215 214 216 26 init/do_mounts.c:351 discrim 2 (set (reg/v/f:SI 167 [ p.1164 ])
        (plus:SI (reg/v/f:SI 167 [ p.1164 ])
            (reg:SI 210))) 4 {*arm_addsi3} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; rd  out 	(59)
10, 70, 93, 115, 116, 137, 138, 344, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2405, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450, 2451, 2452, 2453, 2454


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 25 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	 24 [cc] 211
;; live  kill	
;; rd  in  	(62)
10, 14, 70, 93, 115, 116, 137, 138, 344, 350, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2405, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450, 2451, 2452, 2453, 2454
;; rd  gen 	(2)
344, 2454
;; rd  kill	(32)
340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 2454

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
(code_label 216 215 217 27 64 "" [0 uses])

(note 217 216 219 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 219 217 220 27 init/do_mounts.c:351 discrim 1 (set (reg:SI 211)
        (zero_extend:SI (mem:QI (reg/v/f:SI 167 [ p.1164 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 220 219 221 27 init/do_mounts.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 221 220 222 27 init/do_mounts.c:351 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 27 -> ( 26 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; rd  out 	(61)
10, 14, 70, 93, 115, 116, 137, 138, 344, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2405, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450, 2451, 2452, 2453, 2454


;; Succ edge  26 [0.0%] 
;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u257(11){ }u258(13){ }u259(25){ }u260(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 212 213 214 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 212 213 214 215 216
;; live  kill	 14 [lr]
;; rd  in  	(61)
10, 14, 70, 93, 115, 116, 137, 138, 344, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2405, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450, 2451, 2452, 2453, 2454
;; rd  gen 	(5)
2455, 2456, 2457, 2458, 2459
;; rd  kill	(26)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2455, 2456, 2457, 2458, 2459

;; Pred edge  27 [100.0%]  (fallthru)
(note 222 221 223 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 28 init/do_mounts.c:353 (set (reg/f:SI 212)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)) 167 {*arm_movsi_insn} (nil))

(insn 224 223 225 28 init/do_mounts.c:353 (set (reg:SI 0 r0)
        (reg/f:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)
        (nil)))

(call_insn 225 224 226 28 init/do_mounts.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 226 225 227 28 init/do_mounts.c:355 (set (reg/f:SI 213)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 227 226 228 28 init/do_mounts.c:355 (set (reg/f:SI 214)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 228 227 229 28 init/do_mounts.c:355 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 213) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 229 228 230 28 init/do_mounts.c:355 (set (reg:SI 1 r1)
        (reg/f:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(call_insn 230 229 231 28 init/do_mounts.c:355 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 231 230 233 28 init/do_mounts.c:357 (set (reg/f:SI 215)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) 167 {*arm_movsi_insn} (nil))

(insn 233 231 234 28 init/do_mounts.c:357 (set (reg:SI 0 r0)
        (reg/f:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
        (nil)))

(insn 234 233 235 28 init/do_mounts.c:357 (set (reg:SI 1 r1)
        (reg/f:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(call_insn 235 234 237 28 init/do_mounts.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 28 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(66)
10, 14, 70, 93, 115, 116, 137, 138, 344, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2405, 2406, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459



;; Start of basic block ( 19) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 1 [r1] 217
;; live  kill	 14 [lr]
;; rd  in  	(51)
30, 70, 93, 115, 116, 137, 138, 358, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448
;; rd  gen 	(1)
2460
;; rd  kill	(22)
139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 2460

;; Pred edge  19 [50.0%] 
(code_label 237 235 238 29 62 ("out") [1 uses])

(note 238 237 239 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 240 29 init/do_mounts.c:359 (set (reg/f:SI 217)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) 167 {*arm_movsi_insn} (nil))

(insn 240 239 241 29 init/do_mounts.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 217) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 241 240 242 29 init/do_mounts.c:359 (set (reg:SI 1 r1)
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))

(call_insn 242 241 0 29 init/do_mounts.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_free") [flags 0x41] <function_decl 0x11460b00 kmem_cache_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(52)
30, 70, 93, 115, 116, 137, 138, 358, 371, 372, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2402, 2403, 2407, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2448, 2460


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 40.
deleting insn with uid = 46.
deleting insn with uid = 57.
deleting insn with uid = 59.
deleting insn with uid = 60.
deleting insn with uid = 71.
deleting insn with uid = 74.
deleting insn with uid = 75.
deleting insn with uid = 87.
deleting insn with uid = 100.
deleting insn with uid = 112.
deleting insn with uid = 126.
deleting insn with uid = 159.
deleting insn with uid = 172.
deleting insn with uid = 173.
deleting insn with uid = 183.
deleting insn with uid = 213.
deleting insn with uid = 232.
verify found no changes in insn with uid = 54.
ending the processing of deferred insns

;; Function mount_root (mount_root)[0:2717] (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 5, latch 7
;;  depth 1, outer 0
;;  nodes: 5 7 6
;; 2 succs { 3 9 }
;; 3 succs { 8 4 }
;; 4 succs { 5 }
;; 5 succs { 10 6 }
;; 6 succs { 8 7 }
;; 7 succs { 5 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 15 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)

In insn 26, replacing
 (reg/f:SI 145)
 with (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)
Changes to insn 26 not profitable

In insn 38, replacing
 (mult:SI (reg:SI 148)
        (reg/v:SI 137 [ timeout ]))
 with (mult:SI (reg/v:SI 137 [ timeout ])
        (const_int 1000 [0x3e8]))
Changes to insn 38 not recognized
 Setting REG_EQUAL note

In insn 50, replacing
 (reg/f:SI 149)
 with (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)
Changes to insn 50 not profitable

In insn 54, replacing
 (reg:SI 151)
 with (const_int 2097152 [0x200000])
Changes to insn 54 not recognized
 Setting REG_EQUAL note

In insn 60, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
Changes to insn 60 not profitable

In insn 64, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
Changes to insn 64 not profitable

In insn 73, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
Changes to insn 73 not profitable

In insn 74, replacing
 (reg:SI 156)
 with (const_int 24960 [0x6180])
Changes to insn 74 not profitable

In insn 77, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
Changes to insn 77 not profitable

In insn 79, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
Changes to insn 79 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 77.
deferring deletion of insn with uid = 64.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



mount_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={12d,4u} r2={10d,2u} r3={9d,1u} r11={1d,10u} r12={8d} r13={1d,17u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,4u} r25={1d,14u,2d} r26={1d,9u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,1u} r134={1d,1u} r135={1d,2u,1d} r136={1d,1u} r137={2d,2u} r138={2d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,5u} r154={1d,2u} r155={1d} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d} r165={1d,1u} 
;;    total ref usage 996{883d,110u,3e} in 63{56 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847
0[0,15] 1[15,12] 2[27,10] 3[37,9] 11[46,1] 12[47,8] 13[55,1] 14[56,8] 15[64,7] 16[71,7] 17[78,7] 18[85,7] 19[92,7] 20[99,7] 21[106,7] 22[113,7] 23[120,7] 24[127,12] 25[139,1] 26[140,1] 27[141,7] 28[148,7] 29[155,7] 30[162,7] 31[169,7] 32[176,7] 33[183,7] 34[190,7] 35[197,7] 36[204,7] 37[211,7] 38[218,7] 39[225,7] 40[232,7] 41[239,7] 42[246,7] 43[253,7] 44[260,7] 45[267,7] 46[274,7] 47[281,7] 48[288,7] 49[295,7] 50[302,7] 51[309,7] 52[316,7] 53[323,7] 54[330,7] 55[337,7] 56[344,7] 57[351,7] 58[358,7] 59[365,7] 60[372,7] 61[379,7] 62[386,7] 63[393,7] 64[400,7] 65[407,7] 66[414,7] 67[421,7] 68[428,7] 69[435,7] 70[442,7] 71[449,7] 72[456,7] 73[463,7] 74[470,7] 75[477,7] 76[484,7] 77[491,7] 78[498,7] 79[505,7] 80[512,7] 81[519,7] 82[526,7] 83[533,7] 84[540,7] 85[547,7] 86[554,7] 87[561,7] 88[568,7] 89[575,7] 90[582,7] 91[589,7] 92[596,7] 93[603,7] 94[610,7] 95[617,7] 96[624,7] 97[631,7] 98[638,7] 99[645,7] 100[652,7] 101[659,7] 102[666,7] 103[673,7] 104[680,7] 105[687,7] 106[694,7] 107[701,7] 108[708,7] 109[715,7] 110[722,7] 111[729,7] 112[736,7] 113[743,7] 114[750,7] 115[757,7] 116[764,7] 117[771,7] 118[778,7] 119[785,7] 120[792,7] 121[799,7] 122[806,7] 123[813,7] 124[820,7] 125[827,7] 126[834,7] 127[841,7] 133[848,1] 134[849,1] 135[850,1] 136[851,1] 137[852,2] 138[854,2] 139[856,1] 140[857,1] 141[858,1] 142[859,1] 143[860,1] 144[861,1] 145[862,1] 146[863,1] 147[864,1] 148[865,1] 149[866,1] 150[867,1] 151[868,1] 152[869,1] 153[870,1] 154[871,1] 155[872,1] 156[873,1] 157[874,1] 158[875,1] 159[876,1] 160[877,1] 161[878,1] 162[879,1] 163[880,1] 164[881,1] 165[882,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 141 142
;; live  kill	
;; rd  in  	(10)
14, 26, 36, 45, 46, 54, 55, 63, 139, 140
;; rd  gen 	(4)
138, 857, 858, 859
;; rd  kill	(15)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 857, 858, 859

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/do_mounts.c:435 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/do_mounts.c:435 (set (reg:SI 142 [ ROOT_DEV ])
        (mem/c/i:SI (reg/f:SI 140) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts.c:435 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 142 [ ROOT_DEV ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 8 7 9 2 init/do_mounts.c:435 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 init/do_mounts.c:435 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
14, 26, 36, 45, 46, 54, 55, 63, 138, 139, 140, 857, 858, 859


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 139 143 144
;; live  kill	 14 [lr]
;; rd  in  	(14)
14, 26, 36, 45, 46, 54, 55, 63, 138, 139, 140, 857, 858, 859
;; rd  gen 	(5)
12, 136, 856, 860, 861
;; rd  kill	(38)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 56, 57, 58, 59, 60, 61, 62, 63, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 856, 860, 861

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 init/do_mounts.c:374 (set (reg/f:SI 143)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 12 11 13 3 init/do_mounts.c:374 (set (reg/f:SI 144)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 13 12 14 3 init/do_mounts.c:374 (set (reg:SI 0 r0)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 14 13 15 3 init/do_mounts.c:374 (set (reg:SI 1 r1)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 15 14 16 3 init/do_mounts.c:374 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("nfs_root_data") [flags 0x41] <function_decl 0x11f60f00 nfs_root_data>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 3 init/do_mounts.c:374 (set (reg/v:SI 139 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 init/do_mounts.c:375 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 3 init/do_mounts.c:375 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
12, 26, 36, 45, 46, 54, 55, 136, 139, 140, 856, 857, 858, 859, 860, 861


;; Succ edge  8 [100.0%] 
;; Succ edge  4 [0.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 138
;; live  kill	
;; rd  in  	(16)
12, 26, 36, 45, 46, 54, 55, 136, 139, 140, 856, 857, 858, 859, 860, 861
;; rd  gen 	(2)
853, 855
;; rd  kill	(4)
852, 853, 854, 855

;; Pred edge  3 [0.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 init/do_mounts.c:375 (set (reg/v:SI 138 [ try ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 44 4 init/do_mounts.c:375 (set (reg/v:SI 137 [ timeout ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(18)
12, 26, 36, 45, 46, 54, 55, 136, 139, 140, 853, 855, 856, 857, 858, 859, 860, 861


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 7) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 145 146
;; live  kill	 14 [lr]
;; rd  in  	(27)
10, 12, 26, 36, 45, 46, 54, 55, 136, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865
;; rd  gen 	(5)
10, 134, 849, 862, 863
;; rd  kill	(38)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 56, 57, 58, 59, 60, 61, 62, 63, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 849, 862, 863

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 44 21 22 5 81 "" [0 uses])

(note 22 44 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 init/do_mounts.c:385 (set (reg/f:SI 145)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 init/do_mounts.c:385 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 init/do_mounts.c:385 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 root_dev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 init/do_mounts.c:385 (set (reg:SI 1 r1)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)
        (nil)))

(insn 27 26 28 5 init/do_mounts.c:385 (set (reg:SI 2 r2)
        (mem/c/i:SI (reg/f:SI 146) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 init/do_mounts.c:385 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 root_data+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 30 5 init/do_mounts.c:385 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 29 31 5 init/do_mounts.c:385 (set (reg/v:SI 134 [ err.1212 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 init/do_mounts.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ err.1212 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 5 init/do_mounts.c:387 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(26)
10, 26, 36, 45, 46, 54, 55, 134, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865


;; Succ edge  10 [4.5%] 
;; Succ edge  6 [95.5%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(26)
10, 26, 36, 45, 46, 54, 55, 134, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865
;; rd  gen 	(1)
133
;; rd  kill	(12)
127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138

;; Pred edge  5 [95.5%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 init/do_mounts.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ try ])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 6 init/do_mounts.c:389 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1667 [0x683])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(26)
10, 26, 36, 45, 46, 54, 55, 133, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865


;; Succ edge  8 [16.7%] 
;; Succ edge  7 [83.3%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 138 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 0 [r0] 133 137 138 147 148
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(26)
10, 26, 36, 45, 46, 54, 55, 133, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865
;; rd  gen 	(5)
848, 852, 854, 864, 865
;; rd  kill	(27)
56, 57, 58, 59, 60, 61, 62, 63, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 848, 852, 853, 854, 855, 864, 865

;; Pred edge  6 [83.3%]  (fallthru)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 7 include/linux/delay.h:52 (set (reg:SI 148)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 7 include/linux/delay.h:52 (set (reg:SI 147)
        (mult:SI (reg:SI 148)
            (reg/v:SI 137 [ timeout ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg/v:SI 137 [ timeout ])
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 39 38 40 7 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 7 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 7 init/do_mounts.c:394 (set (reg/v:SI 133 [ timeout.1213 ])
        (ashift:SI (reg/v:SI 137 [ timeout ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 42 41 43 7 init/do_mounts.c:394 (parallel [
            (set (reg/v:SI 137 [ timeout ])
                (umin:SI (reg/v:SI 133 [ timeout.1213 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 43 42 47 7 init/do_mounts.c:384 (set (reg/v:SI 138 [ try ])
        (plus:SI (reg/v:SI 138 [ try ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(23)
10, 26, 36, 45, 46, 54, 55, 139, 140, 848, 849, 852, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 149 150 151
;; live  kill	 14 [lr]
;; rd  in  	(28)
10, 12, 26, 36, 45, 46, 54, 55, 133, 136, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865
;; rd  gen 	(4)
6, 866, 867, 868
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 56, 57, 58, 59, 60, 61, 62, 63, 866, 867, 868

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [16.7%] 
(code_label 47 43 48 8 79 "" [2 uses])

(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 init/do_mounts.c:439 (set (reg/f:SI 149)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 8 init/do_mounts.c:439 (set (reg:SI 0 r0)
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)
        (nil)))

(call_insn 51 50 52 8 init/do_mounts.c:439 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 8 init/do_mounts.c:440 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 init/do_mounts.c:440 (set (reg:SI 151)
        (const_int 2097152 [0x200000])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 8 init/do_mounts.c:440 (set (mem/c/i:SI (reg/f:SI 150) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2097152 [0x200000])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
6, 26, 36, 45, 46, 54, 55, 133, 136, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 152 153 154 155 156 157 158 159 160 161 162 163 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 152 153 154 155 156 157 158 159 160 161 162 163 164 165
;; live  kill	 14 [lr]
;; rd  in  	(33)
6, 14, 26, 36, 45, 46, 54, 55, 63, 133, 136, 138, 139, 140, 848, 849, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868
;; rd  gen 	(16)
850, 851, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882
;; rd  kill	(24)
56, 57, 58, 59, 60, 61, 62, 63, 850, 851, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882

;; Pred edge  2 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 78 "" [1 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 init/do_mounts.c:456 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 9 init/do_mounts.c:456 (set (reg:SI 135 [ ROOT_DEV.1211 ])
        (mem/c/i:SI (reg/f:SI 152) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 9 init/do_mounts.h:18 (set (reg/f:SI 153)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 9 init/do_mounts.h:18 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(call_insn 61 60 62 9 init/do_mounts.h:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x12103280 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 62 61 63 9 include/linux/kdev_t.h:44 (set (reg:SI 154)
        (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 62 65 9 include/linux/kdev_t.h:44 (set (reg/v:SI 136 [ minor ])
        (and:SI (reg:SI 154)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 65 63 66 9 init/do_mounts.h:19 (set (reg:SI 156)
        (const_int 24960 [0x6180])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 9 init/do_mounts.h:19 (set (reg:SI 157)
        (lshiftrt:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 67 66 68 9 init/do_mounts.h:19 (set (reg:SI 158)
        (ashift:SI (reg:SI 157)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 68 67 69 9 init/do_mounts.h:19 (set (reg:SI 159)
        (and:SI (reg:SI 154)
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 69 68 70 9 init/do_mounts.h:19 (set (reg:SI 160)
        (ior:SI (reg:SI 158)
            (reg:SI 159))) 89 {*arm_iorsi3} (nil))

(insn 70 69 71 9 init/do_mounts.h:19 (set (reg:SI 161)
        (and:SI (reg/v:SI 136 [ minor ])
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (nil))

(insn 71 70 72 9 init/do_mounts.h:19 (set (reg:SI 162)
        (ashift:SI (reg:SI 161)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 72 71 73 9 init/do_mounts.h:19 (set (reg:SI 163)
        (ior:SI (reg:SI 160)
            (reg:SI 162))) 89 {*arm_iorsi3} (nil))

(insn 73 72 74 9 init/do_mounts.h:19 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 74 73 75 9 init/do_mounts.h:19 (set (reg:SI 1 r1)
        (reg:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 24960 [0x6180])
        (nil)))

(insn 75 74 76 9 init/do_mounts.h:19 (set (reg:SI 2 r2)
        (reg:SI 163)) 167 {*arm_movsi_insn} (nil))

(call_insn 76 75 78 9 init/do_mounts.h:19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x12103100 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 78 76 79 9 init/do_mounts.c:457 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 init/do_mounts.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 80 79 81 9 init/do_mounts.c:457 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 165) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 81 80 87 9 init/do_mounts.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(48)
6, 14, 26, 36, 45, 46, 54, 55, 133, 136, 138, 139, 140, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 5) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(50)
6, 10, 14, 26, 36, 45, 46, 54, 55, 133, 134, 136, 138, 139, 140, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  5 [4.5%] 
(code_label 87 81 90 10 82 "" [1 uses])

(note 90 87 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(50)
6, 10, 14, 26, 36, 45, 46, 54, 55, 133, 134, 136, 138, 139, 140, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 64.
deleting insn with uid = 77.
ending the processing of deferred insns

;; Function name_to_dev_t (name_to_dev_t)[0:2707]

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
;;
;; Loop 3
;;  header 5, latch 8
;;  depth 1, outer 0
;;  nodes: 5 8 6 7
;;
;; Loop 2
;;  header 28, latch 27
;;  depth 1, outer 0
;;  nodes: 28 27 29
;;
;; Loop 1
;;  header 25, latch 24
;;  depth 1, outer 0
;;  nodes: 25 24 22 23
;; 2 succs { 3 11 }
;; 3 succs { 39 4 }
;; 4 succs { 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 39 10 }
;; 10 succs { 40 }
;; 11 succs { 12 16 }
;; 12 succs { 13 15 }
;; 13 succs { 39 14 }
;; 14 succs { 39 40 }
;; 15 succs { 39 38 }
;; 16 succs { 17 18 }
;; 17 succs { 40 }
;; 18 succs { 19 20 }
;; 19 succs { 40 }
;; 20 succs { 39 21 }
;; 21 succs { 25 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 }
;; 25 succs { 22 26 }
;; 26 succs { 40 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 27 30 }
;; 30 succs { 40 31 }
;; 31 succs { 40 32 }
;; 32 succs { 40 33 }
;; 33 succs { 40 34 }
;; 34 succs { 40 35 }
;; 35 succs { 40 36 }
;; 36 succs { 40 37 }
;; 37 succs { 40 }
;; 38 succs { 40 }
;; 39 succs { 40 }
;; 40 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 66 count 73 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 66 count 86 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 66 count 88 (  2.1)

In insn 9, replacing
 (reg/f:SI 162)
 with (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)
Changes to insn 9 not profitable

In insn 39, replacing
 (subreg:SI (reg:QI 169) 0)
 with (reg:SI 168)
Changed insn 39
deferring rescan insn with uid = 39.

In insn 39, replacing
 (subreg:SI (reg:QI 170 [ D.53103 ]) 0)
 with (reg:SI 144 [ D.53103 ])
Changed insn 39
deferring rescan insn with uid = 39.

In insn 46, replacing
 (ashift:SI (reg:SI 174)
        (reg/v:SI 143 [ i ]))
 with (ashift:SI (const_int 1 [0x1])
        (reg/v:SI 143 [ i ]))
Changes to insn 46 not recognized
 Setting REG_EQUAL note

In insn 65, replacing
 (reg/f:SI 176)
 with (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)
Changes to insn 65 not profitable

In insn 68, replacing
 (reg/f:SI 178)
 with (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)
Changes to insn 68 not profitable

In insn 83, replacing
 (reg/f:SI 179)
 with (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
Changes to insn 83 not profitable

In insn 95, replacing
 (reg/f:SI 181)
 with (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)
Changes to insn 95 not profitable

In insn 138, replacing
 (reg/f:SI 191)
 with (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)
Changes to insn 138 not profitable

In insn 152, replacing
 (reg/f:SI 193)
 with (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)
Changes to insn 152 not profitable

In insn 184, replacing
 (subreg:QI (reg:SI 198) 0)
 with (const_int 33 [0x21])
Changes to insn 184 not profitable

In insn 185, replacing
 (subreg:QI (reg:SI 198) 0)
 with (const_int 33 [0x21])
Changes to insn 185 not recognized
 Setting REG_EQUAL note

In insn 247, replacing
 (subreg:QI (reg:SI 210) 0)
 with (const_int 0 [0x0])
Changes to insn 247 not profitable

In insn 248, replacing
 (subreg:QI (reg:SI 210) 0)
 with (const_int 0 [0x0])
Changes to insn 248 not recognized
 Setting REG_EQUAL note

In insn 271, replacing
 (zero_extend:SI (mem:QI (reg/f:SI 135 [ p.1254 ]) [0 S1 A8]))
 with (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))
Changed insn 271
deferring rescan insn with uid = 271.
deferring rescan insn with uid = 271.

In insn 277, replacing
 (mem:QI (reg/f:SI 135 [ p.1254 ]) [0 S1 A8])
 with (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
            (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
Changed insn 277
deferring rescan insn with uid = 277.
deferring rescan insn with uid = 277.

In insn 289, replacing
 (and:SI (reg:SI 223)
        (reg:SI 225))
 with (and:SI (reg:SI 223)
        (const_int 1048320 [0xfff00]))
Changes to insn 289 not profitable

In insn 292, replacing
 (reg:SI 225)
 with (const_int 1048320 [0xfff00])
Changes to insn 292 not profitable

In insn 293, replacing
 (and:SI (reg:SI 153 [ D.52725 ])
        (reg:SI 225))
 with (and:SI (reg:SI 153 [ D.52725 ])
        (const_int 1048320 [0xfff00]))
Changes to insn 293 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 304.
deferring deletion of insn with uid = 292.
deferring deletion of insn with uid = 278.
deferring deletion of insn with uid = 276.
deferring deletion of insn with uid = 275.
deferring deletion of insn with uid = 270.
deferring deletion of insn with uid = 258.
deferring deletion of insn with uid = 249.
deferring deletion of insn with uid = 247.
deferring deletion of insn with uid = 244.
deferring deletion of insn with uid = 184.
deferring deletion of insn with uid = 175.
deferring deletion of insn with uid = 167.
deferring deletion of insn with uid = 155.
deferring deletion of insn with uid = 141.
deferring deletion of insn with uid = 87.
deferring deletion of insn with uid = 75.
deferring deletion of insn with uid = 40.
deferring deletion of insn with uid = 38.
deferring deletion of insn with uid = 37.
deferring deletion of insn with uid = 21.
deferring deletion of insn with uid = 13.
deferring deletion of insn with uid = 8.
Deleted 23 trivially dead insns

Number of successful forward propagations: 4



name_to_dev_t

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={36d,37u} r1={30d,12u} r2={24d,6u} r3={20d,2u} r11={1d,40u} r12={18d} r13={1d,57u} r14={18d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={43d,26u} r25={1d,60u,12d} r26={1d,39u} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} r134={3d,5u} r135={1d} r136={1d,5u} r137={1d,2u} r138={1d,5u} r139={1d,3u} r140={1d,2u} r141={1d,4u} r142={1d,2u} r143={2d,5u} r144={1d,1u} r145={1d,1u} r146={1d} r147={9d,9u,1d} r148={1d,3u} r149={1d,2u} r150={1d} r151={1d} r152={1d} r153={1d,3u,1d} r154={1d,2u} r155={1d,2u} r156={1d,1u} r157={1d} r158={1d} r159={1d} r160={1d} r161={1d,5u} r162={1d,1u} r163={1d,3u} r164={1d,2u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d} r170={1d} r171={1d,2u} r172={1d} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,2u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,2u} r193={1d,1u} r194={1d,2u} r195={1d,2u} r196={1d,3u} r197={1d} r198={1d,2u} r199={1d} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,7u} r209={1d,1u} r210={1d,2u} r211={1d} r212={1d} r213={1d} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d} r221={1d} r222={1d} r223={1d,1u,1d} r224={1d,1u} r225={1d,3u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d} r230={1d,1u} r231={1d,1u} 
;;    total ref usage 2607{2172d,420u,15e} in 201{184 regular + 17 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 24
  dense invalidated 	
0[0,36] 1[36,30] 2[66,24] 3[90,20] 11[110,1] 12[111,18] 13[129,1] 14[130,18] 15[148,17] 16[165,17] 17[182,17] 18[199,17] 19[216,17] 20[233,17] 21[250,17] 22[267,17] 23[284,17] 24[301,43] 25[344,1] 26[345,1] 27[346,17] 28[363,17] 29[380,17] 30[397,17] 31[414,17] 32[431,17] 33[448,17] 34[465,17] 35[482,17] 36[499,17] 37[516,17] 38[533,17] 39[550,17] 40[567,17] 41[584,17] 42[601,17] 43[618,17] 44[635,17] 45[652,17] 46[669,17] 47[686,17] 48[703,17] 49[720,17] 50[737,17] 51[754,17] 52[771,17] 53[788,17] 54[805,17] 55[822,17] 56[839,17] 57[856,17] 58[873,17] 59[890,17] 60[907,17] 61[924,17] 62[941,17] 63[958,17] 64[975,17] 65[992,17] 66[1009,17] 67[1026,17] 68[1043,17] 69[1060,17] 70[1077,17] 71[1094,17] 72[1111,17] 73[1128,17] 74[1145,17] 75[1162,17] 76[1179,17] 77[1196,17] 78[1213,17] 79[1230,17] 80[1247,17] 81[1264,17] 82[1281,17] 83[1298,17] 84[1315,17] 85[1332,17] 86[1349,17] 87[1366,17] 88[1383,17] 89[1400,17] 90[1417,17] 91[1434,17] 92[1451,17] 93[1468,17] 94[1485,17] 95[1502,17] 96[1519,17] 97[1536,17] 98[1553,17] 99[1570,17] 100[1587,17] 101[1604,17] 102[1621,17] 103[1638,17] 104[1655,17] 105[1672,17] 106[1689,17] 107[1706,17] 108[1723,17] 109[1740,17] 110[1757,17] 111[1774,17] 112[1791,17] 113[1808,17] 114[1825,17] 115[1842,17] 116[1859,17] 117[1876,17] 118[1893,17] 119[1910,17] 120[1927,17] 121[1944,17] 122[1961,17] 123[1978,17] 124[1995,17] 125[2012,17] 126[2029,17] 127[2046,17] 134[2063,3] 135[2066,1] 136[2067,1] 137[2068,1] 138[2069,1] 139[2070,1] 140[2071,1] 141[2072,1] 142[2073,1] 143[2074,2] 144[2076,1] 145[2077,1] 146[2078,1] 147[2079,9] 148[2088,1] 149[2089,1] 150[2090,1] 151[2091,1] 152[2092,1] 153[2093,1] 154[2094,1] 155[2095,1] 156[2096,1] 157[2097,1] 158[2098,1] 159[2099,1] 160[2100,1] 161[2101,1] 162[2102,1] 163[2103,1] 164[2104,1] 165[2105,1] 166[2106,1] 167[2107,1] 168[2108,1] 169[2109,1] 170[2110,1] 171[2111,1] 172[2112,1] 173[2113,1] 174[2114,1] 175[2115,1] 176[2116,1] 177[2117,1] 178[2118,1] 179[2119,1] 180[2120,1] 181[2121,1] 182[2122,1] 183[2123,1] 184[2124,1] 185[2125,1] 186[2126,1] 187[2127,1] 188[2128,1] 189[2129,1] 190[2130,1] 191[2131,1] 192[2132,1] 193[2133,1] 194[2134,1] 195[2135,1] 196[2136,1] 197[2137,1] 198[2138,1] 199[2139,1] 200[2140,1] 201[2141,1] 202[2142,1] 203[2143,1] 204[2144,1] 205[2145,1] 206[2146,1] 207[2147,1] 208[2148,1] 209[2149,1] 210[2150,1] 211[2151,1] 212[2152,1] 213[2153,1] 214[2154,1] 215[2155,1] 216[2156,1] 217[2157,1] 218[2158,1] 219[2159,1] 220[2160,1] 221[2161,1] 222[2162,1] 223[2163,1] 224[2164,1] 225[2165,1] 226[2166,1] 227[2167,1] 228[2168,1] 229[2169,1] 230[2170,1] 231[2171,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 159 161 162 163
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 159 161 162 163
;; live  kill	 14 [lr]
;; rd  in  	(10)
35, 65, 89, 109, 110, 128, 129, 147, 344, 345
;; rd  gen 	(6)
34, 306, 2099, 2101, 2102, 2103
;; rd  kill	(22)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2099, 2101, 2102, 2103

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 init/do_mounts.c:137 (set (reg/v/f:SI 161 [ name ])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 9 2 init/do_mounts.c:144 (set (reg/f:SI 162)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 init/do_mounts.c:144 (set (reg:SI 1 r1)
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)
        (nil)))

(insn 10 9 11 2 init/do_mounts.c:144 (set (reg:SI 2 r2)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 11 10 12 2 init/do_mounts.c:144 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 14 2 init/do_mounts.c:144 (set (reg:SI 163)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 14 12 15 2 init/do_mounts.c:144 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 init/do_mounts.c:144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; rd  out 	(14)
34, 65, 89, 109, 110, 128, 129, 306, 344, 345, 2099, 2101, 2102, 2103


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 158 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; live  gen 	 0 [r0] 24 [cc] 134 158 164
;; live  kill	 14 [lr]
;; rd  in  	(14)
34, 65, 89, 109, 110, 128, 129, 306, 344, 345, 2099, 2101, 2102, 2103
;; rd  gen 	(5)
32, 305, 2065, 2098, 2104
;; rd  kill	(23)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2063, 2064, 2065, 2098, 2104

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 init/do_mounts.c:145 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 9 [0x9]))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 3 init/do_mounts.c:146 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ name.1256 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 19 18 20 3 init/do_mounts.c:146 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 20 19 22 3 init/do_mounts.c:146 (set (reg:SI 164)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 22 20 23 3 init/do_mounts.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 36 [0x24]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 3 init/do_mounts.c:146 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 3 -> ( 39 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; rd  out 	(17)
32, 65, 89, 109, 110, 128, 129, 305, 344, 345, 2065, 2098, 2099, 2101, 2102, 2103, 2104


;; Succ edge  39 [62.2%] 
;; Succ edge  4 [37.8%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; live  gen 	 143
;; live  kill	
;; rd  in  	(17)
32, 65, 89, 109, 110, 128, 129, 305, 344, 345, 2065, 2098, 2099, 2101, 2102, 2103, 2104
;; rd  gen 	(1)
2074
;; rd  kill	(2)
2074, 2075

;; Pred edge  3 [37.8%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 58 4 init/do_mounts.c:146 (set (reg/v:SI 143 [ i ])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; rd  out 	(18)
32, 65, 89, 109, 110, 128, 129, 305, 344, 345, 2065, 2074, 2098, 2099, 2101, 2102, 2103, 2104


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 8) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 144 145 165 166 167 168 169 170 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  gen 	 0 [r0] 24 [cc] 134 144 145 165 166 167 168 169 170 171 172
;; live  kill	 14 [lr]
;; rd  in  	(36)
28, 32, 65, 89, 109, 110, 128, 129, 305, 337, 344, 345, 2063, 2064, 2065, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115
;; rd  gen 	(13)
28, 339, 2064, 2076, 2077, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112
;; rd  kill	(31)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2063, 2064, 2065, 2076, 2077, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  8 [93.8%]  (dfs_back)
(code_label 58 25 26 5 90 "" [1 uses])

(note 26 58 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 include/linux/genhd.h:210 (set (reg:SI 165)
        (zero_extend:SI (mem:QI (reg/v/f:SI 134 [ name.1256 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 28 27 29 5 include/linux/genhd.h:210 (set (reg:SI 0 r0)
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 30 5 include/linux/genhd.h:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 31 5 include/linux/genhd.h:210 (set (reg:SI 145 [ D.53098 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 include/linux/genhd.h:211 (set (reg:SI 166)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 134 [ name.1256 ])
                    (const_int 1 [0x1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 32 31 33 5 include/linux/genhd.h:211 (set (reg:SI 0 r0)
        (reg:SI 166)) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 5 include/linux/genhd.h:211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 33 35 5 include/linux/genhd.h:211 (set (reg:SI 144 [ D.53103 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 include/linux/genhd.h:210 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(insn 36 35 39 5 include/linux/genhd.h:210 (set (reg:SI 168)
        (ashift:SI (reg:SI 145 [ D.53098 ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 39 36 41 5 include/linux/genhd.h:210 (set (reg:SI 171)
        (ior:SI (reg:SI 168)
            (reg:SI 144 [ D.53103 ]))) 89 {*arm_iorsi3} (nil))

(insn 41 39 42 5 include/linux/genhd.h:210 (set (mem:QI (plus:SI (reg/f:SI 167)
                (reg/v:SI 143 [ i ])) [0 S1 A8])
        (subreg:QI (reg:SI 171) 0)) 178 {*arm_movqi_insn} (nil))

(insn 42 41 43 5 include/linux/genhd.h:212 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 43 42 44 5 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 9 [0x9]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 316 5 include/linux/genhd.h:213 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; rd  out 	(32)
28, 65, 89, 109, 110, 128, 129, 339, 344, 345, 2064, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115


;; Succ edge  8 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 173 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  gen 	 24 [cc] 173 174 175
;; live  kill	
;; rd  in  	(32)
28, 65, 89, 109, 110, 128, 129, 339, 344, 345, 2064, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115
;; rd  gen 	(4)
338, 2113, 2114, 2115
;; rd  kill	(3)
2113, 2114, 2115

;; Pred edge  5 [50.0%]  (fallthru)
(note 316 44 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 316 46 6 include/linux/genhd.h:213 (set (reg:SI 174)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 include/linux/genhd.h:213 (set (reg:SI 173)
        (ashift:SI (reg:SI 174)
            (reg/v:SI 143 [ i ]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg/v:SI 143 [ i ]))
        (nil)))

(insn 47 46 48 6 include/linux/genhd.h:213 (set (reg:SI 175)
        (and:SI (reg:SI 173)
            (const_int 680 [0x2a8]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 6 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 52 6 include/linux/genhd.h:213 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; rd  out 	(32)
28, 65, 89, 109, 110, 128, 129, 338, 344, 345, 2064, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115


;; Succ edge  7 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  gen 	 134
;; live  kill	
;; rd  in  	(32)
28, 65, 89, 109, 110, 128, 129, 338, 344, 345, 2064, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115
;; rd  gen 	(1)
2063
;; rd  kill	(3)
2063, 2064, 2065

;; Pred edge  6 [50.0%] 
(code_label 52 49 53 7 89 "" [1 uses])

(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 include/linux/genhd.h:218 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; rd  out 	(32)
28, 65, 89, 109, 110, 128, 129, 338, 344, 345, 2063, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(34)
28, 65, 89, 109, 110, 128, 129, 338, 339, 344, 345, 2063, 2064, 2074, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115
;; rd  gen 	(2)
337, 2075
;; rd  kill	(2)
2074, 2075

;; Pred edge  6 [50.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [50.0%] 
(code_label 55 54 56 8 88 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 59 8 include/linux/genhd.h:209 (set (reg/v:SI 143 [ i ])
        (plus:SI (reg/v:SI 143 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 59 57 60 8 include/linux/genhd.h:209 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 60 59 61 8 include/linux/genhd.h:209 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
        (nil)))
;; End of basic block 8 -> ( 5 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143
;; rd  out 	(32)
28, 65, 89, 109, 110, 128, 129, 337, 344, 345, 2063, 2064, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115


;; Succ edge  5 [93.8%]  (dfs_back)
;; Succ edge  9 [6.2%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 142 176 177 178
;; live  kill	 14 [lr]
;; rd  in  	(32)
28, 65, 89, 109, 110, 128, 129, 337, 344, 345, 2063, 2064, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115
;; rd  gen 	(6)
26, 335, 2073, 2116, 2117, 2118
;; rd  kill	(22)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2073, 2116, 2117, 2118

;; Pred edge  8 [6.2%]  (fallthru)
(note 61 60 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 9 init/do_mounts.c:105 (set (reg/f:SI 176)
        (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 9 init/do_mounts.c:105 (set (reg/f:SI 177)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(insn 64 63 65 9 init/do_mounts.c:105 (set (reg/f:SI 178)
        (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 9 init/do_mounts.c:105 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)
        (nil)))

(insn 66 65 67 9 init/do_mounts.c:105 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 9 init/do_mounts.c:105 (set (reg:SI 2 r2)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -28 [0xffffffffffffffe4]))
        (nil)))

(insn 68 67 69 9 init/do_mounts.c:105 (set (reg:SI 3 r3)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)
        (nil)))

(call_insn 69 68 70 9 init/do_mounts.c:105 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("class_find_device") [flags 0x41] <function_decl 0x11201980 class_find_device>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 70 69 71 9 init/do_mounts.c:105 (set (reg/v/f:SI 142 [ dev ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 9 init/do_mounts.c:106 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ dev ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 9 init/do_mounts.c:106 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 9 -> ( 39 10)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(36)
26, 65, 89, 109, 110, 128, 129, 335, 344, 345, 2063, 2064, 2073, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118


;; Succ edge  39 [30.2%] 
;; Succ edge  10 [69.8%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0] 147
;; live  kill	 14 [lr]
;; rd  in  	(36)
26, 65, 89, 109, 110, 128, 129, 335, 344, 345, 2063, 2064, 2073, 2075, 2076, 2077, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118
;; rd  gen 	(1)
2087
;; rd  kill	(27)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087

;; Pred edge  9 [69.8%]  (fallthru)
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 10 init/do_mounts.c:109 (set (reg/v:SI 147 [ res ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ dev ])
                (const_int 308 [0x134])) [0 <variable>.devt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 76 74 79 10 init/do_mounts.c:110 (parallel [
            (call (mem:SI (symbol_ref:SI ("put_device") [flags 0x41] <function_decl 0x11229c80 put_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 10 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(37)
26, 65, 89, 109, 110, 128, 129, 335, 344, 345, 2063, 2064, 2073, 2075, 2076, 2077, 2087, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 157 179 180
;; live  kill	 14 [lr]
;; rd  in  	(14)
34, 65, 89, 109, 110, 128, 129, 306, 344, 345, 2099, 2101, 2102, 2103
;; rd  gen 	(5)
23, 304, 2097, 2119, 2120
;; rd  kill	(21)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2097, 2119, 2120

;; Pred edge  2 [50.0%] 
(code_label 79 76 80 11 86 "" [1 uses])

(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 11 init/do_mounts.c:155 (set (reg/f:SI 179)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 11 init/do_mounts.c:155 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 11 init/do_mounts.c:155 (set (reg:SI 1 r1)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
        (nil)))

(insn 84 83 85 11 init/do_mounts.c:155 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 86 11 init/do_mounts.c:155 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 86 85 88 11 init/do_mounts.c:155 (set (reg:SI 180)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 88 86 89 11 init/do_mounts.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 89 88 90 11 init/do_mounts.c:155 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(17)
23, 65, 89, 109, 110, 128, 129, 304, 344, 345, 2097, 2099, 2101, 2102, 2103, 2119, 2120


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 156 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 156 181 182 183
;; live  kill	 14 [lr]
;; rd  in  	(17)
23, 65, 89, 109, 110, 128, 129, 304, 344, 345, 2097, 2099, 2101, 2102, 2103, 2119, 2120
;; rd  gen 	(6)
21, 331, 2096, 2121, 2122, 2123
;; rd  kill	(22)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2096, 2121, 2122, 2123

;; Pred edge  11 [29.0%]  (fallthru)
(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 12 init/do_mounts.c:158 (set (reg/f:SI 181)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 12 init/do_mounts.c:158 (set (reg/f:SI 182)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 93 92 94 12 init/do_mounts.c:158 (set (reg/f:SI 183)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 94 93 95 12 init/do_mounts.c:158 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 12 init/do_mounts.c:158 (set (reg:SI 1 r1)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)
        (nil)))

(insn 96 95 97 12 init/do_mounts.c:158 (set (reg:SI 2 r2)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 97 96 98 12 init/do_mounts.c:158 (set (reg:SI 3 r3)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(call_insn 98 97 99 12 init/do_mounts.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sscanf") [flags 0x41] <function_decl 0x5115e880 sscanf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 99 98 100 12 init/do_mounts.c:158 (set (reg:SI 156 [ D.52714 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 12 init/do_mounts.c:158 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156 [ D.52714 ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 101 100 102 12 init/do_mounts.c:158 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5123 [0x1403])
        (nil)))
;; End of basic block 12 -> ( 13 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(21)
21, 65, 89, 109, 110, 128, 129, 331, 344, 345, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123


;; Succ edge  13 [48.8%]  (fallthru)
;; Succ edge  15 [51.2%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 154 155 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 154 155 184 185
;; live  kill	
;; rd  in  	(21)
21, 65, 89, 109, 110, 128, 129, 331, 344, 345, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123
;; rd  gen 	(6)
330, 2086, 2094, 2095, 2124, 2125
;; rd  kill	(13)
2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2094, 2095, 2124, 2125

;; Pred edge  12 [48.8%]  (fallthru)
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 13 init/do_mounts.c:159 (set (reg:SI 155 [ maj.879 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 maj+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 105 13 init/do_mounts.c:159 (set (reg:SI 154 [ min.880 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 min+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 13 init/do_mounts.c:159 (set (reg:SI 184)
        (ashift:SI (reg:SI 155 [ maj.879 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 106 105 107 13 init/do_mounts.c:159 (set (reg/v:SI 147 [ res ])
        (ior:SI (reg:SI 184)
            (reg:SI 154 [ min.880 ]))) 89 {*arm_iorsi3} (nil))

(insn 107 106 108 13 init/do_mounts.c:160 (set (reg:SI 185)
        (lshiftrt:SI (reg/v:SI 147 [ res ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 108 107 109 13 init/do_mounts.c:160 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155 [ maj.879 ])
            (reg:SI 185))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 109 108 110 13 init/do_mounts.c:160 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 13 -> ( 39 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; rd  out 	(26)
21, 65, 89, 109, 110, 128, 129, 330, 344, 345, 2086, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123, 2124, 2125


;; Succ edge  39 [62.2%] 
;; Succ edge  14 [37.8%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; live  gen 	 24 [cc] 186 187
;; live  kill	
;; rd  in  	(26)
21, 65, 89, 109, 110, 128, 129, 330, 344, 345, 2086, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123, 2124, 2125
;; rd  gen 	(3)
329, 2126, 2127
;; rd  kill	(2)
2126, 2127

;; Pred edge  13 [37.8%]  (fallthru)
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 14 init/do_mounts.c:160 discrim 1 (set (reg:SI 187)
        (and:SI (reg/v:SI 147 [ res ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 112 111 113 14 init/do_mounts.c:160 discrim 1 (set (reg:SI 186)
        (and:SI (reg:SI 187)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ res ])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 113 112 114 14 init/do_mounts.c:160 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ min.880 ])
            (reg:SI 186))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 114 113 118 14 init/do_mounts.c:160 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 14 -> ( 39 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(28)
21, 65, 89, 109, 110, 128, 129, 329, 344, 345, 2086, 2094, 2095, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127


;; Succ edge  39 [62.2%] 
;; Succ edge  40 [37.8%]  (fallthru)

;; Start of basic block ( 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 188 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 153 188 189 190
;; live  kill	 14 [lr]
;; rd  in  	(21)
21, 65, 89, 109, 110, 128, 129, 331, 344, 345, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123
;; rd  gen 	(6)
19, 327, 2093, 2128, 2129, 2130
;; rd  kill	(22)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2093, 2128, 2129, 2130

;; Pred edge  12 [51.2%] 
(code_label 118 114 119 15 93 "" [1 uses])

(note 119 118 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 15 init/do_mounts.c:163 (set (reg/f:SI 188)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 121 120 122 15 init/do_mounts.c:163 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 15 init/do_mounts.c:163 (set (reg:SI 1 r1)
        (reg/f:SI 188)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 123 122 124 15 init/do_mounts.c:163 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 124 123 125 15 init/do_mounts.c:163 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 125 124 126 15 init/do_mounts.c:163 (set (reg:SI 153 [ D.52725 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 15 init/do_mounts.c:164 (set (reg/f:SI 189 [ p ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 15 init/do_mounts.c:164 (set (reg:SI 190)
        (zero_extend:SI (mem:QI (reg/f:SI 189 [ p ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 128 127 129 15 init/do_mounts.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 190)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 129 128 133 15 init/do_mounts.c:164 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 15 -> ( 39 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; rd  out 	(25)
19, 65, 89, 109, 110, 128, 129, 327, 344, 345, 2093, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123, 2128, 2129, 2130


;; Succ edge  39 [39.0%] 
;; Succ edge  38 [61.0%]  (fallthru)

;; Start of basic block ( 11) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 152 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141 152 191 192
;; live  kill	 14 [lr]
;; rd  in  	(17)
23, 65, 89, 109, 110, 128, 129, 304, 344, 345, 2097, 2099, 2101, 2102, 2103, 2119, 2120
;; rd  gen 	(6)
17, 303, 2072, 2092, 2131, 2132
;; rd  kill	(22)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2072, 2092, 2131, 2132

;; Pred edge  11 [71.0%] 
(code_label 133 129 134 16 92 "" [1 uses])

(note 134 133 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 16 init/do_mounts.c:170 (set (reg/v/f:SI 141 [ name.1246 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 5 [0x5]))) 4 {*arm_addsi3} (nil))

(insn 136 135 137 16 init/do_mounts.c:172 (set (reg/f:SI 191)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 16 init/do_mounts.c:172 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 16 init/do_mounts.c:172 (set (reg:SI 1 r1)
        (reg/f:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)
        (nil)))

(call_insn/i 139 138 140 16 init/do_mounts.c:172 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 140 139 142 16 init/do_mounts.c:172 (set (reg:SI 192)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 142 140 143 16 init/do_mounts.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 143 142 144 16 init/do_mounts.c:172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 148)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(21)
17, 65, 89, 109, 110, 128, 129, 303, 344, 345, 2072, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(21)
17, 65, 89, 109, 110, 128, 129, 303, 344, 345, 2072, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132
;; rd  gen 	(1)
2085
;; rd  kill	(9)
2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087

;; Pred edge  16 [50.0%]  (fallthru)
(note 144 143 145 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 148 17 init/do_mounts.c:171 (set (reg/v:SI 147 [ res ])
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(22)
17, 65, 89, 109, 110, 128, 129, 303, 344, 345, 2072, 2085, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 151 193 194
;; live  kill	 14 [lr]
;; rd  in  	(21)
17, 65, 89, 109, 110, 128, 129, 303, 344, 345, 2072, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132
;; rd  gen 	(5)
15, 302, 2091, 2133, 2134
;; rd  kill	(21)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2091, 2133, 2134

;; Pred edge  16 [50.0%] 
(code_label 148 145 149 18 95 "" [1 uses])

(note 149 148 150 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 18 init/do_mounts.c:175 (set (reg/f:SI 193)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 18 init/do_mounts.c:175 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 18 init/do_mounts.c:175 (set (reg:SI 1 r1)
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)
        (nil)))

(call_insn/i 153 152 154 18 init/do_mounts.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 156 18 init/do_mounts.c:175 (set (reg:SI 194)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 156 154 157 18 init/do_mounts.c:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 194)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 18 init/do_mounts.c:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(24)
15, 65, 89, 109, 110, 128, 129, 302, 344, 345, 2072, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(24)
15, 65, 89, 109, 110, 128, 129, 302, 344, 345, 2072, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134
;; rd  gen 	(1)
2084
;; rd  kill	(9)
2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087

;; Pred edge  18 [50.0%]  (fallthru)
(note 158 157 159 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 162 19 init/do_mounts.c:174 (set (reg/v:SI 147 [ res ])
        (const_int 1048576 [0x100000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(25)
15, 65, 89, 109, 110, 128, 129, 302, 344, 345, 2072, 2084, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 24 [cc] 150 195
;; live  kill	 14 [lr]
;; rd  in  	(24)
15, 65, 89, 109, 110, 128, 129, 302, 344, 345, 2072, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134
;; rd  gen 	(4)
13, 301, 2090, 2135
;; rd  kill	(20)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2090, 2135

;; Pred edge  18 [50.0%] 
(code_label 162 159 163 20 96 "" [1 uses])

(note 163 162 164 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 165 20 init/do_mounts.c:178 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 165 164 166 20 init/do_mounts.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 166 165 168 20 init/do_mounts.c:178 (set (reg:SI 195)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 168 166 169 20 init/do_mounts.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 170 20 init/do_mounts.c:178 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 20 -> ( 39 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(26)
13, 65, 89, 109, 110, 128, 129, 301, 344, 345, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135


;; Succ edge  39 [61.0%] 
;; Succ edge  21 [39.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 196 197
;; live  kill	 14 [lr]
;; rd  in  	(26)
13, 65, 89, 109, 110, 128, 129, 301, 344, 345, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135
;; rd  gen 	(3)
11, 2136, 2137
;; rd  kill	(20)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2136, 2137

;; Pred edge  20 [39.0%]  (fallthru)
(note 170 169 171 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 21 init/do_mounts.c:180 (set (reg/f:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 172 171 173 21 init/do_mounts.c:180 (set (reg:SI 0 r0)
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 173 172 174 21 init/do_mounts.c:180 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 174 173 176 21 init/do_mounts.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 176 174 195 21 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
11, 65, 89, 109, 110, 128, 129, 301, 344, 345, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 25) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(34)
11, 65, 89, 109, 110, 128, 129, 321, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141
;; rd  gen 	(1)
322
;; rd  kill	(0)


;; Pred edge  25 [91.0%] 
(code_label 195 176 179 22 99 "" [1 uses])

(note 179 195 180 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 22 init/do_mounts.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 47 [0x2f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 181 180 182 22 init/do_mounts.c:182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(34)
11, 65, 89, 109, 110, 128, 129, 322, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141


;; Succ edge  23 [28.0%]  (fallthru)
;; Succ edge  24 [72.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 198 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 198 199
;; live  kill	
;; rd  in  	(34)
11, 65, 89, 109, 110, 128, 129, 322, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141
;; rd  gen 	(2)
2138, 2139
;; rd  kill	(2)
2138, 2139

;; Pred edge  22 [28.0%]  (fallthru)
(note 182 181 183 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 185 23 init/do_mounts.c:183 (set (reg:SI 198)
        (const_int 33 [0x21])) 167 {*arm_movsi_insn} (nil))

(insn 185 183 186 23 init/do_mounts.c:183 (set (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8])
        (subreg:QI (reg:SI 198) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 33 [0x21])
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(34)
11, 65, 89, 109, 110, 128, 129, 322, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 200 201
;; live  kill	
;; rd  in  	(34)
11, 65, 89, 109, 110, 128, 129, 322, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141
;; rd  gen 	(2)
2140, 2141
;; rd  kill	(2)
2140, 2141

;; Pred edge  22 [72.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 186 185 187 24 98 "" [1 uses])

(note 187 186 188 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 24 init/do_mounts.c:181 (set (reg/f:SI 200 [ p ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 24 init/do_mounts.c:181 (set (reg/f:SI 201)
        (plus:SI (reg/f:SI 200 [ p ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 190 189 191 24 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 201)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(34)
11, 65, 89, 109, 110, 128, 129, 322, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141


;; Succ edge  25 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 21 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(35)
11, 65, 89, 109, 110, 128, 129, 301, 322, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141
;; rd  gen 	(3)
321, 2070, 2071
;; rd  kill	(2)
2070, 2071

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%]  (fallthru,dfs_back)
(code_label 191 190 192 25 97 "" [0 uses])

(note 192 191 193 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 25 init/do_mounts.c:181 discrim 1 (set (reg/f:SI 140 [ p.1247 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 194 193 196 25 init/do_mounts.c:181 discrim 1 (set (reg:SI 139 [ temp.1248 ])
        (zero_extend:SI (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 196 194 197 25 init/do_mounts.c:181 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 197 196 198 25 init/do_mounts.c:181 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 25 -> ( 22 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; rd  out 	(34)
11, 65, 89, 109, 110, 128, 129, 321, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141


;; Succ edge  22 [91.0%] 
;; Succ edge  26 [9.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 147 202
;; live  kill	 14 [lr]
;; rd  in  	(34)
11, 65, 89, 109, 110, 128, 129, 321, 344, 345, 2070, 2071, 2072, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141
;; rd  gen 	(4)
9, 319, 2083, 2142
;; rd  kill	(28)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2142

;; Pred edge  25 [9.0%]  (fallthru)
(note 198 197 199 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 26 init/do_mounts.c:184 (set (reg/f:SI 202)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 200 199 201 26 init/do_mounts.c:184 (set (reg:SI 0 r0)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 201 200 202 26 init/do_mounts.c:184 (set (reg:SI 1 r1)
        (reg:SI 139 [ temp.1248 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 202 201 203 26 init/do_mounts.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 203 202 204 26 init/do_mounts.c:184 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 204 203 205 26 init/do_mounts.c:185 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 205 204 219 26 init/do_mounts.c:185 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 26 -> ( 40 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(36)
9, 65, 89, 109, 110, 128, 129, 319, 344, 345, 2070, 2071, 2072, 2083, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142


;; Succ edge  40 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 29) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149
;; live  gen 	
;; live  kill	
;; rd  in  	(43)
9, 65, 89, 109, 110, 128, 129, 317, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  29 [95.5%] 
(code_label 219 205 209 27 102 "" [1 uses])

(note 209 219 210 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 27 init/do_mounts.c:193 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 149 [ p.885 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(43)
9, 65, 89, 109, 110, 128, 129, 317, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147


;; Succ edge  28 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 24 [cc] 138 203
;; live  kill	
;; rd  in  	(44)
9, 65, 89, 109, 110, 128, 129, 317, 319, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147
;; rd  gen 	(3)
318, 2069, 2143
;; rd  kill	(2)
2069, 2143

;; Pred edge  27 [100.0%]  (fallthru,dfs_back)
;; Pred edge  26 [50.0%]  (fallthru)
(code_label 211 210 212 28 100 "" [0 uses])

(note 212 211 213 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 214 28 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 138 [ p.1250 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 214 213 215 28 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 203)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 215 214 216 28 init/do_mounts.c:192 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg/f:SI 203))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 216 215 217 28 init/do_mounts.c:192 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147
;; rd  out 	(43)
9, 65, 89, 109, 110, 128, 129, 318, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147


;; Succ edge  29 [95.5%]  (fallthru)
;; Succ edge  30 [4.5%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 149 204 205 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147
;; live  gen 	 24 [cc] 149 204 205 206 207
;; live  kill	
;; rd  in  	(43)
9, 65, 89, 109, 110, 128, 129, 318, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147
;; rd  gen 	(6)
317, 2089, 2144, 2145, 2146, 2147
;; rd  kill	(5)
2089, 2144, 2145, 2146, 2147

;; Pred edge  28 [95.5%]  (fallthru)
(note 217 216 218 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 220 29 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 149 [ p.885 ])
        (plus:SI (reg/f:SI 138 [ p.1250 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 220 218 221 29 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 204)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) 167 {*arm_movsi_insn} (nil))

(insn 221 220 222 29 init/do_mounts.c:192 discrim 2 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/f:SI 149 [ p.885 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 222 221 223 29 init/do_mounts.c:192 discrim 2 (set (reg:SI 206)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 204)
                    (reg:SI 205)) [0 _ctype S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 223 222 224 29 init/do_mounts.c:192 discrim 2 (set (reg:SI 207)
        (and:SI (reg:SI 206)
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 224 223 225 29 init/do_mounts.c:192 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 225 224 226 29 init/do_mounts.c:192 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 29 -> ( 27 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 149
;; rd  out 	(43)
9, 65, 89, 109, 110, 128, 129, 317, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147


;; Succ edge  27 [95.5%] 
;; Succ edge  30 [4.5%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147
;; live  gen 	 24 [cc] 208
;; live  kill	
;; rd  in  	(44)
9, 65, 89, 109, 110, 128, 129, 317, 318, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147
;; rd  gen 	(2)
316, 2148
;; rd  kill	(1)
2148

;; Pred edge  28 [4.5%] 
;; Pred edge  29 [4.5%]  (fallthru)
(code_label 226 225 227 30 101 "" [1 uses])

(note 227 226 228 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 30 init/do_mounts.c:194 (set (reg/f:SI 208)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 229 228 230 30 init/do_mounts.c:194 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg/f:SI 208))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 231 30 init/do_mounts.c:194 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 30 -> ( 40 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208
;; rd  out 	(44)
9, 65, 89, 109, 110, 128, 129, 316, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148


;; Succ edge  40 [10.1%] 
;; Succ edge  31 [89.9%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(44)
9, 65, 89, 109, 110, 128, 129, 316, 344, 345, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148
;; rd  gen 	(2)
315, 2068
;; rd  kill	(1)
2068

;; Pred edge  30 [89.9%]  (fallthru)
(note 231 230 232 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 233 31 init/do_mounts.c:194 discrim 1 (set (reg:SI 137 [ temp.1251 ])
        (zero_extend:SI (mem:QI (reg/f:SI 138 [ p.1250 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 233 232 234 31 init/do_mounts.c:194 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 235 31 init/do_mounts.c:194 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 31 -> ( 40 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147 208
;; rd  out 	(45)
9, 65, 89, 109, 110, 128, 129, 315, 344, 345, 2068, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148


;; Succ edge  40 [39.0%] 
;; Succ edge  32 [61.0%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u324(11){ }u325(13){ }u326(25){ }u327(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147 208
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
9, 65, 89, 109, 110, 128, 129, 315, 344, 345, 2068, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148
;; rd  gen 	(1)
314
;; rd  kill	(0)


;; Pred edge  31 [61.0%]  (fallthru)
(note 235 234 236 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 32 init/do_mounts.c:194 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 237 236 238 32 init/do_mounts.c:194 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3784 [0xec8])
        (nil)))
;; End of basic block 32 -> ( 40 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208
;; rd  out 	(45)
9, 65, 89, 109, 110, 128, 129, 314, 344, 345, 2068, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148


;; Succ edge  40 [37.8%] 
;; Succ edge  33 [62.2%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u330(11){ }u331(13){ }u332(25){ }u333(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 209 210 211 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 146 147 148 209 210 211 212
;; live  kill	 14 [lr]
;; rd  in  	(45)
9, 65, 89, 109, 110, 128, 129, 314, 344, 345, 2068, 2069, 2070, 2071, 2072, 2083, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148
;; rd  gen 	(9)
6, 311, 2078, 2082, 2088, 2149, 2150, 2151, 2152
;; rd  kill	(33)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2149, 2150, 2151, 2152

;; Pred edge  32 [62.2%]  (fallthru)
(note 238 237 239 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 240 33 init/do_mounts.c:198 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ p.1250 ])) 167 {*arm_movsi_insn} (nil))

(insn 240 239 241 33 init/do_mounts.c:198 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 241 240 242 33 init/do_mounts.c:198 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn 242 241 243 33 init/do_mounts.c:198 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 243 242 245 33 init/do_mounts.c:198 (set (reg:SI 148 [ D.52751 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 245 243 246 33 init/do_mounts.c:199 (set (reg/f:SI 209 [ p ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 246 245 248 33 init/do_mounts.c:199 (set (reg:SI 210)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 248 246 250 33 init/do_mounts.c:199 (set (mem:QI (reg/f:SI 209 [ p ]) [0 S1 A8])
        (subreg:QI (reg:SI 210) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 250 248 251 33 init/do_mounts.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 251 250 252 33 init/do_mounts.c:200 (set (reg:SI 1 r1)
        (reg:SI 148 [ D.52751 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 252 251 253 33 init/do_mounts.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 253 252 254 33 init/do_mounts.c:200 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 254 253 255 33 init/do_mounts.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 255 254 256 33 init/do_mounts.c:201 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 33 -> ( 40 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 208
;; rd  out 	(51)
6, 65, 89, 109, 110, 128, 129, 311, 344, 345, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152


;; Succ edge  40 [50.0%] 
;; Succ edge  34 [50.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u356(11){ }u357(13){ }u358(25){ }u359(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208
;; lr  def 	 24 [cc] 136 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 208
;; live  gen 	 24 [cc] 136 213 214
;; live  kill	
;; rd  in  	(51)
6, 65, 89, 109, 110, 128, 129, 311, 344, 345, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152
;; rd  gen 	(4)
310, 2067, 2153, 2154
;; rd  kill	(3)
2067, 2153, 2154

;; Pred edge  33 [50.0%]  (fallthru)
(note 256 255 257 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 259 34 init/do_mounts.c:205 (set (reg/f:SI 136 [ p.1253 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 259 257 260 34 init/do_mounts.c:205 (set (reg/f:SI 214)
        (plus:SI (reg/f:SI 208)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 260 259 261 34 init/do_mounts.c:205 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ p.1253 ])
            (reg/f:SI 214))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 261 260 262 34 init/do_mounts.c:205 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 34 -> ( 40 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; rd  out 	(54)
6, 65, 89, 109, 110, 128, 129, 310, 344, 345, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154


;; Succ edge  40 [39.0%] 
;; Succ edge  35 [61.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u367(11){ }u368(13){ }u369(25){ }u370(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 24 [cc] 215 216 217 218
;; live  kill	
;; rd  in  	(54)
6, 65, 89, 109, 110, 128, 129, 310, 344, 345, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154
;; rd  gen 	(5)
309, 2155, 2156, 2157, 2158
;; rd  kill	(4)
2155, 2156, 2157, 2158

;; Pred edge  34 [61.0%]  (fallthru)
(note 262 261 263 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 264 35 init/do_mounts.c:205 discrim 1 (set (reg/f:SI 215)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) 167 {*arm_movsi_insn} (nil))

(insn 264 263 265 35 init/do_mounts.c:205 discrim 1 (set (reg:SI 216)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 265 264 266 35 init/do_mounts.c:205 discrim 1 (set (reg:SI 217)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 215)
                    (reg:SI 216)) [0 _ctype S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 266 265 267 35 init/do_mounts.c:205 discrim 1 (set (reg:SI 218)
        (and:SI (reg:SI 217)
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 267 266 268 35 init/do_mounts.c:205 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 218)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 268 267 269 35 init/do_mounts.c:205 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 35 -> ( 40 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; rd  out 	(58)
6, 65, 89, 109, 110, 128, 129, 309, 344, 345, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158


;; Succ edge  40 [39.0%] 
;; Succ edge  36 [61.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u377(11){ }u378(13){ }u379(25){ }u380(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 135 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 24 [cc] 135 219
;; live  kill	
;; rd  in  	(58)
6, 65, 89, 109, 110, 128, 129, 309, 344, 345, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158
;; rd  gen 	(3)
308, 2066, 2159
;; rd  kill	(2)
2066, 2159

;; Pred edge  35 [61.0%]  (fallthru)
(note 269 268 271 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 271 269 272 36 init/do_mounts.c:205 discrim 2 (set (reg:SI 219)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 272 271 273 36 init/do_mounts.c:205 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 112 [0x70]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 273 272 274 36 init/do_mounts.c:205 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
        (nil)))
;; End of basic block 36 -> ( 40 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 148 208
;; rd  out 	(60)
6, 65, 89, 109, 110, 128, 129, 308, 344, 345, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159


;; Succ edge  40 [80.1%] 
;; Succ edge  37 [19.9%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u385(11){ }u386(13){ }u387(25){ }u388(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 148 208
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 147 148 208
;; live  gen 	 0 [r0] 1 [r1] 147 220 221 222
;; live  kill	 14 [lr]
;; rd  in  	(60)
6, 65, 89, 109, 110, 128, 129, 308, 344, 345, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2082, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159
;; rd  gen 	(5)
5, 2081, 2160, 2161, 2162
;; rd  kill	(30)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2160, 2161, 2162

;; Pred edge  36 [19.9%]  (fallthru)
(note 274 273 277 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 277 274 279 37 init/do_mounts.c:207 (set (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (subreg:QI (reg/v:SI 147 [ res ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 279 277 280 37 init/do_mounts.c:208 (set (reg:SI 0 r0)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 280 279 281 37 init/do_mounts.c:208 (set (reg:SI 1 r1)
        (reg:SI 148 [ D.52751 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 281 280 282 37 init/do_mounts.c:208 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 282 281 286 37 init/do_mounts.c:208 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(63)
5, 65, 89, 109, 110, 128, 129, 308, 344, 345, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2078, 2081, 2088, 2089, 2090, 2091, 2092, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u402(11){ }u403(13){ }u404(25){ }u405(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 147 223 224 225 226 227 228 229 230 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; live  gen 	 147 223 224 225 226 227 228 229 230 231
;; live  kill	
;; rd  in  	(25)
19, 65, 89, 109, 110, 128, 129, 327, 344, 345, 2093, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123, 2128, 2129, 2130
;; rd  gen 	(10)
2080, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171
;; rd  kill	(18)
2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171

;; Pred edge  15 [61.0%]  (fallthru)
(note 286 282 287 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 288 38 include/linux/kdev_t.h:52 (set (reg:SI 223)
        (lshiftrt:SI (reg:SI 153 [ D.52725 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 288 287 289 38 include/linux/kdev_t.h:52 (set (reg:SI 225)
        (const_int 1048320 [0xfff00])) 167 {*arm_movsi_insn} (nil))

(insn 289 288 290 38 include/linux/kdev_t.h:52 (set (reg:SI 224)
        (and:SI (reg:SI 223)
            (reg:SI 225))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 223)
            (const_int 1048320 [0xfff00]))
        (nil)))

(insn 290 289 291 38 include/linux/kdev_t.h:52 (set (reg:SI 226)
        (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 291 290 293 38 include/linux/kdev_t.h:52 (set (reg:SI 227)
        (ior:SI (reg:SI 224)
            (reg:SI 226))) 89 {*arm_iorsi3} (nil))

(insn 293 291 294 38 include/linux/kdev_t.h:52 (set (reg:SI 228)
        (and:SI (reg:SI 153 [ D.52725 ])
            (reg:SI 225))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 1048320 [0xfff00]))
        (nil)))

(insn 294 293 295 38 include/linux/kdev_t.h:52 (set (reg:SI 230)
        (lshiftrt:SI (reg:SI 228)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 295 294 296 38 include/linux/kdev_t.h:52 (set (reg:SI 231)
        (ashift:SI (reg:SI 230)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 296 295 299 38 include/linux/kdev_t.h:52 (set (reg/v:SI 147 [ res ])
        (ior:SI (reg:SI 227)
            (reg:SI 231))) 89 {*arm_iorsi3} (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(35)
19, 65, 89, 109, 110, 128, 129, 327, 344, 345, 2080, 2093, 2096, 2097, 2099, 2101, 2102, 2103, 2119, 2120, 2121, 2122, 2123, 2128, 2129, 2130, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 9 13 3 14 15 20) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u421(11){ }u422(13){ }u423(25){ }u424(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; rd  in  	(73)
13, 19, 21, 26, 32, 65, 89, 109, 110, 128, 129, 301, 305, 327, 329, 330, 335, 344, 345, 2063, 2064, 2065, 2072, 2073, 2075, 2076, 2077, 2086, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135
;; rd  gen 	(1)
2079
;; rd  kill	(9)
2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087

;; Pred edge  9 [30.2%] 
;; Pred edge  13 [62.2%] 
;; Pred edge  3 [62.2%] 
;; Pred edge  14 [62.2%] 
;; Pred edge  15 [39.0%] 
;; Pred edge  20 [61.0%] 
(code_label 299 296 300 39 87 "" [6 uses])

(note 300 299 301 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 39 init/do_mounts.c:213 (set (reg/v:SI 147 [ res ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; rd  out 	(73)
13, 19, 21, 26, 32, 65, 89, 109, 110, 128, 129, 301, 305, 327, 329, 330, 335, 344, 345, 2063, 2064, 2065, 2072, 2073, 2075, 2076, 2077, 2079, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 39 38 19 26 33 37 32 10 17 36 35 34 30 31 14) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u425(11){ }u426(13){ }u427(25){ }u428(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 160
;; live  kill	
;; rd  in  	(141)
5, 6, 9, 13, 15, 17, 19, 21, 26, 32, 65, 89, 109, 110, 128, 129, 301, 302, 303, 305, 308, 309, 310, 311, 314, 315, 316, 319, 327, 329, 330, 335, 344, 345, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171
;; rd  gen 	(2)
0, 2100
;; rd  kill	(1)
2100

;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  26 [50.0%] 
;; Pred edge  33 [50.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  32 [37.8%] 
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  36 [80.1%] 
;; Pred edge  35 [39.0%] 
;; Pred edge  34 [39.0%] 
;; Pred edge  30 [10.1%] 
;; Pred edge  31 [39.0%] 
;; Pred edge  14 [37.8%]  (fallthru)
(code_label 302 301 303 40 91 "" [8 uses])

(note 303 302 308 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 308 303 314 40 init/do_mounts.c:216 (set (reg/i:SI 0 r0)
        (reg/v:SI 147 [ res ])) 167 {*arm_movsi_insn} (nil))

(insn 314 308 0 40 init/do_mounts.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 40 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(133)
0, 65, 89, 109, 110, 128, 129, 301, 302, 303, 305, 308, 309, 310, 311, 314, 315, 316, 319, 327, 329, 330, 335, 344, 345, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 8.
deleting insn with uid = 13.
deleting insn with uid = 21.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 40.
deleting insn with uid = 75.
deleting insn with uid = 87.
deleting insn with uid = 141.
deleting insn with uid = 155.
deleting insn with uid = 167.
deleting insn with uid = 175.
deleting insn with uid = 184.
deleting insn with uid = 244.
deleting insn with uid = 247.
deleting insn with uid = 249.
deleting insn with uid = 258.
deleting insn with uid = 270.
deleting insn with uid = 275.
deleting insn with uid = 276.
deleting insn with uid = 278.
deleting insn with uid = 292.
deleting insn with uid = 304.
rescanning insn with uid = 39.
deleting insn with uid = 39.
verify found no changes in insn with uid = 271.
verify found no changes in insn with uid = 277.
ending the processing of deferred insns

;; Function prepare_namespace (prepare_namespace)[0:2718] (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
;;
;; Loop 1
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14 16
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 10 }
;; 5 succs { 7 6 }
;; 6 succs { 7 8 }
;; 7 succs { 19 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 19 11 }
;; 11 succs { 12 18 }
;; 12 succs { 13 18 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 14 17 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 20 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 39 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 39 (    2)

In insn 11, replacing
 (reg/f:SI 143)
 with (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)
Changes to insn 11 not profitable

In insn 14, replacing
 (reg/f:SI 142)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 14 not profitable

In insn 17, replacing
 (mult:SI (reg:SI 147)
        (reg:SI 146 [ root_delay ]))
 with (mult:SI (reg:SI 146 [ root_delay ])
        (const_int 1000 [0x3e8]))
Changes to insn 17 not recognized
 Setting REG_EQUAL note

In insn 28, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 28 not profitable

In insn 29, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 29 not profitable

In insn 30, replacing
 (plus:SI (reg/f:SI 148)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 30 not profitable

In insn 32, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 32 not profitable

In insn 36, replacing
 (reg/f:SI 155)
 with (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)
Changes to insn 36 not profitable

In insn 44, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 44 not profitable

In insn 48, replacing
 (reg/f:SI 159)
 with (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)
Changes to insn 48 not profitable

In insn 58, replacing
 (plus:SI (reg/f:SI 161)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 58 not profitable

In insn 67, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 67 not profitable

In insn 74, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 74 not profitable

In insn 78, replacing
 (reg/f:SI 168)
 with (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
Changes to insn 78 not profitable

In insn 86, replacing
 (reg/f:SI 148)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 86 not profitable

In insn 107, replacing
 (reg/f:SI 174)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 107 not profitable

In insn 108, replacing
 (plus:SI (reg/f:SI 174)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 108 not profitable

In insn 109, replacing
 (reg/f:SI 176)
 with (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)
Changes to insn 109 not profitable

In insn 126, replacing
 (plus:SI (reg/f:SI 179)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 126 not profitable

In insn 144, replacing
 (reg:SI 184)
 with (const_int 0 [0x0])
Changes to insn 144 not recognized
 Setting REG_EQUAL note

In insn 145, replacing
 (reg/f:SI 182)
 with (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
Changes to insn 145 not profitable

In insn 146, replacing
 (reg/f:SI 183)
 with (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)
Changes to insn 146 not profitable

In insn 147, replacing
 (reg:SI 184)
 with (const_int 0 [0x0])
Changes to insn 147 not profitable

In insn 150, replacing
 (reg/f:SI 182)
 with (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
Changes to insn 150 not profitable

In insn 151, replacing
 (reg/f:SI 182)
 with (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
Changes to insn 151 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 150.
deferring deletion of insn with uid = 107.
deferring deletion of insn with uid = 86.
deferring deletion of insn with uid = 82.
deferring deletion of insn with uid = 74.
deferring deletion of insn with uid = 68.
deferring deletion of insn with uid = 67.
deferring deletion of insn with uid = 52.
deferring deletion of insn with uid = 45.
deferring deletion of insn with uid = 44.
deferring deletion of insn with uid = 40.
deferring deletion of insn with uid = 33.
deferring deletion of insn with uid = 32.
deferring deletion of insn with uid = 29.
deferring deletion of insn with uid = 28.
deferring deletion of insn with uid = 14.
Deleted 16 trivially dead insns

Number of successful forward propagations: 0



prepare_namespace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,19u} r1={25d,7u} r2={22d,4u} r3={19d,1u} r11={1d,19u} r12={18d} r13={1d,37u} r14={17d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={27d,10u} r25={1d,19u} r26={1d,18u} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} r133={1d,2u} r134={1d,1u} r135={1d,1u} r136={1d} r137={1d,1u} r138={1d} r139={1d} r140={1d,2u} r141={1d,2u} r142={1d,3u} r143={1d,1u} r144={1d} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,12u} r149={1d,1u} r150={1d} r151={1d} r152={1d,7u} r153={1d} r154={1d} r155={1d,1u} r156={1d,2u} r157={1d} r158={1d} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d} r165={1d} r166={1d,1u} r167={1d} r168={1d,1u} r169={1d,2u} r170={1d} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,3u} r175={1d,1u} r176={1d,1u} r177={1d} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,3u} r183={1d,1u} r184={1d,2u} r185={1d} 
;;    total ref usage 2287{2085d,202u,0e} in 103{86 regular + 17 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,30] 1[30,25] 2[55,22] 3[77,19] 11[96,1] 12[97,18] 13[115,1] 14[116,17] 15[133,17] 16[150,17] 17[167,17] 18[184,17] 19[201,17] 20[218,17] 21[235,17] 22[252,17] 23[269,17] 24[286,27] 25[313,1] 26[314,1] 27[315,17] 28[332,17] 29[349,17] 30[366,17] 31[383,17] 32[400,17] 33[417,17] 34[434,17] 35[451,17] 36[468,17] 37[485,17] 38[502,17] 39[519,17] 40[536,17] 41[553,17] 42[570,17] 43[587,17] 44[604,17] 45[621,17] 46[638,17] 47[655,17] 48[672,17] 49[689,17] 50[706,17] 51[723,17] 52[740,17] 53[757,17] 54[774,17] 55[791,17] 56[808,17] 57[825,17] 58[842,17] 59[859,17] 60[876,17] 61[893,17] 62[910,17] 63[927,17] 64[944,17] 65[961,17] 66[978,17] 67[995,17] 68[1012,17] 69[1029,17] 70[1046,17] 71[1063,17] 72[1080,17] 73[1097,17] 74[1114,17] 75[1131,17] 76[1148,17] 77[1165,17] 78[1182,17] 79[1199,17] 80[1216,17] 81[1233,17] 82[1250,17] 83[1267,17] 84[1284,17] 85[1301,17] 86[1318,17] 87[1335,17] 88[1352,17] 89[1369,17] 90[1386,17] 91[1403,17] 92[1420,17] 93[1437,17] 94[1454,17] 95[1471,17] 96[1488,17] 97[1505,17] 98[1522,17] 99[1539,17] 100[1556,17] 101[1573,17] 102[1590,17] 103[1607,17] 104[1624,17] 105[1641,17] 106[1658,17] 107[1675,17] 108[1692,17] 109[1709,17] 110[1726,17] 111[1743,17] 112[1760,17] 113[1777,17] 114[1794,17] 115[1811,17] 116[1828,17] 117[1845,17] 118[1862,17] 119[1879,17] 120[1896,17] 121[1913,17] 122[1930,17] 123[1947,17] 124[1964,17] 125[1981,17] 126[1998,17] 127[2015,17] 133[2032,1] 134[2033,1] 135[2034,1] 136[2035,1] 137[2036,1] 138[2037,1] 139[2038,1] 140[2039,1] 141[2040,1] 142[2041,1] 143[2042,1] 144[2043,1] 145[2044,1] 146[2045,1] 147[2046,1] 148[2047,1] 149[2048,1] 150[2049,1] 151[2050,1] 152[2051,1] 153[2052,1] 154[2053,1] 155[2054,1] 156[2055,1] 157[2056,1] 158[2057,1] 159[2058,1] 160[2059,1] 161[2060,1] 162[2061,1] 163[2062,1] 164[2063,1] 165[2064,1] 166[2065,1] 167[2066,1] 168[2067,1] 169[2068,1] 170[2069,1] 171[2070,1] 172[2071,1] 173[2072,1] 174[2073,1] 175[2074,1] 176[2075,1] 177[2076,1] 178[2077,1] 179[2078,1] 180[2079,1] 181[2080,1] 182[2081,1] 183[2082,1] 184[2083,1] 185[2084,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 142
;; live  kill	
;; rd  in  	(10)
29, 54, 76, 95, 96, 114, 115, 132, 313, 314
;; rd  gen 	(3)
312, 2040, 2041
;; rd  kill	(29)
286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2040, 2041

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/do_mounts.c:468 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/do_mounts.c:468 (set (reg:SI 141 [ root_delay.909 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 142)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/do_mounts.c:468 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ root_delay.909 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:468 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(13)
29, 54, 76, 95, 96, 114, 115, 132, 312, 313, 314, 2040, 2041


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144 145 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 0 [r0] 1 [r1] 143 144 145 146 147
;; live  kill	 14 [lr]
;; rd  in  	(13)
29, 54, 76, 95, 96, 114, 115, 132, 312, 313, 314, 2040, 2041
;; rd  gen 	(5)
2042, 2043, 2044, 2045, 2046
;; rd  kill	(22)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 2042, 2043, 2044, 2045, 2046

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 init/do_mounts.c:469 (set (reg/f:SI 143)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 init/do_mounts.c:469 (set (reg:SI 0 r0)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)
        (nil)))

(insn 12 11 13 3 init/do_mounts.c:469 (set (reg:SI 1 r1)
        (reg:SI 141 [ root_delay.909 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 15 3 init/do_mounts.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 3 include/linux/delay.h:52 (set (reg:SI 146 [ root_delay ])
        (mem/c/i:SI (plus:SI (reg/f:SI 142)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/delay.h:52 (set (reg:SI 147)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 include/linux/delay.h:52 (set (reg:SI 145)
        (mult:SI (reg:SI 147)
            (reg:SI 146 [ root_delay ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg:SI 146 [ root_delay ])
            (const_int 1000 [0x3e8]))
        (nil)))

(insn 18 17 19 3 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 20 3 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
29, 54, 76, 95, 96, 114, 115, 312, 313, 314, 2040, 2041, 2042, 2043, 2044, 2045, 2046


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 149
;; live  kill	 14 [lr]
;; rd  in  	(18)
29, 54, 76, 95, 96, 114, 115, 132, 312, 313, 314, 2040, 2041, 2042, 2043, 2044, 2045, 2046
;; rd  gen 	(3)
308, 2047, 2048
;; rd  kill	(46)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2047, 2048

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 113 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 22 21 23 4 init/do_mounts.c:481 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_device_probe") [flags 0x41] <function_decl 0x11201180 wait_for_device_probe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 23 22 24 4 init/do_mounts.c:485 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 init/do_mounts.c:485 (set (reg:SI 149 [ saved_root_name ])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 148)
                    (const_int 16 [0x10])) [0 saved_root_name+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 25 24 26 4 init/do_mounts.c:485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149 [ saved_root_name ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 4 init/do_mounts.c:485 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; rd  out 	(19)
29, 54, 76, 95, 96, 114, 115, 308, 313, 314, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048


;; Succ edge  5 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 150 151 152 153 154 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 139 150 151 152 153 154 155 156
;; live  kill	 14 [lr]
;; rd  in  	(19)
29, 54, 76, 95, 96, 114, 115, 308, 313, 314, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048
;; rd  gen 	(10)
23, 288, 2038, 2049, 2050, 2051, 2052, 2053, 2054, 2055
;; rd  kill	(82)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2038, 2049, 2050, 2051, 2052, 2053, 2054, 2055

;; Pred edge  4 [100.0%]  (fallthru)
(note 27 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 27 31 5 init/do_mounts.c:486 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 148)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 31 30 34 5 init/do_mounts.c:486 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 34 31 35 5 init/do_mounts.c:487 (set (reg/f:SI 155)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 init/do_mounts.c:487 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 36 35 37 5 init/do_mounts.c:487 (set (reg:SI 1 r1)
        (reg/f:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)
        (nil)))

(insn 37 36 38 5 init/do_mounts.c:487 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 38 37 39 5 init/do_mounts.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 38 41 5 init/do_mounts.c:487 (set (reg:SI 156)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 41 39 42 5 init/do_mounts.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 5 init/do_mounts.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; rd  out 	(27)
23, 54, 76, 95, 96, 114, 115, 288, 313, 314, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055


;; Succ edge  7 [0.0%] 
;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(27)
23, 54, 76, 95, 96, 114, 115, 288, 313, 314, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055
;; rd  gen 	(7)
22, 287, 2037, 2056, 2057, 2058, 2059
;; rd  kill	(79)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2037, 2056, 2057, 2058, 2059

;; Pred edge  5 [100.0%]  (fallthru)
(note 43 42 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 43 47 6 init/do_mounts.c:488 (set (reg/f:SI 159)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 6 init/do_mounts.c:488 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 48 47 49 6 init/do_mounts.c:488 (set (reg:SI 1 r1)
        (reg/f:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)
        (nil)))

(insn 49 48 50 6 init/do_mounts.c:488 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 50 49 51 6 init/do_mounts.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 51 50 53 6 init/do_mounts.c:488 (set (reg:SI 160)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 53 51 54 6 init/do_mounts.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 6 init/do_mounts.c:487 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4285 [0x10bd])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; rd  out 	(32)
22, 54, 76, 95, 96, 114, 115, 287, 313, 314, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059


;; Succ edge  7 [57.1%]  (fallthru)
;; Succ edge  8 [42.9%] 

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 162 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 161 162 163
;; live  kill	 14 [lr]
;; rd  in  	(34)
22, 23, 54, 76, 95, 96, 114, 115, 287, 288, 313, 314, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059
;; rd  gen 	(3)
2060, 2061, 2062
;; rd  kill	(20)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 2060, 2061, 2062

;; Pred edge  5 [0.0%] 
;; Pred edge  6 [57.1%]  (fallthru)
(code_label 55 54 56 7 115 "" [1 uses])

(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 7 init/do_mounts.c:489 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 7 init/do_mounts.c:489 (set (reg/f:SI 162)
        (plus:SI (reg/f:SI 161)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 59 58 60 7 init/do_mounts.c:489 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 7 init/do_mounts.c:489 (set (reg:SI 0 r0)
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 61 60 62 7 init/do_mounts.c:489 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 163) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 62 61 65 7 init/do_mounts.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
22, 23, 54, 76, 95, 96, 114, 115, 287, 288, 313, 314, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 140 164 165 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136 137 140 164 165 166 167 168 169
;; live  kill	 14 [lr]
;; rd  in  	(32)
22, 54, 76, 95, 96, 114, 115, 287, 313, 314, 2037, 2038, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059
;; rd  gen 	(11)
17, 286, 2035, 2036, 2039, 2063, 2064, 2065, 2066, 2067, 2068
;; rd  kill	(83)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2035, 2036, 2039, 2063, 2064, 2065, 2066, 2067, 2068

;; Pred edge  6 [42.9%] 
(code_label 65 62 66 8 116 "" [1 uses])

(note 66 65 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 69 66 70 8 init/do_mounts.c:492 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 70 69 71 8 init/do_mounts.c:492 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 71 70 72 8 init/do_mounts.c:492 (set (reg:SI 137 [ ROOT_DEV.912 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 8 init/do_mounts.c:492 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 75 8 init/do_mounts.c:492 (set (mem/c/i:SI (reg/f:SI 166) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 137 [ ROOT_DEV.912 ])) 167 {*arm_movsi_insn} (nil))

(insn 75 73 76 8 init/do_mounts.c:493 (set (reg/f:SI 140 [ root_device_name.910 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 8 init/do_mounts.c:493 (set (reg/f:SI 168)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 8 init/do_mounts.c:493 (set (reg:SI 0 r0)
        (reg/f:SI 140 [ root_device_name.910 ])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 8 init/do_mounts.c:493 (set (reg:SI 1 r1)
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
        (nil)))

(insn 79 78 80 8 init/do_mounts.c:493 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 80 79 81 8 init/do_mounts.c:493 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 81 80 83 8 init/do_mounts.c:493 (set (reg:SI 169)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 83 81 84 8 init/do_mounts.c:493 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 85 8 init/do_mounts.c:493 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; rd  out 	(41)
17, 54, 76, 95, 96, 114, 115, 286, 313, 314, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; lr  def 	 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; live  gen 	 170 171
;; live  kill	
;; rd  in  	(41)
17, 54, 76, 95, 96, 114, 115, 286, 313, 314, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068
;; rd  gen 	(2)
2069, 2070
;; rd  kill	(2)
2069, 2070

;; Pred edge  8 [50.0%]  (fallthru)
(note 85 84 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 87 85 88 9 init/do_mounts.c:494 (set (reg/f:SI 171)
        (plus:SI (reg/f:SI 140 [ root_device_name.910 ])
            (const_int 5 [0x5]))) 4 {*arm_addsi3} (nil))

(insn 88 87 89 9 init/do_mounts.c:494 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(43)
17, 54, 76, 95, 96, 114, 115, 286, 313, 314, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(45)
17, 29, 54, 76, 95, 96, 114, 115, 286, 308, 313, 314, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070
;; rd  gen 	(3)
16, 301, 2034
;; rd  kill	(75)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2034

;; Pred edge  4 [0.0%] 
;; Pred edge  8 [50.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 89 88 90 10 114 "" [2 uses])

(note 90 89 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(call_insn 91 90 92 10 init/do_mounts.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("initrd_load") [flags 0x41] <function_decl 0x1212ce00 initrd_load>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 92 91 93 10 init/do_mounts.c:497 (set (reg:SI 135 [ D.52960 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 93 92 94 10 init/do_mounts.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.52960 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 94 93 95 10 init/do_mounts.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 10 -> ( 19 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(44)
16, 54, 76, 95, 96, 114, 115, 301, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070


;; Succ edge  19 [100.0%] 
;; Succ edge  11 [0.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 172 173
;; live  kill	
;; rd  in  	(44)
16, 54, 76, 95, 96, 114, 115, 301, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070
;; rd  gen 	(3)
300, 2071, 2072
;; rd  kill	(29)
286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2071, 2072

;; Pred edge  10 [0.0%]  (fallthru)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 11 init/do_mounts.c:501 (set (reg/f:SI 172)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 11 init/do_mounts.c:501 (set (reg:SI 173 [ ROOT_DEV ])
        (mem/c/i:SI (reg/f:SI 172) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 11 init/do_mounts.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173 [ ROOT_DEV ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 11 init/do_mounts.c:501 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(46)
16, 54, 76, 95, 96, 114, 115, 300, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 174 175
;; live  kill	
;; rd  in  	(46)
16, 54, 76, 95, 96, 114, 115, 300, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072
;; rd  gen 	(3)
299, 2073, 2074
;; rd  kill	(29)
286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2073, 2074

;; Pred edge  11 [50.0%]  (fallthru)
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 12 init/do_mounts.c:501 discrim 1 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 12 init/do_mounts.c:501 discrim 1 (set (reg:SI 175 [ root_wait ])
        (mem/c/i:SI (reg/f:SI 174) [0 root_wait+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 12 init/do_mounts.c:501 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175 [ root_wait ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 12 init/do_mounts.c:501 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 12 -> ( 13 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; rd  out 	(48)
16, 54, 76, 95, 96, 114, 115, 299, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; live  gen 	 0 [r0] 1 [r1] 176 177 178
;; live  kill	 14 [lr]
;; rd  in  	(48)
16, 54, 76, 95, 96, 114, 115, 299, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074
;; rd  gen 	(4)
14, 2075, 2076, 2077
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 2075, 2076, 2077

;; Pred edge  12 [0.0%]  (fallthru)
(note 105 104 106 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 108 13 init/do_mounts.c:502 (set (reg/f:SI 176)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)) 167 {*arm_movsi_insn} (nil))

(insn 108 106 109 13 init/do_mounts.c:502 (set (reg/f:SI 178)
        (plus:SI (reg/f:SI 174)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 109 108 110 13 init/do_mounts.c:502 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)
        (nil)))

(insn 110 109 111 13 init/do_mounts.c:502 (set (reg:SI 1 r1)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 111 110 121 13 init/do_mounts.c:502 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
14, 54, 76, 95, 96, 114, 115, 299, 313, 314, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(58)
9, 11, 54, 76, 95, 96, 114, 115, 293, 295, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080
;; rd  gen 	(0)

;; rd  kill	(17)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132

;; Pred edge  15 [29.0%] 
;; Pred edge  16 [91.0%] 
(code_label 121 111 114 14 120 "" [2 uses])

(note 114 121 115 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 115 114 116 14 init/do_mounts.c:506 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn 116 115 117 14 init/do_mounts.c:506 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(58)
9, 11, 54, 76, 95, 96, 114, 115, 293, 295, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(60)
9, 11, 14, 54, 76, 95, 96, 114, 115, 293, 295, 299, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080
;; rd  gen 	(3)
11, 295, 2033
;; rd  kill	(75)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2033

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
(code_label 117 116 118 15 119 "" [0 uses])

(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(call_insn 119 118 120 15 init/do_mounts.c:504 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("driver_probe_done") [flags 0x41] <function_decl 0x11201100 driver_probe_done>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 120 119 122 15 init/do_mounts.c:504 discrim 1 (set (reg:SI 134 [ D.52968 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 122 120 123 15 init/do_mounts.c:504 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.52968 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 123 122 124 15 init/do_mounts.c:504 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 15 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(56)
11, 54, 76, 95, 96, 114, 115, 295, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080


;; Succ edge  14 [29.0%] 
;; Succ edge  16 [71.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 179 180 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 179 180 181
;; live  kill	 14 [lr]
;; rd  in  	(56)
11, 54, 76, 95, 96, 114, 115, 295, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080
;; rd  gen 	(6)
9, 293, 2032, 2078, 2079, 2080
;; rd  kill	(78)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 2032, 2078, 2079, 2080

;; Pred edge  15 [71.0%]  (fallthru)
(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 16 init/do_mounts.c:505 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 16 init/do_mounts.c:505 (set (reg/f:SI 180)
        (plus:SI (reg/f:SI 179)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 127 126 128 16 init/do_mounts.c:505 (set (reg:SI 0 r0)
        (reg/f:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 128 127 129 16 init/do_mounts.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 130 16 init/do_mounts.c:505 (set (reg:SI 133 [ ROOT_DEV.916 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 16 init/do_mounts.c:504 discrim 2 (set (reg/f:SI 181)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 131 130 132 16 init/do_mounts.c:504 discrim 2 (set (mem/c/i:SI (reg/f:SI 181) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 133 [ ROOT_DEV.916 ])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 16 init/do_mounts.c:504 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ROOT_DEV.916 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 133 132 134 16 init/do_mounts.c:504 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 16 -> ( 14 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(56)
9, 54, 76, 95, 96, 114, 115, 293, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080


;; Succ edge  14 [91.0%] 
;; Succ edge  17 [9.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(56)
9, 54, 76, 95, 96, 114, 115, 293, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080
;; rd  gen 	(0)

;; rd  kill	(17)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132

;; Pred edge  16 [9.0%]  (fallthru)
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(call_insn 135 134 136 17 init/do_mounts.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x115d7000 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(56)
9, 54, 76, 95, 96, 114, 115, 293, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 11 12 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u175(11){ }u176(13){ }u177(25){ }u178(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(59)
9, 16, 54, 76, 95, 96, 114, 115, 293, 299, 300, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080
;; rd  gen 	(0)

;; rd  kill	(17)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 136 135 137 18 118 "" [2 uses])

(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 138 137 139 18 init/do_mounts.c:515 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_root") [flags 0x3] <function_decl 0x1212c980 mount_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(59)
9, 16, 54, 76, 95, 96, 114, 115, 293, 299, 300, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 10 7 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 182 183 184 185
;; live  kill	 14 [lr]
;; rd  in  	(67)
9, 16, 22, 23, 54, 76, 95, 96, 114, 115, 287, 288, 293, 299, 300, 301, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080
;; rd  gen 	(5)
4, 2081, 2082, 2083, 2084
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 2081, 2082, 2083, 2084

;; Pred edge  10 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 139 138 140 19 117 "" [1 uses])

(note 140 139 141 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 19 init/do_mounts.c:518 (set (reg/f:SI 182)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 19 init/do_mounts.c:518 (set (reg/f:SI 183)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 19 init/do_mounts.c:518 (set (reg:SI 184)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 144 143 145 19 init/do_mounts.c:518 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 145 144 146 19 init/do_mounts.c:518 (set (reg:SI 0 r0)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
        (nil)))

(insn 146 145 147 19 init/do_mounts.c:518 (set (reg:SI 1 r1)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)
        (nil)))

(insn 147 146 148 19 init/do_mounts.c:518 (set (reg:SI 2 r2)
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 148 147 149 19 init/do_mounts.c:518 (set (reg:SI 3 r3)
        (const_int 8192 [0x2000])) 167 {*arm_movsi_insn} (nil))

(call_insn 149 148 151 19 init/do_mounts.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 149 152 19 init/do_mounts.c:519 (set (reg:SI 0 r0)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
        (nil)))

(call_insn/j 152 151 0 19 init/do_mounts.c:519 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chroot") [flags 0x41] <function_decl 0x12103080 sys_chroot>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 19 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(68)
4, 54, 76, 95, 96, 114, 115, 287, 288, 293, 299, 300, 301, 313, 314, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 14.
deleting insn with uid = 28.
deleting insn with uid = 29.
deleting insn with uid = 32.
deleting insn with uid = 33.
deleting insn with uid = 40.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 52.
deleting insn with uid = 67.
deleting insn with uid = 68.
deleting insn with uid = 74.
deleting insn with uid = 82.
deleting insn with uid = 86.
deleting insn with uid = 107.
deleting insn with uid = 150.
ending the processing of deferred insns

;; Function match_dev_by_uuid (match_dev_by_uuid)[0:2705]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 27.
deferring deletion of insn with uid = 24.
deferring deletion of insn with uid = 21.
Deleted 3 trivially dead insns

Number of successful forward propagations: 0



match_dev_by_uuid

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={1d} r135={1d,3u} r136={1d} r137={1d,1u} r138={1d,1u} r139={1d,2u} r141={1d} 
;;    total ref usage 183{142d,41u,0e} in 15{14 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,3] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 133[133,2] 134[135,1] 135[136,1] 136[137,1] 137[138,1] 138[139,1] 139[140,1] 141[141,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137 138
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 30, 31
;; rd  gen 	(4)
29, 136, 138, 139
;; rd  kill	(6)
27, 28, 29, 136, 138, 139

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/do_mounts.c:70 (set (reg/v/f:SI 137 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 init/do_mounts.c:70 (set (reg/v/f:SI 138 [ data ])
        (reg:SI 1 r1 [ data ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/do_mounts.c:74 (set (reg/f:SI 135 [ D.52671 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ dev ])
                (const_int 372 [0x174])) [0 <variable>.info+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.52671 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 init/do_mounts.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 30, 31, 136, 138, 139


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 133
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 30, 31, 136, 138, 139
;; rd  gen 	(1)
134
;; rd  kill	(2)
133, 134

;; Pred edge  2 [15.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 14 3 init/do_mounts.c:82 (set (reg:SI 133 [ D.52676 ])
        (reg/f:SI 135 [ D.52671 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(15)
3, 6, 9, 11, 12, 14, 15, 17, 29, 30, 31, 134, 136, 138, 139


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 139 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 139 141
;; live  kill	 14 [lr]
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 30, 31, 136, 138, 139
;; rd  gen 	(6)
1, 27, 133, 135, 140, 141
;; rd  kill	(14)
0, 1, 2, 3, 16, 17, 27, 28, 29, 133, 134, 135, 140, 141

;; Pred edge  2 [85.0%] 
(code_label 14 11 15 4 125 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 init/do_mounts.c:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 init/do_mounts.c:77 (set (reg:SI 1 r1)
        (reg/f:SI 135 [ D.52671 ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 init/do_mounts.c:77 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 19 18 20 4 init/do_mounts.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 19 22 4 init/do_mounts.c:77 (set (reg:SI 139)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 22 20 23 4 init/do_mounts.c:80 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 23 22 25 4 init/do_mounts.c:80 (set (reg:SI 133 [ D.52676 ])
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
1, 6, 9, 11, 12, 14, 15, 27, 30, 31, 133, 135, 136, 138, 139, 140, 141


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 136
;; live  kill	
;; rd  in  	(21)
1, 3, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 31, 133, 134, 135, 136, 138, 139, 140, 141
;; rd  gen 	(2)
0, 137
;; rd  kill	(5)
0, 1, 2, 3, 137

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 25 23 26 5 126 "" [0 uses])

(note 26 25 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 26 37 5 init/do_mounts.c:83 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52676 ])) 167 {*arm_movsi_insn} (nil))

(insn 37 31 0 5 init/do_mounts.c:83 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 21.
deleting insn with uid = 24.
deleting insn with uid = 27.
ending the processing of deferred insns
