
;; Function error (error)[0:1311] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,2u} r135={1d,1u} 
;;    total ref usage 36{14d,22u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7, 8
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d4(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(4)
8, 11, 12, 13
;; rd  kill	(4)
8, 11, 12, 13
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d0(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d12(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 135 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d8(bb 2 insn 8) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d4(bb 0 insn -1) }u9(13){ d6(bb 0 insn -1) }u10(25){ d9(bb 0 insn -1) }u11(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 133 { d11(bb 2 insn 2) }
;;      reg 134 { d12(bb 2 insn 6) }

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d4(bb 0 insn -1) }u15(13){ d6(bb 0 insn -1) }u16(25){ d9(bb 0 insn -1) }u17(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ d4(bb 0 insn -1) }u19(13){ d6(bb 0 insn -1) }u20(14){ d7(bb 0 insn -1) }u21(25){ d9(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
Processing use of (reg 133 [ x ]) in insn 12:
  Adding insn 2 to worklist
Processing use of (reg 134) in insn 12:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135 [ message ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134) in insn 7:


error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,2u} r135={1d,1u} 
;;    total ref usage 36{14d,22u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7, 8
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 24[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 9, 10
;; rd  gen 	(4)
8, 11, 12, 13
;; rd  kill	(4)
8, 11, 12, 13

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/initramfs.c:14 (set (reg/v/f:SI 133 [ x ])
        (reg:SI 0 r0 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ x ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/initramfs.c:15 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:15 (set (reg/f:SI 135 [ message ])
        (mem/f/c/i:SI (reg/f:SI 134) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ message ])
        (nil)))

(jump_insn 9 8 10 2 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  3 [21.6%]  (fallthru)
;; Succ edge  4 [78.4%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [21.6%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 18 3 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 134) [0 message+0 S4 A32])
        (reg/v/f:SI 133 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ x ])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [78.4%] 
(code_label 18 12 21 4 3 "" [1 uses])

(note 21 18 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_start (do_start)[0:1321] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


do_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r137={1d,14u} r142={1d,1u} r145={1d,1u,1d} r146={1d,1u} r147={1d,1u} r149={1d,1u} r151={1d,1u} r155={1d,1u} r157={1d,1u} r159={1d,1u} 
;;    total ref usage 79{26d,52u,1e} in 28{28 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,2] 25[11,1] 26[12,1] 133[13,1] 134[14,1] 135[15,1] 137[16,1] 142[17,1] 145[18,1] 146[19,1] 147[20,1] 149[21,1] 151[22,1] 155[23,1] 157[24,1] 159[25,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d11(25){ }d12(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d11(bb 0 insn -1) }u3(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  gen 	(4)
10, 13, 15, 16
;; rd  kill	(5)
9, 10, 13, 15, 16
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 8
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 9
;;      reg 133 { d13(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 24 { d10(bb 2 insn 9) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d5(bb 0 insn -1) }u9(13){ d7(bb 0 insn -1) }u10(25){ d11(bb 0 insn -1) }u11(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; lr  def 	 24 [cc] 134 142 145 146 147 149 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 134 142 145 146 147 149 151
;; live  kill	 24 [cc]
;; rd  in  	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16
;; rd  gen 	(7)
14, 17, 18, 19, 20, 21, 22
;; rd  kill	(9)
9, 10, 14, 17, 18, 19, 20, 21, 22
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 13
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 15
;;      reg 134 { d14(bb 3 insn 13) }
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 17
;;      reg 134 { d14(bb 3 insn 13) }
;;   UD chains for insn luid 3 uid 18
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 142 { d17(bb 3 insn 17) }
;;   UD chains for insn luid 4 uid 21
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 23
;;      reg 145 { d18(bb 3 insn 21) }
;;      reg 146 { d19(bb 3 insn 22) }
;;   eq_note reg 145 { }
;;   UD chains for insn luid 7 uid 24
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 147 { d20(bb 3 insn 23) }
;;   UD chains for insn luid 8 uid 26
;;      reg 133 { d13(bb 2 insn 8) }
;;   UD chains for insn luid 9 uid 27
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 149 { d21(bb 3 insn 26) }
;;   UD chains for insn luid 11 uid 30
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 151 { d22(bb 3 insn 29) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ d5(bb 0 insn -1) }u30(13){ d7(bb 0 insn -1) }u31(25){ d11(bb 0 insn -1) }u32(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 155 157 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 155 157 159
;; live  kill	
;; rd  in  	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16
;; rd  gen 	(3)
23, 24, 25
;; rd  kill	(3)
23, 24, 25
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 23, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 135 { d15(bb 2 insn 6) }
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 38
;;      reg 135 { d15(bb 2 insn 6) }
;;      reg 137 { d16(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 41
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 155 { d23(bb 4 insn 40) }
;;   UD chains for insn luid 5 uid 44
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 157 { d24(bb 4 insn 43) }
;;   UD chains for insn luid 7 uid 47
;;      reg 137 { d16(bb 2 insn 5) }
;;      reg 159 { d25(bb 4 insn 46) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d5(bb 0 insn -1) }u44(13){ d7(bb 0 insn -1) }u45(25){ d11(bb 0 insn -1) }u46(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(24)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 60
;;      reg 0 { d0(bb 5 insn 54) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u48(0){ d0(bb 5 insn 54) }u49(11){ d5(bb 0 insn -1) }u50(13){ d7(bb 0 insn -1) }u51(14){ d8(bb 0 insn -1) }u52(25){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(24)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 54) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 65 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
  Adding insn 54 to worklist
Processing use of (reg 0 r0) in insn 60:
Processing use of (reg 135 [ header_buf.335 ]) in insn 36:
  Adding insn 6 to worklist
Processing use of (reg 137) in insn 36:
  Adding insn 5 to worklist
Processing use of (reg 137) in insn 6:
Processing use of (reg 135 [ header_buf.335 ]) in insn 38:
Processing use of (reg 137) in insn 38:
Processing use of (reg 137) in insn 41:
Processing use of (reg 155) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 137) in insn 44:
Processing use of (reg 157) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 137) in insn 47:
Processing use of (reg 159) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 134 [ victim.332 ]) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 137) in insn 15:
Processing use of (reg 137) in insn 13:
Processing use of (reg 137) in insn 18:
Processing use of (reg 142) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 134 [ victim.332 ]) in insn 17:
Processing use of (reg 137) in insn 24:
Processing use of (reg 147) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 145 [ this_header ]) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 146) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 137) in insn 21:
Processing use of (reg 137) in insn 27:
Processing use of (reg 149) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 133 [ count.331 ]) in insn 26:
  Adding insn 8 to worklist
Processing use of (reg 137) in insn 8:
Processing use of (reg 137) in insn 30:
Processing use of (reg 151) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 133 [ count.331 ]) in insn 9:


do_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r137={1d,14u} r142={1d,1u} r145={1d,1u,1d} r146={1d,1u} r147={1d,1u} r149={1d,1u} r151={1d,1u} r155={1d,1u} r157={1d,1u} r159={1d,1u} 
;;    total ref usage 79{26d,52u,1e} in 28{28 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,2] 25[11,1] 26[12,1] 133[13,1] 134[14,1] 135[15,1] 137[16,1] 142[17,1] 145[18,1] 146[19,1] 147[20,1] 149[21,1] 151[22,1] 155[23,1] 157[24,1] 159[25,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  gen 	(4)
10, 13, 15, 16
;; rd  kill	(5)
9, 10, 13, 15, 16

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:200 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:200 (set (reg/f:SI 135 [ header_buf.335 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 header_buf+0 S4 A32])
        (nil)))

(insn 8 6 9 2 init/initramfs.c:184 (set (reg:SI 133 [ count.331 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 9 8 10 2 init/initramfs.c:184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ count.331 ])
            (const_int 109 [0x6d]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 init/initramfs.c:184 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; lr  def 	 24 [cc] 134 142 145 146 147 149 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 134 142 145 146 147 149 151
;; live  kill	 24 [cc]
;; rd  in  	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16
;; rd  gen 	(7)
14, 17, 18, 19, 20, 21, 22
;; rd  kill	(9)
9, 10, 14, 17, 18, 19, 20, 21, 22

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 15 3 init/initramfs.c:185 (set (reg/f:SI 134 [ victim.332 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 15 13 17 3 init/initramfs.c:185 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 134 [ victim.332 ])) 167 {*arm_movsi_insn} (nil))

(insn 17 15 18 3 init/initramfs.c:172 (set (reg/f:SI 142)
        (plus:SI (reg/f:SI 134 [ victim.332 ])
            (const_int 110 [0x6e]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 134 [ victim.332 ])
        (nil)))

(insn 18 17 21 3 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))

(insn 21 18 22 3 init/initramfs.c:173 (set (reg:DI 145 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 137)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 22 21 23 3 init/initramfs.c:173 (set (reg:DI 146)
        (const_int 110 [0x6e])) 163 {*arm_movdi} (nil))

(insn 23 22 24 3 init/initramfs.c:173 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg:DI 145 [ this_header ])
                    (reg:DI 146)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 146)
        (expr_list:REG_DEAD (reg:DI 145 [ this_header ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 145 [ this_header ])
                        (const_int 110 [0x6e]))
                    (nil))))))

(insn 24 23 26 3 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 137)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 147)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 147)
        (nil)))

(insn 26 24 27 3 init/initramfs.c:174 (set (reg:SI 149)
        (plus:SI (reg:SI 133 [ count.331 ])
            (const_int -110 [0xffffffffffffff92]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 133 [ count.331 ])
        (nil)))

(insn 27 26 29 3 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 29 27 30 3 init/initramfs.c:187 (set (reg:SI 151)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 65 3 init/initramfs.c:187 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (expr_list:REG_EQUAL (const_int 2 [0x2])
                (nil)))))

(jump_insn 65 30 66 3 (set (pc)
        (label_ref 48)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22


;; Succ edge  5 [100.0%] 

(barrier 66 65 33)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 155 157 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 155 157 159
;; live  kill	
;; rd  in  	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16
;; rd  gen 	(3)
23, 24, 25
;; rd  kill	(3)
23, 24, 25

;; Pred edge  2 [100.0%] 
(code_label 33 66 34 4 7 "" [1 uses])

(note 34 33 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 38 4 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 135 [ header_buf.335 ])) 167 {*arm_movsi_insn} (nil))

(insn 38 36 40 4 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 135 [ header_buf.335 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ header_buf.335 ])
        (nil)))

(insn 40 38 41 4 init/initramfs.c:190 (set (reg:SI 155)
        (const_int 110 [0x6e])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 43 4 init/initramfs.c:190 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 110 [0x6e])
            (nil))))

(insn 43 41 44 4 init/initramfs.c:191 (set (reg:SI 157)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 46 4 init/initramfs.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 46 44 47 4 init/initramfs.c:192 (set (reg:SI 159)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 4 init/initramfs.c:192 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 23, 24, 25


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(24)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 48 47 49 5 8 "" [1 uses])

(note 49 48 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 49 60 5 init/initramfs.c:202 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 54 0 5 init/initramfs.c:202 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_skip (do_skip)[0:1324] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


do_skip

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,7u} r12={1d} r13={1d,7u} r14={1d,1u} r24={4d,3u} r25={1d,7u} r26={1d,6u} r133={1d,3u} r134={2d,1u} r136={1d,3u} r137={1d,3u} r138={1d,3u} r140={1d,4u} r142={1d,1u} r144={1d,4u} r146={1d,1u} r147={1d,1u} r150={1d,1u} r151={1d,6u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r162={1d,1u} r164={1d,2u} r165={1d,1u} 
;;    total ref usage 109{36d,73u,0e} in 36{36 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,4] 25[13,1] 26[14,1] 133[15,1] 134[16,2] 136[18,1] 137[19,1] 138[20,1] 140[21,1] 142[22,1] 144[23,1] 146[24,1] 147[25,1] 150[26,1] 151[27,1] 153[28,1] 154[29,1] 156[30,1] 157[31,1] 159[32,1] 162[33,1] 164[34,1] 165[35,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d13(25){ }d14(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d13(bb 0 insn -1) }u3(26){ d14(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138 140 142 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138 140 142 164 165
;; live  kill	 24 [cc]
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14
;; rd  gen 	(8)
11, 18, 19, 20, 21, 22, 34, 35
;; rd  kill	(11)
9, 10, 11, 12, 18, 19, 20, 21, 22, 34, 35
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }
;;   reg 26 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 140 { d21(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 8
;;      reg 140 { d21(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 9
;;      reg 137 { d19(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 138 { d20(bb 2 insn 6) }
;;      reg 142 { d22(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 80
;;      reg 140 { d21(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 81
;;      reg 140 { d21(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 13
;;      reg 136 { d18(bb 2 insn 10) }
;;      reg 165 { d35(bb 2 insn 81) }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d11(bb 2 insn 13) }

( 2 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d5(bb 0 insn -1) }u15(13){ d7(bb 0 insn -1) }u16(25){ d13(bb 0 insn -1) }u17(26){ d14(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }
;;   reg 26 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 24 { d11(bb 2 insn 13) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d5(bb 0 insn -1) }u20(13){ d7(bb 0 insn -1) }u21(25){ d13(bb 0 insn -1) }u22(26){ d14(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(1)
10
;; rd  kill	(4)
9, 10, 11, 12
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 18, 19, 20, 21, 22, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }
;;   reg 26 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 136 { d18(bb 2 insn 10) }
;;      reg 164 { d34(bb 2 insn 80) }
;;   UD chains for insn luid 1 uid 18
;;      reg 24 { d10(bb 4 insn 17) }

( 4 2 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ d5(bb 0 insn -1) }u27(13){ d7(bb 0 insn -1) }u28(25){ d13(bb 0 insn -1) }u29(26){ d14(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 134 144 146 147 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 134 144 146 147 150
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(5)
17, 23, 24, 25, 26
;; rd  kill	(6)
16, 17, 23, 24, 25, 26
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(24)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }
;;   reg 26 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 27
;;      reg 144 { d23(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 28
;;      reg 137 { d19(bb 2 insn 8) }
;;      reg 146 { d24(bb 5 insn 27) }
;;   UD chains for insn luid 3 uid 29
;;      reg 144 { d23(bb 5 insn 25) }
;;      reg 147 { d25(bb 5 insn 28) }
;;   UD chains for insn luid 4 uid 31
;;      reg 136 { d18(bb 2 insn 10) }
;;      reg 144 { d23(bb 5 insn 25) }
;;   UD chains for insn luid 6 uid 34
;;      reg 144 { d23(bb 5 insn 25) }
;;      reg 150 { d26(bb 5 insn 33) }

( 3 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ d5(bb 0 insn -1) }u40(13){ d7(bb 0 insn -1) }u41(25){ d13(bb 0 insn -1) }u42(26){ d14(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 164
;; lr  def 	 24 [cc] 133 134 151 153 154 156 157 159 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; live  gen 	 133 134 151 153 154 156 157 159 162
;; live  kill	 24 [cc]
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(9)
15, 16, 27, 28, 29, 30, 31, 32, 33
;; rd  kill	(14)
9, 10, 11, 12, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(26)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }
;;   reg 26 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 138 { d20(bb 2 insn 6) }
;;      reg 164 { d34(bb 2 insn 80) }
;;   UD chains for insn luid 2 uid 43
;;      reg 151 { d27(bb 6 insn 41) }
;;   UD chains for insn luid 3 uid 44
;;      reg 133 { d15(bb 6 insn 40) }
;;      reg 153 { d28(bb 6 insn 43) }
;;   UD chains for insn luid 4 uid 45
;;      reg 151 { d27(bb 6 insn 41) }
;;      reg 154 { d29(bb 6 insn 44) }
;;   UD chains for insn luid 5 uid 47
;;      reg 133 { d15(bb 6 insn 40) }
;;   UD chains for insn luid 6 uid 48
;;      reg 138 { d20(bb 2 insn 6) }
;;      reg 156 { d30(bb 6 insn 47) }
;;   UD chains for insn luid 7 uid 49
;;      reg 151 { d27(bb 6 insn 41) }
;;      reg 157 { d31(bb 6 insn 48) }
;;   UD chains for insn luid 8 uid 51
;;      reg 133 { d15(bb 6 insn 40) }
;;      reg 137 { d19(bb 2 insn 8) }
;;   UD chains for insn luid 9 uid 52
;;      reg 151 { d27(bb 6 insn 41) }
;;      reg 159 { d32(bb 6 insn 51) }
;;   UD chains for insn luid 10 uid 55
;;      reg 151 { d27(bb 6 insn 41) }
;;   UD chains for insn luid 11 uid 56
;;      reg 151 { d27(bb 6 insn 41) }
;;      reg 162 { d33(bb 6 insn 55) }

( 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ d5(bb 0 insn -1) }u63(13){ d7(bb 0 insn -1) }u64(25){ d13(bb 0 insn -1) }u65(26){ d14(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(33)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }
;;   reg 26 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 134 { d17(bb 5 insn 35) d16(bb 6 insn 57) }
;;   UD chains for insn luid 1 uid 70
;;      reg 0 { d0(bb 7 insn 64) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u68(0){ d0(bb 7 insn 64) }u69(11){ d5(bb 0 insn -1) }u70(13){ d7(bb 0 insn -1) }u71(14){ d8(bb 0 insn -1) }u72(25){ d13(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(33)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 7 insn 64) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d13(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 16 to worklist
  Adding insn 18 to worklist
  Adding insn 82 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 56 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 70 to worklist
Finished finding needed instructions:
  Adding insn 64 to worklist
Processing use of (reg 134 [ D.25913 ]) in insn 64:
  Adding insn 35 to worklist
  Adding insn 57 to worklist
Processing use of (reg 0 r0) in insn 70:
Processing use of (reg 151) in insn 45:
  Adding insn 41 to worklist
Processing use of (reg 154) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 133 [ D.25916 ]) in insn 44:
  Adding insn 40 to worklist
Processing use of (reg 153 [ victim ]) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 151) in insn 43:
Processing use of (subreg (reg 138 [ this_header.355 ]) 0) in insn 40:
  Adding insn 6 to worklist
Processing use of (reg 164 [ next_header.357 ]) in insn 40:
  Adding insn 80 to worklist
Processing use of (reg 140) in insn 80:
  Adding insn 5 to worklist
Processing use of (reg 140) in insn 6:
Processing use of (reg 151) in insn 49:
Processing use of (reg 157) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 138 [ this_header.355 ]) in insn 48:
Processing use of (reg 156 [ D.25916 ]) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 133 [ D.25916 ]) in insn 47:
Processing use of (reg 151) in insn 52:
Processing use of (reg 159) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 133 [ D.25916 ]) in insn 51:
Processing use of (reg 137 [ count.356 ]) in insn 51:
  Adding insn 8 to worklist
Processing use of (reg 140) in insn 8:
Processing use of (reg 151) in insn 56:
Processing use of (reg 162 [ next_state ]) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 151) in insn 55:
Processing use of (reg 144) in insn 29:
  Adding insn 25 to worklist
Processing use of (reg 147) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 137 [ count.356 ]) in insn 28:
Processing use of (reg 146 [ victim ]) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 144) in insn 27:
Processing use of (reg 136 [ D.25909 ]) in insn 31:
  Adding insn 10 to worklist
Processing use of (reg 144) in insn 31:
Processing use of (reg 138 [ this_header.355 ]) in insn 10:
Processing use of (reg 142 [ count.356 ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137 [ count.356 ]) in insn 9:
Processing use of (reg 144) in insn 34:
Processing use of (reg 150) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 136 [ D.25909 ]) 0) in insn 17:
Processing use of (reg 164 [ next_header.357 ]) in insn 17:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 13 to worklist
Processing use of (subreg (reg 136 [ D.25909 ]) 4) in insn 13:
Processing use of (reg 165 [ next_header.357+4 ]) in insn 13:
  Adding insn 81 to worklist
Processing use of (reg 140) in insn 81:
Processing use of (reg 24 cc) in insn 14:


do_skip

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,7u} r12={1d} r13={1d,7u} r14={1d,1u} r24={4d,3u} r25={1d,7u} r26={1d,6u} r133={1d,3u} r134={2d,1u} r136={1d,3u} r137={1d,3u} r138={1d,3u} r140={1d,4u} r142={1d,1u} r144={1d,4u} r146={1d,1u} r147={1d,1u} r150={1d,1u} r151={1d,6u} r153={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r162={1d,1u} r164={1d,2u} r165={1d,1u} 
;;    total ref usage 109{36d,73u,0e} in 36{36 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,4] 25[13,1] 26[14,1] 133[15,1] 134[16,2] 136[18,1] 137[19,1] 138[20,1] 140[21,1] 142[22,1] 144[23,1] 146[24,1] 147[25,1] 150[26,1] 151[27,1] 153[28,1] 154[29,1] 156[30,1] 157[31,1] 159[32,1] 162[33,1] 164[34,1] 165[35,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138 140 142 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138 140 142 164 165
;; live  kill	 24 [cc]
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14
;; rd  gen 	(8)
11, 18, 19, 20, 21, 22, 34, 35
;; rd  kill	(11)
9, 10, 11, 12, 18, 19, 20, 21, 22, 34, 35

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:250 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:250 (set (reg:DI 138 [ this_header.355 ])
        (mem/c/i:DI (plus:SI (reg/f:SI 140)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 8 6 9 2 init/initramfs.c:250 (set (reg:SI 137 [ count.356 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 9 8 10 2 init/initramfs.c:250 (set (reg:DI 142 [ count.356 ])
        (zero_extend:DI (reg:SI 137 [ count.356 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 10 9 80 2 init/initramfs.c:250 (parallel [
            (set (reg:DI 136 [ D.25909 ])
                (plus:DI (reg:DI 142 [ count.356 ])
                    (reg:DI 138 [ this_header.355 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 142 [ count.356 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 80 10 81 2 init/initramfs.c:250 (set (reg:SI 164 [ next_header.357 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 48 [0x30])) [0 next_header+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 48 [0x30]))) [0 next_header+0 S4 A64])
        (nil)))

(insn 81 80 13 2 init/initramfs.c:250 (set (reg:SI 165 [ next_header.357+4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 52 [0x34])) [0 next_header+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 52 [0x34]))) [0 next_header+4 S4 A32])
            (nil))))

(insn 13 81 14 2 init/initramfs.c:250 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ next_header.357+4 ])
            (subreg:SI (reg:DI 136 [ D.25909 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165 [ next_header.357+4 ])
        (nil)))

(jump_insn 14 13 72 2 init/initramfs.c:250 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [50.0%]  (fallthru)
(note 72 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 16 72 73 3 init/initramfs.c:250 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(1)
10
;; rd  kill	(4)
9, 10, 11, 12

;; Pred edge  3 [29.0%]  (fallthru)
(note 73 16 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 73 18 4 init/initramfs.c:250 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ next_header.357 ])
            (subreg:SI (reg:DI 136 [ D.25909 ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 79 4 init/initramfs.c:250 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 18, 19, 20, 21, 22, 34, 35


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 134 144 146 147 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 134 144 146 147 150
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(5)
17, 23, 24, 25, 26
;; rd  kill	(6)
16, 17, 23, 24, 25, 26

;; Pred edge  4 [50.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 79 18 24 5 19 "" [1 uses])

(note 24 79 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 27 5 init/initramfs.c:172 (set (reg/f:SI 144)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 27 25 28 5 init/initramfs.c:172 (set (reg/f:SI 146 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 28 27 29 5 init/initramfs.c:172 (set (reg:SI 147)
        (plus:SI (reg/f:SI 146 [ victim ])
            (reg:SI 137 [ count.356 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 146 [ victim ])
        (expr_list:REG_DEAD (reg:SI 137 [ count.356 ])
            (nil))))

(insn 29 28 31 5 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 31 29 33 5 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 144)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 136 [ D.25909 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 136 [ D.25909 ])
        (nil)))

(insn 33 31 34 5 init/initramfs.c:174 (set (reg:SI 150)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg/f:SI 144)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 35 34 82 5 init/initramfs.c:252 (set (reg:SI 134 [ D.25913 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 82 35 83 5 init/initramfs.c:252 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(24)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 34, 35


;; Succ edge  7 [100.0%] 

(barrier 83 82 38)

;; Start of basic block ( 3 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 164
;; lr  def 	 24 [cc] 133 134 151 153 154 156 157 159 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; live  gen 	 133 134 151 153 154 156 157 159 162
;; live  kill	 24 [cc]
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 34, 35
;; rd  gen 	(9)
15, 16, 27, 28, 29, 30, 31, 32, 33
;; rd  kill	(14)
9, 10, 11, 12, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33

;; Pred edge  3 [71.0%] 
;; Pred edge  4 [50.0%] 
(code_label 38 83 39 6 15 "" [2 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 6 init/initramfs.c:254 (set (reg:SI 133 [ D.25916 ])
        (minus:SI (reg:SI 164 [ next_header.357 ])
            (subreg:SI (reg:DI 138 [ this_header.355 ]) 0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 164 [ next_header.357 ])
        (nil)))

(insn 41 40 43 6 init/initramfs.c:172 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 43 41 44 6 init/initramfs.c:172 (set (reg/f:SI 153 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 44 43 45 6 init/initramfs.c:172 (set (reg:SI 154)
        (plus:SI (reg/f:SI 153 [ victim ])
            (reg:SI 133 [ D.25916 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 153 [ victim ])
        (nil)))

(insn 45 44 47 6 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 47 45 48 6 init/initramfs.c:173 (set (reg:DI 156 [ D.25916 ])
        (zero_extend:DI (reg:SI 133 [ D.25916 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 48 47 49 6 init/initramfs.c:173 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 156 [ D.25916 ])
                    (reg:DI 138 [ this_header.355 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 156 [ D.25916 ])
        (expr_list:REG_DEAD (reg:DI 138 [ this_header.355 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 49 48 51 6 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 151)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 157)
        (nil)))

(insn 51 49 52 6 init/initramfs.c:174 (set (reg:SI 159)
        (minus:SI (reg:SI 137 [ count.356 ])
            (reg:SI 133 [ D.25916 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 137 [ count.356 ])
        (expr_list:REG_DEAD (reg:SI 133 [ D.25916 ])
            (nil))))

(insn 52 51 55 6 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 55 52 56 6 init/initramfs.c:255 (set (reg:SI 162 [ next_state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 44 [0x2c]))) [0 next_state+0 S4 A32])
        (nil)))

(insn 56 55 57 6 init/initramfs.c:255 (set (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162 [ next_state ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162 [ next_state ])
        (expr_list:REG_DEAD (reg/f:SI 151)
            (nil))))

(insn 57 56 58 6 init/initramfs.c:256 (set (reg:SI 134 [ D.25913 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(26)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(33)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 58 57 59 7 17 "" [1 uses])

(note 59 58 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 64 59 70 7 init/initramfs.c:258 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25913 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.25913 ])
        (nil)))

(insn 70 64 0 7 init/initramfs.c:258 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_reset (do_reset)[0:1325] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)


do_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,12u} r12={1d} r13={1d,12u} r14={1d,1u} r24={9d,5u} r25={1d,12u} r26={1d,11u} r227={1d,2u} r230={1d,1u} r231={1d,2u,1d} r232={2d,3u} r233={2d,6u,2d} r234={1d,3u} r235={1d,2u} r236={1d,1u} r238={1d,3u} r241={1d,3u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r249={1d,1u} r252={1d,5u} r253={1d,1u} r256={1d,1u} r257={1d,2u} r258={1d,1u} r259={2d,2u} r262={1d,1u} 
;;    total ref usage 145{44d,98u,3e} in 45{45 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,9] 25[18,1] 26[19,1] 227[20,1] 230[21,1] 231[22,1] 232[23,2] 233[25,2] 234[27,1] 235[28,1] 236[29,1] 238[30,1] 241[31,1] 244[32,1] 245[33,1] 247[34,1] 249[35,1] 252[36,1] 253[37,1] 256[38,1] 257[39,1] 258[40,1] 259[41,2] 262[43,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d18(25){ }d19(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 18, 19
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d18(bb 0 insn -1) }u3(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 232 233 234 235 238 262
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 232 233 234 235 238 262
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19
;; rd  gen 	(6)
24, 26, 27, 28, 30, 43
;; rd  kill	(8)
23, 24, 25, 26, 27, 28, 30, 43
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 24, 26, 27, 28, 30, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 100
;;      reg 238 { d30(bb 2 insn 99) }
;;   UD chains for insn luid 2 uid 102
;;      reg 238 { d30(bb 2 insn 99) }
;;   UD chains for insn luid 3 uid 104
;;      reg 238 { d30(bb 2 insn 99) }

( 2 7 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d5(bb 0 insn -1) }u8(13){ d7(bb 0 insn -1) }u9(25){ d18(bb 0 insn -1) }u10(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233 234
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(1)
11
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 11, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 108
;;      reg 233 { d26(bb 2 insn 106) d25(bb 6 insn 127) }
;;      reg 234 { d27(bb 2 insn 102) }
;;   UD chains for insn luid 1 uid 109
;;      reg 24 { d11(bb 3 insn 108) }

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d5(bb 0 insn -1) }u15(13){ d7(bb 0 insn -1) }u16(25){ d18(bb 0 insn -1) }u17(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 11, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(1)
10
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 110
;;      reg 233 { d26(bb 2 insn 106) d25(bb 6 insn 127) }
;;   UD chains for insn luid 1 uid 111
;;      reg 24 { d10(bb 4 insn 110) }

( 4 )->[5]->( 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ d5(bb 0 insn -1) }u21(13){ d7(bb 0 insn -1) }u22(25){ d18(bb 0 insn -1) }u23(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  def 	 24 [cc] 230 241 244
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; live  gen 	 230 241 244
;; live  kill	 24 [cc]
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(3)
21, 31, 32
;; rd  kill	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 31, 32
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 113
;;      reg 233 { d26(bb 2 insn 106) d25(bb 6 insn 127) }
;;      reg 235 { d28(bb 2 insn 100) }
;;   UD chains for insn luid 2 uid 115
;;      reg 232 { d24(bb 2 insn 104) d23(bb 6 insn 125) }
;;      reg 241 { d31(bb 5 insn 114) }
;;   UD chains for insn luid 3 uid 117
;;      reg 230 { d21(bb 5 insn 113) }
;;      reg 241 { d31(bb 5 insn 114) }
;;   UD chains for insn luid 4 uid 119
;;      reg 233 { d26(bb 2 insn 106) d25(bb 6 insn 127) }
;;      reg 234 { d27(bb 2 insn 102) }
;;   UD chains for insn luid 5 uid 120
;;      reg 241 { d31(bb 5 insn 114) }
;;      reg 244 { d32(bb 5 insn 119) }

( 4 3 )->[6]->( 7 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d5(bb 0 insn -1) }u35(13){ d7(bb 0 insn -1) }u36(25){ d18(bb 0 insn -1) }u37(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 262
;; lr  def 	 24 [cc] 232 233 236 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc] 232 233 236 245
;; live  kill	 24 [cc]
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(5)
16, 23, 25, 29, 33
;; rd  kill	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 26, 29, 33
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245 262
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 125
;;      reg 232 { d24(bb 2 insn 104) d23(bb 6 insn 125) }
;;   UD chains for insn luid 2 uid 127
;;      reg 233 { d26(bb 2 insn 106) d25(bb 6 insn 127) }
;;      reg 262 { d43(bb 2 insn 126) }
;;   eq_note reg 233 { }
;;   UD chains for insn luid 3 uid 130
;;      reg 236 { d29(bb 6 insn 125) }
;;   UD chains for insn luid 4 uid 131
;;      reg 24 { d16(bb 6 insn 130) }

( 6 )->[7]->( 3 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ d5(bb 0 insn -1) }u-1(13){ d7(bb 0 insn -1) }u-1(25){ d18(bb 0 insn -1) }u-1(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }

( 12 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ d5(bb 0 insn -1) }u46(13){ d7(bb 0 insn -1) }u47(25){ d18(bb 0 insn -1) }u48(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 247
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 24 [cc] 247
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(2)
15, 34
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 34
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; rd  out 	(28)
1, 2, 3, 4, 5, 6, 7, 8, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 137
;;      reg 252 { d36(bb 11 insn 155) }
;;   UD chains for insn luid 1 uid 138
;;      reg 247 { d34(bb 8 insn 137) }
;;   UD chains for insn luid 2 uid 139
;;      reg 24 { d15(bb 8 insn 138) }

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ d5(bb 0 insn -1) }u53(13){ d7(bb 0 insn -1) }u54(25){ d18(bb 0 insn -1) }u55(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 249
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 8, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(1)
35
;; rd  kill	(1)
35
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
1, 2, 3, 4, 5, 6, 7, 8, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 143
;;      reg 249 { d35(bb 9 insn 142) }
;;      reg 252 { d36(bb 11 insn 155) }

( 11 9 8 5 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ d5(bb 0 insn -1) }u59(13){ d7(bb 0 insn -1) }u60(25){ d18(bb 0 insn -1) }u61(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(35)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(35)
0, 2, 3, 4, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 180
;;      reg 0 { d0(bb 10 insn 174) }

( 6 )->[11]->( 12 10 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u63(11){ d5(bb 0 insn -1) }u64(13){ d7(bb 0 insn -1) }u65(25){ d18(bb 0 insn -1) }u66(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 235 245
;; lr  def 	 24 [cc] 227 231 252 253 256 257 258 259
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245
;; live  gen 	 24 [cc] 227 231 252 253 256 257 258 259
;; live  kill	 24 [cc]
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43
;; rd  gen 	(9)
13, 20, 22, 36, 37, 38, 39, 40, 41
;; rd  kill	(18)
9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 36, 37, 38, 39, 40, 41, 42
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; rd  out 	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 152
;;      reg 233 { d25(bb 6 insn 127) }
;;      reg 245 { d33(bb 6 insn 189) }
;;   eq_note reg 233 { }
;;   UD chains for insn luid 1 uid 153
;;      reg 227 { d20(bb 11 insn 152) }
;;      reg 235 { d28(bb 2 insn 100) }
;;   UD chains for insn luid 3 uid 156
;;      reg 232 { d23(bb 6 insn 125) }
;;   UD chains for insn luid 4 uid 157
;;      reg 252 { d36(bb 11 insn 155) }
;;      reg 253 { d37(bb 11 insn 156) }
;;   UD chains for insn luid 5 uid 159
;;      reg 231 { d22(bb 11 insn 153) }
;;      reg 252 { d36(bb 11 insn 155) }
;;   UD chains for insn luid 6 uid 161
;;      reg 227 { d20(bb 11 insn 152) }
;;      reg 234 { d27(bb 2 insn 102) }
;;   UD chains for insn luid 7 uid 162
;;      reg 252 { d36(bb 11 insn 155) }
;;      reg 256 { d38(bb 11 insn 161) }
;;   UD chains for insn luid 9 uid 165
;;      reg 231 { d22(bb 11 insn 153) }
;;      reg 258 { d40(bb 11 insn 164) }
;;   eq_note reg 231 { }
;;   UD chains for insn luid 10 uid 166
;;      reg 257 { d39(bb 11 insn 165) }
;;   UD chains for insn luid 11 uid 167
;;      reg 257 { d39(bb 11 insn 165) }
;;      reg 259 { d42(bb 11 insn 166) }
;;   UD chains for insn luid 12 uid 168
;;      reg 259 { d41(bb 11 insn 167) }
;;   UD chains for insn luid 13 uid 169
;;      reg 24 { d13(bb 11 insn 168) }

( 11 )->[12]->( 8 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ d5(bb 0 insn -1) }u-1(13){ d7(bb 0 insn -1) }u-1(25){ d18(bb 0 insn -1) }u-1(26){ d19(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; rd  out 	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }
;;   reg 26 { d19(bb 0 insn -1) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u89(0){ d0(bb 10 insn 174) }u90(11){ d5(bb 0 insn -1) }u91(13){ d7(bb 0 insn -1) }u92(14){ d8(bb 0 insn -1) }u93(25){ d18(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(35)
0, 2, 3, 4, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(35)
0, 2, 3, 4, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 10 insn 174) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d18(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 109 to worklist
  Adding insn 111 to worklist
  Adding insn 190 to worklist
  Adding insn 120 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 131 to worklist
  Adding insn 194 to worklist
  Adding insn 139 to worklist
  Adding insn 143 to worklist
  Adding insn 180 to worklist
  Adding insn 169 to worklist
  Adding insn 162 to worklist
  Adding insn 159 to worklist
  Adding insn 157 to worklist
  Adding insn 197 to worklist
Finished finding needed instructions:
  Adding insn 174 to worklist
Processing use of (reg 252) in insn 157:
  Adding insn 155 to worklist
Processing use of (reg 253) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 232 [ ivtmp.535 ]) in insn 156:
  Adding insn 125 to worklist
Processing use of (reg 232 [ ivtmp.535 ]) in insn 125:
  Adding insn 104 to worklist
Processing use of (reg 238) in insn 104:
  Adding insn 99 to worklist
Processing use of (reg 231 [ D.26679 ]) in insn 159:
  Adding insn 153 to worklist
Processing use of (reg 252) in insn 159:
Processing use of (reg 227 [ ivtmp.554 ]) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 235 [ this_header_lsm.527 ]) in insn 153:
  Adding insn 100 to worklist
Processing use of (reg 238) in insn 100:
Processing use of (reg 233 [ ivtmp.533 ]) in insn 152:
  Adding insn 127 to worklist
Processing use of (reg 245) in insn 152:
  Adding insn 189 to worklist
Processing use of (reg 233 [ ivtmp.533 ]) in insn 127:
  Adding insn 106 to worklist
Processing use of (reg 262) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 252) in insn 162:
Processing use of (reg 256) in insn 162:
  Adding insn 161 to worklist
Processing use of (subreg (reg 227 [ ivtmp.554 ]) 0) in insn 161:
Processing use of (reg 234 [ count_lsm.528 ]) in insn 161:
  Adding insn 102 to worklist
Processing use of (reg 238) in insn 102:
Processing use of (reg 24 cc) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 259) in insn 168:
  Adding insn 167 to worklist
Processing use of (subreg (reg 257) 4) in insn 167:
  Adding insn 165 to worklist
Processing use of (reg 259) in insn 167:
  Adding insn 166 to worklist
Processing use of (subreg (reg 257) 0) in insn 166:
Processing use of (reg 231 [ D.26679 ]) in insn 165:
Processing use of (reg 258) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 0 r0) in insn 180:
Processing use of (reg 249) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 252) in insn 143:
Processing use of (reg 24 cc) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 247 [ message ]) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 252) in insn 137:
Processing use of (reg 24 cc) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 236 [ D.25927 ]) in insn 130:
Processing use of (reg 232 [ ivtmp.535 ]) in insn 115:
Processing use of (reg 241) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 230 [ D.26681 ]) in insn 117:
  Adding insn 113 to worklist
Processing use of (reg 241) in insn 117:
Processing use of (reg 233 [ ivtmp.533 ]) in insn 113:
Processing use of (reg 235 [ this_header_lsm.527 ]) in insn 113:
Processing use of (reg 241) in insn 120:
Processing use of (reg 244) in insn 120:
  Adding insn 119 to worklist
Processing use of (subreg (reg 233 [ ivtmp.533 ]) 0) in insn 119:
Processing use of (reg 234 [ count_lsm.528 ]) in insn 119:
Processing use of (reg 24 cc) in insn 111:
  Adding insn 110 to worklist
Processing use of (subreg (reg 233 [ ivtmp.533 ]) 4) in insn 110:
Processing use of (reg 24 cc) in insn 109:
  Adding insn 108 to worklist
Processing use of (subreg (reg 233 [ ivtmp.533 ]) 0) in insn 108:
Processing use of (reg 234 [ count_lsm.528 ]) in insn 108:


do_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,12u} r12={1d} r13={1d,12u} r14={1d,1u} r24={9d,5u} r25={1d,12u} r26={1d,11u} r227={1d,2u} r230={1d,1u} r231={1d,2u,1d} r232={2d,3u} r233={2d,6u,2d} r234={1d,3u} r235={1d,2u} r236={1d,1u} r238={1d,3u} r241={1d,3u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r249={1d,1u} r252={1d,5u} r253={1d,1u} r256={1d,1u} r257={1d,2u} r258={1d,1u} r259={2d,2u} r262={1d,1u} 
;;    total ref usage 145{44d,98u,3e} in 45{45 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,9] 25[18,1] 26[19,1] 227[20,1] 230[21,1] 231[22,1] 232[23,2] 233[25,2] 234[27,1] 235[28,1] 236[29,1] 238[30,1] 241[31,1] 244[32,1] 245[33,1] 247[34,1] 249[35,1] 252[36,1] 253[37,1] 256[38,1] 257[39,1] 258[40,1] 259[41,2] 262[43,1] 
(note 95 0 97 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 232 233 234 235 238 262
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 232 233 234 235 238 262
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19
;; rd  gen 	(6)
24, 26, 27, 28, 30, 43
;; rd  kill	(8)
23, 24, 25, 26, 27, 28, 30, 43

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 97 95 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 96 97 99 2 NOTE_INSN_FUNCTION_BEG)

(insn 99 96 100 2 init/initramfs.c:261 (set (reg/f:SI 238)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 102 2 init/initramfs.c:261 (set (reg:DI 235 [ this_header_lsm.527 ])
        (mem/c/i:DI (plus:SI (reg/f:SI 238)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 102 100 104 2 init/initramfs.c:261 (set (reg:SI 234 [ count_lsm.528 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 104 102 106 2 init/initramfs.c:261 (set (reg:SI 232 [ ivtmp.535 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 238)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 victim+0 S4 A32])
            (nil))))

(insn 106 104 126 2 init/initramfs.c:260 (set (reg:DI 233 [ ivtmp.533 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 126 106 129 2 init/initramfs.c:262 discrim 2 (set (reg:DI 262)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 24, 26, 27, 28, 30, 43


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 7) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233 234
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(1)
11
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (dfs_back)
(code_label 129 126 107 3 25 "" [1 uses])

(note 107 129 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 3 init/initramfs.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 0)
            (reg:SI 234 [ count_lsm.528 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 109 108 182 3 init/initramfs.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 11, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 11, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(1)
10
;; rd  kill	(9)
9, 10, 11, 12, 13, 14, 15, 16, 17

;; Pred edge  3 [29.0%]  (fallthru)
(note 182 109 110 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 110 182 111 4 init/initramfs.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 4 init/initramfs.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43


;; Succ edge  6 [71.0%] 
;; Succ edge  5 [29.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 235
;; lr  def 	 24 [cc] 230 241 244
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; live  gen 	 230 241 244
;; live  kill	 24 [cc]
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(3)
21, 31, 32
;; rd  kill	(12)
9, 10, 11, 12, 13, 14, 15, 16, 17, 21, 31, 32

;; Pred edge  4 [29.0%]  (fallthru,loop_exit)
(note 112 111 113 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 5 init/initramfs.c:260 (parallel [
            (set (reg:DI 230 [ D.26681 ])
                (plus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 235 [ this_header_lsm.527 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 235 [ this_header_lsm.527 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 114 113 115 5 init/initramfs.c:260 (set (reg/f:SI 241)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 115 114 117 5 init/initramfs.c:260 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 232 [ ivtmp.535 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 232 [ ivtmp.535 ])
        (nil)))

(insn 117 115 119 5 init/initramfs.c:260 (set (mem/c/i:DI (plus:SI (reg/f:SI 241)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 230 [ D.26681 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 230 [ D.26681 ])
        (nil)))

(insn 119 117 120 5 init/initramfs.c:260 (set (reg:SI 244)
        (minus:SI (reg:SI 234 [ count_lsm.528 ])
            (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 234 [ count_lsm.528 ])
        (expr_list:REG_DEAD (reg:DI 233 [ ivtmp.533 ])
            (nil))))

(insn 120 119 190 5 init/initramfs.c:260 (set (mem/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 244)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_DEAD (reg/f:SI 241)
            (nil))))

(jump_insn 190 120 191 5 (set (pc)
        (label_ref 144)) -1 (nil))
;; End of basic block 5 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
1, 2, 3, 4, 5, 6, 7, 8, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43


;; Succ edge  10 [100.0%] 

(barrier 191 190 123)

;; Start of basic block ( 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 262
;; lr  def 	 24 [cc] 232 233 236 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc] 232 233 236 245
;; live  kill	 24 [cc]
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 33, 43
;; rd  gen 	(5)
16, 23, 25, 29, 33
;; rd  kill	(15)
9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 26, 29, 33

;; Pred edge  4 [71.0%] 
;; Pred edge  3 [71.0%] 
(code_label 123 191 124 6 23 "" [2 uses])

(note 124 123 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 189 6 init/initramfs.c:262 discrim 2 (set (reg:SI 236 [ D.25927 ])
        (zero_extend:SI (mem:QI (post_inc:SI (reg:SI 232 [ ivtmp.535 ])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_INC (reg:SI 232 [ ivtmp.535 ])
        (nil)))

(insn 189 125 127 6 init/initramfs.c:262 discrim 2 (set (reg:DI 245)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 127 189 130 6 init/initramfs.c:262 discrim 2 (parallel [
            (set (reg:DI 233 [ ivtmp.533 ])
                (plus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 262)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (expr_list:REG_EQUAL (plus:DI (reg:DI 233 [ ivtmp.533 ])
                (const_int 1 [0x1]))
            (nil))))

(insn 130 127 131 6 init/initramfs.c:262 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 236 [ D.25927 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 236 [ D.25927 ])
        (nil)))

(jump_insn 131 130 193 6 init/initramfs.c:262 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245 262
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%]  (loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [0.0%]  (fallthru)
(note 193 131 194 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 194 193 195 7 (set (pc)
        (label_ref 129)) -1 (nil))
;; End of basic block 7 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 195 194 163)

;; Start of basic block ( 12) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 247
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 24 [cc] 247
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(2)
15, 34
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 15, 16, 17, 34

;; Pred edge  12 [100.0%] 
(code_label 163 195 135 8 27 "" [1 uses])

(note 135 163 137 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 137 135 138 8 init/initramfs.c:15 (set (reg/f:SI 247 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 138 137 139 8 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 247 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 247 [ message ])
        (nil)))

(jump_insn 139 138 140 8 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; rd  out 	(28)
1, 2, 3, 4, 5, 6, 7, 8, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43


;; Succ edge  9 [21.6%]  (fallthru)
;; Succ edge  10 [78.4%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 249
;; live  kill	
;; rd  in  	(28)
1, 2, 3, 4, 5, 6, 7, 8, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(1)
35
;; rd  kill	(1)
35

;; Pred edge  8 [21.6%]  (fallthru)
(note 140 139 142 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 142 140 143 9 init/initramfs.c:16 (set (reg/f:SI 249)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11561d50>)) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 9 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 252)
        (expr_list:REG_DEAD (reg/f:SI 249)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11561d50>)
                (nil)))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(29)
1, 2, 3, 4, 5, 6, 7, 8, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 11 9 8 5) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(35)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  11 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [78.4%] 
;; Pred edge  5 [100.0%] 
(code_label 144 143 145 10 24 "" [3 uses])

(note 145 144 174 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 174 145 180 10 init/initramfs.c:267 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 180 174 192 10 init/initramfs.c:267 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(35)
0, 2, 3, 4, 5, 6, 7, 8, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 235 245
;; lr  def 	 24 [cc] 227 231 252 253 256 257 258 259
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245
;; live  gen 	 24 [cc] 227 231 252 253 256 257 258 259
;; live  kill	 24 [cc]
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 16, 18, 19, 23, 25, 27, 28, 29, 30, 33, 43
;; rd  gen 	(9)
13, 20, 22, 36, 37, 38, 39, 40, 41
;; rd  kill	(18)
9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 36, 37, 38, 39, 40, 41, 42

;; Pred edge  6 [100.0%]  (loop_exit)
(code_label 192 180 150 11 30 "" [1 uses])

(note 150 192 152 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 152 150 153 11 init/initramfs.c:267 (parallel [
            (set (reg:DI 227 [ ivtmp.554 ])
                (minus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 245)))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg:DI 245)
        (expr_list:REG_DEAD (reg:DI 233 [ ivtmp.533 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 233 [ ivtmp.533 ])
                        (const_int -1 [0xffffffffffffffff]))
                    (nil))))))

(insn 153 152 155 11 init/initramfs.c:260 (parallel [
            (set (reg:DI 231 [ D.26679 ])
                (plus:DI (reg:DI 227 [ ivtmp.554 ])
                    (reg:DI 235 [ this_header_lsm.527 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 235 [ this_header_lsm.527 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 155 153 156 11 init/initramfs.c:260 (set (reg/f:SI 252)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 156 155 157 11 init/initramfs.c:260 (set (reg:SI 253)
        (plus:SI (reg:SI 232 [ ivtmp.535 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 232 [ ivtmp.535 ])
        (nil)))

(insn 157 156 159 11 init/initramfs.c:260 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 253)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 253)
        (nil)))

(insn 159 157 161 11 init/initramfs.c:260 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 231 [ D.26679 ])) 163 {*arm_movdi} (nil))

(insn 161 159 162 11 init/initramfs.c:260 (set (reg:SI 256)
        (minus:SI (reg:SI 234 [ count_lsm.528 ])
            (subreg:SI (reg:DI 227 [ ivtmp.554 ]) 0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 234 [ count_lsm.528 ])
        (expr_list:REG_DEAD (reg:DI 227 [ ivtmp.554 ])
            (nil))))

(insn 162 161 164 11 init/initramfs.c:260 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 256)
        (nil)))

(insn 164 162 165 11 init/initramfs.c:264 discrim 1 (set (reg:DI 258)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 165 164 166 11 init/initramfs.c:264 discrim 1 (set (reg:DI 257)
        (and:DI (reg:DI 231 [ D.26679 ])
            (reg:DI 258))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 258)
        (expr_list:REG_DEAD (reg:DI 231 [ D.26679 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 231 [ D.26679 ])
                    (const_int 3 [0x3]))
                (nil)))))

(insn 166 165 167 11 init/initramfs.c:264 discrim 1 (set (reg:SI 259)
        (subreg:SI (reg:DI 257) 0)) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 11 init/initramfs.c:264 discrim 1 (set (reg:SI 259)
        (ior:SI (reg:SI 259)
            (subreg:SI (reg:DI 257) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 257)
        (nil)))

(insn 168 167 169 11 init/initramfs.c:264 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 259)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 259)
        (nil)))

(jump_insn 169 168 196 11 init/initramfs.c:264 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 11 -> ( 12 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; rd  out 	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43


;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  11 [0.0%]  (fallthru)
(note 196 169 197 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 197 196 198 12 (set (pc)
        (label_ref 163)) -1 (nil))
;; End of basic block 12 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; rd  out 	(27)
1, 2, 3, 4, 5, 6, 7, 8, 13, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 43


;; Succ edge  8 [100.0%] 

(barrier 198 197 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_buffer (flush_buffer)[0:1332] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 31 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 35 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 36 (  2.4)


flush_buffer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d} r3={2d} r11={1d,14u} r12={2d} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,14u} r26={1d,13u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u} r135={1d,5u} r136={1d,2u} r137={2d,2u} r138={3d,3u} r140={1d,1u} r141={3d,5u} r142={1d,2u} r143={1d,1u} r154={1d,1u} r156={1d,1u,1d} r157={1d,1u} r159={1d,1u} r161={1d,1u} r163={1d,2u} r166={1d,5u} r167={1d,5u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 271{159d,111u,1e} in 49{48 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,7] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,1] 136[137,1] 137[138,2] 138[140,3] 140[143,1] 141[144,3] 142[147,1] 143[148,1] 154[149,1] 156[150,1] 157[151,1] 159[152,1] 161[153,1] 163[154,1] 166[155,1] 167[156,1] 168[157,1] 169[158,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d31(25){ }d32(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 31, 32
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 31, 32
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 31, 32

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d31(bb 0 insn -1) }u3(26){ d32(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 140 141 142 143
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 31, 32
;; rd  gen 	(6)
30, 138, 143, 144, 147, 148
;; rd  kill	(15)
24, 25, 26, 27, 28, 29, 30, 138, 139, 143, 144, 145, 146, 147, 148
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141 142
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 143, 144, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d138(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 142 { d147(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 143 { d148(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 24 { d30(bb 2 insn 10) }

( 2 )->[3]->( 14 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ d9(bb 0 insn -1) }u11(13){ d12(bb 0 insn -1) }u12(25){ d31(bb 0 insn -1) }u13(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 143, 144, 147, 148
;; rd  gen 	(1)
139
;; rd  kill	(2)
138, 139
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 139, 143, 144, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }

( 2 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d9(bb 0 insn -1) }u15(13){ d12(bb 0 insn -1) }u16(25){ d31(bb 0 insn -1) }u17(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  def 	 138 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141 142
;; live  gen 	 138 166 167 168 169
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 143, 144, 147, 148
;; rd  gen 	(5)
142, 155, 156, 157, 158
;; rd  kill	(7)
140, 141, 142, 155, 156, 157, 158
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(21)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 142, 143, 144, 147, 148, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 140 { d143(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 53
;;      reg 142 { d147(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 103
;;      reg 166 { d155(bb 4 insn 53) }

( 13 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ d9(bb 0 insn -1) }u22(13){ d12(bb 0 insn -1) }u23(25){ d31(bb 0 insn -1) }u24(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 24 [cc] 133 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; live  gen 	 24 [cc] 133 136
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 24, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(3)
29, 134, 137
;; rd  kill	(9)
24, 25, 26, 27, 28, 29, 30, 134, 137
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 163 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 163 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 135 { d136(bb 12 insn 74) }
;;      reg 138 { d142(bb 4 insn 18) d141(bb 6 insn 31) d140(bb 8 insn 43) }
;;   UD chains for insn luid 1 uid 23
;;      reg 135 { d136(bb 12 insn 74) }
;;      reg 138 { d142(bb 4 insn 18) d141(bb 6 insn 31) d140(bb 8 insn 43) }
;;   UD chains for insn luid 2 uid 24
;;      reg 136 { d137(bb 5 insn 23) }
;;   UD chains for insn luid 3 uid 25
;;      reg 24 { d29(bb 5 insn 24) }

( 5 )->[6]->( 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ d9(bb 0 insn -1) }u31(13){ d12(bb 0 insn -1) }u32(25){ d31(bb 0 insn -1) }u33(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 163 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 163 167
;; lr  def 	 138 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 163 166 167 168 169
;; live  gen 	 138 141
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(2)
141, 146
;; rd  kill	(6)
140, 141, 142, 144, 145, 146
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(30)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 27
;;      reg 135 { d136(bb 12 insn 74) }
;;      reg 141 { d146(bb 6 insn 27) d145(bb 8 insn 39) d144(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 30
;;      reg 163 { d154(bb 13 insn 80) }
;;      reg 167 { d156(bb 4 insn 103) }
;;   UD chains for insn luid 2 uid 31
;;      reg 133 { d134(bb 5 insn 22) }

( 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ d9(bb 0 insn -1) }u40(13){ d12(bb 0 insn -1) }u41(25){ d31(bb 0 insn -1) }u42(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 166 167 168 169
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(1)
28
;; rd  kill	(7)
24, 25, 26, 27, 28, 29, 30
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 136 { d137(bb 5 insn 23) }
;;   UD chains for insn luid 1 uid 37
;;      reg 24 { d28(bb 7 insn 36) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ d9(bb 0 insn -1) }u46(13){ d12(bb 0 insn -1) }u47(25){ d31(bb 0 insn -1) }u48(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 167 169
;; lr  def 	 138 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 166 167 168 169
;; live  gen 	 138 141
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(2)
140, 145
;; rd  kill	(6)
140, 141, 142, 144, 145, 146
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(30)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 135 { d136(bb 12 insn 74) }
;;      reg 141 { d146(bb 6 insn 27) d145(bb 8 insn 39) d144(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 42
;;      reg 167 { d156(bb 4 insn 103) }
;;      reg 169 { d158(bb 4 insn 41) }
;;   UD chains for insn luid 2 uid 43
;;      reg 133 { d134(bb 5 insn 22) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ d9(bb 0 insn -1) }u55(13){ d12(bb 0 insn -1) }u56(25){ d31(bb 0 insn -1) }u57(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 167 { d156(bb 4 insn 103) }
;;      reg 168 { d157(bb 4 insn 49) }

( 9 6 4 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u64(11){ d9(bb 0 insn -1) }u65(13){ d12(bb 0 insn -1) }u66(25){ d31(bb 0 insn -1) }u67(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 166
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
1, 2, 4, 6, 8, 9, 11, 12, 14, 28, 29, 30, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(38)
1, 2, 4, 6, 8, 9, 11, 12, 14, 28, 29, 30, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 141 { d146(bb 6 insn 27) d145(bb 8 insn 39) d144(bb 2 insn 7) }
;;      reg 166 { d155(bb 4 insn 53) }
;;   UD chains for insn luid 1 uid 56
;;      reg 138 { d142(bb 4 insn 18) d141(bb 6 insn 31) d140(bb 8 insn 43) }
;;      reg 166 { d155(bb 4 insn 53) }

( 10 11 )->[11]->( 11 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u72(11){ d9(bb 0 insn -1) }u73(13){ d12(bb 0 insn -1) }u74(25){ d31(bb 0 insn -1) }u75(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 154 156 157 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	 0 [r0] 24 [cc] 134 154 156 157 159
;; live  kill	 14 [lr]
;; rd  in  	(39)
1, 2, 4, 6, 8, 9, 11, 12, 14, 26, 28, 29, 30, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(7)
1, 26, 135, 149, 150, 151, 152
;; rd  kill	(17)
0, 1, 2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 135, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 26, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 166 { d155(bb 4 insn 53) }
;;   UD chains for insn luid 1 uid 62
;;      reg 154 { d149(bb 11 insn 60) }
;;   UD chains for insn luid 2 uid 63
;;      reg 156 { d150(bb 11 insn 62) }
;;      reg 166 { d155(bb 4 insn 53) }
;;   eq_note reg 156 { }
;;   UD chains for insn luid 3 uid 65
;;      reg 157 { d151(bb 11 insn 63) }
;;   UD chains for insn luid 4 uid 66
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 159 { d152(bb 11 insn 65) }
;;   UD chains for insn luid 5 uid 67
;;      reg 0 { d1(bb 11 insn 66) }
;;   UD chains for insn luid 6 uid 69
;;      reg 134 { d135(bb 11 insn 67) }
;;   UD chains for insn luid 7 uid 70
;;      reg 24 { d26(bb 11 insn 69) }

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u88(11){ d9(bb 0 insn -1) }u89(13){ d12(bb 0 insn -1) }u90(25){ d31(bb 0 insn -1) }u91(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 167
;; lr  def 	 24 [cc] 135 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	 24 [cc] 135 161
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 26, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(3)
25, 136, 153
;; rd  kill	(9)
24, 25, 26, 27, 28, 29, 30, 136, 153
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 25, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 73
;;      reg 167 { d156(bb 4 insn 103) }
;;   UD chains for insn luid 1 uid 74
;;      reg 141 { d146(bb 6 insn 27) d145(bb 8 insn 39) d144(bb 2 insn 7) }
;;      reg 161 { d153(bb 12 insn 73) }
;;   UD chains for insn luid 2 uid 75
;;      reg 135 { d136(bb 12 insn 74) }
;;      reg 141 { d146(bb 6 insn 27) d145(bb 8 insn 39) d144(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 76
;;      reg 24 { d25(bb 12 insn 75) }

( 12 )->[13]->( 5 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u98(11){ d9(bb 0 insn -1) }u99(13){ d12(bb 0 insn -1) }u100(25){ d31(bb 0 insn -1) }u101(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 25, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(2)
24, 154
;; rd  kill	(8)
24, 25, 26, 27, 28, 29, 30, 154
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 24, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 167 { d156(bb 4 insn 103) }
;;   UD chains for insn luid 1 uid 81
;;      reg 163 { d154(bb 13 insn 80) }
;;   UD chains for insn luid 2 uid 82
;;      reg 24 { d24(bb 13 insn 81) }

( 12 13 3 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u105(11){ d9(bb 0 insn -1) }u106(13){ d12(bb 0 insn -1) }u107(25){ d31(bb 0 insn -1) }u108(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(39)
1, 2, 4, 6, 8, 9, 11, 12, 14, 24, 25, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(38)
0, 4, 6, 8, 9, 11, 12, 14, 24, 25, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 89
;;      reg 137 { d139(bb 3 insn 13) d138(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 95
;;      reg 0 { d0(bb 14 insn 89) }

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u111(0){ d0(bb 14 insn 89) }u112(11){ d9(bb 0 insn -1) }u113(13){ d12(bb 0 insn -1) }u114(14){ d14(bb 0 insn -1) }u115(25){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
0, 4, 6, 8, 9, 11, 12, 14, 24, 25, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(38)
0, 4, 6, 8, 9, 11, 12, 14, 24, 25, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 14 insn 89) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 110 to worklist
  Adding insn 113 to worklist
  Adding insn 25 to worklist
  Adding insn 115 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 117 to worklist
  Adding insn 42 to worklist
  Adding insn 50 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 70 to worklist
  Adding insn 66 to worklist
  Adding insn 76 to worklist
  Adding insn 82 to worklist
  Adding insn 95 to worklist
Finished finding needed instructions:
  Adding insn 89 to worklist
Processing use of (reg 137 [ origLen ]) in insn 89:
  Adding insn 13 to worklist
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 0 r0) in insn 95:
Processing use of (reg 24 cc) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 163 [ message ]) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 167) in insn 80:
  Adding insn 103 to worklist
Processing use of (reg 166) in insn 103:
  Adding insn 53 to worklist
Processing use of (reg 142) in insn 53:
  Adding insn 8 to worklist
Processing use of (reg 24 cc) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 135 [ D.26319 ]) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 141 [ len ]) in insn 75:
  Adding insn 27 to worklist
  Adding insn 39 to worklist
  Adding insn 7 to worklist
Processing use of (reg 137 [ origLen ]) in insn 7:
Processing use of (reg 135 [ D.26319 ]) in insn 39:
Processing use of (reg 141 [ len ]) in insn 39:
Processing use of (reg 135 [ D.26319 ]) in insn 27:
Processing use of (reg 141 [ len ]) in insn 27:
Processing use of (reg 141 [ len ]) in insn 74:
Processing use of (reg 161 [ count ]) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 167) in insn 73:
Processing use of (reg 13 sp) in insn 66:
Processing use of (reg 159) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 157) in insn 65:
  Adding insn 63 to worklist
Processing use of (reg 156) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 166) in insn 63:
Processing use of (reg 154 [ state ]) in insn 62:
  Adding insn 60 to worklist
Processing use of (reg 166) in insn 60:
Processing use of (reg 24 cc) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 134 [ D.26322 ]) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 0 r0) in insn 67:
Processing use of (reg 141 [ len ]) in insn 54:
Processing use of (reg 166) in insn 54:
Processing use of (reg 138 [ buf ]) in insn 56:
  Adding insn 18 to worklist
  Adding insn 31 to worklist
  Adding insn 43 to worklist
Processing use of (reg 166) in insn 56:
Processing use of (reg 133 [ buf.581 ]) in insn 43:
  Adding insn 22 to worklist
Processing use of (reg 135 [ D.26319 ]) in insn 22:
Processing use of (reg 138 [ buf ]) in insn 22:
Processing use of (reg 133 [ buf.581 ]) in insn 31:
Processing use of (reg 140 [ bufv ]) in insn 18:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 167) in insn 50:
Processing use of (reg 168) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 167) in insn 42:
Processing use of (reg 169) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 136 [ c ]) in insn 36:
  Adding insn 23 to worklist
Processing use of (reg 135 [ D.26319 ]) in insn 23:
Processing use of (reg 138 [ buf ]) in insn 23:
Processing use of (reg 163 [ message ]) in insn 30:
Processing use of (reg 167) in insn 30:
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 136 [ c ]) in insn 24:
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 143 [ message ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 142) in insn 9:


flush_buffer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d} r3={2d} r11={1d,14u} r12={2d} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,14u} r26={1d,13u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u} r135={1d,5u} r136={1d,2u} r137={2d,2u} r138={3d,3u} r140={1d,1u} r141={3d,5u} r142={1d,2u} r143={1d,1u} r154={1d,1u} r156={1d,1u,1d} r157={1d,1u} r159={1d,1u} r161={1d,1u} r163={1d,2u} r166={1d,5u} r167={1d,5u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 271{159d,111u,1e} in 49{48 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,7] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,1] 136[137,1] 137[138,2] 138[140,3] 140[143,1] 141[144,3] 142[147,1] 143[148,1] 154[149,1] 156[150,1] 157[151,1] 159[152,1] 161[153,1] 163[154,1] 166[155,1] 167[156,1] 168[157,1] 169[158,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 140 141 142 143
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 31, 32
;; rd  gen 	(6)
30, 138, 143, 144, 147, 148
;; rd  kill	(15)
24, 25, 26, 27, 28, 29, 30, 138, 139, 143, 144, 145, 146, 147, 148

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:388 (set (reg/v/f:SI 140 [ bufv ])
        (reg:SI 0 r0 [ bufv ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bufv ])
        (nil)))

(insn 3 2 4 2 init/initramfs.c:388 (set (reg/v:SI 137 [ origLen ])
        (reg:SI 1 r1 [ len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ len ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:391 (set (reg/v:SI 141 [ len ])
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/initramfs.c:392 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:392 (set (reg/f:SI 143 [ message ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 10 9 11 2 init/initramfs.c:392 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ message ])
        (nil)))

(jump_insn 11 10 12 2 init/initramfs.c:392 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141 142
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 143, 144, 147, 148


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  4 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 143, 144, 147, 148
;; rd  gen 	(1)
139
;; rd  kill	(2)
138, 139

;; Pred edge  2 [100.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 110 3 init/initramfs.c:393 (set (reg/v:SI 137 [ origLen ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 110 13 111 3 (set (pc)
        (label_ref 83)) -1 (nil))
;; End of basic block 3 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 139, 143, 144, 147, 148


;; Succ edge  14 [100.0%] 

(barrier 111 110 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  def 	 138 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141 142
;; live  gen 	 138 166 167 168 169
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 143, 144, 147, 148
;; rd  gen 	(5)
142, 155, 156, 157, 158
;; rd  kill	(7)
140, 141, 142, 155, 156, 157, 158

;; Pred edge  2 [0.0%] 
(code_label 16 111 17 4 36 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 53 4 init/initramfs.c:389 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 140 [ bufv ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ bufv ])
        (nil)))

(insn 53 18 103 4 init/initramfs.c:379 (set (reg/f:SI 166)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(insn 103 53 49 4 init/initramfs.c:382 discrim 1 (set (reg/f:SI 167)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 49 103 41 4 init/initramfs.c:16 (set (reg/f:SI 168)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 41 49 113 4 init/initramfs.c:403 (set (reg:SI 169)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(jump_insn 113 41 114 4 (set (pc)
        (label_ref 112)) -1 (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(21)
2, 4, 6, 8, 9, 11, 12, 14, 30, 31, 32, 138, 142, 143, 144, 147, 148, 155, 156, 157, 158


;; Succ edge  10 [100.0%] 

(barrier 114 113 78)

;; Start of basic block ( 13) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 24 [cc] 133 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; live  gen 	 24 [cc] 133 136
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 24, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(3)
29, 134, 137
;; rd  kill	(9)
24, 25, 26, 27, 28, 29, 30, 134, 137

;; Pred edge  13 [0.0%] 
(code_label 78 114 21 5 42 "" [1 uses])

(note 21 78 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 init/initramfs.c:395 (set (reg/v/f:SI 133 [ buf.581 ])
        (plus:SI (reg/v/f:SI 138 [ buf ])
            (reg:SI 135 [ D.26319 ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 5 init/initramfs.c:395 (set (reg/v:SI 136 [ c ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 138 [ buf ])
                    (reg:SI 135 [ D.26319 ])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 24 23 25 5 init/initramfs.c:396 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ c ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 5 init/initramfs.c:396 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 163 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 163 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 163 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 163 167
;; lr  def 	 138 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 163 166 167 168 169
;; live  gen 	 138 141
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(2)
141, 146
;; rd  kill	(6)
140, 141, 142, 144, 145, 146

;; Pred edge  5 [28.0%]  (fallthru)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 30 6 init/initramfs.c:398 (set (reg/v:SI 141 [ len ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 135 [ D.26319 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26319 ])
        (nil)))

(insn 30 27 31 6 init/initramfs.c:399 (set (mem/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg/f:SI 163 [ message ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ message ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 31 30 115 6 init/initramfs.c:397 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 133 [ buf.581 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ buf.581 ])
        (nil)))

(jump_insn 115 31 116 6 (set (pc)
        (label_ref 112)) -1 (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(30)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  10 [100.0%]  (dfs_back)

(barrier 116 115 34)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 166 167 168 169
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 29, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(1)
28
;; rd  kill	(7)
24, 25, 26, 27, 28, 29, 30

;; Pred edge  5 [72.0%] 
(code_label 34 116 35 7 39 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 init/initramfs.c:400 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ c ])
        (nil)))

(jump_insn 37 36 38 7 init/initramfs.c:400 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  8 [100.0%]  (fallthru)
;; Succ edge  9 [0.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 167 169
;; lr  def 	 138 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 166 167 168 169
;; live  gen 	 138 141
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(2)
140, 145
;; rd  kill	(6)
140, 141, 142, 144, 145, 146

;; Pred edge  7 [100.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 42 8 init/initramfs.c:402 (set (reg/v:SI 141 [ len ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 135 [ D.26319 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26319 ])
        (nil)))

(insn 42 39 43 8 init/initramfs.c:403 (set (mem/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 7 [0x7])
        (nil)))

(insn 43 42 117 8 init/initramfs.c:401 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 133 [ buf.581 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ buf.581 ])
        (nil)))

(jump_insn 117 43 118 8 (set (pc)
        (label_ref 112)) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(30)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  10 [100.0%]  (dfs_back)

(barrier 118 117 46)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [0.0%] 
(code_label 46 118 47 9 40 "" [1 uses])

(note 47 46 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 47 112 9 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 167) [0 message+0 S4 A32])
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 28, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 6 4 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 166
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
1, 2, 4, 6, 8, 9, 11, 12, 14, 28, 29, 30, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (dfs_back)
;; Pred edge  4 [100.0%] 
;; Pred edge  8 [100.0%]  (dfs_back)
(code_label 112 50 109 10 45 "" [3 uses])

(note 109 112 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 54 109 56 10 init/initramfs.c:379 (set (mem/c/i:SI (plus:SI (reg/f:SI 166)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg/v:SI 141 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 56 54 68 10 init/initramfs.c:380 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 166)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/v/f:SI 138 [ buf ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(38)
1, 2, 4, 6, 8, 9, 11, 12, 14, 28, 29, 30, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 154 156 157 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	 0 [r0] 24 [cc] 134 154 156 157 159
;; live  kill	 14 [lr]
;; rd  in  	(39)
1, 2, 4, 6, 8, 9, 11, 12, 14, 26, 28, 29, 30, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(7)
1, 26, 135, 149, 150, 151, 152
;; rd  kill	(17)
0, 1, 2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 135, 149, 150, 151, 152

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [86.0%]  (dfs_back)
(code_label 68 56 57 11 41 "" [1 uses])

(note 57 68 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 60 57 62 11 init/initramfs.c:382 discrim 1 (set (reg:SI 154 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 166)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [0 state+0 S4 A32])
        (nil)))

(insn 62 60 63 11 init/initramfs.c:382 discrim 1 (set (reg:SI 156)
        (ashift:SI (reg:SI 154 [ state ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 154 [ state ])
        (nil)))

(insn 63 62 65 11 init/initramfs.c:382 discrim 1 (set (reg:SI 157)
        (plus:SI (reg/f:SI 166)
            (reg:SI 156))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 156)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 65 63 66 11 init/initramfs.c:382 discrim 1 (set (reg/f:SI 159)
        (mem/s/f/j:SI (plus:SI (reg:SI 157)
                (const_int 56 [0x38])) [0 actions S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(call_insn 66 65 67 11 init/initramfs.c:382 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 159) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 159)
        (nil))
    (nil))

(insn 67 66 69 11 init/initramfs.c:382 discrim 1 (set (reg:SI 134 [ D.26322 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 69 67 70 11 init/initramfs.c:382 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.26322 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.26322 ])
        (nil)))

(jump_insn 70 69 71 11 init/initramfs.c:382 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 11 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 26, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  11 [86.0%]  (dfs_back)
;; Succ edge  12 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 167
;; lr  def 	 24 [cc] 135 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	 24 [cc] 135 161
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 26, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(3)
25, 136, 153
;; rd  kill	(9)
24, 25, 26, 27, 28, 29, 30, 136, 153

;; Pred edge  11 [14.0%]  (fallthru,loop_exit)
(note 71 70 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 73 71 74 12 init/initramfs.c:384 (set (reg:SI 161 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 74 73 75 12 init/initramfs.c:384 (set (reg:SI 135 [ D.26319 ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 161 [ count ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 161 [ count ])
        (nil)))

(insn 75 74 76 12 init/initramfs.c:394 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.26319 ])
            (reg/v:SI 141 [ len ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 12 init/initramfs.c:394 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 25, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  13 [95.5%]  (fallthru)
;; Succ edge  14 [4.5%]  (loop_exit)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(34)
1, 4, 6, 8, 9, 11, 12, 25, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(2)
24, 154
;; rd  kill	(8)
24, 25, 26, 27, 28, 29, 30, 154

;; Pred edge  12 [95.5%]  (fallthru)
(note 77 76 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 80 77 81 13 init/initramfs.c:394 discrim 2 (set (reg/f:SI 163 [ message ])
        (mem/f/c/i:SI (reg/f:SI 167) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 81 80 82 13 init/initramfs.c:394 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 13 init/initramfs.c:394 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 13 -> ( 5 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; rd  out 	(34)
1, 4, 6, 8, 9, 11, 12, 24, 31, 32, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  5 [0.0%] 
;; Succ edge  14 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12 13 3) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(39)
1, 2, 4, 6, 8, 9, 11, 12, 14, 24, 25, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2

;; Pred edge  12 [4.5%]  (loop_exit)
;; Pred edge  13 [100.0%]  (fallthru,loop_exit)
;; Pred edge  3 [100.0%] 
(code_label 83 82 84 14 37 "" [2 uses])

(note 84 83 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 89 84 95 14 init/initramfs.c:408 (set (reg/i:SI 0 r0)
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ origLen ])
        (nil)))

(insn 95 89 0 14 init/initramfs.c:408 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(38)
0, 4, 6, 8, 9, 11, 12, 14, 24, 25, 30, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function retain_initrd_param (retain_initrd_param)[0:1334] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


retain_initrd_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 48{18d,30u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 135[14,1] 136[15,1] 137[16,1] 138[17,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 14, 15
;; rd  kill	(3)
9, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d14(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d15(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d9(bb 2 insn 7) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d5(bb 0 insn -1) }u9(13){ d7(bb 0 insn -1) }u10(25){ d10(bb 0 insn -1) }u11(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d5(bb 0 insn -1) }u13(13){ d7(bb 0 insn -1) }u14(25){ d10(bb 0 insn -1) }u15(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(3)
12, 16, 17
;; rd  kill	(4)
12, 13, 16, 17
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 17
;;      reg 137 { d16(bb 4 insn 15) }
;;      reg 138 { d17(bb 4 insn 16) }
;;   UD chains for insn luid 3 uid 18
;;      reg 138 { d17(bb 4 insn 16) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ d5(bb 0 insn -1) }u20(13){ d7(bb 0 insn -1) }u21(25){ d10(bb 0 insn -1) }u22(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 133 { d13(bb 3 insn 10) d12(bb 4 insn 18) }
;;   UD chains for insn luid 1 uid 31
;;      reg 0 { d0(bb 5 insn 25) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ d0(bb 5 insn 25) }u26(11){ d5(bb 0 insn -1) }u27(13){ d7(bb 0 insn -1) }u28(14){ d8(bb 0 insn -1) }u29(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 25) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 35 to worklist
  Adding insn 17 to worklist
  Adding insn 31 to worklist
Finished finding needed instructions:
  Adding insn 25 to worklist
Processing use of (reg 133 [ D.26190 ]) in insn 25:
  Adding insn 10 to worklist
  Adding insn 18 to worklist
Processing use of (reg 138) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 0 r0) in insn 31:
Processing use of (reg 137) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 138) in insn 17:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135 [ str ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:


retain_initrd_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 48{18d,30u,0e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 135[14,1] 136[15,1] 137[16,1] 138[17,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(3)
9, 14, 15
;; rd  kill	(3)
9, 14, 15

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/initramfs.c:478 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/initramfs.c:479 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 135 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 135 [ str ])
        (nil)))

(insn 7 6 8 2 init/initramfs.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(jump_insn 8 7 9 2 init/initramfs.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 35 3 init/initramfs.c:480 (set (reg:SI 133 [ D.26190 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 35 10 36 3 (set (pc)
        (label_ref 19)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15


;; Succ edge  5 [100.0%] 

(barrier 36 35 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138
;; live  kill	
;; rd  in  	(13)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15
;; rd  gen 	(3)
12, 16, 17
;; rd  kill	(4)
12, 13, 16, 17

;; Pred edge  2 [61.0%] 
(code_label 13 36 14 4 50 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 init/initramfs.c:481 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 4 init/initramfs.c:481 (set (reg:SI 138)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 init/initramfs.c:481 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 88 [0x58])) [0 do_retain_initrd+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 18 17 19 4 init/initramfs.c:482 (set (reg:SI 133 [ D.26190 ])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 19 18 20 5 51 "" [1 uses])

(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 20 31 5 init/initramfs.c:483 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.26190 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.26190 ])
        (nil)))

(insn 31 25 0 5 init/initramfs.c:483 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function clean_path (clean_path)[0:1327] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 12 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


clean_path

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={4d} r3={4d} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,9u,1d} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 431{376d,54u,1e} in 22{19 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366
0[0,6] 1[6,5] 2[11,4] 3[15,4] 11[19,1] 12[20,4] 13[24,1] 14[25,4] 15[29,3] 16[32,3] 17[35,3] 18[38,3] 19[41,3] 20[44,3] 21[47,3] 22[50,3] 23[53,3] 24[56,6] 25[62,1] 26[63,1] 27[64,3] 28[67,3] 29[70,3] 30[73,3] 31[76,3] 32[79,3] 33[82,3] 34[85,3] 35[88,3] 36[91,3] 37[94,3] 38[97,3] 39[100,3] 40[103,3] 41[106,3] 42[109,3] 43[112,3] 44[115,3] 45[118,3] 46[121,3] 47[124,3] 48[127,3] 49[130,3] 50[133,3] 51[136,3] 52[139,3] 53[142,3] 54[145,3] 55[148,3] 56[151,3] 57[154,3] 58[157,3] 59[160,3] 60[163,3] 61[166,3] 62[169,3] 63[172,3] 64[175,3] 65[178,3] 66[181,3] 67[184,3] 68[187,3] 69[190,3] 70[193,3] 71[196,3] 72[199,3] 73[202,3] 74[205,3] 75[208,3] 76[211,3] 77[214,3] 78[217,3] 79[220,3] 80[223,3] 81[226,3] 82[229,3] 83[232,3] 84[235,3] 85[238,3] 86[241,3] 87[244,3] 88[247,3] 89[250,3] 90[253,3] 91[256,3] 92[259,3] 93[262,3] 94[265,3] 95[268,3] 96[271,3] 97[274,3] 98[277,3] 99[280,3] 100[283,3] 101[286,3] 102[289,3] 103[292,3] 104[295,3] 105[298,3] 106[301,3] 107[304,3] 108[307,3] 109[310,3] 110[313,3] 111[316,3] 112[319,3] 113[322,3] 114[325,3] 115[328,3] 116[331,3] 117[334,3] 118[337,3] 119[340,3] 120[343,3] 121[346,3] 122[349,3] 123[352,3] 124[355,3] 125[358,3] 126[361,3] 127[364,3] 133[367,1] 134[368,1] 135[369,1] 136[370,1] 137[371,1] 138[372,1] 139[373,1] 140[374,1] 141[375,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d14(2){ }d18(3){ }d19(11){ }d23(12){ }d24(13){ }d28(14){ }d62(25){ }d63(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 14, 18, 19, 23, 24, 28, 62, 63
;; rd  kill	(31)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 62, 63
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 14, 18, 19, 23, 24, 28, 62, 63

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d19(bb 0 insn -1) }u1(13){ d24(bb 0 insn -1) }u2(25){ d62(bb 0 insn -1) }u3(26){ d63(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 136 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 10, 14, 18, 19, 23, 24, 28, 62, 63
;; rd  gen 	(6)
4, 60, 368, 369, 370, 371
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 25, 26, 27, 28, 56, 57, 58, 59, 60, 61, 368, 369, 370, 371
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; rd  out 	(14)
4, 10, 14, 18, 19, 23, 24, 60, 62, 63, 368, 369, 370, 371
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d62(bb 0 insn -1) }
;;   reg 26 { d63(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d62(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 137 { d371(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 10
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d5(bb 0 insn -1) }
;;      reg 1 { d9(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 0 { d4(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 134 { d368(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 24 { d60(bb 2 insn 12) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ d19(bb 0 insn -1) }u16(13){ d24(bb 0 insn -1) }u17(25){ d62(bb 0 insn -1) }u18(26){ d63(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 24 [cc] 133 138 139 140
;; live  kill	
;; rd  in  	(14)
4, 10, 14, 18, 19, 23, 24, 60, 62, 63, 368, 369, 370, 371
;; rd  gen 	(5)
59, 367, 372, 373, 374
;; rd  kill	(10)
56, 57, 58, 59, 60, 61, 367, 372, 373, 374
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; rd  out 	(18)
4, 10, 14, 18, 19, 23, 24, 59, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d62(bb 0 insn -1) }
;;   reg 26 { d63(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 25 { d62(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 16
;;      reg 133 { d367(bb 3 insn 15) }
;;      reg 136 { d370(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 17
;;      reg 138 { d372(bb 3 insn 16) }
;;   UD chains for insn luid 3 uid 18
;;      reg 139 { d373(bb 3 insn 17) }
;;   UD chains for insn luid 4 uid 19
;;      reg 140 { d374(bb 3 insn 18) }
;;   UD chains for insn luid 5 uid 20
;;      reg 24 { d59(bb 3 insn 19) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ d19(bb 0 insn -1) }u27(13){ d24(bb 0 insn -1) }u28(25){ d62(bb 0 insn -1) }u29(26){ d63(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(18)
4, 10, 14, 18, 19, 23, 24, 59, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374
;; rd  gen 	(2)
58, 375
;; rd  kill	(7)
56, 57, 58, 59, 60, 61, 375
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
4, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d62(bb 0 insn -1) }
;;   reg 26 { d63(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 133 { d367(bb 3 insn 15) }
;;   UD chains for insn luid 1 uid 23
;;      reg 141 { d375(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 24 { d58(bb 4 insn 23) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ d19(bb 0 insn -1) }u34(13){ d24(bb 0 insn -1) }u35(25){ d62(bb 0 insn -1) }u36(26){ d63(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(19)
4, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 25, 26, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
2, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d62(bb 0 insn -1) }
;;   reg 26 { d63(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 135 { d369(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 27
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d3(bb 5 insn 26) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ d19(bb 0 insn -1) }u41(13){ d24(bb 0 insn -1) }u42(25){ d62(bb 0 insn -1) }u43(26){ d63(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(19)
4, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(1)
0
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 25, 26, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d62(bb 0 insn -1) }
;;   reg 26 { d63(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 135 { d369(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 33
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d1(bb 6 insn 32) }

( 6 2 3 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ d19(bb 0 insn -1) }u48(13){ d24(bb 0 insn -1) }u49(25){ d62(bb 0 insn -1) }u50(26){ d63(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 2, 4, 10, 14, 18, 19, 23, 24, 58, 59, 60, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 2, 4, 10, 14, 18, 19, 23, 24, 58, 59, 60, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d62(bb 0 insn -1) }
;;   reg 26 { d63(bb 0 insn -1) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u51(11){ d19(bb 0 insn -1) }u52(13){ d24(bb 0 insn -1) }u53(14){ }u54(25){ d62(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 2, 4, 10, 14, 18, 19, 23, 24, 58, 59, 60, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
0, 2, 4, 10, 14, 18, 19, 23, 24, 58, 59, 60, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d62(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 20 to worklist
  Adding insn 24 to worklist
  Adding insn 43 to worklist
  Adding insn 27 to worklist
  Adding insn 33 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 33:
Processing use of (reg 0 r0) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 135 [ path ]) in insn 32:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 135 [ path ]) in insn 26:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 141) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 133 [ D.25967 ]) in insn 22:
  Adding insn 15 to worklist
Processing use of (reg 25 sfp) in insn 15:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 140) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 139) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 138) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 133 [ D.25967 ]) in insn 16:
Processing use of (reg 136 [ mode ]) in insn 16:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
Processing use of (reg 1 r1) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.25964 ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:


clean_path

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={4d} r3={4d} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,9u,1d} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 431{376d,54u,1e} in 22{19 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366
0[0,6] 1[6,5] 2[11,4] 3[15,4] 11[19,1] 12[20,4] 13[24,1] 14[25,4] 15[29,3] 16[32,3] 17[35,3] 18[38,3] 19[41,3] 20[44,3] 21[47,3] 22[50,3] 23[53,3] 24[56,6] 25[62,1] 26[63,1] 27[64,3] 28[67,3] 29[70,3] 30[73,3] 31[76,3] 32[79,3] 33[82,3] 34[85,3] 35[88,3] 36[91,3] 37[94,3] 38[97,3] 39[100,3] 40[103,3] 41[106,3] 42[109,3] 43[112,3] 44[115,3] 45[118,3] 46[121,3] 47[124,3] 48[127,3] 49[130,3] 50[133,3] 51[136,3] 52[139,3] 53[142,3] 54[145,3] 55[148,3] 56[151,3] 57[154,3] 58[157,3] 59[160,3] 60[163,3] 61[166,3] 62[169,3] 63[172,3] 64[175,3] 65[178,3] 66[181,3] 67[184,3] 68[187,3] 69[190,3] 70[193,3] 71[196,3] 72[199,3] 73[202,3] 74[205,3] 75[208,3] 76[211,3] 77[214,3] 78[217,3] 79[220,3] 80[223,3] 81[226,3] 82[229,3] 83[232,3] 84[235,3] 85[238,3] 86[241,3] 87[244,3] 88[247,3] 89[250,3] 90[253,3] 91[256,3] 92[259,3] 93[262,3] 94[265,3] 95[268,3] 96[271,3] 97[274,3] 98[277,3] 99[280,3] 100[283,3] 101[286,3] 102[289,3] 103[292,3] 104[295,3] 105[298,3] 106[301,3] 107[304,3] 108[307,3] 109[310,3] 110[313,3] 111[316,3] 112[319,3] 113[322,3] 114[325,3] 115[328,3] 116[331,3] 117[334,3] 118[337,3] 119[340,3] 120[343,3] 121[346,3] 122[349,3] 123[352,3] 124[355,3] 125[358,3] 126[361,3] 127[364,3] 133[367,1] 134[368,1] 135[369,1] 136[370,1] 137[371,1] 138[372,1] 139[373,1] 140[374,1] 141[375,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 136 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 10, 14, 18, 19, 23, 24, 28, 62, 63
;; rd  gen 	(6)
4, 60, 368, 369, 370, 371
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 25, 26, 27, 28, 56, 57, 58, 59, 60, 61, 368, 369, 370, 371

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:280 (set (reg/v/f:SI 135 [ path ])
        (reg:SI 0 r0 [ path ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 init/initramfs.c:280 (set (reg/v:SI 136 [ mode ])
        (reg:SI 1 r1 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mode ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 9 2 init/initramfs.c:283 (set (reg/f:SI 137)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(insn 9 7 10 2 init/initramfs.c:283 (set (reg:SI 1 r1)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))

(call_insn 10 9 11 2 init/initramfs.c:283 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_newlstat") [flags 0x41] <function_decl 0x11452980 sys_newlstat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 10 12 2 init/initramfs.c:283 (set (reg:SI 134 [ D.25964 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 13 2 init/initramfs.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.25964 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.25964 ])
        (nil)))

(jump_insn 13 12 14 2 init/initramfs.c:283 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; rd  out 	(14)
4, 10, 14, 18, 19, 23, 24, 60, 62, 63, 368, 369, 370, 371


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 24 [cc] 133 138 139 140
;; live  kill	
;; rd  in  	(14)
4, 10, 14, 18, 19, 23, 24, 60, 62, 63, 368, 369, 370, 371
;; rd  gen 	(5)
59, 367, 372, 373, 374
;; rd  kill	(10)
56, 57, 58, 59, 60, 61, 367, 372, 373, 374

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 init/initramfs.c:283 discrim 1 (set (reg:SI 133 [ D.25967 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -56 [0xffffffffffffffc8])) [0 st.st_mode+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 16 15 17 3 init/initramfs.c:283 discrim 1 (set (reg:SI 138)
        (xor:SI (reg/v:SI 136 [ mode ])
            (reg:SI 133 [ D.25967 ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ mode ])
        (nil)))

(insn 17 16 18 3 init/initramfs.c:283 discrim 1 (set (reg:SI 139)
        (zero_extend:SI (subreg:HI (reg:SI 138) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 18 17 19 3 init/initramfs.c:283 discrim 1 (set (reg:SI 140)
        (and:SI (reg:SI 139)
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 19 18 20 3 init/initramfs.c:283 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 20 19 21 3 init/initramfs.c:283 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; rd  out 	(18)
4, 10, 14, 18, 19, 23, 24, 59, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(18)
4, 10, 14, 18, 19, 23, 24, 59, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374
;; rd  gen 	(2)
58, 375
;; rd  kill	(7)
56, 57, 58, 59, 60, 61, 375

;; Pred edge  3 [61.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 init/initramfs.c:284 (set (reg:SI 141)
        (and:SI (reg:SI 133 [ D.25967 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.25967 ])
        (nil)))

(insn 23 22 24 4 init/initramfs.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 24 23 25 4 init/initramfs.c:284 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(19)
4, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375


;; Succ edge  5 [19.9%]  (fallthru)
;; Succ edge  6 [80.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(19)
4, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 25, 26, 27, 28

;; Pred edge  4 [19.9%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 init/initramfs.c:285 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ path ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ path ])
        (nil)))

(call_insn 27 26 43 5 init/initramfs.c:285 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_rmdir") [flags 0x41] <function_decl 0x11464e00 sys_rmdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 43 27 44 5 (set (pc)
        (label_ref 39)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
2, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375


;; Succ edge  7 [100.0%] 

(barrier 44 43 30)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(19)
4, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(1)
0
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 25, 26, 27, 28

;; Pred edge  4 [80.1%] 
(code_label 30 44 31 6 57 "" [1 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 init/initramfs.c:287 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ path ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ path ])
        (nil)))

(call_insn 33 32 39 6 init/initramfs.c:287 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x11458d00 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 10, 14, 18, 19, 23, 24, 58, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
0, 2, 4, 10, 14, 18, 19, 23, 24, 58, 59, 60, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  5 [100.0%] 
(code_label 39 33 42 7 58 "" [3 uses])

(note 42 39 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 2, 4, 10, 14, 18, 19, 23, 24, 58, 59, 60, 62, 63, 367, 368, 369, 370, 371, 372, 373, 374, 375


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_utime (do_utime)[0:1315] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_utime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,2u} r137={1d,2u} r139={1d,1u} 
;;    total ref usage 164{135d,28u,1e} in 14{13 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 135[131,1] 136[132,1] 137[133,1] 139[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d28(25){ }d29(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 28, 29
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d28(bb 0 insn -1) }u3(26){ d29(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(5)
0, 131, 132, 133, 134
;; rd  kill	(9)
0, 1, 2, 16, 17, 131, 132, 133, 134
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 136 { d132(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 137 { d133(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 136 { d132(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 12
;;      reg 25 { d28(bb 0 insn -1) }
;;      reg 137 { d133(bb 2 insn 8) }
;;   UD chains for insn luid 7 uid 13
;;      reg 25 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 15
;;      reg 135 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 10 uid 16
;;      reg 139 { d134(bb 2 insn 13) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 12 uid 18
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 14) }
;;      reg 1 { d4(bb 2 insn 15) }
;;      reg 2 { d7(bb 2 insn 16) }
;;      reg 3 { d10(bb 2 insn 17) }
;;   UD chains for insn luid 13 uid 30
;;      reg 0 { d0(bb 2 insn 18) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(0){ d0(bb 2 insn 18) }u25(11){ d12(bb 0 insn -1) }u26(13){ d15(bb 0 insn -1) }u27(14){ }u28(25){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 18) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 136 [ mtime ]) in insn 7:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 9:
Processing use of (reg 137) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 25 sfp) in insn 10:
Processing use of (reg 136 [ mtime ]) in insn 10:
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 137) in insn 12:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 2 r2) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 3 r3) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 139) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 25 sfp) in insn 13:
Processing use of (reg 135 [ filename ]) in insn 15:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 30:


do_utime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,2u} r137={1d,2u} r139={1d,1u} 
;;    total ref usage 164{135d,28u,1e} in 14{13 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 135[131,1] 136[132,1] 137[133,1] 139[134,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(5)
0, 131, 132, 133, 134
;; rd  kill	(9)
0, 1, 2, 16, 17, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:78 (set (reg/v/f:SI 135 [ filename ])
        (reg:SI 0 r0 [ filename ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ filename ])
        (nil)))

(insn 3 2 4 2 init/initramfs.c:78 (set (reg/v:SI 136 [ mtime ])
        (reg:SI 1 r1 [ mtime ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mtime ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:81 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 <variable>.tv_sec+0 S4 A64])
        (reg/v:SI 136 [ mtime ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/initramfs.c:82 (set (reg:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 init/initramfs.c:82 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 <variable>.tv_nsec+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 10 9 12 2 init/initramfs.c:83 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.tv_sec+0 S4 A64])
        (reg/v:SI 136 [ mtime ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ mtime ])
        (nil)))

(insn 12 10 13 2 init/initramfs.c:84 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.tv_nsec+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 13 12 14 2 init/initramfs.c:86 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 2 init/initramfs.c:86 (set (reg:SI 0 r0)
        (const_int -100 [0xffffffffffffff9c])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/initramfs.c:86 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ filename ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ filename ])
        (nil)))

(insn 16 15 17 2 init/initramfs.c:86 (set (reg:SI 2 r2)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(insn 17 16 18 2 init/initramfs.c:86 (set (reg:SI 3 r3)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 30 2 init/initramfs.c:86 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utimes") [flags 0x41] <function_decl 0x10c9bf80 do_utimes>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 18 0 2 init/initramfs.c:87 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 5, 8, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_symlink (do_symlink)[0:1330] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_symlink

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r136={1d,12u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,3u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r162={1d,1u} r164={1d,1u} 
;;    total ref usage 560{505d,55u,0e} in 35{31 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487
0[0,10] 1[10,9] 2[19,6] 3[25,5] 11[30,1] 12[31,5] 13[36,1] 14[37,5] 15[42,4] 16[46,4] 17[50,4] 18[54,4] 19[58,4] 20[62,4] 21[66,4] 22[70,4] 23[74,4] 24[78,4] 25[82,1] 26[83,1] 27[84,4] 28[88,4] 29[92,4] 30[96,4] 31[100,4] 32[104,4] 33[108,4] 34[112,4] 35[116,4] 36[120,4] 37[124,4] 38[128,4] 39[132,4] 40[136,4] 41[140,4] 42[144,4] 43[148,4] 44[152,4] 45[156,4] 46[160,4] 47[164,4] 48[168,4] 49[172,4] 50[176,4] 51[180,4] 52[184,4] 53[188,4] 54[192,4] 55[196,4] 56[200,4] 57[204,4] 58[208,4] 59[212,4] 60[216,4] 61[220,4] 62[224,4] 63[228,4] 64[232,4] 65[236,4] 66[240,4] 67[244,4] 68[248,4] 69[252,4] 70[256,4] 71[260,4] 72[264,4] 73[268,4] 74[272,4] 75[276,4] 76[280,4] 77[284,4] 78[288,4] 79[292,4] 80[296,4] 81[300,4] 82[304,4] 83[308,4] 84[312,4] 85[316,4] 86[320,4] 87[324,4] 88[328,4] 89[332,4] 90[336,4] 91[340,4] 92[344,4] 93[348,4] 94[352,4] 95[356,4] 96[360,4] 97[364,4] 98[368,4] 99[372,4] 100[376,4] 101[380,4] 102[384,4] 103[388,4] 104[392,4] 105[396,4] 106[400,4] 107[404,4] 108[408,4] 109[412,4] 110[416,4] 111[420,4] 112[424,4] 113[428,4] 114[432,4] 115[436,4] 116[440,4] 117[444,4] 118[448,4] 119[452,4] 120[456,4] 121[460,4] 122[464,4] 123[468,4] 124[472,4] 125[476,4] 126[480,4] 127[484,4] 133[488,1] 134[489,1] 136[490,1] 139[491,1] 140[492,1] 141[493,1] 142[494,1] 144[495,1] 145[496,1] 147[497,1] 151[498,1] 152[499,1] 153[500,1] 154[501,1] 155[502,1] 162[503,1] 164[504,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d82(25){ }d83(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 18, 24, 29, 30, 35, 36, 41, 82, 83
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 82, 83
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 18, 24, 29, 30, 35, 36, 41, 82, 83

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d30(bb 0 insn -1) }u1(13){ d36(bb 0 insn -1) }u2(25){ d82(bb 0 insn -1) }u3(26){ d83(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 139 140 141 142 144 145 147 151 152 153 154 155 162 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 136 139 140 141 142 144 145 147 151 152 153 154 155 162 164
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 24, 29, 30, 35, 36, 41, 82, 83
;; rd  gen 	(18)
0, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 37, 38, 39, 40, 41, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 18, 24, 29, 30, 35, 36, 82, 83, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;;  UD chains for artificial uses
;;   reg 11 { d30(bb 0 insn -1) }
;;   reg 13 { d36(bb 0 insn -1) }
;;   reg 25 { d82(bb 0 insn -1) }
;;   reg 26 { d83(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 9
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 10
;;      reg 140 { d492(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 11
;;      reg 139 { d491(bb 2 insn 10) }
;;   UD chains for insn luid 5 uid 12
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 14
;;      reg 134 { d489(bb 2 insn 6) }
;;      reg 141 { d493(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 15
;;      reg 142 { d494(bb 2 insn 12) }
;;      reg 144 { d495(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 19
;;      reg 145 { d496(bb 2 insn 15) }
;;      reg 147 { d497(bb 2 insn 17) }
;;   UD chains for insn luid 10 uid 20
;;      reg 134 { d489(bb 2 insn 6) }
;;   UD chains for insn luid 11 uid 21
;;      reg 147 { d497(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 22
;;      reg 13 { d36(bb 0 insn -1) }
;;      reg 0 { d8(bb 2 insn 20) }
;;      reg 1 { d12(bb 2 insn 21) }
;;   UD chains for insn luid 13 uid 24
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 14 uid 26
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 15 uid 27
;;      reg 152 { d499(bb 2 insn 26) }
;;   UD chains for insn luid 16 uid 28
;;      reg 151 { d498(bb 2 insn 27) }
;;   UD chains for insn luid 17 uid 29
;;      reg 153 { d500(bb 2 insn 28) }
;;   UD chains for insn luid 18 uid 30
;;      reg 133 { d488(bb 2 insn 24) }
;;      reg 154 { d501(bb 2 insn 29) }
;;   UD chains for insn luid 19 uid 31
;;      reg 155 { d502(bb 2 insn 30) }
;;   UD chains for insn luid 20 uid 32
;;      reg 133 { d488(bb 2 insn 24) }
;;   UD chains for insn luid 21 uid 33
;;      reg 13 { d36(bb 0 insn -1) }
;;      reg 0 { d6(bb 2 insn 31) }
;;      reg 1 { d16(bb 2 insn 32) }
;;   UD chains for insn luid 22 uid 37
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 23 uid 38
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 24 uid 39
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 25 uid 40
;;      reg 13 { d36(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 37) }
;;      reg 1 { d11(bb 2 insn 38) }
;;      reg 2 { d19(bb 2 insn 39) }
;;   UD chains for insn luid 26 uid 43
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 27 uid 44
;;      reg 136 { d490(bb 2 insn 5) }
;;   UD chains for insn luid 28 uid 45
;;      reg 13 { d36(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 43) }
;;      reg 1 { d10(bb 2 insn 44) }
;;   UD chains for insn luid 30 uid 48
;;      reg 136 { d490(bb 2 insn 5) }
;;      reg 162 { d503(bb 2 insn 47) }
;;   UD chains for insn luid 32 uid 51
;;      reg 136 { d490(bb 2 insn 5) }
;;      reg 164 { d504(bb 2 insn 50) }
;;   UD chains for insn luid 33 uid 56
;;      reg 147 { d497(bb 2 insn 17) }
;;   UD chains for insn luid 34 uid 62
;;      reg 0 { d0(bb 2 insn 56) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u50(0){ d0(bb 2 insn 56) }u51(11){ d30(bb 0 insn -1) }u52(13){ d36(bb 0 insn -1) }u53(14){ }u54(25){ d82(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
0, 18, 24, 29, 30, 35, 36, 82, 83, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(26)
0, 18, 24, 29, 30, 35, 36, 82, 83, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 56) }
;;   reg 11 { d30(bb 0 insn -1) }
;;   reg 13 { d36(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d82(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 62 to worklist
  Adding insn 51 to worklist
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 40 to worklist
  Adding insn 33 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
Finished finding needed instructions:
  Adding insn 56 to worklist
Processing use of (reg 147) in insn 56:
  Adding insn 17 to worklist
Processing use of (reg 145) in insn 19:
  Adding insn 15 to worklist
Processing use of (subreg (reg 147) 0) in insn 19:
Processing use of (reg 142 [ body_len ]) in insn 15:
  Adding insn 12 to worklist
Processing use of (reg 144) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 134 [ collected.393 ]) in insn 14:
  Adding insn 6 to worklist
Processing use of (reg 141) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 140 [ name_len ]) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 136) in insn 9:
  Adding insn 5 to worklist
Processing use of (reg 136) in insn 6:
Processing use of (reg 136) in insn 12:
Processing use of (reg 13 sp) in insn 22:
Processing use of (reg 0 r0) in insn 22:
  Adding insn 20 to worklist
Processing use of (reg 1 r1) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 147) in insn 21:
Processing use of (reg 134 [ collected.393 ]) in insn 20:
Processing use of (reg 13 sp) in insn 33:
Processing use of (reg 0 r0) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 1 r1) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 133 [ collected.674 ]) in insn 32:
  Adding insn 24 to worklist
Processing use of (reg 136) in insn 24:
Processing use of (reg 155) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 133 [ collected.674 ]) in insn 30:
Processing use of (reg 154) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 153) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 151) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 152 [ name_len ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 136) in insn 26:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 37 to worklist
Processing use of (reg 1 r1) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 2 r2) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 136) in insn 39:
Processing use of (reg 136) in insn 38:
Processing use of (reg 136) in insn 37:
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 1 r1) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 136) in insn 44:
Processing use of (reg 136) in insn 43:
Processing use of (reg 136) in insn 48:
Processing use of (reg 162) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 136) in insn 51:
Processing use of (reg 164) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 0 r0) in insn 62:


do_symlink

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r136={1d,12u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,3u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r162={1d,1u} r164={1d,1u} 
;;    total ref usage 560{505d,55u,0e} in 35{31 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487
0[0,10] 1[10,9] 2[19,6] 3[25,5] 11[30,1] 12[31,5] 13[36,1] 14[37,5] 15[42,4] 16[46,4] 17[50,4] 18[54,4] 19[58,4] 20[62,4] 21[66,4] 22[70,4] 23[74,4] 24[78,4] 25[82,1] 26[83,1] 27[84,4] 28[88,4] 29[92,4] 30[96,4] 31[100,4] 32[104,4] 33[108,4] 34[112,4] 35[116,4] 36[120,4] 37[124,4] 38[128,4] 39[132,4] 40[136,4] 41[140,4] 42[144,4] 43[148,4] 44[152,4] 45[156,4] 46[160,4] 47[164,4] 48[168,4] 49[172,4] 50[176,4] 51[180,4] 52[184,4] 53[188,4] 54[192,4] 55[196,4] 56[200,4] 57[204,4] 58[208,4] 59[212,4] 60[216,4] 61[220,4] 62[224,4] 63[228,4] 64[232,4] 65[236,4] 66[240,4] 67[244,4] 68[248,4] 69[252,4] 70[256,4] 71[260,4] 72[264,4] 73[268,4] 74[272,4] 75[276,4] 76[280,4] 77[284,4] 78[288,4] 79[292,4] 80[296,4] 81[300,4] 82[304,4] 83[308,4] 84[312,4] 85[316,4] 86[320,4] 87[324,4] 88[328,4] 89[332,4] 90[336,4] 91[340,4] 92[344,4] 93[348,4] 94[352,4] 95[356,4] 96[360,4] 97[364,4] 98[368,4] 99[372,4] 100[376,4] 101[380,4] 102[384,4] 103[388,4] 104[392,4] 105[396,4] 106[400,4] 107[404,4] 108[408,4] 109[412,4] 110[416,4] 111[420,4] 112[424,4] 113[428,4] 114[432,4] 115[436,4] 116[440,4] 117[444,4] 118[448,4] 119[452,4] 120[456,4] 121[460,4] 122[464,4] 123[468,4] 124[472,4] 125[476,4] 126[480,4] 127[484,4] 133[488,1] 134[489,1] 136[490,1] 139[491,1] 140[492,1] 141[493,1] 142[494,1] 144[495,1] 145[496,1] 147[497,1] 151[498,1] 152[499,1] 153[500,1] 154[501,1] 155[502,1] 162[503,1] 164[504,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 139 140 141 142 144 145 147 151 152 153 154 155 162 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 136 139 140 141 142 144 145 147 151 152 153 154 155 162 164
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 24, 29, 30, 35, 36, 41, 82, 83
;; rd  gen 	(18)
0, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 37, 38, 39, 40, 41, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:356 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 9 2 init/initramfs.c:356 (set (reg/f:SI 134 [ collected.393 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 6 10 2 init/initramfs.c:356 (set (reg:SI 140 [ name_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 init/initramfs.c:356 (set (reg:SI 139)
        (plus:SI (reg:SI 140 [ name_len ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140 [ name_len ])
        (nil)))

(insn 11 10 12 2 init/initramfs.c:356 (set (reg:SI 141)
        (and:SI (reg:SI 139)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 12 11 14 2 init/initramfs.c:356 (set (reg:SI 142 [ body_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 12 15 2 init/initramfs.c:356 (set (reg:SI 144)
        (plus:SI (reg/f:SI 134 [ collected.393 ])
            (reg:SI 141))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 14 17 2 init/initramfs.c:356 (set (reg:SI 145)
        (plus:SI (reg:SI 144)
            (reg:SI 142 [ body_len ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 142 [ body_len ])
            (nil))))

(insn 17 15 19 2 init/initramfs.c:356 (set (reg:SI 147)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 20 2 init/initramfs.c:356 (set (mem:QI (plus:SI (reg:SI 145)
                (const_int 2 [0x2])) [0 S1 A8])
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 20 19 21 2 init/initramfs.c:357 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ collected.393 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ collected.393 ])
        (nil)))

(insn 21 20 22 2 init/initramfs.c:357 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 22 21 24 2 init/initramfs.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("clean_path") [flags 0x3] <function_decl 0x114ad300 clean_path>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 24 22 26 2 init/initramfs.c:358 (set (reg/f:SI 133 [ collected.674 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 24 27 2 init/initramfs.c:358 (set (reg:SI 152 [ name_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 init/initramfs.c:358 (set (reg:SI 151)
        (plus:SI (reg:SI 152 [ name_len ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 152 [ name_len ])
        (nil)))

(insn 28 27 29 2 init/initramfs.c:358 (set (reg:SI 153)
        (and:SI (reg:SI 151)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 29 28 30 2 init/initramfs.c:358 (set (reg:SI 154)
        (plus:SI (reg:SI 153)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 30 29 31 2 init/initramfs.c:358 (set (reg:SI 155)
        (plus:SI (reg/f:SI 133 [ collected.674 ])
            (reg:SI 154))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 31 30 32 2 init/initramfs.c:358 (set (reg:SI 0 r0)
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 32 31 33 2 init/initramfs.c:358 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ collected.674 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ collected.674 ])
        (nil)))

(call_insn 33 32 37 2 init/initramfs.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_symlink") [flags 0x41] <function_decl 0x11458c80 sys_symlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 33 38 2 init/initramfs.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 2 init/initramfs.c:359 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 init/initramfs.c:359 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 43 2 init/initramfs.c:359 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_lchown") [flags 0x41] <function_decl 0x1145eb00 sys_lchown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 43 40 44 2 init/initramfs.c:360 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 2 init/initramfs.c:360 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 47 2 init/initramfs.c:360 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 47 45 48 2 init/initramfs.c:361 (set (reg:SI 162)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 50 2 init/initramfs.c:361 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 50 48 51 2 init/initramfs.c:362 (set (reg:SI 164)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 56 2 init/initramfs.c:362 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 136)
            (expr_list:REG_EQUAL (const_int 7 [0x7])
                (nil)))))

(insn 56 51 62 2 init/initramfs.c:364 (set (reg/i:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 62 56 0 2 init/initramfs.c:364 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 18, 24, 29, 30, 35, 36, 82, 83, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function unpack_to_rootfs (unpack_to_rootfs)[0:1333] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 77 (  2.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 87 (  2.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 83 (  2.6)


unpack_to_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={29d,22u} r1={22d,8u} r2={18d,3u} r3={17d,2u} r11={1d,31u} r12={15d} r13={1d,48u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={35d,19u} r25={1d,33u,1d} r26={1d,30u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r134={2d,2u} r135={2d,10u,1d} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r142={1d,2u} r143={1d,1u} r144={1d,1u} r145={1d,3u,2d} r146={1d,2u} r147={1d,1u} r148={1d,3u} r149={1d,2u} r151={1d,2u} r154={4d,7u} r155={4d,8u} r156={1d,3u} r157={1d,9u} r163={1d,1u} r165={1d,1u} r168={1d,2u} r170={1d,2u} r174={1d,2u} r175={1d,1u} r176={2d,3u} r183={1d,1u} r185={1d,1u,1d} r186={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r198={1d,2u} r202={1d,1u} r206={1d,1u} r214={1d,1u} r218={1d,1u} r220={1d,1u} r225={1d,1u} r226={1d,1u} r228={1d,1u} r229={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r239={1d,4u} r246={1d,1u} r248={2d,3u} r249={1d,1u} r250={1d,1u} r252={1d,21u} r253={1d,1u} r254={1d,1u} r255={1d,2u} r256={1d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} 
;;    total ref usage 2110{1768d,337u,5e} in 178{164 regular + 14 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,29] 1[29,22] 2[51,18] 3[69,17] 11[86,1] 12[87,15] 13[102,1] 14[103,15] 15[118,14] 16[132,14] 17[146,14] 18[160,14] 19[174,14] 20[188,14] 21[202,14] 22[216,14] 23[230,14] 24[244,35] 25[279,1] 26[280,1] 27[281,14] 28[295,14] 29[309,14] 30[323,14] 31[337,14] 32[351,14] 33[365,14] 34[379,14] 35[393,14] 36[407,14] 37[421,14] 38[435,14] 39[449,14] 40[463,14] 41[477,14] 42[491,14] 43[505,14] 44[519,14] 45[533,14] 46[547,14] 47[561,14] 48[575,14] 49[589,14] 50[603,14] 51[617,14] 52[631,14] 53[645,14] 54[659,14] 55[673,14] 56[687,14] 57[701,14] 58[715,14] 59[729,14] 60[743,14] 61[757,14] 62[771,14] 63[785,14] 64[799,14] 65[813,14] 66[827,14] 67[841,14] 68[855,14] 69[869,14] 70[883,14] 71[897,14] 72[911,14] 73[925,14] 74[939,14] 75[953,14] 76[967,14] 77[981,14] 78[995,14] 79[1009,14] 80[1023,14] 81[1037,14] 82[1051,14] 83[1065,14] 84[1079,14] 85[1093,14] 86[1107,14] 87[1121,14] 88[1135,14] 89[1149,14] 90[1163,14] 91[1177,14] 92[1191,14] 93[1205,14] 94[1219,14] 95[1233,14] 96[1247,14] 97[1261,14] 98[1275,14] 99[1289,14] 100[1303,14] 101[1317,14] 102[1331,14] 103[1345,14] 104[1359,14] 105[1373,14] 106[1387,14] 107[1401,14] 108[1415,14] 109[1429,14] 110[1443,14] 111[1457,14] 112[1471,14] 113[1485,14] 114[1499,14] 115[1513,14] 116[1527,14] 117[1541,14] 118[1555,14] 119[1569,14] 120[1583,14] 121[1597,14] 122[1611,14] 123[1625,14] 124[1639,14] 125[1653,14] 126[1667,14] 127[1681,14] 134[1695,2] 135[1697,2] 137[1699,1] 138[1700,1] 139[1701,1] 140[1702,1] 141[1703,1] 142[1704,1] 143[1705,1] 144[1706,1] 145[1707,1] 146[1708,1] 147[1709,1] 148[1710,1] 149[1711,1] 151[1712,1] 154[1713,4] 155[1717,4] 156[1721,1] 157[1722,1] 163[1723,1] 165[1724,1] 168[1725,1] 170[1726,1] 174[1727,1] 175[1728,1] 176[1729,2] 183[1731,1] 185[1732,1] 186[1733,1] 188[1734,1] 190[1735,1] 192[1736,1] 193[1737,1] 198[1738,1] 202[1739,1] 206[1740,1] 214[1741,1] 218[1742,1] 220[1743,1] 225[1744,1] 226[1745,1] 228[1746,1] 229[1747,1] 231[1748,1] 232[1749,1] 233[1750,1] 234[1751,1] 235[1752,1] 239[1753,1] 246[1754,1] 248[1755,2] 249[1757,1] 250[1758,1] 252[1759,1] 253[1760,1] 254[1761,1] 255[1762,1] 256[1763,1] 257[1764,1] 258[1765,1] 259[1766,1] 260[1767,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d28(0){ }d50(1){ }d68(2){ }d85(3){ }d86(11){ }d101(12){ }d102(13){ }d117(14){ }d279(25){ }d280(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
28, 50, 68, 85, 86, 101, 102, 117, 279, 280
;; rd  kill	(120)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 279, 280
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
28, 50, 68, 85, 86, 101, 102, 117, 279, 280

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d86(bb 0 insn -1) }u1(13){ d102(bb 0 insn -1) }u2(25){ d279(bb 0 insn -1) }u3(26){ d280(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 154 155 156 157 163
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 143 144 154 155 156 157 163
;; live  kill	 14 [lr]
;; rd  in  	(10)
28, 50, 68, 85, 86, 101, 102, 117, 279, 280
;; rd  gen 	(10)
24, 275, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723
;; rd  kill	(58)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1704, 1705, 1706, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; rd  out 	(18)
24, 50, 68, 85, 86, 101, 102, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 10
;;      reg 156 { d1721(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 12
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d27(bb 2 insn 10) }
;;      reg 1 { d49(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 0 { d26(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 15
;;      reg 144 { d1706(bb 2 insn 13) }
;;      reg 157 { d1722(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 19
;;      reg 156 { d1721(bb 2 insn 9) }
;;   UD chains for insn luid 11 uid 21
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d7(bb 2 insn 19) }
;;      reg 1 { d47(bb 2 insn 20) }
;;   UD chains for insn luid 12 uid 22
;;      reg 0 { d25(bb 2 insn 21) }
;;   UD chains for insn luid 13 uid 24
;;      reg 143 { d1705(bb 2 insn 22) }
;;      reg 157 { d1722(bb 2 insn 14) }
;;   UD chains for insn luid 14 uid 28
;;      reg 156 { d1721(bb 2 insn 9) }
;;   UD chains for insn luid 16 uid 30
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d6(bb 2 insn 28) }
;;      reg 1 { d45(bb 2 insn 29) }
;;   UD chains for insn luid 17 uid 31
;;      reg 0 { d24(bb 2 insn 30) }
;;   UD chains for insn luid 18 uid 34
;;      reg 142 { d1704(bb 2 insn 31) }
;;      reg 157 { d1722(bb 2 insn 14) }
;;   UD chains for insn luid 19 uid 36
;;      reg 157 { d1722(bb 2 insn 14) }
;;   UD chains for insn luid 20 uid 37
;;      reg 163 { d1723(bb 2 insn 36) }
;;   UD chains for insn luid 21 uid 38
;;      reg 24 { d275(bb 2 insn 37) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ d86(bb 0 insn -1) }u31(13){ d102(bb 0 insn -1) }u32(25){ d279(bb 0 insn -1) }u33(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc] 165
;; live  kill	
;; rd  in  	(18)
24, 50, 68, 85, 86, 101, 102, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723
;; rd  gen 	(2)
274, 1724
;; rd  kill	(1)
1724
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; rd  out 	(19)
24, 50, 68, 85, 86, 101, 102, 274, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 157 { d1722(bb 2 insn 14) }
;;   UD chains for insn luid 1 uid 42
;;      reg 165 { d1724(bb 3 insn 41) }
;;   UD chains for insn luid 2 uid 43
;;      reg 24 { d274(bb 3 insn 42) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ d86(bb 0 insn -1) }u38(13){ d102(bb 0 insn -1) }u39(25){ d279(bb 0 insn -1) }u40(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
24, 50, 68, 85, 86, 101, 102, 274, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;; rd  gen 	(1)
245
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; rd  out 	(19)
24, 50, 68, 85, 86, 101, 102, 245, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 142 { d1704(bb 2 insn 31) }
;;   UD chains for insn luid 1 uid 46
;;      reg 24 { d245(bb 4 insn 45) }

( 2 3 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d86(bb 0 insn -1) }u44(13){ d102(bb 0 insn -1) }u45(25){ d279(bb 0 insn -1) }u46(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(21)
24, 50, 68, 85, 86, 101, 102, 245, 274, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;; rd  gen 	(0)

;; rd  kill	(15)
103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
24, 50, 68, 85, 86, 101, 102, 245, 274, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 51
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 50) }

( 4 )->[6]->( 27 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ d86(bb 0 insn -1) }u50(13){ d102(bb 0 insn -1) }u51(25){ d279(bb 0 insn -1) }u52(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 168 170 252 253 254 255 256 257 258 259 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  gen 	 168 170 252 253 254 255 256 257 258 259 260
;; live  kill	
;; rd  in  	(19)
24, 50, 68, 85, 86, 101, 102, 245, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;; rd  gen 	(11)
1725, 1726, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  kill	(11)
1725, 1726, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(30)
24, 50, 68, 85, 86, 101, 102, 245, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 57
;;      reg 157 { d1722(bb 2 insn 14) }
;;      reg 168 { d1725(bb 6 insn 56) }
;;   UD chains for insn luid 3 uid 60
;;      reg 157 { d1722(bb 2 insn 14) }
;;      reg 170 { d1726(bb 6 insn 59) }
;;   UD chains for insn luid 4 uid 63
;;      reg 157 { d1722(bb 2 insn 14) }
;;      reg 168 { d1725(bb 6 insn 56) }
;;   UD chains for insn luid 5 uid 229
;;      reg 157 { d1722(bb 2 insn 14) }
;;   UD chains for insn luid 6 uid 125
;;      reg 170 { d1726(bb 6 insn 59) }
;;   UD chains for insn luid 7 uid 128
;;      reg 25 { d279(bb 0 insn -1) }
;;   UD chains for insn luid 10 uid 175
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 13 uid 307
;;      reg 252 { d1759(bb 6 insn 229) }

( 27 )->[7]->( 8 12 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ d86(bb 0 insn -1) }u65(13){ d102(bb 0 insn -1) }u66(25){ d279(bb 0 insn -1) }u67(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 252
;; lr  def 	 24 [cc] 145 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 145 151
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(3)
272, 1707, 1712
;; rd  kill	(2)
1707, 1712
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 272, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 68
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 69
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;   UD chains for insn luid 2 uid 70
;;      reg 151 { d1712(bb 7 insn 69) }
;;   UD chains for insn luid 3 uid 71
;;      reg 24 { d272(bb 7 insn 70) }

( 7 )->[8]->( 9 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ d86(bb 0 insn -1) }u73(13){ d102(bb 0 insn -1) }u74(25){ d279(bb 0 insn -1) }u75(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 174 175 176
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 272, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
271, 1727, 1728, 1729
;; rd  kill	(4)
1727, 1728, 1729, 1730
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 74
;;      reg 145 { d1707(bb 7 insn 68) }
;;      reg 175 { d1728(bb 8 insn 73) }
;;   eq_note reg 145 { }
;;   UD chains for insn luid 2 uid 75
;;      reg 174 { d1727(bb 8 insn 74) }
;;   UD chains for insn luid 3 uid 76
;;      reg 174 { d1727(bb 8 insn 74) }
;;      reg 176 { d1730(bb 8 insn 75) }
;;   UD chains for insn luid 4 uid 77
;;      reg 176 { d1729(bb 8 insn 76) }
;;   UD chains for insn luid 5 uid 78
;;      reg 24 { d271(bb 8 insn 77) }

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ d86(bb 0 insn -1) }u85(13){ d102(bb 0 insn -1) }u86(25){ d279(bb 0 insn -1) }u87(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 82
;;      reg 176 { d1729(bb 8 insn 76) }
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 84
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 2 uid 86
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;      reg 252 { d1759(bb 6 insn 229) }

( 9 10 )->[10]->( 10 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u94(11){ d86(bb 0 insn -1) }u95(13){ d102(bb 0 insn -1) }u96(25){ d279(bb 0 insn -1) }u97(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 183 185 186 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 24 [cc] 140 183 185 186 188
;; live  kill	 14 [lr]
;; rd  in  	(74)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 269, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(7)
22, 269, 1702, 1731, 1732, 1733, 1734
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1702, 1731, 1732, 1733, 1734
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
22, 50, 68, 85, 86, 101, 102, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 92
;;      reg 183 { d1731(bb 10 insn 90) }
;;   UD chains for insn luid 2 uid 93
;;      reg 185 { d1732(bb 10 insn 92) }
;;      reg 252 { d1759(bb 6 insn 229) }
;;   eq_note reg 185 { }
;;   UD chains for insn luid 3 uid 95
;;      reg 186 { d1733(bb 10 insn 93) }
;;   UD chains for insn luid 4 uid 96
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 188 { d1734(bb 10 insn 95) }
;;   UD chains for insn luid 5 uid 97
;;      reg 0 { d22(bb 10 insn 96) }
;;   UD chains for insn luid 6 uid 99
;;      reg 140 { d1702(bb 10 insn 97) }
;;   UD chains for insn luid 7 uid 100
;;      reg 24 { d269(bb 10 insn 99) }

( 10 )->[11]->( 27 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ d86(bb 0 insn -1) }u111(13){ d102(bb 0 insn -1) }u112(25){ d279(bb 0 insn -1) }u113(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 260
;; lr  def 	 141 154 155 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 141 154 155 190
;; live  kill	
;; rd  in  	(69)
22, 50, 68, 85, 86, 101, 102, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
1703, 1715, 1719, 1735
;; rd  kill	(10)
1703, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1735
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(63)
22, 50, 68, 85, 86, 101, 102, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 103
;;      reg 260 { d1767(bb 6 insn 307) }
;;   UD chains for insn luid 1 uid 104
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }
;;      reg 190 { d1735(bb 11 insn 103) }
;;   UD chains for insn luid 2 uid 105
;;      reg 141 { d1703(bb 11 insn 104) }
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;   UD chains for insn luid 3 uid 106
;;      reg 141 { d1703(bb 11 insn 104) }
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }

( 7 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(11){ d86(bb 0 insn -1) }u122(13){ d102(bb 0 insn -1) }u123(25){ d279(bb 0 insn -1) }u124(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 272, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(1)
268
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 268, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 111
;;      reg 151 { d1712(bb 7 insn 69) }
;;   UD chains for insn luid 1 uid 112
;;      reg 24 { d268(bb 12 insn 111) }

( 12 )->[13]->( 27 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(11){ d86(bb 0 insn -1) }u128(13){ d102(bb 0 insn -1) }u129(25){ d279(bb 0 insn -1) }u130(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252
;; lr  def 	 24 [cc] 154 155 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 154 155 192 193
;; live  kill	 24 [cc]
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 268, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
1714, 1718, 1736, 1737
;; rd  kill	(10)
1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1736, 1737
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(66)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1718, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 114
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;   UD chains for insn luid 1 uid 115
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }
;;   UD chains for insn luid 3 uid 118
;;      reg 145 { d1707(bb 7 insn 68) }
;;      reg 192 { d1736(bb 13 insn 117) }
;;   eq_note reg 145 { }
;;   UD chains for insn luid 4 uid 119
;;      reg 193 { d1737(bb 13 insn 118) }
;;      reg 252 { d1759(bb 6 insn 229) }

( 12 8 )->[14]->( 15 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u138(11){ d86(bb 0 insn -1) }u139(13){ d102(bb 0 insn -1) }u140(25){ d279(bb 0 insn -1) }u141(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 146
;; live  kill	 14 [lr]
;; rd  in  	(74)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 268, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(3)
20, 265, 1708
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1708
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 265, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 126
;;      reg 252 { d1759(bb 6 insn 229) }
;;      reg 253 { d1760(bb 6 insn 125) }
;;   UD chains for insn luid 1 uid 129
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;   UD chains for insn luid 2 uid 130
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }
;;   UD chains for insn luid 3 uid 131
;;      reg 254 { d1761(bb 6 insn 128) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 132
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d21(bb 14 insn 129) }
;;      reg 1 { d30(bb 14 insn 130) }
;;      reg 2 { d52(bb 14 insn 131) }
;;   UD chains for insn luid 5 uid 133
;;      reg 0 { d20(bb 14 insn 132) }
;;   UD chains for insn luid 6 uid 134
;;      reg 146 { d1708(bb 14 insn 133) }
;;   UD chains for insn luid 7 uid 135
;;      reg 24 { d265(bb 14 insn 134) }

( 14 )->[15]->( 16 23 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(11){ d86(bb 0 insn -1) }u156(13){ d102(bb 0 insn -1) }u157(25){ d279(bb 0 insn -1) }u158(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 155 255 258
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 198
;; live  kill	 14 [lr]
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 265, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
18, 263, 1709, 1738
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1709, 1738
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
18, 50, 68, 85, 86, 101, 102, 263, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 139
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 198 { d1738(bb 15 insn 138) }
;;   UD chains for insn luid 2 uid 141
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 255 { d1762(bb 6 insn 215) }
;;   UD chains for insn luid 3 uid 143
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 258 { d1765(bb 6 insn 142) }
;;   UD chains for insn luid 4 uid 144
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;   UD chains for insn luid 5 uid 145
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }
;;   UD chains for insn luid 6 uid 146
;;      reg 198 { d1738(bb 15 insn 138) }
;;   UD chains for insn luid 8 uid 148
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d19(bb 15 insn 144) }
;;      reg 1 { d29(bb 15 insn 145) }
;;      reg 2 { d51(bb 15 insn 146) }
;;      reg 3 { d69(bb 15 insn 147) }
;;      reg 146 { d1708(bb 14 insn 133) }
;;   UD chains for insn luid 9 uid 149
;;      reg 0 { d18(bb 15 insn 148) }
;;   UD chains for insn luid 10 uid 150
;;      reg 147 { d1709(bb 15 insn 149) }
;;   UD chains for insn luid 11 uid 151
;;      reg 24 { d263(bb 15 insn 150) }

( 15 )->[16]->( 17 23 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u177(11){ d86(bb 0 insn -1) }u178(13){ d102(bb 0 insn -1) }u179(25){ d279(bb 0 insn -1) }u180(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 202
;; live  kill	
;; rd  in  	(69)
18, 50, 68, 85, 86, 101, 102, 263, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
262, 1739
;; rd  kill	(1)
1739
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
18, 50, 68, 85, 86, 101, 102, 262, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 154
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 155
;;      reg 202 { d1739(bb 16 insn 154) }
;;   UD chains for insn luid 2 uid 156
;;      reg 24 { d262(bb 16 insn 155) }

( 16 )->[17]->( 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u184(11){ d86(bb 0 insn -1) }u185(13){ d102(bb 0 insn -1) }u186(25){ d279(bb 0 insn -1) }u187(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 259
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(69)
18, 50, 68, 85, 86, 101, 102, 262, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
18, 50, 68, 85, 86, 101, 102, 262, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 160
;;      reg 252 { d1759(bb 6 insn 229) }
;;      reg 259 { d1766(bb 6 insn 159) }

( 14 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u190(11){ d86(bb 0 insn -1) }u191(13){ d102(bb 0 insn -1) }u192(25){ d279(bb 0 insn -1) }u193(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 149
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 265, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
261, 1711
;; rd  kill	(1)
1711
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 261, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 165
;;      reg 25 { d279(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 166
;;      reg 149 { d1711(bb 18 insn 165) }
;;   UD chains for insn luid 2 uid 167
;;      reg 24 { d261(bb 18 insn 166) }

( 18 )->[19]->( 20 23 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u197(11){ d86(bb 0 insn -1) }u198(13){ d102(bb 0 insn -1) }u199(25){ d279(bb 0 insn -1) }u200(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 206
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 261, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
260, 1740
;; rd  kill	(1)
1740
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 260, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 170
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 171
;;      reg 206 { d1740(bb 19 insn 170) }
;;   UD chains for insn luid 2 uid 172
;;      reg 24 { d260(bb 19 insn 171) }

( 19 )->[20]->( 23 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u204(11){ d86(bb 0 insn -1) }u205(13){ d102(bb 0 insn -1) }u206(25){ d279(bb 0 insn -1) }u207(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 252 257
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 260, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(1)
17
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
17, 50, 68, 85, 86, 101, 102, 260, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 180
;;      reg 149 { d1711(bb 18 insn 165) }
;;   UD chains for insn luid 4 uid 181
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d0(bb 20 insn 177) }
;;      reg 1 { d39(bb 20 insn 178) }
;;      reg 2 { d53(bb 20 insn 179) }
;;      reg 3 { d77(bb 20 insn 180) }
;;   UD chains for insn luid 5 uid 185
;;      reg 252 { d1759(bb 6 insn 229) }
;;      reg 257 { d1764(bb 6 insn 175) }

( 18 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u216(11){ d86(bb 0 insn -1) }u217(13){ d102(bb 0 insn -1) }u218(25){ d279(bb 0 insn -1) }u219(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 214
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 261, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
258, 1741
;; rd  kill	(1)
1741
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 258, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 191
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 192
;;      reg 214 { d1741(bb 21 insn 191) }
;;   UD chains for insn luid 2 uid 193
;;      reg 24 { d258(bb 21 insn 192) }

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u223(11){ d86(bb 0 insn -1) }u224(13){ d102(bb 0 insn -1) }u225(25){ d279(bb 0 insn -1) }u226(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 258, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 258, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 197
;;      reg 252 { d1759(bb 6 insn 229) }
;;      reg 256 { d1763(bb 6 insn 211) }

( 16 17 21 15 19 22 20 )->[23]->( 24 26 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u229(11){ d86(bb 0 insn -1) }u230(13){ d102(bb 0 insn -1) }u231(25){ d279(bb 0 insn -1) }u232(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 218
;; live  kill	
;; rd  in  	(74)
17, 18, 20, 50, 68, 85, 86, 101, 102, 258, 260, 262, 263, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
257, 1742
;; rd  kill	(1)
1742
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 257, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 201
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 202
;;      reg 218 { d1742(bb 23 insn 201) }
;;   UD chains for insn luid 2 uid 203
;;      reg 24 { d257(bb 23 insn 202) }

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u236(11){ d86(bb 0 insn -1) }u237(13){ d102(bb 0 insn -1) }u238(25){ d279(bb 0 insn -1) }u239(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 220
;; live  kill	
;; rd  in  	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 257, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
256, 1743
;; rd  kill	(1)
1743
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 206
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 1 uid 207
;;      reg 220 { d1743(bb 24 insn 206) }
;;   UD chains for insn luid 2 uid 208
;;      reg 24 { d256(bb 24 insn 207) }

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u243(11){ d86(bb 0 insn -1) }u244(13){ d102(bb 0 insn -1) }u245(25){ d279(bb 0 insn -1) }u246(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 212
;;      reg 252 { d1759(bb 6 insn 229) }
;;      reg 256 { d1763(bb 6 insn 211) }

( 23 24 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ d86(bb 0 insn -1) }u250(13){ d102(bb 0 insn -1) }u251(25){ d279(bb 0 insn -1) }u252(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 255
;; lr  def 	 24 [cc] 148 154 155 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 148 154 155 225 226
;; live  kill	 24 [cc]
;; rd  in  	(72)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 257, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(5)
1710, 1713, 1717, 1744, 1745
;; rd  kill	(11)
1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1744, 1745
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(64)
17, 18, 20, 50, 68, 85, 86, 101, 102, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1717, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 216
;;      reg 255 { d1762(bb 6 insn 215) }
;;   UD chains for insn luid 1 uid 218
;;      reg 148 { d1710(bb 26 insn 216) }
;;   UD chains for insn luid 2 uid 219
;;      reg 145 { d1707(bb 7 insn 68) }
;;      reg 225 { d1744(bb 26 insn 218) }
;;   UD chains for insn luid 3 uid 220
;;      reg 226 { d1745(bb 26 insn 219) }
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 4 uid 221
;;      reg 148 { d1710(bb 26 insn 216) }
;;      reg 154 { d1716(bb 2 insn 2) d1715(bb 11 insn 105) d1714(bb 13 insn 114) d1713(bb 26 insn 221) }
;;   UD chains for insn luid 5 uid 222
;;      reg 148 { d1710(bb 26 insn 216) }
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }

( 26 11 6 13 )->[27]->( 7 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u267(11){ d86(bb 0 insn -1) }u268(13){ d102(bb 0 insn -1) }u269(25){ d279(bb 0 insn -1) }u270(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 252
;; lr  def 	 24 [cc] 228 229 231 232 233 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 228 229 231 232 233 234 235
;; live  kill	
;; rd  in  	(74)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 245, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(8)
252, 1746, 1747, 1748, 1749, 1750, 1751, 1752
;; rd  kill	(7)
1746, 1747, 1748, 1749, 1750, 1751, 1752
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 226
;;      reg 155 { d1720(bb 2 insn 3) d1719(bb 11 insn 106) d1718(bb 13 insn 115) d1717(bb 26 insn 222) }
;;   UD chains for insn luid 1 uid 227
;;      reg 24 { d254(bb 27 insn 226) }
;;   UD chains for insn luid 3 uid 230
;;      reg 252 { d1759(bb 6 insn 229) }
;;   UD chains for insn luid 4 uid 231
;;      reg 231 { d1748(bb 27 insn 230) }
;;   UD chains for insn luid 5 uid 232
;;      reg 24 { d253(bb 27 insn 231) }
;;   UD chains for insn luid 6 uid 234
;;      reg 228 { d1746(bb 27 insn 227) }
;;      reg 232 { d1749(bb 27 insn 232) }
;;   UD chains for insn luid 7 uid 235
;;      reg 233 { d1750(bb 27 insn 234) }
;;   UD chains for insn luid 8 uid 236
;;      reg 234 { d1751(bb 27 insn 235) }
;;   UD chains for insn luid 9 uid 237
;;      reg 235 { d1752(bb 27 insn 236) }
;;   UD chains for insn luid 10 uid 238
;;      reg 24 { d252(bb 27 insn 237) }

( 27 )->[28]->( 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u282(11){ d86(bb 0 insn -1) }u283(13){ d102(bb 0 insn -1) }u284(25){ d279(bb 0 insn -1) }u285(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  def 	 134 135 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; live  gen 	 134 135 248 249 250
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(5)
1696, 1697, 1756, 1757, 1758
;; rd  kill	(8)
1695, 1696, 1697, 1698, 1755, 1756, 1757, 1758
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; rd  out 	(78)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1696, 1697, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 324
;;      reg 229 { d1747(bb 27 insn 308) }
;;   UD chains for insn luid 1 uid 241
;;      reg 248 { d1755(bb 28 insn 324) }
;;      reg 248 { d1755(bb 28 insn 324) }
;;   UD chains for insn luid 2 uid 242
;;      reg 135 { d1697(bb 28 insn 241) }

( 30 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u289(11){ d86(bb 0 insn -1) }u290(13){ d102(bb 0 insn -1) }u291(25){ d279(bb 0 insn -1) }u292(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 249 250
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 0 [r0] 1 [r1] 134 135 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(84)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(5)
1695, 1698, 1699, 1700, 1701
;; rd  kill	(22)
103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1695, 1696, 1697, 1698, 1699, 1700, 1701
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; rd  out 	(82)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 247
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;   UD chains for insn luid 1 uid 248
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;   UD chains for insn luid 2 uid 249
;;      reg 138 { d1700(bb 29 insn 248) }
;;      reg 139 { d1701(bb 29 insn 247) }
;;   UD chains for insn luid 3 uid 250
;;      reg 138 { d1700(bb 29 insn 248) }
;;      reg 139 { d1701(bb 29 insn 247) }
;;   UD chains for insn luid 4 uid 252
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;      reg 249 { d1757(bb 28 insn 251) }
;;   UD chains for insn luid 5 uid 254
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;      reg 250 { d1758(bb 28 insn 253) }
;;   UD chains for insn luid 6 uid 255
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;   UD chains for insn luid 7 uid 256
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;   UD chains for insn luid 8 uid 257
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d16(bb 29 insn 255) }
;;      reg 1 { d37(bb 29 insn 256) }
;;   UD chains for insn luid 9 uid 258
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;   UD chains for insn luid 10 uid 259
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d14(bb 29 insn 258) }
;;   UD chains for insn luid 11 uid 260
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;   UD chains for insn luid 12 uid 261
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d12(bb 29 insn 260) }
;;   UD chains for insn luid 13 uid 262
;;      reg 134 { d1696(bb 28 insn 242) d1695(bb 29 insn 265) }
;;   UD chains for insn luid 14 uid 264
;;      reg 134 { d1696(bb 28 insn 242) d1695(bb 29 insn 265) }
;;   UD chains for insn luid 15 uid 265
;;      reg 137 { d1699(bb 29 insn 262) }

( 29 28 )->[30]->( 29 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u317(11){ d86(bb 0 insn -1) }u318(13){ d102(bb 0 insn -1) }u319(25){ d279(bb 0 insn -1) }u320(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 248
;; lr  def 	 24 [cc] 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 24 [cc] 239
;; live  kill	
;; rd  in  	(85)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 252, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
244, 1753
;; rd  kill	(1)
1753
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
;; rd  out 	(84)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 271
;;      reg 135 { d1698(bb 29 insn 264) d1697(bb 28 insn 241) }
;;      reg 248 { d1756(bb 28 insn 241) }
;;   eq_note reg 135 { }
;;   UD chains for insn luid 2 uid 272
;;      reg 24 { d244(bb 30 insn 271) }

( 30 )->[31]->( 1 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u325(11){ d86(bb 0 insn -1) }u326(13){ d102(bb 0 insn -1) }u327(25){ d279(bb 0 insn -1) }u328(26){ d280(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 246
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; live  gen 	 0 [r0] 246
;; live  kill	 14 [lr]
;; rd  in  	(84)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
2, 1754
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1754
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(81)
2, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 25 { d279(bb 0 insn -1) }
;;   reg 26 { d280(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 275
;;      reg 239 { d1753(bb 30 insn 303) }
;;   UD chains for insn luid 1 uid 276
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d5(bb 31 insn 275) }
;;   UD chains for insn luid 2 uid 278
;;      reg 239 { d1753(bb 30 insn 303) }
;;   UD chains for insn luid 3 uid 279
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d4(bb 31 insn 278) }
;;   UD chains for insn luid 4 uid 281
;;      reg 239 { d1753(bb 30 insn 303) }
;;   UD chains for insn luid 5 uid 282
;;      reg 13 { d102(bb 0 insn -1) }
;;      reg 0 { d3(bb 31 insn 281) }
;;   UD chains for insn luid 6 uid 284
;;      reg 239 { d1753(bb 30 insn 303) }
;;   UD chains for insn luid 7 uid 289
;;      reg 246 { d1754(bb 31 insn 284) }
;;   UD chains for insn luid 8 uid 295
;;      reg 0 { d2(bb 31 insn 289) }

( 31 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u341(0){ d2(bb 31 insn 289) }u342(11){ d86(bb 0 insn -1) }u343(13){ d102(bb 0 insn -1) }u344(14){ }u345(25){ d279(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(81)
2, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(81)
2, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 31 insn 289) }
;;   reg 11 { d86(bb 0 insn -1) }
;;   reg 13 { d102(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d279(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 30 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 51 to worklist
  Adding insn 326 to worklist
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 71 to worklist
  Adding insn 78 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 100 to worklist
  Adding insn 96 to worklist
  Adding insn 328 to worklist
  Adding insn 112 to worklist
  Adding insn 330 to worklist
  Adding insn 119 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 126 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 156 to worklist
  Adding insn 332 to worklist
  Adding insn 160 to worklist
  Adding insn 167 to worklist
  Adding insn 172 to worklist
  Adding insn 334 to worklist
  Adding insn 185 to worklist
  Adding insn 181 to worklist
  Adding insn 193 to worklist
  Adding insn 197 to worklist
  Adding insn 203 to worklist
  Adding insn 208 to worklist
  Adding insn 212 to worklist
  Adding insn 220 to worklist
  Adding insn 238 to worklist
  Adding insn 336 to worklist
  Adding insn 261 to worklist
  Adding insn 259 to worklist
  Adding insn 257 to worklist
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 272 to worklist
  Adding insn 295 to worklist
  Adding insn 282 to worklist
  Adding insn 279 to worklist
  Adding insn 276 to worklist
Finished finding needed instructions:
  Adding insn 289 to worklist
Processing use of (reg 246 [ message ]) in insn 289:
  Adding insn 284 to worklist
Processing use of (reg 239) in insn 284:
  Adding insn 303 to worklist
Processing use of (reg 13 sp) in insn 276:
Processing use of (reg 0 r0) in insn 276:
  Adding insn 275 to worklist
Processing use of (reg 239) in insn 275:
Processing use of (reg 13 sp) in insn 279:
Processing use of (reg 0 r0) in insn 279:
  Adding insn 278 to worklist
Processing use of (reg 239) in insn 278:
Processing use of (reg 13 sp) in insn 282:
Processing use of (reg 0 r0) in insn 282:
  Adding insn 281 to worklist
Processing use of (reg 239) in insn 281:
Processing use of (reg 0 r0) in insn 295:
Processing use of (reg 24 cc) in insn 272:
  Adding insn 271 to worklist
Processing use of (reg 135 [ de ]) in insn 271:
  Adding insn 264 to worklist
  Adding insn 241 to worklist
Processing use of (reg 248) in insn 271:
Processing use of (reg 248) in insn 241:
  Adding insn 324 to worklist
Processing use of (reg 248) in insn 241:
Processing use of (reg 229) in insn 324:
  Adding insn 308 to worklist
Processing use of (reg 134 [ de.751 ]) in insn 264:
  Adding insn 242 to worklist
  Adding insn 265 to worklist
Processing use of (reg 137 [ __mptr ]) in insn 265:
  Adding insn 262 to worklist
Processing use of (reg 134 [ de.751 ]) in insn 262:
Processing use of (reg 135 [ de ]) in insn 242:
Processing use of (reg 138 [ D.26386 ]) in insn 249:
  Adding insn 248 to worklist
Processing use of (reg 139 [ D.26385 ]) in insn 249:
  Adding insn 247 to worklist
Processing use of (reg 135 [ de ]) in insn 247:
Processing use of (reg 135 [ de ]) in insn 248:
Processing use of (reg 138 [ D.26386 ]) in insn 250:
Processing use of (reg 139 [ D.26385 ]) in insn 250:
Processing use of (reg 135 [ de ]) in insn 252:
Processing use of (reg 249) in insn 252:
  Adding insn 251 to worklist
Processing use of (reg 135 [ de ]) in insn 254:
Processing use of (reg 250) in insn 254:
  Adding insn 253 to worklist
Processing use of (reg 13 sp) in insn 257:
Processing use of (reg 0 r0) in insn 257:
  Adding insn 255 to worklist
Processing use of (reg 1 r1) in insn 257:
  Adding insn 256 to worklist
Processing use of (reg 135 [ de ]) in insn 256:
Processing use of (reg 135 [ de ]) in insn 255:
Processing use of (reg 13 sp) in insn 259:
Processing use of (reg 0 r0) in insn 259:
  Adding insn 258 to worklist
Processing use of (reg 135 [ de ]) in insn 258:
Processing use of (reg 13 sp) in insn 261:
Processing use of (reg 0 r0) in insn 261:
  Adding insn 260 to worklist
Processing use of (reg 135 [ de ]) in insn 260:
Processing use of (reg 24 cc) in insn 238:
  Adding insn 237 to worklist
Processing use of (reg 235) in insn 237:
  Adding insn 236 to worklist
Processing use of (reg 234) in insn 236:
  Adding insn 235 to worklist
Processing use of (subreg (reg 233) 0) in insn 235:
  Adding insn 234 to worklist
Processing use of (reg 228) in insn 234:
  Adding insn 227 to worklist
Processing use of (reg 232) in insn 234:
  Adding insn 232 to worklist
Processing use of (reg 24 cc) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 231 [ message ]) in insn 231:
  Adding insn 230 to worklist
Processing use of (reg 252) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 157) in insn 229:
  Adding insn 14 to worklist
Processing use of (reg 24 cc) in insn 227:
  Adding insn 226 to worklist
Processing use of (reg 155 [ len ]) in insn 226:
  Adding insn 3 to worklist
  Adding insn 106 to worklist
  Adding insn 115 to worklist
  Adding insn 222 to worklist
Processing use of (reg 148 [ my_inptr.423 ]) in insn 222:
  Adding insn 216 to worklist
Processing use of (reg 155 [ len ]) in insn 222:
Processing use of (reg 255) in insn 216:
  Adding insn 215 to worklist
Processing use of (reg 155 [ len ]) in insn 115:
Processing use of (reg 141 [ D.26367 ]) in insn 106:
  Adding insn 104 to worklist
Processing use of (reg 155 [ len ]) in insn 106:
Processing use of (reg 155 [ len ]) in insn 104:
Processing use of (reg 190 [ count ]) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 260) in insn 103:
  Adding insn 307 to worklist
Processing use of (reg 252) in insn 307:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 226) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 252) in insn 220:
Processing use of (reg 145 [ saved_offset ]) in insn 219:
  Adding insn 68 to worklist
Processing use of (reg 225 [ my_inptr.423 ]) in insn 219:
  Adding insn 218 to worklist
Processing use of (reg 148 [ my_inptr.423 ]) in insn 218:
Processing use of (reg 252) in insn 68:
Processing use of (reg 252) in insn 212:
Processing use of (reg 256) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 24 cc) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 220 [ message ]) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 252) in insn 206:
Processing use of (reg 24 cc) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 218 [ state ]) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 252) in insn 201:
Processing use of (reg 252) in insn 197:
Processing use of (reg 256) in insn 197:
Processing use of (reg 24 cc) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 214 [ message ]) in insn 192:
  Adding insn 191 to worklist
Processing use of (reg 252) in insn 191:
Processing use of (reg 13 sp) in insn 181:
Processing use of (reg 0 r0) in insn 181:
  Adding insn 177 to worklist
Processing use of (reg 1 r1) in insn 181:
  Adding insn 178 to worklist
Processing use of (reg 2 r2) in insn 181:
  Adding insn 179 to worklist
Processing use of (reg 3 r3) in insn 181:
  Adding insn 180 to worklist
Processing use of (reg 149 [ compress_name.420 ]) in insn 180:
  Adding insn 165 to worklist
Processing use of (reg 25 sfp) in insn 165:
Processing use of (reg 252) in insn 185:
Processing use of (reg 257) in insn 185:
  Adding insn 175 to worklist
Processing use of (reg 252) in insn 175:
Processing use of (reg 24 cc) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 206 [ message ]) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 252) in insn 170:
Processing use of (reg 24 cc) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 149 [ compress_name.420 ]) in insn 166:
Processing use of (reg 252) in insn 160:
Processing use of (reg 259) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 24 cc) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 202 [ message ]) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 252) in insn 154:
Processing use of (reg 13 sp) in insn 139:
Processing use of (reg 198) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 13 sp) in insn 141:
Processing use of (reg 255) in insn 141:
Processing use of (reg 13 sp) in insn 143:
Processing use of (reg 258) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 13 sp) in insn 148:
Processing use of (reg 0 r0) in insn 148:
  Adding insn 144 to worklist
Processing use of (reg 1 r1) in insn 148:
  Adding insn 145 to worklist
Processing use of (reg 2 r2) in insn 148:
  Adding insn 146 to worklist
Processing use of (reg 3 r3) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 146 [ decompress ]) in insn 148:
  Adding insn 133 to worklist
Processing use of (reg 0 r0) in insn 133:
Processing use of (reg 198) in insn 146:
Processing use of (reg 155 [ len ]) in insn 145:
Processing use of (reg 154 [ buf ]) in insn 144:
  Adding insn 2 to worklist
  Adding insn 105 to worklist
  Adding insn 114 to worklist
  Adding insn 221 to worklist
Processing use of (reg 148 [ my_inptr.423 ]) in insn 221:
Processing use of (reg 154 [ buf ]) in insn 221:
Processing use of (reg 154 [ buf ]) in insn 114:
Processing use of (reg 141 [ D.26367 ]) in insn 105:
Processing use of (reg 154 [ buf ]) in insn 105:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 147 [ res ]) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 0 r0) in insn 149:
Processing use of (reg 252) in insn 126:
Processing use of (reg 253) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 170) in insn 125:
  Adding insn 59 to worklist
Processing use of (reg 13 sp) in insn 132:
Processing use of (reg 0 r0) in insn 132:
  Adding insn 129 to worklist
Processing use of (reg 1 r1) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 2 r2) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 254) in insn 131:
  Adding insn 128 to worklist
Processing use of (reg 25 sfp) in insn 128:
Processing use of (reg 155 [ len ]) in insn 130:
Processing use of (reg 154 [ buf ]) in insn 129:
Processing use of (reg 24 cc) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 146 [ decompress ]) in insn 134:
Processing use of (reg 193) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 252) in insn 119:
Processing use of (reg 145 [ saved_offset ]) in insn 118:
Processing use of (reg 192) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 24 cc) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 151 [ D.26144 ]) in insn 111:
  Adding insn 69 to worklist
Processing use of (reg 154 [ buf ]) in insn 69:
Processing use of (reg 13 sp) in insn 96:
Processing use of (reg 188) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 186) in insn 95:
  Adding insn 93 to worklist
Processing use of (reg 185) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 252) in insn 93:
Processing use of (reg 183 [ state ]) in insn 92:
  Adding insn 90 to worklist
Processing use of (reg 252) in insn 90:
Processing use of (reg 24 cc) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 140 [ D.26370 ]) in insn 99:
  Adding insn 97 to worklist
Processing use of (reg 0 r0) in insn 97:
Processing use of (reg 176) in insn 82:
  Adding insn 76 to worklist
Processing use of (reg 252) in insn 82:
Processing use of (subreg (reg 174) 4) in insn 76:
  Adding insn 74 to worklist
Processing use of (reg 176) in insn 76:
  Adding insn 75 to worklist
Processing use of (subreg (reg 174) 0) in insn 75:
Processing use of (reg 145 [ saved_offset ]) in insn 74:
Processing use of (reg 175) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 155 [ len ]) in insn 84:
Processing use of (reg 252) in insn 84:
Processing use of (reg 154 [ buf ]) in insn 86:
Processing use of (reg 252) in insn 86:
Processing use of (reg 24 cc) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 176) in insn 77:
Processing use of (reg 24 cc) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 151 [ D.26144 ]) in insn 70:
Processing use of (reg 157) in insn 57:
Processing use of (reg 168) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 157) in insn 60:
Processing use of (reg 170) in insn 60:
Processing use of (reg 157) in insn 63:
Processing use of (reg 168) in insn 63:
Processing use of (reg 13 sp) in insn 51:
Processing use of (reg 0 r0) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 24 cc) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 142 [ ret ]) in insn 45:
  Adding insn 31 to worklist
Processing use of (reg 0 r0) in insn 31:
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 165 [ symlink_buf ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 157) in insn 41:
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 156) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 144 [ ret ]) in insn 15:
  Adding insn 13 to worklist
Processing use of (reg 157) in insn 15:
Processing use of (reg 0 r0) in insn 13:
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 0 r0) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 1 r1) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 156) in insn 19:
Processing use of (reg 143 [ ret ]) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 157) in insn 24:
Processing use of (reg 0 r0) in insn 22:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 156) in insn 28:
Processing use of (reg 142 [ ret ]) in insn 34:
Processing use of (reg 157) in insn 34:
Processing use of (reg 24 cc) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 163 [ header_buf ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 157) in insn 36:


unpack_to_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={29d,22u} r1={22d,8u} r2={18d,3u} r3={17d,2u} r11={1d,31u} r12={15d} r13={1d,48u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={35d,19u} r25={1d,33u,1d} r26={1d,30u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r134={2d,2u} r135={2d,10u,1d} r137={1d,1u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r142={1d,2u} r143={1d,1u} r144={1d,1u} r145={1d,3u,2d} r146={1d,2u} r147={1d,1u} r148={1d,3u} r149={1d,2u} r151={1d,2u} r154={4d,7u} r155={4d,8u} r156={1d,3u} r157={1d,9u} r163={1d,1u} r165={1d,1u} r168={1d,2u} r170={1d,2u} r174={1d,2u} r175={1d,1u} r176={2d,3u} r183={1d,1u} r185={1d,1u,1d} r186={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r198={1d,2u} r202={1d,1u} r206={1d,1u} r214={1d,1u} r218={1d,1u} r220={1d,1u} r225={1d,1u} r226={1d,1u} r228={1d,1u} r229={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r239={1d,4u} r246={1d,1u} r248={2d,3u} r249={1d,1u} r250={1d,1u} r252={1d,21u} r253={1d,1u} r254={1d,1u} r255={1d,2u} r256={1d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} 
;;    total ref usage 2110{1768d,337u,5e} in 178{164 regular + 14 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,29] 1[29,22] 2[51,18] 3[69,17] 11[86,1] 12[87,15] 13[102,1] 14[103,15] 15[118,14] 16[132,14] 17[146,14] 18[160,14] 19[174,14] 20[188,14] 21[202,14] 22[216,14] 23[230,14] 24[244,35] 25[279,1] 26[280,1] 27[281,14] 28[295,14] 29[309,14] 30[323,14] 31[337,14] 32[351,14] 33[365,14] 34[379,14] 35[393,14] 36[407,14] 37[421,14] 38[435,14] 39[449,14] 40[463,14] 41[477,14] 42[491,14] 43[505,14] 44[519,14] 45[533,14] 46[547,14] 47[561,14] 48[575,14] 49[589,14] 50[603,14] 51[617,14] 52[631,14] 53[645,14] 54[659,14] 55[673,14] 56[687,14] 57[701,14] 58[715,14] 59[729,14] 60[743,14] 61[757,14] 62[771,14] 63[785,14] 64[799,14] 65[813,14] 66[827,14] 67[841,14] 68[855,14] 69[869,14] 70[883,14] 71[897,14] 72[911,14] 73[925,14] 74[939,14] 75[953,14] 76[967,14] 77[981,14] 78[995,14] 79[1009,14] 80[1023,14] 81[1037,14] 82[1051,14] 83[1065,14] 84[1079,14] 85[1093,14] 86[1107,14] 87[1121,14] 88[1135,14] 89[1149,14] 90[1163,14] 91[1177,14] 92[1191,14] 93[1205,14] 94[1219,14] 95[1233,14] 96[1247,14] 97[1261,14] 98[1275,14] 99[1289,14] 100[1303,14] 101[1317,14] 102[1331,14] 103[1345,14] 104[1359,14] 105[1373,14] 106[1387,14] 107[1401,14] 108[1415,14] 109[1429,14] 110[1443,14] 111[1457,14] 112[1471,14] 113[1485,14] 114[1499,14] 115[1513,14] 116[1527,14] 117[1541,14] 118[1555,14] 119[1569,14] 120[1583,14] 121[1597,14] 122[1611,14] 123[1625,14] 124[1639,14] 125[1653,14] 126[1667,14] 127[1681,14] 134[1695,2] 135[1697,2] 137[1699,1] 138[1700,1] 139[1701,1] 140[1702,1] 141[1703,1] 142[1704,1] 143[1705,1] 144[1706,1] 145[1707,1] 146[1708,1] 147[1709,1] 148[1710,1] 149[1711,1] 151[1712,1] 154[1713,4] 155[1717,4] 156[1721,1] 157[1722,1] 163[1723,1] 165[1724,1] 168[1725,1] 170[1726,1] 174[1727,1] 175[1728,1] 176[1729,2] 183[1731,1] 185[1732,1] 186[1733,1] 188[1734,1] 190[1735,1] 192[1736,1] 193[1737,1] 198[1738,1] 202[1739,1] 206[1740,1] 214[1741,1] 218[1742,1] 220[1743,1] 225[1744,1] 226[1745,1] 228[1746,1] 229[1747,1] 231[1748,1] 232[1749,1] 233[1750,1] 234[1751,1] 235[1752,1] 239[1753,1] 246[1754,1] 248[1755,2] 249[1757,1] 250[1758,1] 252[1759,1] 253[1760,1] 254[1761,1] 255[1762,1] 256[1763,1] 257[1764,1] 258[1765,1] 259[1766,1] 260[1767,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 154 155 156 157 163
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 143 144 154 155 156 157 163
;; live  kill	 14 [lr]
;; rd  in  	(10)
28, 50, 68, 85, 86, 101, 102, 117, 279, 280
;; rd  gen 	(10)
24, 275, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723
;; rd  kill	(58)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1704, 1705, 1706, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 init/initramfs.c:415 (set (reg/v/f:SI 154 [ buf ])
        (reg:SI 0 r0 [ buf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ buf ])
        (nil)))

(insn 3 2 4 2 init/initramfs.c:415 (set (reg/v:SI 155 [ len ])
        (reg:SI 1 r1 [ len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ len ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 9 2 ("found") NOTE_INSN_DELETED_LABEL 66)

(insn 9 7 10 2 include/linux/slab_def.h:122 (set (reg/f:SI 156)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 28 [0x1c])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                    (const_int 28 [0x1c]))) [0 <variable>.cs_cachep+0 S4 A32])
        (nil)))

(insn 11 10 12 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 13 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 14 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 144 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 14 13 15 2 init/initramfs.c:421 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 init/initramfs.c:421 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])
        (reg/v/f:SI 144 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ ret ])
        (nil)))

(note 16 15 19 2 ("found") NOTE_INSN_DELETED_LABEL 67)

(insn 19 16 20 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 92 [0x5c])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                    (const_int 92 [0x5c]))) [0 <variable>.cs_cachep+0 S4 A32])
        (nil)))

(insn 20 19 21 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 21 20 22 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 22 21 24 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 143 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 24 22 25 2 init/initramfs.c:422 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])
        (reg/v/f:SI 143 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ ret ])
        (nil)))

(note 25 24 28 2 ("found") NOTE_INSN_DELETED_LABEL 68)

(insn 28 25 29 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 84 [0x54])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                        (const_int 84 [0x54]))) [0 <variable>.cs_cachep+0 S4 A32])
            (nil))))

(insn 29 28 30 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 30 34 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 142 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 34 31 36 2 init/initramfs.c:423 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])
        (reg/v/f:SI 142 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 36 34 37 2 init/initramfs.c:425 (set (reg/f:SI 163 [ header_buf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 header_buf+0 S4 A32])
        (nil)))

(insn 37 36 38 2 init/initramfs.c:425 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ header_buf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ header_buf ])
        (nil)))

(jump_insn 38 37 39 2 init/initramfs.c:425 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; rd  out 	(18)
24, 50, 68, 85, 86, 101, 102, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723


;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc] 165
;; live  kill	
;; rd  in  	(18)
24, 50, 68, 85, 86, 101, 102, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723
;; rd  gen 	(2)
274, 1724
;; rd  kill	(1)
1724

;; Pred edge  2 [100.0%]  (fallthru)
(note 39 38 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 3 init/initramfs.c:425 discrim 1 (set (reg/f:SI 165 [ symlink_buf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70]))) [0 symlink_buf+0 S4 A32])
        (nil)))

(insn 42 41 43 3 init/initramfs.c:425 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 165 [ symlink_buf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 165 [ symlink_buf ])
        (nil)))

(jump_insn 43 42 44 3 init/initramfs.c:425 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; rd  out 	(19)
24, 50, 68, 85, 86, 101, 102, 274, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
24, 50, 68, 85, 86, 101, 102, 274, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;; rd  gen 	(1)
245
;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 4 init/initramfs.c:425 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ ret ])
        (nil)))

(jump_insn 46 45 47 4 init/initramfs.c:425 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; rd  out 	(19)
24, 50, 68, 85, 86, 101, 102, 245, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(21)
24, 50, 68, 85, 86, 101, 102, 245, 274, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;; rd  gen 	(0)

;; rd  kill	(15)
103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  2 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 47 46 48 5 69 "" [2 uses])

(note 48 47 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 48 51 5 init/initramfs.c:426 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1151e780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1151e780>)
        (nil)))

(call_insn 51 50 52 5 init/initramfs.c:426 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
24, 50, 68, 85, 86, 101, 102, 245, 274, 275, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724



(barrier 52 51 53)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 168 170 252 253 254 255 256 257 258 259 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  gen 	 168 170 252 253 254 255 256 257 258 259 260
;; live  kill	
;; rd  in  	(19)
24, 50, 68, 85, 86, 101, 102, 245, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724
;; rd  gen 	(11)
1725, 1726, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  kill	(11)
1725, 1726, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767

;; Pred edge  4 [100.0%] 
(code_label 53 52 54 6 70 "" [1 uses])

(note 54 53 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 56 54 57 6 init/initramfs.c:428 (set (reg:SI 168)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 59 6 init/initramfs.c:428 (set (mem/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 59 57 60 6 init/initramfs.c:429 (set (reg:DI 170)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 60 59 63 6 init/initramfs.c:429 (set (mem/c/i:DI (plus:SI (reg/f:SI 157)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 170)) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 63 60 229 6 init/initramfs.c:430 (set (mem/f/c/i:SI (reg/f:SI 157) [0 message+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 229 63 125 6 init/initramfs.c:431 discrim 1 (set (reg/f:SI 252)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(insn 125 229 128 6 init/initramfs.c:446 (set (reg:DI 253)
        (reg:DI 170)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 170)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 128 125 215 6 init/initramfs.c:447 (set (reg/f:SI 254)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 215 128 211 6 init/initramfs.c:464 (set (reg/f:SI 255)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 211 215 175 6 init/initramfs.c:16 (set (reg/f:SI 256)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 175 211 142 6 init/initramfs.c:455 (set (reg/f:SI 257)
        (plus:SI (reg/f:SI 252)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 142 175 159 6 init/initramfs.c:449 (set (reg/f:SI 258)
        (symbol_ref:SI ("error") [flags 0x3] <function_decl 0x11487300 error>)) 167 {*arm_movsi_insn} (nil))

(insn 159 142 307 6 init/initramfs.c:16 (set (reg/f:SI 259)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x115a92d0>)) 167 {*arm_movsi_insn} (nil))

(insn 307 159 326 6 init/initramfs.c:382 discrim 1 (set (reg/f:SI 260)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(jump_insn 326 307 327 6 init/initramfs.c:431 (set (pc)
        (label_ref 325)) -1 (nil))
;; End of basic block 6 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(30)
24, 50, 68, 85, 86, 101, 102, 245, 279, 280, 1704, 1705, 1706, 1716, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  27 [100.0%] 

(barrier 327 326 225)

;; Start of basic block ( 27) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 252
;; lr  def 	 24 [cc] 145 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 145 151
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(3)
272, 1707, 1712
;; rd  kill	(2)
1707, 1712

;; Pred edge  27 [91.0%] 
(code_label 225 327 66 7 79 "" [1 uses])

(note 66 225 68 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 68 66 69 7 init/initramfs.c:432 (set (reg/v:DI 145 [ saved_offset ])
        (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 69 68 70 7 init/initramfs.c:433 (set (reg:SI 151 [ D.26144 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 154 [ buf ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 70 69 71 7 init/initramfs.c:433 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26144 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 7 init/initramfs.c:433 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 8 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 272, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 174 175 176
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 272, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
271, 1727, 1728, 1729
;; rd  kill	(4)
1727, 1728, 1729, 1730

;; Pred edge  7 [28.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 init/initramfs.c:433 discrim 1 (set (reg:DI 175)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 74 73 75 8 init/initramfs.c:433 discrim 1 (set (reg:DI 174)
        (and:DI (reg/v:DI 145 [ saved_offset ])
            (reg:DI 175))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 175)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 145 [ saved_offset ])
                (const_int 3 [0x3]))
            (nil))))

(insn 75 74 76 8 init/initramfs.c:433 discrim 1 (set (reg:SI 176)
        (subreg:SI (reg:DI 174) 0)) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 8 init/initramfs.c:433 discrim 1 (set (reg:SI 176)
        (ior:SI (reg:SI 176)
            (subreg:SI (reg:DI 174) 4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:DI 174)
        (nil)))

(insn 77 76 78 8 init/initramfs.c:433 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 79 8 init/initramfs.c:433 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  8 [0.0%]  (fallthru)
(note 79 78 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 82 79 84 9 init/initramfs.c:434 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 84 82 86 9 init/initramfs.c:379 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 86 84 98 9 init/initramfs.c:380 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 183 185 186 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 24 [cc] 140 183 185 186 188
;; live  kill	 14 [lr]
;; rd  in  	(74)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 269, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(7)
22, 269, 1702, 1731, 1732, 1733, 1734
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1702, 1731, 1732, 1733, 1734

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [86.0%]  (dfs_back)
(code_label 98 86 87 10 74 "" [1 uses])

(note 87 98 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 90 87 92 10 init/initramfs.c:382 discrim 1 (set (reg:SI 183 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [0 state+0 S4 A32])
        (nil)))

(insn 92 90 93 10 init/initramfs.c:382 discrim 1 (set (reg:SI 185)
        (ashift:SI (reg:SI 183 [ state ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183 [ state ])
        (nil)))

(insn 93 92 95 10 init/initramfs.c:382 discrim 1 (set (reg:SI 186)
        (plus:SI (reg/f:SI 252)
            (reg:SI 185))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 95 93 96 10 init/initramfs.c:382 discrim 1 (set (reg/f:SI 188)
        (mem/s/f/j:SI (plus:SI (reg:SI 186)
                (const_int 56 [0x38])) [0 actions S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(call_insn 96 95 97 10 init/initramfs.c:382 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 188) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 188)
        (nil))
    (nil))

(insn 97 96 99 10 init/initramfs.c:382 discrim 1 (set (reg:SI 140 [ D.26370 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 99 97 100 10 init/initramfs.c:382 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.26370 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.26370 ])
        (nil)))

(jump_insn 100 99 101 10 init/initramfs.c:382 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 10 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
22, 50, 68, 85, 86, 101, 102, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  10 [86.0%]  (dfs_back)
;; Succ edge  11 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 260
;; lr  def 	 141 154 155 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 141 154 155 190
;; live  kill	
;; rd  in  	(69)
22, 50, 68, 85, 86, 101, 102, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
1703, 1715, 1719, 1735
;; rd  kill	(10)
1703, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1735

;; Pred edge  10 [14.0%]  (fallthru,loop_exit)
(note 101 100 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 103 101 104 11 init/initramfs.c:384 (set (reg:SI 190 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 260)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 104 103 105 11 init/initramfs.c:384 (set (reg:SI 141 [ D.26367 ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 190 [ count ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 190 [ count ])
        (nil)))

(insn 105 104 106 11 init/initramfs.c:436 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (reg:SI 141 [ D.26367 ]))) 4 {*arm_addsi3} (nil))

(insn 106 105 328 11 init/initramfs.c:437 (set (reg/v:SI 155 [ len ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 141 [ D.26367 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.26367 ])
        (nil)))

(jump_insn 328 106 329 11 init/initramfs.c:438 (set (pc)
        (label_ref 325)) -1 (nil))
;; End of basic block 11 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(63)
22, 50, 68, 85, 86, 101, 102, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  27 [100.0%]  (dfs_back)

(barrier 329 328 109)

;; Start of basic block ( 7) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 272, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(1)
268
;; rd  kill	(0)


;; Pred edge  7 [72.0%] 
(code_label 109 329 110 12 72 "" [1 uses])

(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 12 init/initramfs.c:440 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26144 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ D.26144 ])
        (nil)))

(jump_insn 112 111 113 12 init/initramfs.c:440 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 140 [0x8c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 268, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  13 [98.6%]  (fallthru)
;; Succ edge  14 [1.4%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252
;; lr  def 	 24 [cc] 154 155 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 154 155 192 193
;; live  kill	 24 [cc]
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 268, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
1714, 1718, 1736, 1737
;; rd  kill	(10)
1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1736, 1737

;; Pred edge  12 [98.6%]  (fallthru)
(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 13 init/initramfs.c:441 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 115 114 117 13 init/initramfs.c:442 (set (reg/v:SI 155 [ len ])
        (plus:SI (reg/v:SI 155 [ len ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 117 115 118 13 init/initramfs.c:443 (set (reg:DI 192)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 118 117 119 13 init/initramfs.c:443 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/v:DI 145 [ saved_offset ])
                    (reg:DI 192)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 192)
        (expr_list:REG_DEAD (reg/v:DI 145 [ saved_offset ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg/v:DI 145 [ saved_offset ])
                        (const_int 1 [0x1]))
                    (nil))))))

(insn 119 118 330 13 init/initramfs.c:443 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 193)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 193)
        (nil)))

(jump_insn 330 119 331 13 init/initramfs.c:444 (set (pc)
        (label_ref 325)) -1 (nil))
;; End of basic block 13 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(66)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1718, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  27 [100.0%]  (dfs_back)

(barrier 331 330 122)

;; Start of basic block ( 12 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 146
;; live  kill	 14 [lr]
;; rd  in  	(74)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 268, 271, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(3)
20, 265, 1708
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1708

;; Pred edge  12 [1.4%] 
;; Pred edge  8 [100.0%] 
(code_label 122 331 123 14 73 "" [2 uses])

(note 123 122 126 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 126 123 129 14 init/initramfs.c:446 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 253)) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 129 126 130 14 init/initramfs.c:447 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 14 init/initramfs.c:447 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 131 130 132 14 init/initramfs.c:447 (set (reg:SI 2 r2)
        (reg/f:SI 254)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(call_insn 132 131 133 14 init/initramfs.c:447 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("decompress_method") [flags 0x41] <function_decl 0x114ad900 decompress_method>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 133 132 134 14 init/initramfs.c:447 (set (reg/v/f:SI 146 [ decompress ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 134 133 135 14 init/initramfs.c:448 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ decompress ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 135 134 136 14 init/initramfs.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 14 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 265, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  18 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 155 255 258
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 198
;; live  kill	 14 [lr]
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 265, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(4)
18, 263, 1709, 1738
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1709, 1738

;; Pred edge  14 [69.8%]  (fallthru)
(note 136 135 138 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 138 136 139 15 init/initramfs.c:449 (set (reg:SI 198)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 141 15 init/initramfs.c:449 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 141 139 143 15 init/initramfs.c:449 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 255)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 143 141 144 15 init/initramfs.c:449 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 258)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("error") [flags 0x3] <function_decl 0x11487300 error>)
        (nil)))

(insn 144 143 145 15 init/initramfs.c:449 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 15 init/initramfs.c:449 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 146 145 147 15 init/initramfs.c:449 (set (reg:SI 2 r2)
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 147 146 148 15 init/initramfs.c:449 (set (reg:SI 3 r3)
        (symbol_ref:SI ("flush_buffer") [flags 0x3] <function_decl 0x114ad800 flush_buffer>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("flush_buffer") [flags 0x3] <function_decl 0x114ad800 flush_buffer>)
        (nil)))

(call_insn 148 147 149 15 init/initramfs.c:449 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 146 [ decompress ]) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/v/f:SI 146 [ decompress ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 149 148 150 15 init/initramfs.c:449 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 150 149 151 15 init/initramfs.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ res ])
        (nil)))

(jump_insn 151 150 152 15 init/initramfs.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
18, 50, 68, 85, 86, 101, 102, 263, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 202
;; live  kill	
;; rd  in  	(69)
18, 50, 68, 85, 86, 101, 102, 263, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
262, 1739
;; rd  kill	(1)
1739

;; Pred edge  15 [0.0%]  (fallthru)
(note 152 151 154 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 154 152 155 16 init/initramfs.c:15 (set (reg/f:SI 202 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 155 154 156 16 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 202 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 202 [ message ])
        (nil)))

(jump_insn 156 155 157 16 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 16 -> ( 17 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
18, 50, 68, 85, 86, 101, 102, 262, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  17 [15.0%]  (fallthru)
;; Succ edge  23 [85.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 259
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(69)
18, 50, 68, 85, 86, 101, 102, 262, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [15.0%]  (fallthru)
(note 157 156 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 160 157 332 17 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 259)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x115a92d0>)
        (nil)))

(jump_insn 332 160 333 17 (set (pc)
        (label_ref 198)) -1 (nil))
;; End of basic block 17 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
18, 50, 68, 85, 86, 101, 102, 262, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  23 [100.0%] 

(barrier 333 332 163)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 149
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 265, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
261, 1711
;; rd  kill	(1)
1711

;; Pred edge  14 [30.2%] 
(code_label 163 333 164 18 75 "" [1 uses])

(note 164 163 165 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 165 164 166 18 init/initramfs.c:453 (set (reg/f:SI 149 [ compress_name.420 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 compress_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 18 init/initramfs.c:453 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 149 [ compress_name.420 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 167 166 168 18 init/initramfs.c:453 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 261, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  19 [100.0%]  (fallthru)
;; Succ edge  21 [0.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 206
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 261, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
260, 1740
;; rd  kill	(1)
1740

;; Pred edge  18 [100.0%]  (fallthru)
(note 168 167 170 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 170 168 171 19 init/initramfs.c:454 (set (reg/f:SI 206 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 171 170 172 19 init/initramfs.c:454 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 206 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 206 [ message ])
        (nil)))

(jump_insn 172 171 173 19 init/initramfs.c:454 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 19 -> ( 20 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 260, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  20 [6.7%]  (fallthru)
;; Succ edge  23 [93.3%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 252 257
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 260, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(1)
17
;; rd  kill	(44)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  19 [6.7%]  (fallthru)
(note 173 172 177 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 177 173 178 20 init/initramfs.c:455 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 178 177 179 20 init/initramfs.c:455 (set (reg:SI 1 r1)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 20 init/initramfs.c:455 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114fc3c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114fc3c0>)
        (nil)))

(insn 180 179 181 20 init/initramfs.c:455 (set (reg:SI 3 r3)
        (reg/f:SI 149 [ compress_name.420 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ compress_name.420 ])
        (nil)))

(call_insn 181 180 185 20 init/initramfs.c:455 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("snprintf") [flags 0x41] <function_decl 0x5115e680 snprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 185 181 334 20 init/initramfs.c:458 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 257)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(jump_insn 334 185 335 20 (set (pc)
        (label_ref 198)) -1 (nil))
;; End of basic block 20 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
17, 50, 68, 85, 86, 101, 102, 260, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  23 [100.0%] 

(barrier 335 334 188)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 214
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 261, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
258, 1741
;; rd  kill	(1)
1741

;; Pred edge  18 [0.0%] 
(code_label 188 335 189 21 77 "" [1 uses])

(note 189 188 191 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 21 init/initramfs.c:15 (set (reg/f:SI 214 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 192 191 193 21 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 214 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 214 [ message ])
        (nil)))

(jump_insn 193 192 194 21 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 258, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  22 [15.0%]  (fallthru)
;; Succ edge  23 [85.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(69)
20, 50, 68, 85, 86, 101, 102, 258, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  21 [15.0%]  (fallthru)
(note 194 193 197 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 197 194 198 22 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)
        (nil)))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(69)
20, 50, 68, 85, 86, 101, 102, 258, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 16 17 21 15 19 22 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 218
;; live  kill	
;; rd  in  	(74)
17, 18, 20, 50, 68, 85, 86, 101, 102, 258, 260, 262, 263, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
257, 1742
;; rd  kill	(1)
1742

;; Pred edge  16 [85.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  21 [85.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  19 [93.3%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 198 197 199 23 76 "" [6 uses])

(note 199 198 201 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 201 199 202 23 init/initramfs.c:462 (set (reg:SI 218 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [0 state+0 S4 A32])
        (nil)))

(insn 202 201 203 23 init/initramfs.c:462 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 218 [ state ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 218 [ state ])
        (nil)))

(jump_insn 203 202 204 23 init/initramfs.c:462 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 23 -> ( 24 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 257, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  24 [0.0%]  (fallthru)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 220
;; live  kill	
;; rd  in  	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 257, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
256, 1743
;; rd  kill	(1)
1743

;; Pred edge  23 [0.0%]  (fallthru)
(note 204 203 206 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 206 204 207 24 init/initramfs.c:15 (set (reg/f:SI 220 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 207 206 208 24 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 220 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 220 [ message ])
        (nil)))

(jump_insn 208 207 209 24 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  25 [15.0%]  (fallthru)
;; Succ edge  26 [85.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; rd  in  	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  24 [15.0%]  (fallthru)
(note 209 208 212 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 212 209 213 25 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(71)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 23 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 255
;; lr  def 	 24 [cc] 148 154 155 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 148 154 155 225 226
;; live  kill	 24 [cc]
;; rd  in  	(72)
17, 18, 20, 50, 68, 85, 86, 101, 102, 256, 257, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(5)
1710, 1713, 1717, 1744, 1745
;; rd  kill	(11)
1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1744, 1745

;; Pred edge  23 [100.0%] 
;; Pred edge  24 [85.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 213 212 214 26 78 "" [2 uses])

(note 214 213 216 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 216 214 218 26 init/initramfs.c:464 (set (reg:SI 148 [ my_inptr.423 ])
        (mem/c/i:SI (reg/f:SI 255) [0 my_inptr+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 my_inptr+0 S4 A32])
        (nil)))

(insn 218 216 219 26 init/initramfs.c:464 (set (reg:DI 225 [ my_inptr.423 ])
        (zero_extend:DI (reg:SI 148 [ my_inptr.423 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 219 218 220 26 init/initramfs.c:464 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 225 [ my_inptr.423 ])
                    (reg/v:DI 145 [ saved_offset ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 225 [ my_inptr.423 ])
        (expr_list:REG_DEAD (reg/v:DI 145 [ saved_offset ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 220 219 221 26 init/initramfs.c:464 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 226)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 226)
        (nil)))

(insn 221 220 222 26 init/initramfs.c:465 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (reg:SI 148 [ my_inptr.423 ]))) 4 {*arm_addsi3} (nil))

(insn 222 221 325 26 init/initramfs.c:466 (set (reg/v:SI 155 [ len ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 148 [ my_inptr.423 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 148 [ my_inptr.423 ])
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; rd  out 	(64)
17, 18, 20, 50, 68, 85, 86, 101, 102, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1717, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 11 6 13) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 252
;; lr  def 	 24 [cc] 228 229 231 232 233 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 228 229 231 232 233 234 235
;; live  kill	
;; rd  in  	(74)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 245, 269, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(8)
252, 1746, 1747, 1748, 1749, 1750, 1751, 1752
;; rd  kill	(7)
1746, 1747, 1748, 1749, 1750, 1751, 1752

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (dfs_back)
;; Pred edge  6 [100.0%] 
;; Pred edge  13 [100.0%]  (dfs_back)
(code_label 325 222 323 27 84 "" [3 uses])

(note 323 325 226 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 226 323 227 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 155 [ len ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 227 226 308 27 init/initramfs.c:431 discrim 1 (set (reg:SI 228)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 308 227 230 27 init/initramfs.c:431 discrim 1 (set (reg/f:SI 229)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 230 308 231 27 init/initramfs.c:431 discrim 1 (set (reg/f:SI 231 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 231 230 232 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 231 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 231 [ message ])
        (nil)))

(insn 232 231 234 27 init/initramfs.c:431 discrim 1 (set (reg:SI 232)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 234 232 235 27 init/initramfs.c:431 discrim 1 (set (reg:SI 233)
        (and:SI (reg:SI 228)
            (reg:SI 232))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_DEAD (reg:SI 228)
            (nil))))

(insn 235 234 236 27 init/initramfs.c:431 discrim 1 (set (reg:QI 234)
        (subreg:QI (reg:SI 233) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 233)
        (nil)))

(insn 236 235 237 27 init/initramfs.c:431 discrim 1 (set (reg:SI 235)
        (zero_extend:SI (reg:QI 234))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 234)
        (nil)))

(insn 237 236 238 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 235)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 235)
        (nil)))

(jump_insn 238 237 239 27 init/initramfs.c:431 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 27 -> ( 7 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 253 254 255 256 257 258 259 260
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 253 254 255 256 257 258 259 260
;; rd  out 	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  7 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  def 	 134 135 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; live  gen 	 134 135 248 249 250
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(5)
1696, 1697, 1756, 1757, 1758
;; rd  kill	(8)
1695, 1696, 1697, 1698, 1755, 1756, 1757, 1758

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 239 238 324 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 324 239 241 28 init/initramfs.c:110 (set (reg/f:SI 248)
        (reg/f:SI 229)) -1 (expr_list:REG_DEAD (reg/f:SI 229)
        (nil)))

(insn 241 324 242 28 init/initramfs.c:110 (set (reg/v/f:SI 135 [ de ])
        (mem/s/f/j/c:SI (pre_modify:SI (reg/f:SI 248)
                (plus:SI (reg/f:SI 248)
                    (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 248)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])
            (nil))))

(insn 242 241 251 28 init/initramfs.c:110 (set (reg/v/f:SI 134 [ de.751 ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 251 242 253 28 include/linux/list.h:107 (set (reg:SI 249)
        (const_int 1048832 [0x100100])) 167 {*arm_movsi_insn} (nil))

(insn 253 251 336 28 include/linux/list.h:108 (set (reg:SI 250)
        (const_int 2097664 [0x200200])) 167 {*arm_movsi_insn} (nil))

(jump_insn 336 253 337 28 (set (pc)
        (label_ref 266)) -1 (nil))
;; End of basic block 28 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; rd  out 	(78)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 252, 279, 280, 1696, 1697, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  30 [100.0%] 

(barrier 337 336 268)

;; Start of basic block ( 30) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 249 250
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 0 [r0] 1 [r1] 134 135 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(84)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(5)
1695, 1698, 1699, 1700, 1701
;; rd  kill	(22)
103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1695, 1696, 1697, 1698, 1699, 1700, 1701

;; Pred edge  30 [0.0%] 
(code_label 268 337 246 29 81 "" [1 uses])

(note 246 268 247 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 29 include/linux/list.h:106 (set (reg/f:SI 139 [ D.26385 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 29 include/linux/list.h:106 (set (reg/f:SI 138 [ D.26386 ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 29 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ D.26386 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 139 [ D.26385 ])) 167 {*arm_movsi_insn} (nil))

(insn 250 249 252 29 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 139 [ D.26385 ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 138 [ D.26386 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.26385 ])
        (expr_list:REG_DEAD (reg/f:SI 138 [ D.26386 ])
            (nil))))

(insn 252 250 254 29 include/linux/list.h:107 (set (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])
        (reg:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1048832 [0x100100])
        (nil)))

(insn 254 252 255 29 include/linux/list.h:108 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg:SI 250)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2097664 [0x200200])
        (nil)))

(insn 255 254 256 29 init/initramfs.c:112 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 256 255 257 29 init/initramfs.c:112 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 12 [0xc])) [0 <variable>.mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 257 256 258 29 init/initramfs.c:112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 258 257 259 29 init/initramfs.c:113 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 259 258 260 29 init/initramfs.c:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 260 259 261 29 init/initramfs.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ de ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ de ])
        (nil)))

(call_insn 261 260 262 29 init/initramfs.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 262 261 264 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 137 [ __mptr ])
        (mem/s/f/j:SI (reg/v/f:SI 134 [ de.751 ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 264 262 265 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 135 [ de ])
        (reg/v/f:SI 134 [ de.751 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ de.751 ])
        (nil)))

(insn 265 264 266 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 134 [ de.751 ])
        (reg/v/f:SI 137 [ __mptr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ __mptr ])
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; rd  out 	(82)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  30 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 29 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 248
;; lr  def 	 24 [cc] 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 24 [cc] 239
;; live  kill	
;; rd  in  	(85)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 252, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
244, 1753
;; rd  kill	(1)
1753

;; Pred edge  29 [100.0%]  (fallthru,dfs_back)
;; Pred edge  28 [100.0%] 
(code_label 266 265 267 30 80 "" [1 uses])

(note 267 266 303 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 303 267 271 30 init/initramfs.c:110 (set (reg/f:SI 239)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 271 303 272 30 init/initramfs.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ de ])
            (reg/f:SI 248))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 135 [ de ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 184 [0xb8]))))
        (nil)))

(jump_insn 272 271 273 30 init/initramfs.c:110 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 268)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 30 -> ( 29 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
;; rd  out 	(84)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  29 [0.0%] 
;; Succ edge  31 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 246
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; live  gen 	 0 [r0] 246
;; live  kill	 14 [lr]
;; rd  in  	(84)
17, 18, 20, 22, 24, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767
;; rd  gen 	(2)
2, 1754
;; rd  kill	(45)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 1754

;; Pred edge  30 [100.0%]  (fallthru,loop_exit)
(note 273 272 275 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 275 273 276 31 init/initramfs.c:469 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 116 [0x74]))) [0 name_buf+0 S4 A32])
        (nil)))

(call_insn 276 275 278 31 init/initramfs.c:469 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 278 276 279 31 init/initramfs.c:470 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70]))) [0 symlink_buf+0 S4 A32])
        (nil)))

(call_insn 279 278 281 31 init/initramfs.c:470 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 281 279 282 31 init/initramfs.c:471 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 header_buf+0 S4 A32])
        (nil)))

(call_insn 282 281 284 31 init/initramfs.c:471 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 284 282 289 31 init/initramfs.c:473 (set (reg/f:SI 246 [ message ])
        (mem/f/c/i:SI (reg/f:SI 239) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 239)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
            (nil))))

(insn 289 284 295 31 init/initramfs.c:473 (set (reg/i:SI 0 r0)
        (reg/f:SI 246 [ message ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 246 [ message ])
        (nil)))

(insn 295 289 0 31 init/initramfs.c:473 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 31 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(81)
2, 50, 68, 85, 86, 101, 102, 244, 279, 280, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_copy (do_copy)[0:1329] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


do_copy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={9d,3u} r2={8d,2u} r3={6d} r11={1d,5u} r12={6d} r13={1d,10u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={8d,1u} r25={1d,5u} r26={1d,4u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,3u} r134={1d,3u} r135={2d,1u} r136={1d,2u} r137={1d,2u} r139={1d,26u} r150={1d,1u} r151={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r168={1d,1u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r175={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} 
;;    total ref usage 723{632d,91u,0e} in 51{46 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608
0[0,12] 1[12,9] 2[21,8] 3[29,6] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,8] 25[102,1] 26[103,1] 27[104,5] 28[109,5] 29[114,5] 30[119,5] 31[124,5] 32[129,5] 33[134,5] 34[139,5] 35[144,5] 36[149,5] 37[154,5] 38[159,5] 39[164,5] 40[169,5] 41[174,5] 42[179,5] 43[184,5] 44[189,5] 45[194,5] 46[199,5] 47[204,5] 48[209,5] 49[214,5] 50[219,5] 51[224,5] 52[229,5] 53[234,5] 54[239,5] 55[244,5] 56[249,5] 57[254,5] 58[259,5] 59[264,5] 60[269,5] 61[274,5] 62[279,5] 63[284,5] 64[289,5] 65[294,5] 66[299,5] 67[304,5] 68[309,5] 69[314,5] 70[319,5] 71[324,5] 72[329,5] 73[334,5] 74[339,5] 75[344,5] 76[349,5] 77[354,5] 78[359,5] 79[364,5] 80[369,5] 81[374,5] 82[379,5] 83[384,5] 84[389,5] 85[394,5] 86[399,5] 87[404,5] 88[409,5] 89[414,5] 90[419,5] 91[424,5] 92[429,5] 93[434,5] 94[439,5] 95[444,5] 96[449,5] 97[454,5] 98[459,5] 99[464,5] 100[469,5] 101[474,5] 102[479,5] 103[484,5] 104[489,5] 105[494,5] 106[499,5] 107[504,5] 108[509,5] 109[514,5] 110[519,5] 111[524,5] 112[529,5] 113[534,5] 114[539,5] 115[544,5] 116[549,5] 117[554,5] 118[559,5] 119[564,5] 120[569,5] 121[574,5] 122[579,5] 123[584,5] 124[589,5] 125[594,5] 126[599,5] 127[604,5] 133[609,1] 134[610,1] 135[611,2] 136[613,1] 137[614,1] 139[615,1] 150[616,1] 151[617,1] 153[618,1] 155[619,1] 156[620,1] 159[621,1] 160[622,1] 162[623,1] 168[624,1] 169[625,1] 172[626,1] 173[627,1] 175[628,1] 177[629,1] 178[630,1] 180[631,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d20(1){ }d28(2){ }d34(3){ }d35(11){ }d41(12){ }d42(13){ }d48(14){ }d102(25){ }d103(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
11, 20, 28, 34, 35, 41, 42, 48, 102, 103
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
11, 20, 28, 34, 35, 41, 42, 48, 102, 103

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d35(bb 0 insn -1) }u1(13){ d42(bb 0 insn -1) }u2(25){ d102(bb 0 insn -1) }u3(26){ d103(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 139
;; live  kill	
;; rd  in  	(10)
11, 20, 28, 34, 35, 41, 42, 48, 102, 103
;; rd  gen 	(4)
101, 613, 614, 615
;; rd  kill	(11)
94, 95, 96, 97, 98, 99, 100, 101, 613, 614, 615
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139
;; rd  out 	(14)
11, 20, 28, 34, 35, 41, 42, 48, 101, 102, 103, 613, 614, 615
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d102(bb 0 insn -1) }
;;   reg 26 { d103(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 8
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 9
;;      reg 136 { d613(bb 2 insn 8) }
;;      reg 137 { d614(bb 2 insn 6) }
;;   UD chains for insn luid 4 uid 10
;;      reg 24 { d101(bb 2 insn 9) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d35(bb 0 insn -1) }u10(13){ d42(bb 0 insn -1) }u11(25){ d102(bb 0 insn -1) }u12(26){ d103(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 150 151 153 155 156 159 160 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 150 151 153 155 156 159 160 162
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(14)
11, 20, 28, 34, 35, 41, 42, 48, 101, 102, 103, 613, 614, 615
;; rd  gen 	(10)
610, 612, 616, 617, 618, 619, 620, 621, 622, 623
;; rd  kill	(25)
43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 610, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
11, 20, 28, 34, 35, 41, 42, 102, 103, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d102(bb 0 insn -1) }
;;   reg 26 { d103(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 15
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 16
;;      reg 136 { d613(bb 2 insn 8) }
;;   UD chains for insn luid 3 uid 17
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d5(bb 3 insn 14) }
;;      reg 1 { d14(bb 3 insn 15) }
;;      reg 2 { d27(bb 3 insn 16) }
;;   UD chains for insn luid 4 uid 19
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 5 uid 20
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d4(bb 3 insn 19) }
;;   UD chains for insn luid 6 uid 23
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 24
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 8 uid 25
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d3(bb 3 insn 23) }
;;      reg 1 { d13(bb 3 insn 24) }
;;   UD chains for insn luid 9 uid 27
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 10 uid 28
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 27) }
;;   UD chains for insn luid 11 uid 30
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 12 uid 33
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 13 uid 34
;;      reg 134 { d610(bb 3 insn 30) }
;;      reg 150 { d616(bb 3 insn 33) }
;;   UD chains for insn luid 14 uid 35
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 151 { d617(bb 3 insn 34) }
;;   UD chains for insn luid 15 uid 37
;;      reg 134 { d610(bb 3 insn 30) }
;;   UD chains for insn luid 16 uid 39
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 17 uid 40
;;      reg 153 { d618(bb 3 insn 37) }
;;      reg 155 { d619(bb 3 insn 39) }
;;   UD chains for insn luid 18 uid 41
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 156 { d620(bb 3 insn 40) }
;;   UD chains for insn luid 19 uid 44
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 20 uid 45
;;      reg 134 { d610(bb 3 insn 30) }
;;      reg 159 { d621(bb 3 insn 44) }
;;   UD chains for insn luid 21 uid 46
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 160 { d622(bb 3 insn 45) }
;;   UD chains for insn luid 23 uid 49
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 162 { d623(bb 3 insn 48) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u50(11){ d35(bb 0 insn -1) }u51(13){ d42(bb 0 insn -1) }u52(25){ d102(bb 0 insn -1) }u53(26){ d103(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 168 169 172 173 175 177 178 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 135 168 169 172 173 175 177 178 180
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(14)
11, 20, 28, 34, 35, 41, 42, 48, 101, 102, 103, 613, 614, 615
;; rd  gen 	(11)
6, 609, 611, 624, 625, 626, 627, 628, 629, 630, 631
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 609, 611, 612, 624, 625, 626, 627, 628, 629, 630, 631
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
6, 20, 28, 34, 35, 41, 42, 102, 103, 609, 611, 613, 614, 615, 624, 625, 626, 627, 628, 629, 630, 631
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d102(bb 0 insn -1) }
;;   reg 26 { d103(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 58
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 59
;;      reg 137 { d614(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 60
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 57) }
;;      reg 1 { d12(bb 4 insn 58) }
;;      reg 2 { d22(bb 4 insn 59) }
;;   UD chains for insn luid 4 uid 62
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 5 uid 65
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 66
;;      reg 133 { d609(bb 4 insn 62) }
;;      reg 168 { d624(bb 4 insn 65) }
;;   UD chains for insn luid 7 uid 67
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 169 { d625(bb 4 insn 66) }
;;   UD chains for insn luid 8 uid 70
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 9 uid 71
;;      reg 133 { d609(bb 4 insn 62) }
;;      reg 172 { d626(bb 4 insn 70) }
;;   UD chains for insn luid 10 uid 72
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 173 { d627(bb 4 insn 71) }
;;   UD chains for insn luid 11 uid 74
;;      reg 133 { d609(bb 4 insn 62) }
;;   UD chains for insn luid 12 uid 76
;;      reg 139 { d615(bb 2 insn 5) }
;;   UD chains for insn luid 13 uid 77
;;      reg 175 { d628(bb 4 insn 74) }
;;      reg 177 { d629(bb 4 insn 76) }
;;   UD chains for insn luid 14 uid 78
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 178 { d630(bb 4 insn 77) }
;;   UD chains for insn luid 16 uid 81
;;      reg 139 { d615(bb 2 insn 5) }
;;      reg 180 { d631(bb 4 insn 80) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u80(11){ d35(bb 0 insn -1) }u81(13){ d42(bb 0 insn -1) }u82(25){ d102(bb 0 insn -1) }u83(26){ d103(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(33)
6, 11, 20, 28, 34, 35, 41, 42, 102, 103, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(32)
0, 20, 28, 34, 35, 41, 42, 102, 103, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631
;;  UD chains for artificial uses
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d102(bb 0 insn -1) }
;;   reg 26 { d103(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 89
;;      reg 135 { d612(bb 3 insn 50) d611(bb 4 insn 82) }
;;   UD chains for insn luid 1 uid 95
;;      reg 0 { d0(bb 5 insn 89) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u86(0){ d0(bb 5 insn 89) }u87(11){ d35(bb 0 insn -1) }u88(13){ d42(bb 0 insn -1) }u89(14){ }u90(25){ d102(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(32)
0, 20, 28, 34, 35, 41, 42, 102, 103, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(32)
0, 20, 28, 34, 35, 41, 42, 102, 103, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 89) }
;;   reg 11 { d35(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d102(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 99 to worklist
  Adding insn 49 to worklist
  Adding insn 46 to worklist
  Adding insn 41 to worklist
  Adding insn 35 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 72 to worklist
  Adding insn 67 to worklist
  Adding insn 60 to worklist
  Adding insn 95 to worklist
Finished finding needed instructions:
  Adding insn 89 to worklist
Processing use of (reg 135 [ D.26039 ]) in insn 89:
  Adding insn 50 to worklist
  Adding insn 82 to worklist
Processing use of (reg 0 r0) in insn 95:
Processing use of (reg 13 sp) in insn 60:
Processing use of (reg 0 r0) in insn 60:
  Adding insn 57 to worklist
Processing use of (reg 1 r1) in insn 60:
  Adding insn 58 to worklist
Processing use of (reg 2 r2) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 137 [ count.385 ]) in insn 59:
  Adding insn 6 to worklist
Processing use of (reg 139) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 139) in insn 58:
Processing use of (reg 139) in insn 57:
Processing use of (reg 139) in insn 67:
Processing use of (reg 169) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 133 [ count.784 ]) in insn 66:
  Adding insn 62 to worklist
Processing use of (reg 168 [ body_len ]) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 139) in insn 65:
Processing use of (reg 139) in insn 62:
Processing use of (reg 139) in insn 72:
Processing use of (reg 173) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 133 [ count.784 ]) in insn 71:
Processing use of (reg 172 [ victim ]) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 139) in insn 70:
Processing use of (reg 139) in insn 78:
Processing use of (reg 178) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 175 [ count.784 ]) in insn 77:
  Adding insn 74 to worklist
Processing use of (reg 177 [ this_header ]) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 139) in insn 76:
Processing use of (reg 133 [ count.784 ]) in insn 74:
Processing use of (reg 139) in insn 81:
Processing use of (reg 180) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 2 r2) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 136 [ body_len.386 ]) in insn 16:
  Adding insn 8 to worklist
Processing use of (reg 139) in insn 8:
Processing use of (reg 139) in insn 15:
Processing use of (reg 139) in insn 14:
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 0 r0) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 139) in insn 19:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 0 r0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 1 r1) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 139) in insn 24:
Processing use of (reg 139) in insn 23:
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 139) in insn 27:
Processing use of (reg 139) in insn 35:
Processing use of (reg 151) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 134 [ body_len.779 ]) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 150 [ victim ]) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 139) in insn 33:
Processing use of (reg 139) in insn 30:
Processing use of (reg 139) in insn 41:
Processing use of (reg 156) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 153 [ body_len.779 ]) in insn 40:
  Adding insn 37 to worklist
Processing use of (reg 155 [ this_header ]) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 139) in insn 39:
Processing use of (reg 134 [ body_len.779 ]) in insn 37:
Processing use of (reg 139) in insn 46:
Processing use of (reg 160) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 134 [ body_len.779 ]) in insn 45:
Processing use of (reg 159 [ count ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 139) in insn 44:
Processing use of (reg 139) in insn 49:
Processing use of (reg 162) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 136 [ body_len.386 ]) in insn 9:
Processing use of (reg 137 [ count.385 ]) in insn 9:


do_copy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={9d,3u} r2={8d,2u} r3={6d} r11={1d,5u} r12={6d} r13={1d,10u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={8d,1u} r25={1d,5u} r26={1d,4u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,3u} r134={1d,3u} r135={2d,1u} r136={1d,2u} r137={1d,2u} r139={1d,26u} r150={1d,1u} r151={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r168={1d,1u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r175={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} 
;;    total ref usage 723{632d,91u,0e} in 51{46 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608
0[0,12] 1[12,9] 2[21,8] 3[29,6] 11[35,1] 12[36,6] 13[42,1] 14[43,6] 15[49,5] 16[54,5] 17[59,5] 18[64,5] 19[69,5] 20[74,5] 21[79,5] 22[84,5] 23[89,5] 24[94,8] 25[102,1] 26[103,1] 27[104,5] 28[109,5] 29[114,5] 30[119,5] 31[124,5] 32[129,5] 33[134,5] 34[139,5] 35[144,5] 36[149,5] 37[154,5] 38[159,5] 39[164,5] 40[169,5] 41[174,5] 42[179,5] 43[184,5] 44[189,5] 45[194,5] 46[199,5] 47[204,5] 48[209,5] 49[214,5] 50[219,5] 51[224,5] 52[229,5] 53[234,5] 54[239,5] 55[244,5] 56[249,5] 57[254,5] 58[259,5] 59[264,5] 60[269,5] 61[274,5] 62[279,5] 63[284,5] 64[289,5] 65[294,5] 66[299,5] 67[304,5] 68[309,5] 69[314,5] 70[319,5] 71[324,5] 72[329,5] 73[334,5] 74[339,5] 75[344,5] 76[349,5] 77[354,5] 78[359,5] 79[364,5] 80[369,5] 81[374,5] 82[379,5] 83[384,5] 84[389,5] 85[394,5] 86[399,5] 87[404,5] 88[409,5] 89[414,5] 90[419,5] 91[424,5] 92[429,5] 93[434,5] 94[439,5] 95[444,5] 96[449,5] 97[454,5] 98[459,5] 99[464,5] 100[469,5] 101[474,5] 102[479,5] 103[484,5] 104[489,5] 105[494,5] 106[499,5] 107[504,5] 108[509,5] 109[514,5] 110[519,5] 111[524,5] 112[529,5] 113[534,5] 114[539,5] 115[544,5] 116[549,5] 117[554,5] 118[559,5] 119[564,5] 120[569,5] 121[574,5] 122[579,5] 123[584,5] 124[589,5] 125[594,5] 126[599,5] 127[604,5] 133[609,1] 134[610,1] 135[611,2] 136[613,1] 137[614,1] 139[615,1] 150[616,1] 151[617,1] 153[618,1] 155[619,1] 156[620,1] 159[621,1] 160[622,1] 162[623,1] 168[624,1] 169[625,1] 172[626,1] 173[627,1] 175[628,1] 177[629,1] 178[630,1] 180[631,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 139
;; live  kill	
;; rd  in  	(10)
11, 20, 28, 34, 35, 41, 42, 48, 102, 103
;; rd  gen 	(4)
101, 613, 614, 615
;; rd  kill	(11)
94, 95, 96, 97, 98, 99, 100, 101, 613, 614, 615

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:338 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:338 (set (reg:SI 137 [ count.385 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 8 6 9 2 init/initramfs.c:338 (set (reg:SI 136 [ body_len.386 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 9 8 10 2 init/initramfs.c:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ count.385 ])
            (reg:SI 136 [ body_len.386 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 init/initramfs.c:338 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9997 [0x270d])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139
;; rd  out 	(14)
11, 20, 28, 34, 35, 41, 42, 48, 101, 102, 103, 613, 614, 615


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 150 151 153 155 156 159 160 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 150 151 153 155 156 159 160 162
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(14)
11, 20, 28, 34, 35, 41, 42, 48, 101, 102, 103, 613, 614, 615
;; rd  gen 	(10)
610, 612, 616, 617, 618, 619, 620, 621, 622, 623
;; rd  kill	(25)
43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 610, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 11 15 3 init/initramfs.c:339 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(insn 15 14 16 3 init/initramfs.c:339 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 16 15 17 3 init/initramfs.c:339 (set (reg:SI 2 r2)
        (reg:SI 136 [ body_len.386 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ body_len.386 ])
        (nil)))

(call_insn 17 16 19 3 init/initramfs.c:339 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_write") [flags 0x41] <function_decl 0x11464900 sys_write>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 19 17 20 3 init/initramfs.c:340 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(call_insn 20 19 23 3 init/initramfs.c:340 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_close") [flags 0x41] <function_decl 0x1145e900 sys_close>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 23 20 24 3 init/initramfs.c:341 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 196 [0xc4]))) [0 vcollected+0 S4 A32])
        (nil)))

(insn 24 23 25 3 init/initramfs.c:341 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 108 [0x6c]))) [0 mtime+0 S4 A32])
        (nil)))

(call_insn 25 24 27 3 init/initramfs.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 27 25 28 3 init/initramfs.c:342 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 196 [0xc4]))) [0 vcollected+0 S4 A32])
        (nil)))

(call_insn 28 27 30 3 init/initramfs.c:342 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 28 33 3 init/initramfs.c:343 (set (reg:SI 134 [ body_len.779 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 33 30 34 3 init/initramfs.c:172 (set (reg/f:SI 150 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 34 33 35 3 init/initramfs.c:172 (set (reg:SI 151)
        (plus:SI (reg/f:SI 150 [ victim ])
            (reg:SI 134 [ body_len.779 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 150 [ victim ])
        (nil)))

(insn 35 34 37 3 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 37 35 39 3 init/initramfs.c:173 (set (reg:DI 153 [ body_len.779 ])
        (zero_extend:DI (reg:SI 134 [ body_len.779 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 39 37 40 3 init/initramfs.c:173 (set (reg:DI 155 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 40 39 41 3 init/initramfs.c:173 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg:DI 153 [ body_len.779 ])
                    (reg:DI 155 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 155 [ this_header ])
        (expr_list:REG_DEAD (reg:DI 153 [ body_len.779 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 41 40 44 3 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 156)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 156)
        (nil)))

(insn 44 41 45 3 init/initramfs.c:174 (set (reg:SI 159 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 45 44 46 3 init/initramfs.c:174 (set (reg:SI 160)
        (minus:SI (reg:SI 159 [ count ])
            (reg:SI 134 [ body_len.779 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 159 [ count ])
        (expr_list:REG_DEAD (reg:SI 134 [ body_len.779 ])
            (nil))))

(insn 46 45 48 3 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 48 46 49 3 init/initramfs.c:344 (set (reg:SI 162)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 3 init/initramfs.c:344 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (const_int 3 [0x3])
                (nil)))))

(insn 50 49 99 3 init/initramfs.c:345 (set (reg:SI 135 [ D.26039 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 99 50 100 3 init/initramfs.c:345 (set (pc)
        (label_ref 83)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
11, 20, 28, 34, 35, 41, 42, 102, 103, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623


;; Succ edge  5 [100.0%] 

(barrier 100 99 53)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 168 169 172 173 175 177 178 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 135 168 169 172 173 175 177 178 180
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(14)
11, 20, 28, 34, 35, 41, 42, 48, 101, 102, 103, 613, 614, 615
;; rd  gen 	(11)
6, 609, 611, 624, 625, 626, 627, 628, 629, 630, 631
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 43, 44, 45, 46, 47, 48, 94, 95, 96, 97, 98, 99, 100, 101, 609, 611, 612, 624, 625, 626, 627, 628, 629, 630, 631

;; Pred edge  2 [100.0%] 
(code_label 53 100 54 4 88 "" [1 uses])

(note 54 53 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 57 54 58 4 init/initramfs.c:347 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(insn 58 57 59 4 init/initramfs.c:347 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 59 58 60 4 init/initramfs.c:347 (set (reg:SI 2 r2)
        (reg:SI 137 [ count.385 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ count.385 ])
        (nil)))

(call_insn 60 59 62 4 init/initramfs.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_write") [flags 0x41] <function_decl 0x11464900 sys_write>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 62 60 65 4 init/initramfs.c:348 (set (reg:SI 133 [ count.784 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 65 62 66 4 init/initramfs.c:348 (set (reg:SI 168 [ body_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 66 65 67 4 init/initramfs.c:348 (set (reg:SI 169)
        (minus:SI (reg:SI 168 [ body_len ])
            (reg:SI 133 [ count.784 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 168 [ body_len ])
        (nil)))

(insn 67 66 70 4 init/initramfs.c:348 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 70 67 71 4 init/initramfs.c:172 (set (reg/f:SI 172 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 71 70 72 4 init/initramfs.c:172 (set (reg:SI 173)
        (plus:SI (reg/f:SI 172 [ victim ])
            (reg:SI 133 [ count.784 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 172 [ victim ])
        (nil)))

(insn 72 71 74 4 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 74 72 76 4 init/initramfs.c:173 (set (reg:DI 175 [ count.784 ])
        (zero_extend:DI (reg:SI 133 [ count.784 ]))) 138 {*arm_zero_extendsidi2} (expr_list:REG_DEAD (reg:SI 133 [ count.784 ])
        (nil)))

(insn 76 74 77 4 init/initramfs.c:173 (set (reg:DI 177 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 77 76 78 4 init/initramfs.c:173 (parallel [
            (set (reg:DI 178)
                (plus:DI (reg:DI 175 [ count.784 ])
                    (reg:DI 177 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 177 [ this_header ])
        (expr_list:REG_DEAD (reg:DI 175 [ count.784 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 78 77 80 4 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 178)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 178)
        (nil)))

(insn 80 78 81 4 init/initramfs.c:174 (set (reg:SI 180)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 4 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 82 81 83 4 init/initramfs.c:350 (set (reg:SI 135 [ D.26039 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
6, 20, 28, 34, 35, 41, 42, 102, 103, 609, 611, 613, 614, 615, 624, 625, 626, 627, 628, 629, 630, 631


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(33)
6, 11, 20, 28, 34, 35, 41, 42, 102, 103, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631
;; rd  gen 	(1)
0
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 83 82 84 5 89 "" [1 uses])

(note 84 83 89 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 89 84 95 5 init/initramfs.c:352 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.26039 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26039 ])
        (nil)))

(insn 95 89 0 5 init/initramfs.c:352 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(32)
0, 20, 28, 34, 35, 41, 42, 102, 103, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function maybe_link (maybe_link)[0:1326] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 32 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 37 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 37 (  2.3)


maybe_link

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={8d,3u} r2={5d} r3={5d} r11={1d,15u} r12={5d} r13={1d,19u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,15u} r26={1d,14u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,9u} r134={2d,2u} r136={1d,2u} r137={1d,1u} r138={1d,8u} r139={1d,1u} r140={3d,1u} r141={1d,2u} r142={1d,2u} r143={1d,3u} r144={1d,3u} r145={1d,3u} r147={1d,7u} r148={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u,1d} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} 
;;    total ref usage 672{527d,144u,1e} in 70{66 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493
0[0,10] 1[10,8] 2[18,5] 3[23,5] 11[28,1] 12[29,5] 13[34,1] 14[35,5] 15[40,4] 16[44,4] 17[48,4] 18[52,4] 19[56,4] 20[60,4] 21[64,4] 22[68,4] 23[72,4] 24[76,12] 25[88,1] 26[89,1] 27[90,4] 28[94,4] 29[98,4] 30[102,4] 31[106,4] 32[110,4] 33[114,4] 34[118,4] 35[122,4] 36[126,4] 37[130,4] 38[134,4] 39[138,4] 40[142,4] 41[146,4] 42[150,4] 43[154,4] 44[158,4] 45[162,4] 46[166,4] 47[170,4] 48[174,4] 49[178,4] 50[182,4] 51[186,4] 52[190,4] 53[194,4] 54[198,4] 55[202,4] 56[206,4] 57[210,4] 58[214,4] 59[218,4] 60[222,4] 61[226,4] 62[230,4] 63[234,4] 64[238,4] 65[242,4] 66[246,4] 67[250,4] 68[254,4] 69[258,4] 70[262,4] 71[266,4] 72[270,4] 73[274,4] 74[278,4] 75[282,4] 76[286,4] 77[290,4] 78[294,4] 79[298,4] 80[302,4] 81[306,4] 82[310,4] 83[314,4] 84[318,4] 85[322,4] 86[326,4] 87[330,4] 88[334,4] 89[338,4] 90[342,4] 91[346,4] 92[350,4] 93[354,4] 94[358,4] 95[362,4] 96[366,4] 97[370,4] 98[374,4] 99[378,4] 100[382,4] 101[386,4] 102[390,4] 103[394,4] 104[398,4] 105[402,4] 106[406,4] 107[410,4] 108[414,4] 109[418,4] 110[422,4] 111[426,4] 112[430,4] 113[434,4] 114[438,4] 115[442,4] 116[446,4] 117[450,4] 118[454,4] 119[458,4] 120[462,4] 121[466,4] 122[470,4] 123[474,4] 124[478,4] 125[482,4] 126[486,4] 127[490,4] 133[494,1] 134[495,2] 136[497,1] 137[498,1] 138[499,1] 139[500,1] 140[501,3] 141[504,1] 142[505,1] 143[506,1] 144[507,1] 145[508,1] 147[509,1] 148[510,1] 154[511,1] 155[512,1] 157[513,1] 158[514,1] 159[515,1] 160[516,1] 161[517,1] 162[518,1] 163[519,1] 165[520,1] 166[521,1] 167[522,1] 168[523,1] 169[524,1] 170[525,1] 172[526,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d22(2){ }d27(3){ }d28(11){ }d33(12){ }d34(13){ }d39(14){ }d88(25){ }d89(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 17, 22, 27, 28, 33, 34, 39, 88, 89
;; rd  kill	(42)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 88, 89
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 17, 22, 27, 28, 33, 34, 39, 88, 89

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d28(bb 0 insn -1) }u1(13){ d34(bb 0 insn -1) }u2(25){ d88(bb 0 insn -1) }u3(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	
;; rd  in  	(10)
9, 17, 22, 27, 28, 33, 34, 39, 88, 89
;; rd  gen 	(3)
87, 509, 510
;; rd  kill	(14)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 509, 510
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(13)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 509, 510
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 148 { d510(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d87(bb 2 insn 7) }

( 2 )->[3]->( 15 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d28(bb 0 insn -1) }u8(13){ d34(bb 0 insn -1) }u9(25){ d88(bb 0 insn -1) }u10(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(13)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 509, 510
;; rd  gen 	(1)
503
;; rd  kill	(3)
501, 502, 503
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(14)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 503, 509, 510
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }

( 2 )->[4]->( 11 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ d28(bb 0 insn -1) }u12(13){ d34(bb 0 insn -1) }u13(25){ d88(bb 0 insn -1) }u14(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134 136 137 141 142 143 144 145 154 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 134 136 137 141 142 143 144 145 154 155 157 158 159 160
;; live  kill	
;; rd  in  	(13)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 509, 510
;; rd  gen 	(14)
496, 497, 498, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516
;; rd  kill	(15)
495, 496, 497, 498, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; rd  out 	(27)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 18
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 20
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 22
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 24
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 5 uid 25
;;      reg 143 { d506(bb 4 insn 20) }
;;      reg 144 { d507(bb 4 insn 18) }
;;   UD chains for insn luid 6 uid 26
;;      reg 145 { d508(bb 4 insn 16) }
;;   UD chains for insn luid 7 uid 27
;;      reg 154 { d511(bb 4 insn 25) }
;;      reg 155 { d512(bb 4 insn 26) }
;;   UD chains for insn luid 8 uid 28
;;      reg 136 { d497(bb 4 insn 27) }
;;   UD chains for insn luid 9 uid 30
;;      reg 147 { d509(bb 2 insn 5) }
;;   UD chains for insn luid 10 uid 31
;;      reg 136 { d497(bb 4 insn 27) }
;;      reg 137 { d498(bb 4 insn 28) }
;;   UD chains for insn luid 11 uid 32
;;      reg 158 { d514(bb 4 insn 31) }
;;   UD chains for insn luid 12 uid 33
;;      reg 159 { d515(bb 4 insn 32) }
;;   UD chains for insn luid 13 uid 34
;;      reg 157 { d513(bb 4 insn 30) }
;;      reg 160 { d516(bb 4 insn 33) }
;;   eq_note reg 160 { }

( 11 )->[5]->( 10 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d28(bb 0 insn -1) }u35(13){ d34(bb 0 insn -1) }u36(25){ d88(bb 0 insn -1) }u37(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 161
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 81, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
86, 517
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 517
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 86, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 133 { d494(bb 11 insn 74) }
;;   UD chains for insn luid 1 uid 39
;;      reg 143 { d506(bb 4 insn 20) }
;;      reg 161 { d517(bb 5 insn 38) }
;;   UD chains for insn luid 2 uid 40
;;      reg 24 { d86(bb 5 insn 39) }

( 5 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ d28(bb 0 insn -1) }u43(13){ d34(bb 0 insn -1) }u44(25){ d88(bb 0 insn -1) }u45(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 162
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 86, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
85, 518
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 518
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 85, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 133 { d494(bb 11 insn 74) }
;;   UD chains for insn luid 1 uid 43
;;      reg 144 { d507(bb 4 insn 18) }
;;      reg 162 { d518(bb 6 insn 42) }
;;   UD chains for insn luid 2 uid 44
;;      reg 24 { d85(bb 6 insn 43) }

( 6 )->[7]->( 10 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ d28(bb 0 insn -1) }u51(13){ d34(bb 0 insn -1) }u52(25){ d88(bb 0 insn -1) }u53(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 85, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
84, 519
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 84, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 133 { d494(bb 11 insn 74) }
;;   UD chains for insn luid 1 uid 47
;;      reg 145 { d508(bb 4 insn 16) }
;;      reg 163 { d519(bb 7 insn 46) }
;;   UD chains for insn luid 2 uid 48
;;      reg 24 { d84(bb 7 insn 47) }

( 7 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ d28(bb 0 insn -1) }u59(13){ d34(bb 0 insn -1) }u60(25){ d88(bb 0 insn -1) }u61(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142
;; lr  def 	 24 [cc] 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 165 166 167 168
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 84, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(5)
83, 520, 521, 522, 523
;; rd  kill	(16)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 520, 521, 522, 523
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 83, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 133 { d494(bb 11 insn 74) }
;;   UD chains for insn luid 1 uid 52
;;      reg 142 { d505(bb 4 insn 22) }
;;      reg 165 { d520(bb 8 insn 50) }
;;   UD chains for insn luid 2 uid 53
;;      reg 166 { d521(bb 8 insn 52) }
;;   UD chains for insn luid 3 uid 54
;;      reg 167 { d522(bb 8 insn 53) }
;;   UD chains for insn luid 4 uid 55
;;      reg 168 { d523(bb 8 insn 54) }
;;   UD chains for insn luid 5 uid 56
;;      reg 24 { d83(bb 8 insn 55) }

( 8 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ d28(bb 0 insn -1) }u70(13){ d34(bb 0 insn -1) }u71(25){ d88(bb 0 insn -1) }u72(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 139 140 169
;; live  kill	 14 [lr]
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 83, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(5)
7, 76, 500, 502, 524
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 500, 501, 502, 503, 524
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(38)
7, 17, 22, 27, 28, 33, 34, 76, 88, 89, 494, 495, 496, 497, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 133 { d494(bb 11 insn 74) }
;;   UD chains for insn luid 1 uid 59
;;      reg 169 { d524(bb 9 insn 58) }
;;   UD chains for insn luid 2 uid 60
;;      reg 141 { d504(bb 4 insn 24) }
;;   UD chains for insn luid 3 uid 61
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d8(bb 9 insn 59) }
;;      reg 1 { d16(bb 9 insn 60) }
;;   UD chains for insn luid 4 uid 62
;;      reg 0 { d7(bb 9 insn 61) }
;;   UD chains for insn luid 5 uid 128
;;      reg 139 { d500(bb 9 insn 62) }
;;   UD chains for insn luid 6 uid 129
;;      reg 24 { d76(bb 9 insn 128) }

( 5 6 7 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ d28(bb 0 insn -1) }u83(13){ d34(bb 0 insn -1) }u84(25){ d88(bb 0 insn -1) }u85(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 134
;; live  kill	
;; rd  in  	(39)
9, 17, 22, 27, 28, 33, 34, 39, 83, 84, 85, 86, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(1)
495
;; rd  kill	(2)
495, 496
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; rd  out 	(38)
9, 17, 22, 27, 28, 33, 34, 39, 83, 84, 85, 86, 88, 89, 494, 495, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 133 { d494(bb 11 insn 74) }

( 10 4 )->[11]->( 5 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(11){ d28(bb 0 insn -1) }u88(13){ d34(bb 0 insn -1) }u89(25){ d88(bb 0 insn -1) }u90(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(40)
9, 17, 22, 27, 28, 33, 34, 39, 83, 84, 85, 86, 87, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
81, 494
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 494
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 81, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 134 { d496(bb 4 insn 34) d495(bb 10 insn 71) }
;;   UD chains for insn luid 1 uid 76
;;      reg 133 { d494(bb 11 insn 74) }
;;   UD chains for insn luid 2 uid 77
;;      reg 24 { d81(bb 11 insn 76) }

( 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u94(11){ d28(bb 0 insn -1) }u95(13){ d34(bb 0 insn -1) }u96(25){ d88(bb 0 insn -1) }u97(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138 170
;; live  kill	 14 [lr]
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 81, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(4)
5, 77, 499, 525
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 499, 525
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; rd  out 	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 81
;;      reg 170 { d525(bb 12 insn 80) }
;;   UD chains for insn luid 3 uid 83
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d6(bb 12 insn 81) }
;;      reg 1 { d14(bb 12 insn 82) }
;;   UD chains for insn luid 4 uid 84
;;      reg 0 { d5(bb 12 insn 83) }
;;   UD chains for insn luid 5 uid 86
;;      reg 138 { d499(bb 12 insn 84) }
;;   UD chains for insn luid 6 uid 87
;;      reg 24 { d77(bb 12 insn 86) }

( 12 )->[13]->( )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ d28(bb 0 insn -1) }u106(13){ d34(bb 0 insn -1) }u107(25){ d88(bb 0 insn -1) }u108(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525
;; rd  gen 	(0)

;; rd  kill	(5)
35, 36, 37, 38, 39
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 91
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d0(bb 13 insn 90) }

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ d28(bb 0 insn -1) }u112(13){ d34(bb 0 insn -1) }u113(25){ d88(bb 0 insn -1) }u114(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 140 172
;; live  kill	 14 [lr]
;; rd  in  	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525
;; rd  gen 	(3)
2, 501, 526
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 501, 502, 503, 526
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(39)
2, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 138 { d499(bb 12 insn 84) }
;;      reg 145 { d508(bb 4 insn 16) }
;;   UD chains for insn luid 1 uid 96
;;      reg 138 { d499(bb 12 insn 84) }
;;      reg 144 { d507(bb 4 insn 18) }
;;   UD chains for insn luid 2 uid 97
;;      reg 138 { d499(bb 12 insn 84) }
;;      reg 143 { d506(bb 4 insn 20) }
;;   UD chains for insn luid 3 uid 98
;;      reg 138 { d499(bb 12 insn 84) }
;;      reg 142 { d505(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 99
;;      reg 138 { d499(bb 12 insn 84) }
;;   UD chains for insn luid 5 uid 100
;;      reg 172 { d526(bb 14 insn 99) }
;;   UD chains for insn luid 6 uid 101
;;      reg 141 { d504(bb 4 insn 24) }
;;   UD chains for insn luid 7 uid 102
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d3(bb 14 insn 100) }
;;      reg 1 { d11(bb 14 insn 101) }
;;   UD chains for insn luid 8 uid 104
;;      reg 133 { d494(bb 11 insn 74) }
;;      reg 138 { d499(bb 12 insn 84) }
;;   UD chains for insn luid 9 uid 105
;;      reg 134 { d496(bb 4 insn 34) d495(bb 10 insn 71) }
;;      reg 138 { d499(bb 12 insn 84) }
;;   UD chains for insn luid 10 uid 106
;;      reg 133 { d494(bb 11 insn 74) }

( 3 14 9 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u134(11){ d28(bb 0 insn -1) }u135(13){ d34(bb 0 insn -1) }u136(25){ d88(bb 0 insn -1) }u137(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(48)
2, 7, 9, 17, 22, 27, 28, 33, 34, 39, 76, 77, 87, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526
;; rd  gen 	(1)
1
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(46)
1, 17, 22, 27, 28, 33, 34, 39, 76, 77, 87, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 118
;;      reg 140 { d503(bb 3 insn 10) d502(bb 9 insn 129) d501(bb 14 insn 106) }
;;   UD chains for insn luid 1 uid 124
;;      reg 0 { d1(bb 15 insn 118) }

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u140(0){ d1(bb 15 insn 118) }u141(11){ d28(bb 0 insn -1) }u142(13){ d34(bb 0 insn -1) }u143(14){ d39(bb 0 insn -1) }u144(25){ d88(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(46)
1, 17, 22, 27, 28, 33, 34, 39, 76, 77, 87, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(46)
1, 17, 22, 27, 28, 33, 34, 39, 76, 77, 87, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 15 insn 118) }
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 14 { d39(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 130 to worklist
  Adding insn 132 to worklist
  Adding insn 40 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 56 to worklist
  Adding insn 134 to worklist
  Adding insn 61 to worklist
  Adding insn 77 to worklist
  Adding insn 87 to worklist
  Adding insn 83 to worklist
  Adding insn 91 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 124 to worklist
Finished finding needed instructions:
  Adding insn 118 to worklist
Processing use of (reg 140 [ D.25953 ]) in insn 118:
  Adding insn 10 to worklist
  Adding insn 129 to worklist
  Adding insn 106 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 106:
  Adding insn 74 to worklist
Processing use of (reg 134 [ p ]) in insn 74:
  Adding insn 34 to worklist
  Adding insn 71 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 71:
Processing use of (reg 157) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 160) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 159) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 158) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 136 [ tmp ]) in insn 31:
  Adding insn 27 to worklist
Processing use of (reg 137 [ D.26460 ]) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 136 [ tmp ]) in insn 28:
Processing use of (reg 154) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 155) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 145 [ major.364 ]) in insn 26:
  Adding insn 16 to worklist
Processing use of (reg 147) in insn 16:
  Adding insn 5 to worklist
Processing use of (reg 143 [ ino.368 ]) in insn 25:
  Adding insn 20 to worklist
Processing use of (reg 144 [ minor.366 ]) in insn 25:
  Adding insn 18 to worklist
Processing use of (reg 147) in insn 18:
Processing use of (reg 147) in insn 20:
Processing use of (reg 147) in insn 30:
Processing use of (reg 24 cc) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 139 [ D.25955 ]) in insn 128:
  Adding insn 62 to worklist
Processing use of (reg 0 r0) in insn 62:
Processing use of (reg 0 r0) in insn 124:
Processing use of (reg 138 [ ret ]) in insn 95:
  Adding insn 84 to worklist
Processing use of (reg 145 [ major.364 ]) in insn 95:
Processing use of (reg 0 r0) in insn 84:
Processing use of (reg 138 [ ret ]) in insn 96:
Processing use of (reg 144 [ minor.366 ]) in insn 96:
Processing use of (reg 138 [ ret ]) in insn 97:
Processing use of (reg 143 [ ino.368 ]) in insn 97:
Processing use of (reg 138 [ ret ]) in insn 98:
Processing use of (subreg (reg 142 [ mode.369 ]) 0) in insn 98:
  Adding insn 22 to worklist
Processing use of (reg 147) in insn 22:
Processing use of (reg 13 sp) in insn 102:
Processing use of (reg 0 r0) in insn 102:
  Adding insn 100 to worklist
Processing use of (reg 1 r1) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 141 [ collected.370 ]) in insn 101:
  Adding insn 24 to worklist
Processing use of (reg 147) in insn 24:
Processing use of (reg 172) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 138 [ ret ]) in insn 99:
Processing use of (reg 133 [ D.26472 ]) in insn 104:
Processing use of (reg 138 [ ret ]) in insn 104:
Processing use of (reg 134 [ p ]) in insn 105:
Processing use of (reg 138 [ ret ]) in insn 105:
Processing use of (reg 13 sp) in insn 91:
Processing use of (reg 0 r0) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 0 r0) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 1 r1) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 170) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 24 cc) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 138 [ ret ]) in insn 86:
Processing use of (reg 24 cc) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 76:
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 0 r0) in insn 61:
  Adding insn 59 to worklist
Processing use of (reg 1 r1) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 141 [ collected.370 ]) in insn 60:
Processing use of (reg 169) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 58:
Processing use of (reg 24 cc) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 168) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 167) in insn 54:
  Adding insn 53 to worklist
Processing use of (subreg (reg 166) 0) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 142 [ mode.369 ]) in insn 52:
Processing use of (reg 165 [ <variable>.mode ]) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 50:
Processing use of (reg 24 cc) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 145 [ major.364 ]) in insn 47:
Processing use of (reg 163 [ <variable>.major ]) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 46:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 144 [ minor.366 ]) in insn 43:
Processing use of (reg 162 [ <variable>.minor ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 42:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 143 [ ino.368 ]) in insn 39:
Processing use of (reg 161 [ <variable>.ino ]) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 133 [ D.26472 ]) in insn 38:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 148 [ nlink ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 147) in insn 6:


maybe_link

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,8u} r1={8d,3u} r2={5d} r3={5d} r11={1d,15u} r12={5d} r13={1d,19u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,15u} r26={1d,14u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,9u} r134={2d,2u} r136={1d,2u} r137={1d,1u} r138={1d,8u} r139={1d,1u} r140={3d,1u} r141={1d,2u} r142={1d,2u} r143={1d,3u} r144={1d,3u} r145={1d,3u} r147={1d,7u} r148={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u,1d} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r172={1d,1u} 
;;    total ref usage 672{527d,144u,1e} in 70{66 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493
0[0,10] 1[10,8] 2[18,5] 3[23,5] 11[28,1] 12[29,5] 13[34,1] 14[35,5] 15[40,4] 16[44,4] 17[48,4] 18[52,4] 19[56,4] 20[60,4] 21[64,4] 22[68,4] 23[72,4] 24[76,12] 25[88,1] 26[89,1] 27[90,4] 28[94,4] 29[98,4] 30[102,4] 31[106,4] 32[110,4] 33[114,4] 34[118,4] 35[122,4] 36[126,4] 37[130,4] 38[134,4] 39[138,4] 40[142,4] 41[146,4] 42[150,4] 43[154,4] 44[158,4] 45[162,4] 46[166,4] 47[170,4] 48[174,4] 49[178,4] 50[182,4] 51[186,4] 52[190,4] 53[194,4] 54[198,4] 55[202,4] 56[206,4] 57[210,4] 58[214,4] 59[218,4] 60[222,4] 61[226,4] 62[230,4] 63[234,4] 64[238,4] 65[242,4] 66[246,4] 67[250,4] 68[254,4] 69[258,4] 70[262,4] 71[266,4] 72[270,4] 73[274,4] 74[278,4] 75[282,4] 76[286,4] 77[290,4] 78[294,4] 79[298,4] 80[302,4] 81[306,4] 82[310,4] 83[314,4] 84[318,4] 85[322,4] 86[326,4] 87[330,4] 88[334,4] 89[338,4] 90[342,4] 91[346,4] 92[350,4] 93[354,4] 94[358,4] 95[362,4] 96[366,4] 97[370,4] 98[374,4] 99[378,4] 100[382,4] 101[386,4] 102[390,4] 103[394,4] 104[398,4] 105[402,4] 106[406,4] 107[410,4] 108[414,4] 109[418,4] 110[422,4] 111[426,4] 112[430,4] 113[434,4] 114[438,4] 115[442,4] 116[446,4] 117[450,4] 118[454,4] 119[458,4] 120[462,4] 121[466,4] 122[470,4] 123[474,4] 124[478,4] 125[482,4] 126[486,4] 127[490,4] 133[494,1] 134[495,2] 136[497,1] 137[498,1] 138[499,1] 139[500,1] 140[501,3] 141[504,1] 142[505,1] 143[506,1] 144[507,1] 145[508,1] 147[509,1] 148[510,1] 154[511,1] 155[512,1] 157[513,1] 158[514,1] 159[515,1] 160[516,1] 161[517,1] 162[518,1] 163[519,1] 165[520,1] 166[521,1] 167[522,1] 168[523,1] 169[524,1] 170[525,1] 172[526,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	
;; rd  in  	(10)
9, 17, 22, 27, 28, 33, 34, 39, 88, 89
;; rd  gen 	(3)
87, 509, 510
;; rd  kill	(14)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 509, 510

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:271 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:271 (set (reg:SI 148 [ nlink ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 200 [0xc8])) [0 nlink+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 200 [0xc8]))) [0 nlink+0 S4 A32])
        (nil)))

(insn 7 6 8 2 init/initramfs.c:271 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ nlink ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ nlink ])
        (nil)))

(jump_insn 8 7 9 2 init/initramfs.c:271 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; rd  out 	(13)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 509, 510


;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(13)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 509, 510
;; rd  gen 	(1)
503
;; rd  kill	(3)
501, 502, 503

;; Pred edge  2 [100.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 130 3 init/initramfs.c:276 (set (reg:SI 140 [ D.25953 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 130 10 131 3 (set (pc)
        (label_ref 112)) -1 (nil))
;; End of basic block 3 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; rd  out 	(14)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 503, 509, 510


;; Succ edge  15 [100.0%] 

(barrier 131 130 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134 136 137 141 142 143 144 145 154 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 134 136 137 141 142 143 144 145 154 155 157 158 159 160
;; live  kill	
;; rd  in  	(13)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 509, 510
;; rd  gen 	(14)
496, 497, 498, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516
;; rd  kill	(15)
495, 496, 497, 498, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516

;; Pred edge  2 [0.0%] 
(code_label 13 131 14 4 94 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 18 4 init/initramfs.c:272 (set (reg:SI 145 [ major.364 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 204 [0xcc])) [0 major+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 204 [0xcc]))) [0 major+0 S4 A32])
        (nil)))

(insn 18 16 20 4 init/initramfs.c:272 (set (reg:SI 144 [ minor.366 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 208 [0xd0])) [0 minor+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 208 [0xd0]))) [0 minor+0 S4 A32])
        (nil)))

(insn 20 18 22 4 init/initramfs.c:272 (set (reg:SI 143 [ ino.368 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 212 [0xd4])) [0 ino+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 212 [0xd4]))) [0 ino+0 S4 A32])
        (nil)))

(insn 22 20 24 4 init/initramfs.c:272 (set (reg:SI 142 [ mode.369 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 147)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 24 22 25 4 init/initramfs.c:272 (set (reg/f:SI 141 [ collected.370 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 25 24 26 4 init/initramfs.c:32 (set (reg:SI 154)
        (plus:SI (reg:SI 143 [ ino.368 ])
            (reg:SI 144 [ minor.366 ]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 4 init/initramfs.c:32 (set (reg:SI 155)
        (ashift:SI (reg:SI 145 [ major.364 ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 4 init/initramfs.c:32 (set (reg/v:SI 136 [ tmp ])
        (plus:SI (reg:SI 154)
            (reg:SI 155))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 154)
            (nil))))

(insn 28 27 30 4 init/initramfs.c:33 (set (reg:SI 137 [ D.26460 ])
        (lshiftrt:SI (reg/v:SI 136 [ tmp ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 30 28 31 4 init/initramfs.c:41 (set (reg/f:SI 157)
        (plus:SI (reg/f:SI 147)
            (const_int 220 [0xdc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 220 [0xdc])))
            (nil))))

(insn 31 30 32 4 init/initramfs.c:41 (set (reg:SI 158)
        (plus:SI (reg:SI 137 [ D.26460 ])
            (reg/v:SI 136 [ tmp ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 137 [ D.26460 ])
        (expr_list:REG_DEAD (reg/v:SI 136 [ tmp ])
            (nil))))

(insn 32 31 33 4 init/initramfs.c:41 (set (reg:SI 159)
        (and:SI (reg:SI 158)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 33 32 34 4 init/initramfs.c:41 (set (reg:SI 160)
        (ashift:SI (reg:SI 159)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 34 33 132 4 init/initramfs.c:41 (set (reg/v/f:SI 134 [ p ])
        (plus:SI (reg/f:SI 157)
            (reg:SI 160))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 160)
                    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const_int 220 [0xdc]))))
                (nil)))))

(jump_insn 132 34 133 4 (set (pc)
        (label_ref 72)) -1 (nil))
;; End of basic block 4 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; rd  out 	(27)
9, 17, 22, 27, 28, 33, 34, 39, 87, 88, 89, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516


;; Succ edge  11 [100.0%] 

(barrier 133 132 75)

;; Start of basic block ( 11) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 161
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 81, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
86, 517
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 517

;; Pred edge  11 [95.5%] 
(code_label 75 133 37 5 99 "" [1 uses])

(note 37 75 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 init/initramfs.c:42 (set (reg:SI 161 [ <variable>.ino ])
        (mem/s/j:SI (reg/f:SI 133 [ D.26472 ]) [0 <variable>.ino+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 5 init/initramfs.c:42 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ <variable>.ino ])
            (reg:SI 143 [ ino.368 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.ino ])
        (nil)))

(jump_insn 40 39 41 5 init/initramfs.c:42 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 86, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523


;; Succ edge  10 [72.0%] 
;; Succ edge  6 [28.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 162
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 86, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
85, 518
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 518

;; Pred edge  5 [28.0%]  (fallthru)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 6 init/initramfs.c:44 (set (reg:SI 162 [ <variable>.minor ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ D.26472 ])
                (const_int 4 [0x4])) [0 <variable>.minor+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 init/initramfs.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162 [ <variable>.minor ])
            (reg:SI 144 [ minor.366 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162 [ <variable>.minor ])
        (nil)))

(jump_insn 44 43 45 6 init/initramfs.c:44 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 85, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523


;; Succ edge  10 [72.0%] 
;; Succ edge  7 [28.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 85, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
84, 519
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 519

;; Pred edge  6 [28.0%]  (fallthru)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 7 init/initramfs.c:46 (set (reg:SI 163 [ <variable>.major ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ D.26472 ])
                (const_int 8 [0x8])) [0 <variable>.major+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 init/initramfs.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ <variable>.major ])
            (reg:SI 145 [ major.364 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.major ])
        (nil)))

(jump_insn 48 47 49 7 init/initramfs.c:46 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 84, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523


;; Succ edge  10 [72.0%] 
;; Succ edge  8 [28.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142
;; lr  def 	 24 [cc] 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 165 166 167 168
;; live  kill	
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 84, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(5)
83, 520, 521, 522, 523
;; rd  kill	(16)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 520, 521, 522, 523

;; Pred edge  7 [28.0%]  (fallthru)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 52 8 init/initramfs.c:48 (set (reg:SI 165 [ <variable>.mode ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/f:SI 133 [ D.26472 ])
                    (const_int 12 [0xc])) [0 <variable>.mode+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 52 50 53 8 init/initramfs.c:48 (set (reg:SI 166)
        (xor:SI (reg:SI 142 [ mode.369 ])
            (reg:SI 165 [ <variable>.mode ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 165 [ <variable>.mode ])
        (nil)))

(insn 53 52 54 8 init/initramfs.c:48 (set (reg:SI 167)
        (zero_extend:SI (subreg:HI (reg:SI 166) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 54 53 55 8 init/initramfs.c:48 (set (reg:SI 168)
        (and:SI (reg:SI 167)
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 55 54 56 8 init/initramfs.c:48 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 168)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(jump_insn 56 55 57 8 init/initramfs.c:48 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 83, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 139 140 169
;; live  kill	 14 [lr]
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 83, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(5)
7, 76, 500, 502, 524
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 500, 501, 502, 503, 524

;; Pred edge  8 [50.0%]  (fallthru,loop_exit)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 init/initramfs.c:274 (set (reg/f:SI 169)
        (plus:SI (reg/f:SI 133 [ D.26472 ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26472 ])
        (nil)))

(insn 59 58 60 9 init/initramfs.c:274 (set (reg:SI 0 r0)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169)
        (nil)))

(insn 60 59 61 9 init/initramfs.c:274 (set (reg:SI 1 r1)
        (reg/f:SI 141 [ collected.370 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ collected.370 ])
        (nil)))

(call_insn 61 60 62 9 init/initramfs.c:274 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_link") [flags 0x41] <function_decl 0x11458c00 sys_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 62 61 128 9 init/initramfs.c:274 (set (reg:SI 139 [ D.25955 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 128 62 129 9 init/initramfs.c:274 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.25955 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.25955 ])
        (nil)))

(insn 129 128 134 9 init/initramfs.c:274 discrim 2 (set (reg:SI 140 [ D.25953 ])
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -1 [0xffffffffffffffff])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 134 129 135 9 (set (pc)
        (label_ref 112)) -1 (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(38)
7, 17, 22, 27, 28, 33, 34, 76, 88, 89, 494, 495, 496, 497, 498, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524


;; Succ edge  15 [100.0%] 

(barrier 135 134 69)

;; Start of basic block ( 5 6 7 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 134
;; live  kill	
;; rd  in  	(39)
9, 17, 22, 27, 28, 33, 34, 39, 83, 84, 85, 86, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(1)
495
;; rd  kill	(2)
495, 496

;; Pred edge  5 [72.0%] 
;; Pred edge  6 [72.0%] 
;; Pred edge  7 [72.0%] 
;; Pred edge  8 [50.0%] 
(code_label 69 135 70 10 97 "" [4 uses])

(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 10 init/initramfs.c:41 (set (reg/v/f:SI 134 [ p ])
        (plus:SI (reg/f:SI 133 [ D.26472 ])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26472 ])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; rd  out 	(38)
9, 17, 22, 27, 28, 33, 34, 39, 83, 84, 85, 86, 88, 89, 494, 495, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523


;; Succ edge  11 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  gen 	 24 [cc] 133
;; live  kill	
;; rd  in  	(40)
9, 17, 22, 27, 28, 33, 34, 39, 83, 84, 85, 86, 87, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(2)
81, 494
;; rd  kill	(13)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 494

;; Pred edge  10 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 72 71 73 11 96 "" [1 uses])

(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 11 init/initramfs.c:41 discrim 1 (set (reg/f:SI 133 [ D.26472 ])
        (mem/f:SI (reg/v/f:SI 134 [ p ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 74 77 11 init/initramfs.c:41 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.26472 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 79 11 init/initramfs.c:41 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 11 -> ( 5 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; rd  out 	(36)
9, 17, 22, 27, 28, 33, 34, 39, 81, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523


;; Succ edge  5 [95.5%] 
;; Succ edge  12 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138 170
;; live  kill	 14 [lr]
;; rd  in  	(36)
9, 17, 22, 27, 28, 33, 34, 39, 81, 88, 89, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523
;; rd  gen 	(4)
5, 77, 499, 525
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 499, 525

;; Pred edge  11 [4.5%]  (fallthru,loop_exit)
(note 79 77 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 78 79 80 12 ("found") NOTE_INSN_DELETED_LABEL 100)

(insn 80 78 81 12 include/linux/slab_def.h:122 (set (reg/f:SI 170)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 12 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 170)
                (const_int 84 [0x54])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                        (const_int 84 [0x54]))) [0 <variable>.cs_cachep+0 S4 A32])
            (nil))))

(insn 82 81 83 12 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 83 82 84 12 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 84 83 86 12 include/linux/slab_def.h:122 (set (reg/v/f:SI 138 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 86 84 87 12 init/initramfs.c:53 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 87 86 88 12 init/initramfs.c:53 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; rd  out 	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525
;; rd  gen 	(0)

;; rd  kill	(5)
35, 36, 37, 38, 39

;; Pred edge  12 [0.0%]  (fallthru)
(note 88 87 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 90 88 91 13 init/initramfs.c:54 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x115c7780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x115c7780>)
        (nil)))

(call_insn 91 90 92 13 init/initramfs.c:54 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 13 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525



(barrier 92 91 93)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 140 172
;; live  kill	 14 [lr]
;; rd  in  	(37)
5, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525
;; rd  gen 	(3)
2, 501, 526
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 35, 36, 37, 38, 39, 501, 502, 503, 526

;; Pred edge  12 [100.0%] 
(code_label 93 92 94 14 101 "" [1 uses])

(note 94 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 14 init/initramfs.c:55 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 8 [0x8])) [0 <variable>.major+0 S4 A32])
        (reg:SI 145 [ major.364 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ major.364 ])
        (nil)))

(insn 96 95 97 14 init/initramfs.c:56 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.minor+0 S4 A32])
        (reg:SI 144 [ minor.366 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ minor.366 ])
        (nil)))

(insn 97 96 98 14 init/initramfs.c:57 (set (mem/s/j:SI (reg/v/f:SI 138 [ ret ]) [0 <variable>.ino+0 S4 A32])
        (reg:SI 143 [ ino.368 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ ino.368 ])
        (nil)))

(insn 98 97 99 14 init/initramfs.c:58 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 12 [0xc])) [0 <variable>.mode+0 S2 A32])
        (subreg/s/u:HI (reg:SI 142 [ mode.369 ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 142 [ mode.369 ])
        (nil)))

(insn 99 98 100 14 init/initramfs.c:59 (set (reg/f:SI 172)
        (plus:SI (reg/v/f:SI 138 [ ret ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 100 99 101 14 init/initramfs.c:59 (set (reg:SI 0 r0)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (nil)))

(insn 101 100 102 14 init/initramfs.c:59 (set (reg:SI 1 r1)
        (reg/f:SI 141 [ collected.370 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ collected.370 ])
        (nil)))

(call_insn 102 101 104 14 init/initramfs.c:59 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 104 102 105 14 init/initramfs.c:60 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 16 [0x10])) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 105 104 106 14 init/initramfs.c:61 (set (mem/f:SI (reg/v/f:SI 134 [ p ]) [0 S4 A32])
        (reg/v/f:SI 138 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ ret ])
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ p ])
            (nil))))

(insn 106 105 112 14 init/initramfs.c:276 (set (reg:SI 140 [ D.25953 ])
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26472 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(39)
2, 17, 22, 27, 28, 33, 34, 77, 88, 89, 494, 495, 496, 497, 498, 499, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 3 14 9) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(48)
2, 7, 9, 17, 22, 27, 28, 33, 34, 39, 76, 77, 87, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526
;; rd  gen 	(1)
1
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

;; Pred edge  3 [100.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 112 106 113 15 95 "" [2 uses])

(note 113 112 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 118 113 124 15 init/initramfs.c:277 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ D.25953 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.25953 ])
        (nil)))

(insn 124 118 0 15 init/initramfs.c:277 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(46)
1, 17, 22, 27, 28, 33, 34, 39, 76, 77, 87, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_name (do_name)[0:1328] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 41 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 47 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 47 (    2)


do_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={39d,27u} r1={37d,16u} r2={26d,5u} r3={21d} r11={1d,23u} r12={21d} r13={1d,43u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,16u} r25={1d,23u} r26={1d,22u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r163={1d,1u} r164={2d,4u,1d} r166={1d,1u} r168={1d,11u} r169={1d,2u} r170={1d,3u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,2u} r177={1d,2u} r178={1d,6u} r179={1d,2u} r181={1d,2u} r183={1d,25u} r184={1d,1u} r186={1d,1u} r189={1d,2u} r192={1d,1u} r196={1d,1u} r200={1d,1u} r206={1d,1u} r209={1d,3u} r212={1d,1u} r219={1d,1u} r222={1d,1u} r226={2d,3u} r229={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,10u} r237={1d,1u} r244={1d,1u} r248={1d,1u} r249={1d,2u} 
;;    total ref usage 2727{2446d,280u,1e} in 147{127 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1, 24
  dense invalidated 	76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404
0[0,39] 1[39,37] 2[76,26] 3[102,21] 11[123,1] 12[124,21] 13[145,1] 14[146,21] 15[167,20] 16[187,20] 17[207,20] 18[227,20] 19[247,20] 20[267,20] 21[287,20] 22[307,20] 23[327,20] 24[347,36] 25[383,1] 26[384,1] 27[385,20] 28[405,20] 29[425,20] 30[445,20] 31[465,20] 32[485,20] 33[505,20] 34[525,20] 35[545,20] 36[565,20] 37[585,20] 38[605,20] 39[625,20] 40[645,20] 41[665,20] 42[685,20] 43[705,20] 44[725,20] 45[745,20] 46[765,20] 47[785,20] 48[805,20] 49[825,20] 50[845,20] 51[865,20] 52[885,20] 53[905,20] 54[925,20] 55[945,20] 56[965,20] 57[985,20] 58[1005,20] 59[1025,20] 60[1045,20] 61[1065,20] 62[1085,20] 63[1105,20] 64[1125,20] 65[1145,20] 66[1165,20] 67[1185,20] 68[1205,20] 69[1225,20] 70[1245,20] 71[1265,20] 72[1285,20] 73[1305,20] 74[1325,20] 75[1345,20] 76[1365,20] 77[1385,20] 78[1405,20] 79[1425,20] 80[1445,20] 81[1465,20] 82[1485,20] 83[1505,20] 84[1525,20] 85[1545,20] 86[1565,20] 87[1585,20] 88[1605,20] 89[1625,20] 90[1645,20] 91[1665,20] 92[1685,20] 93[1705,20] 94[1725,20] 95[1745,20] 96[1765,20] 97[1785,20] 98[1805,20] 99[1825,20] 100[1845,20] 101[1865,20] 102[1885,20] 103[1905,20] 104[1925,20] 105[1945,20] 106[1965,20] 107[1985,20] 108[2005,20] 109[2025,20] 110[2045,20] 111[2065,20] 112[2085,20] 113[2105,20] 114[2125,20] 115[2145,20] 116[2165,20] 117[2185,20] 118[2205,20] 119[2225,20] 120[2245,20] 121[2265,20] 122[2285,20] 123[2305,20] 124[2325,20] 125[2345,20] 126[2365,20] 127[2385,20] 163[2405,1] 164[2406,2] 166[2408,1] 168[2409,1] 169[2410,1] 170[2411,1] 171[2412,1] 172[2413,1] 173[2414,1] 174[2415,1] 175[2416,1] 176[2417,1] 177[2418,1] 178[2419,1] 179[2420,1] 181[2421,1] 183[2422,1] 184[2423,1] 186[2424,1] 189[2425,1] 192[2426,1] 196[2427,1] 200[2428,1] 206[2429,1] 209[2430,1] 212[2431,1] 219[2432,1] 222[2433,1] 226[2434,2] 229[2436,1] 231[2437,1] 232[2438,1] 233[2439,1] 234[2440,1] 235[2441,1] 237[2442,1] 244[2443,1] 248[2444,1] 249[2445,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d38(0){ }d75(1){ }d101(2){ }d122(3){ }d123(11){ }d144(12){ }d145(13){ }d166(14){ }d383(25){ }d384(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
38, 75, 101, 122, 123, 144, 145, 166, 383, 384
;; rd  kill	(93)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 383, 384
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
38, 75, 101, 122, 123, 144, 145, 166, 383, 384

( 0 )->[2]->( 3 8 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d123(bb 0 insn -1) }u1(13){ d145(bb 0 insn -1) }u2(25){ d383(bb 0 insn -1) }u3(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 183 184 186 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 181 183 184 186 189
;; live  kill	 14 [lr]
;; rd  in  	(10)
38, 75, 101, 122, 123, 144, 145, 166, 383, 384
;; rd  gen 	(7)
36, 349, 2421, 2422, 2423, 2424, 2425
;; rd  kill	(26)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2421, 2422, 2423, 2424, 2425
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181 183 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183 189
;; rd  out 	(15)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2421, 2422, 2423, 2424, 2425
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 37
;;      reg 183 { d2422(bb 2 insn 35) }
;;      reg 184 { d2423(bb 2 insn 36) }
;;   UD chains for insn luid 4 uid 40
;;      reg 183 { d2422(bb 2 insn 35) }
;;      reg 186 { d2424(bb 2 insn 39) }
;;   UD chains for insn luid 5 uid 42
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 6 uid 44
;;      reg 181 { d2421(bb 2 insn 42) }
;;   UD chains for insn luid 8 uid 46
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d37(bb 2 insn 44) }
;;      reg 1 { d40(bb 2 insn 45) }
;;   UD chains for insn luid 9 uid 47
;;      reg 0 { d36(bb 2 insn 46) }
;;   UD chains for insn luid 10 uid 49
;;      reg 189 { d2425(bb 2 insn 47) }
;;   UD chains for insn luid 11 uid 50
;;      reg 24 { d349(bb 2 insn 49) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d123(bb 0 insn -1) }u17(13){ d145(bb 0 insn -1) }u18(25){ d383(bb 0 insn -1) }u19(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 183 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 189
;; lr  def 	 164 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 189
;; live  gen 	 164 249
;; live  kill	
;; rd  in  	(15)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2421, 2422, 2423, 2424, 2425
;; rd  gen 	(2)
2406, 2445
;; rd  kill	(3)
2406, 2407, 2445
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; rd  out 	(17)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2406, 2421, 2422, 2423, 2424, 2425, 2445
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 189 { d2425(bb 2 insn 47) }
;;   UD chains for insn luid 1 uid 65
;;      reg 183 { d2422(bb 2 insn 35) }

( 5 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ d123(bb 0 insn -1) }u23(13){ d145(bb 0 insn -1) }u24(25){ d383(bb 0 insn -1) }u25(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; live  gen 	 0 [r0] 192
;; live  kill	 14 [lr]
;; rd  in  	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(1)
2426
;; rd  kill	(22)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2426
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; rd  out 	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 170 { d2411(bb 5 insn 66) }
;;   UD chains for insn luid 1 uid 59
;;      reg 164 { d2407(bb 6 insn 71) d2406(bb 3 insn 52) }
;;      reg 192 { d2426(bb 4 insn 58) }
;;      reg 249 { d2445(bb 3 insn 65) }
;;   UD chains for insn luid 2 uid 60
;;      reg 170 { d2411(bb 5 insn 66) }
;;   UD chains for insn luid 3 uid 61
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d35(bb 4 insn 60) }

( 6 4 3 )->[5]->( 4 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ d123(bb 0 insn -1) }u38(13){ d145(bb 0 insn -1) }u39(25){ d383(bb 0 insn -1) }u40(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; live  gen 	 24 [cc] 170
;; live  kill	
;; rd  in  	(22)
36, 75, 101, 122, 123, 144, 145, 349, 379, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(2)
380, 2411
;; rd  kill	(1)
2411
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; rd  out 	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 164 { d2407(bb 6 insn 71) d2406(bb 3 insn 52) }
;;      reg 249 { d2445(bb 3 insn 65) }
;;   eq_note reg 164 { }
;;   UD chains for insn luid 1 uid 68
;;      reg 170 { d2411(bb 5 insn 66) }
;;   UD chains for insn luid 2 uid 69
;;      reg 24 { d380(bb 5 insn 68) }

( 5 )->[6]->( 5 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(11){ d123(bb 0 insn -1) }u47(13){ d145(bb 0 insn -1) }u48(25){ d383(bb 0 insn -1) }u49(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; live  gen 	 24 [cc] 164
;; live  kill	
;; rd  in  	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(2)
379, 2407
;; rd  kill	(2)
2406, 2407
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; rd  out 	(19)
36, 75, 101, 122, 123, 144, 145, 379, 383, 384, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 71
;;      reg 164 { d2407(bb 6 insn 71) d2406(bb 3 insn 52) }
;;   UD chains for insn luid 1 uid 72
;;      reg 164 { d2407(bb 6 insn 71) }
;;   UD chains for insn luid 2 uid 73
;;      reg 24 { d379(bb 6 insn 72) }

( 6 )->[7]->( 23 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ d123(bb 0 insn -1) }u-1(13){ d145(bb 0 insn -1) }u-1(25){ d383(bb 0 insn -1) }u-1(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
36, 75, 101, 122, 123, 144, 145, 379, 383, 384, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
36, 75, 101, 122, 123, 144, 145, 379, 383, 384, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }

( 2 )->[8]->( 9 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ d123(bb 0 insn -1) }u54(13){ d145(bb 0 insn -1) }u55(25){ d383(bb 0 insn -1) }u56(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 178 179 196
;; live  kill	 14 [lr]
;; rd  in  	(15)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2421, 2422, 2423, 2424, 2425
;; rd  gen 	(4)
377, 2419, 2420, 2427
;; rd  kill	(24)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2419, 2420, 2427
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; rd  out 	(18)
36, 75, 101, 122, 123, 144, 145, 377, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 80
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 1 uid 81
;;      reg 181 { d2421(bb 2 insn 42) }
;;   UD chains for insn luid 2 uid 82
;;      reg 196 { d2427(bb 8 insn 80) }
;;   UD chains for insn luid 3 uid 83
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d33(bb 8 insn 81) }
;;      reg 1 { d72(bb 8 insn 82) }
;;   UD chains for insn luid 4 uid 85
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 5 uid 86
;;      reg 179 { d2420(bb 8 insn 85) }
;;   UD chains for insn luid 6 uid 87
;;      reg 178 { d2419(bb 8 insn 86) }
;;   UD chains for insn luid 7 uid 88
;;      reg 24 { d377(bb 8 insn 87) }

( 8 )->[9]->( 10 23 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ d123(bb 0 insn -1) }u68(13){ d145(bb 0 insn -1) }u69(25){ d383(bb 0 insn -1) }u70(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; live  gen 	 0 [r0] 24 [cc] 172
;; live  kill	 14 [lr]
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 377, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(3)
31, 375, 2413
;; rd  kill	(22)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2413
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; rd  out 	(19)
31, 75, 101, 122, 123, 144, 145, 375, 383, 384, 2413, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 13 { d145(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 91
;;      reg 0 { d31(bb 9 insn 90) }
;;   UD chains for insn luid 2 uid 92
;;      reg 172 { d2413(bb 9 insn 91) }
;;   UD chains for insn luid 3 uid 93
;;      reg 24 { d375(bb 9 insn 92) }

( 9 )->[10]->( 11 23 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ d123(bb 0 insn -1) }u76(13){ d145(bb 0 insn -1) }u77(25){ d383(bb 0 insn -1) }u78(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 177 200 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 171 177 200 248
;; live  kill	 14 [lr]
;; rd  in  	(19)
31, 75, 101, 122, 123, 144, 145, 375, 383, 384, 2413, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(6)
30, 373, 2412, 2418, 2428, 2444
;; rd  kill	(25)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2412, 2418, 2428, 2444
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 183
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; rd  out 	(23)
30, 75, 101, 122, 123, 144, 145, 373, 383, 384, 2412, 2413, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2444
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 288
;;      reg 172 { d2413(bb 9 insn 91) }
;;   UD chains for insn luid 2 uid 289
;;      reg 24 { d347(bb 10 insn 288) }
;;      reg 248 { d2444(bb 10 insn 287) }
;;   UD chains for insn luid 3 uid 108
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 4 uid 109
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 5 uid 110
;;      reg 171 { d2412(bb 10 insn 289) }
;;   UD chains for insn luid 6 uid 111
;;      reg 200 { d2428(bb 10 insn 108) }
;;   UD chains for insn luid 7 uid 112
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d2(bb 10 insn 109) }
;;      reg 1 { d69(bb 10 insn 110) }
;;      reg 2 { d96(bb 10 insn 111) }
;;   UD chains for insn luid 8 uid 113
;;      reg 0 { d30(bb 10 insn 112) }
;;   UD chains for insn luid 9 uid 115
;;      reg 177 { d2418(bb 10 insn 113) }
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 10 uid 116
;;      reg 177 { d2418(bb 10 insn 113) }
;;   UD chains for insn luid 11 uid 117
;;      reg 24 { d373(bb 10 insn 116) }

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u95(11){ d123(bb 0 insn -1) }u96(13){ d145(bb 0 insn -1) }u97(25){ d383(bb 0 insn -1) }u98(26){ d384(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 206
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 176 206
;; live  kill	 14 [lr]
;; rd  in  	(23)
30, 75, 101, 122, 123, 144, 145, 373, 383, 384, 2412, 2413, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2444
;; rd  gen 	(4)
28, 370, 2417, 2429
;; rd  kill	(23)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2417, 2429
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; rd  out 	(25)
28, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 122
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 1 uid 123
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 2 uid 124
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d30(bb 10 insn 112) }
;;      reg 1 { d39(bb 11 insn 122) }
;;      reg 2 { d76(bb 11 insn 123) }
;;   UD chains for insn luid 3 uid 127
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 4 uid 128
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 5 uid 129
;;      reg 206 { d2429(bb 11 insn 127) }
;;   UD chains for insn luid 6 uid 130
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d1(bb 11 insn 128) }
;;      reg 1 { d66(bb 11 insn 129) }
;;   UD chains for insn luid 7 uid 132
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 8 uid 133
;;      reg 176 { d2417(bb 11 insn 132) }
;;   UD chains for insn luid 9 uid 134
;;      reg 24 { d370(bb 11 insn 133) }

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ d123(bb 0 insn -1) }u115(13){ d145(bb 0 insn -1) }u116(25){ d383(bb 0 insn -1) }u117(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(25)
28, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444
;; rd  gen 	(1)
27
;; rd  kill	(21)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
27, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 137
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 1 uid 138
;;      reg 176 { d2417(bb 11 insn 132) }
;;   UD chains for insn luid 2 uid 139
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d0(bb 12 insn 137) }
;;      reg 1 { d64(bb 12 insn 138) }

( 11 12 )->[13]->( 23 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(11){ d123(bb 0 insn -1) }u124(13){ d145(bb 0 insn -1) }u125(25){ d383(bb 0 insn -1) }u126(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 175 209 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 175 209 212
;; live  kill	 14 [lr]
;; rd  in  	(26)
27, 28, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444
;; rd  gen 	(4)
25, 2416, 2430, 2431
;; rd  kill	(24)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2416, 2430, 2431
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
25, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2430, 2431, 2444
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 143
;;      reg 209 { d2430(bb 13 insn 142) }
;;   UD chains for insn luid 3 uid 145
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d26(bb 13 insn 143) }
;;      reg 1 { d62(bb 13 insn 144) }
;;   UD chains for insn luid 4 uid 146
;;      reg 0 { d25(bb 13 insn 145) }
;;   UD chains for insn luid 5 uid 148
;;      reg 175 { d2416(bb 13 insn 146) }
;;      reg 209 { d2430(bb 13 insn 142) }
;;   UD chains for insn luid 7 uid 151
;;      reg 209 { d2430(bb 13 insn 142) }
;;      reg 212 { d2431(bb 13 insn 150) }

( 8 )->[14]->( 15 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u136(11){ d123(bb 0 insn -1) }u137(13){ d145(bb 0 insn -1) }u138(25){ d383(bb 0 insn -1) }u139(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 377, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(1)
367
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; rd  out 	(18)
36, 75, 101, 122, 123, 144, 145, 367, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 156
;;      reg 178 { d2419(bb 8 insn 86) }
;;   UD chains for insn luid 1 uid 157
;;      reg 24 { d367(bb 14 insn 156) }

( 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(11){ d123(bb 0 insn -1) }u143(13){ d145(bb 0 insn -1) }u144(25){ d383(bb 0 insn -1) }u145(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 168 174 219 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 163 168 174 219 222
;; live  kill	 14 [lr]
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 367, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(7)
20, 348, 2405, 2409, 2415, 2432, 2433
;; rd  kill	(26)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2405, 2409, 2415, 2432, 2433
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; rd  out 	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 160
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 1 uid 161
;;      reg 179 { d2420(bb 8 insn 85) }
;;   UD chains for insn luid 2 uid 162
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d10(bb 15 insn 160) }
;;      reg 1 { d60(bb 15 insn 161) }
;;   UD chains for insn luid 3 uid 166
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 4 uid 167
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 5 uid 168
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 6 uid 169
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d9(bb 15 insn 166) }
;;      reg 1 { d43(bb 15 insn 167) }
;;      reg 2 { d79(bb 15 insn 168) }
;;   UD chains for insn luid 7 uid 172
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 8 uid 173
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 9 uid 174
;;      reg 219 { d2432(bb 15 insn 172) }
;;   UD chains for insn luid 10 uid 175
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d8(bb 15 insn 173) }
;;      reg 1 { d57(bb 15 insn 174) }
;;   UD chains for insn luid 11 uid 177
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 12 uid 179
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 14 uid 183
;;      reg 222 { d2433(bb 15 insn 182) }
;;   UD chains for insn luid 16 uid 185
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d21(bb 15 insn 183) }
;;      reg 1 { d55(bb 15 insn 184) }
;;   UD chains for insn luid 17 uid 186
;;      reg 0 { d20(bb 15 insn 185) }
;;   UD chains for insn luid 18 uid 188
;;      reg 168 { d2409(bb 15 insn 186) }
;;   UD chains for insn luid 19 uid 189
;;      reg 24 { d348(bb 15 insn 188) }

( 15 )->[16]->( )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u173(11){ d123(bb 0 insn -1) }u174(13){ d145(bb 0 insn -1) }u175(25){ d383(bb 0 insn -1) }u176(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433
;; rd  gen 	(0)

;; rd  kill	(21)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 193
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d4(bb 16 insn 192) }

( 15 )->[17]->( 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u179(11){ d123(bb 0 insn -1) }u180(13){ d145(bb 0 insn -1) }u181(25){ d383(bb 0 insn -1) }u182(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 169 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; live  gen 	 0 [r0] 1 [r1] 166 169 226
;; live  kill	 14 [lr]
;; rd  in  	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433
;; rd  gen 	(4)
17, 2408, 2410, 2435
;; rd  kill	(25)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2408, 2410, 2434, 2435
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
17, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2408, 2409, 2410, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433, 2435
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 198
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 168 { d2409(bb 15 insn 186) }
;;   UD chains for insn luid 1 uid 199
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 168 { d2409(bb 15 insn 186) }
;;   UD chains for insn luid 2 uid 200
;;      reg 163 { d2405(bb 15 insn 177) }
;;   UD chains for insn luid 4 uid 202
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d18(bb 17 insn 200) }
;;      reg 1 { d52(bb 17 insn 201) }
;;   UD chains for insn luid 5 uid 203
;;      reg 0 { d17(bb 17 insn 202) }
;;   UD chains for insn luid 6 uid 204
;;      reg 166 { d2408(bb 17 insn 203) }
;;      reg 168 { d2409(bb 15 insn 186) }
;;   UD chains for insn luid 7 uid 205
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 174 { d2415(bb 15 insn 179) }
;;   UD chains for insn luid 8 uid 295
;;      reg 183 { d2422(bb 2 insn 35) }
;;   UD chains for insn luid 9 uid 207
;;      reg 226 { d2434(bb 17 insn 295) }
;;      reg 226 { d2434(bb 17 insn 295) }
;;   UD chains for insn luid 10 uid 208
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 169 { d2410(bb 17 insn 207) }
;;   UD chains for insn luid 11 uid 209
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 169 { d2410(bb 17 insn 207) }
;;   UD chains for insn luid 12 uid 212
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 226 { d2435(bb 17 insn 207) }
;;   UD chains for insn luid 13 uid 214
;;      reg 168 { d2409(bb 15 insn 186) }
;;      reg 183 { d2422(bb 2 insn 35) }

( 14 )->[18]->( 21 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u206(11){ d123(bb 0 insn -1) }u207(13){ d145(bb 0 insn -1) }u208(25){ d383(bb 0 insn -1) }u209(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 229 231 232 233 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc] 229 231 232 233 234
;; live  kill	
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 367, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(6)
358, 2436, 2437, 2438, 2439, 2440
;; rd  kill	(5)
2436, 2437, 2438, 2439, 2440
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; rd  out 	(23)
36, 75, 101, 122, 123, 144, 145, 358, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 219
;;      reg 178 { d2419(bb 8 insn 86) }
;;   UD chains for insn luid 1 uid 220
;;      reg 24 { d360(bb 18 insn 219) }
;;   UD chains for insn luid 2 uid 222
;;      reg 178 { d2419(bb 8 insn 86) }
;;   UD chains for insn luid 3 uid 223
;;      reg 24 { d359(bb 18 insn 222) }
;;   UD chains for insn luid 4 uid 225
;;      reg 229 { d2436(bb 18 insn 220) }
;;      reg 231 { d2437(bb 18 insn 223) }
;;   UD chains for insn luid 5 uid 226
;;      reg 232 { d2438(bb 18 insn 225) }
;;   UD chains for insn luid 6 uid 227
;;      reg 233 { d2439(bb 18 insn 226) }
;;   UD chains for insn luid 7 uid 228
;;      reg 234 { d2440(bb 18 insn 227) }
;;   UD chains for insn luid 8 uid 229
;;      reg 24 { d358(bb 18 insn 228) }

( 18 )->[19]->( 21 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ d123(bb 0 insn -1) }u221(13){ d145(bb 0 insn -1) }u222(25){ d383(bb 0 insn -1) }u223(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
36, 75, 101, 122, 123, 144, 145, 358, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(1)
357
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; rd  out 	(23)
36, 75, 101, 122, 123, 144, 145, 357, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 231
;;      reg 178 { d2419(bb 8 insn 86) }
;;   UD chains for insn luid 1 uid 232
;;      reg 24 { d357(bb 19 insn 231) }

( 19 )->[20]->( 21 23 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u226(11){ d123(bb 0 insn -1) }u227(13){ d145(bb 0 insn -1) }u228(25){ d383(bb 0 insn -1) }u229(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
36, 75, 101, 122, 123, 144, 145, 357, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(1)
356
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
36, 75, 101, 122, 123, 144, 145, 356, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 234
;;      reg 178 { d2419(bb 8 insn 86) }
;;   UD chains for insn luid 1 uid 235
;;      reg 24 { d356(bb 20 insn 234) }

( 18 19 20 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(11){ d123(bb 0 insn -1) }u233(13){ d145(bb 0 insn -1) }u234(25){ d383(bb 0 insn -1) }u235(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 173
;; live  kill	 14 [lr]
;; rd  in  	(25)
36, 75, 101, 122, 123, 144, 145, 356, 357, 358, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(3)
16, 354, 2414
;; rd  kill	(22)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2414
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
16, 75, 101, 122, 123, 144, 145, 354, 383, 384, 2414, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 238
;;      reg 13 { d145(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 239
;;      reg 0 { d16(bb 21 insn 238) }
;;   UD chains for insn luid 2 uid 240
;;      reg 173 { d2414(bb 21 insn 239) }
;;   UD chains for insn luid 3 uid 241
;;      reg 24 { d354(bb 21 insn 240) }

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u240(11){ d123(bb 0 insn -1) }u241(13){ d145(bb 0 insn -1) }u242(25){ d383(bb 0 insn -1) }u243(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 235 237 244
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 235 237 244
;; live  kill	 14 [lr]
;; rd  in  	(24)
16, 75, 101, 122, 123, 144, 145, 354, 383, 384, 2414, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(4)
11, 2441, 2442, 2443
;; rd  kill	(24)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2441, 2442, 2443
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
11, 75, 101, 122, 123, 144, 145, 354, 383, 384, 2414, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 245
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 2 uid 247
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 3 uid 248
;;      reg 237 { d2442(bb 22 insn 245) }
;;   UD chains for insn luid 4 uid 249
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 5 uid 250
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d15(bb 22 insn 247) }
;;      reg 1 { d49(bb 22 insn 248) }
;;      reg 2 { d78(bb 22 insn 249) }
;;   UD chains for insn luid 6 uid 254
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 7 uid 255
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 8 uid 256
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 9 uid 257
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d7(bb 22 insn 254) }
;;      reg 1 { d42(bb 22 insn 255) }
;;      reg 2 { d77(bb 22 insn 256) }
;;   UD chains for insn luid 10 uid 260
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 11 uid 261
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 12 uid 262
;;      reg 244 { d2443(bb 22 insn 260) }
;;   UD chains for insn luid 13 uid 263
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d6(bb 22 insn 261) }
;;      reg 1 { d46(bb 22 insn 262) }
;;   UD chains for insn luid 14 uid 266
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 15 uid 267
;;      reg 235 { d2441(bb 22 insn 243) }
;;   UD chains for insn luid 16 uid 268
;;      reg 13 { d145(bb 0 insn -1) }
;;      reg 0 { d5(bb 22 insn 266) }
;;      reg 1 { d41(bb 22 insn 267) }

( 20 13 10 7 9 22 21 17 )->[23]->( 1 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u270(11){ d123(bb 0 insn -1) }u271(13){ d145(bb 0 insn -1) }u272(25){ d383(bb 0 insn -1) }u273(26){ d384(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(61)
11, 16, 17, 25, 30, 31, 36, 75, 101, 122, 123, 144, 145, 348, 354, 356, 370, 373, 375, 379, 383, 384, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445
;; rd  gen 	(1)
3
;; rd  kill	(0)

;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(55)
3, 75, 101, 122, 123, 144, 145, 348, 354, 356, 370, 373, 375, 379, 383, 384, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445
;;  UD chains for artificial uses
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 25 { d383(bb 0 insn -1) }
;;   reg 26 { d384(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 281
;;      reg 0 { d3(bb 23 insn 275) }

( 23 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u275(0){ d3(bb 23 insn 275) }u276(11){ d123(bb 0 insn -1) }u277(13){ d145(bb 0 insn -1) }u278(14){ }u279(25){ d383(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(55)
3, 75, 101, 122, 123, 144, 145, 348, 354, 356, 370, 373, 375, 379, 383, 384, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(55)
3, 75, 101, 122, 123, 144, 145, 348, 354, 356, 370, 373, 375, 379, 383, 384, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445
;;  UD chains for artificial uses
;;   reg 0 { d3(bb 23 insn 275) }
;;   reg 11 { d123(bb 0 insn -1) }
;;   reg 13 { d145(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d383(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 50 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 296 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 69 to worklist
  Adding insn 73 to worklist
  Adding insn 299 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 112 to worklist
  Adding insn 134 to worklist
  Adding insn 130 to worklist
  Adding insn 124 to worklist
  Adding insn 139 to worklist
  Adding insn 301 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 145 to worklist
  Adding insn 157 to worklist
  Adding insn 189 to worklist
  Adding insn 185 to worklist
  Adding insn 175 to worklist
  Adding insn 169 to worklist
  Adding insn 162 to worklist
  Adding insn 193 to worklist
  Adding insn 303 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 229 to worklist
  Adding insn 232 to worklist
  Adding insn 235 to worklist
  Adding insn 241 to worklist
  Adding insn 238 to worklist
  Adding insn 268 to worklist
  Adding insn 263 to worklist
  Adding insn 257 to worklist
  Adding insn 250 to worklist
  Adding insn 281 to worklist
Finished finding needed instructions:
  Adding insn 275 to worklist
Processing use of (reg 0 r0) in insn 281:
Processing use of (reg 13 sp) in insn 250:
Processing use of (reg 0 r0) in insn 250:
  Adding insn 247 to worklist
Processing use of (reg 1 r1) in insn 250:
  Adding insn 248 to worklist
Processing use of (reg 2 r2) in insn 250:
  Adding insn 249 to worklist
Processing use of (reg 235) in insn 249:
  Adding insn 243 to worklist
Processing use of (reg 237 [ mode ]) in insn 248:
  Adding insn 245 to worklist
Processing use of (reg 235) in insn 245:
Processing use of (reg 235) in insn 247:
Processing use of (reg 13 sp) in insn 257:
Processing use of (reg 0 r0) in insn 257:
  Adding insn 254 to worklist
Processing use of (reg 1 r1) in insn 257:
  Adding insn 255 to worklist
Processing use of (reg 2 r2) in insn 257:
  Adding insn 256 to worklist
Processing use of (reg 235) in insn 256:
Processing use of (reg 235) in insn 255:
Processing use of (reg 235) in insn 254:
Processing use of (reg 13 sp) in insn 263:
Processing use of (reg 0 r0) in insn 263:
  Adding insn 261 to worklist
Processing use of (reg 1 r1) in insn 263:
  Adding insn 262 to worklist
Processing use of (reg 244 [ mode ]) in insn 262:
  Adding insn 260 to worklist
Processing use of (reg 235) in insn 260:
Processing use of (reg 235) in insn 261:
Processing use of (reg 13 sp) in insn 268:
Processing use of (reg 0 r0) in insn 268:
  Adding insn 266 to worklist
Processing use of (reg 1 r1) in insn 268:
  Adding insn 267 to worklist
Processing use of (reg 235) in insn 267:
Processing use of (reg 235) in insn 266:
Processing use of (reg 13 sp) in insn 238:
Processing use of (reg 24 cc) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 173 [ D.26023 ]) in insn 240:
  Adding insn 239 to worklist
Processing use of (reg 0 r0) in insn 239:
Processing use of (reg 24 cc) in insn 235:
  Adding insn 234 to worklist
Processing use of (reg 178 [ D.25991 ]) in insn 234:
  Adding insn 86 to worklist
Processing use of (reg 179 [ D.25990 ]) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 183) in insn 85:
  Adding insn 35 to worklist
Processing use of (reg 24 cc) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 178 [ D.25991 ]) in insn 231:
Processing use of (reg 24 cc) in insn 229:
  Adding insn 228 to worklist
Processing use of (reg 234) in insn 228:
  Adding insn 227 to worklist
Processing use of (reg 233) in insn 227:
  Adding insn 226 to worklist
Processing use of (subreg (reg 232) 0) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 229) in insn 225:
  Adding insn 220 to worklist
Processing use of (reg 231) in insn 225:
  Adding insn 223 to worklist
Processing use of (reg 24 cc) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 178 [ D.25991 ]) in insn 222:
Processing use of (reg 24 cc) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 178 [ D.25991 ]) in insn 219:
Processing use of (reg 168 [ ret ]) in insn 198:
  Adding insn 186 to worklist
Processing use of (reg 168 [ ret ]) in insn 198:
Processing use of (reg 0 r0) in insn 186:
Processing use of (reg 168 [ ret ]) in insn 199:
Processing use of (reg 168 [ ret ]) in insn 199:
Processing use of (reg 13 sp) in insn 202:
Processing use of (reg 0 r0) in insn 202:
  Adding insn 200 to worklist
Processing use of (reg 1 r1) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 163 [ collected.860 ]) in insn 200:
  Adding insn 177 to worklist
Processing use of (reg 183) in insn 177:
Processing use of (reg 166 [ D.26491 ]) in insn 204:
  Adding insn 203 to worklist
Processing use of (reg 168 [ ret ]) in insn 204:
Processing use of (reg 0 r0) in insn 203:
Processing use of (reg 168 [ ret ]) in insn 205:
Processing use of (reg 174 [ mtime.383 ]) in insn 205:
  Adding insn 179 to worklist
Processing use of (reg 183) in insn 179:
Processing use of (reg 168 [ ret ]) in insn 208:
Processing use of (reg 169 [ D.26490 ]) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 226) in insn 207:
  Adding insn 295 to worklist
Processing use of (reg 226) in insn 207:
Processing use of (reg 183) in insn 295:
Processing use of (reg 168 [ ret ]) in insn 209:
Processing use of (reg 169 [ D.26490 ]) in insn 209:
Processing use of (reg 168 [ ret ]) in insn 212:
Processing use of (reg 226) in insn 212:
Processing use of (reg 168 [ ret ]) in insn 214:
Processing use of (reg 183) in insn 214:
Processing use of (reg 13 sp) in insn 193:
Processing use of (reg 0 r0) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 13 sp) in insn 162:
Processing use of (reg 0 r0) in insn 162:
  Adding insn 160 to worklist
Processing use of (reg 1 r1) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 179 [ D.25990 ]) in insn 161:
Processing use of (reg 183) in insn 160:
Processing use of (reg 13 sp) in insn 169:
Processing use of (reg 0 r0) in insn 169:
  Adding insn 166 to worklist
Processing use of (reg 1 r1) in insn 169:
  Adding insn 167 to worklist
Processing use of (reg 2 r2) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 183) in insn 168:
Processing use of (reg 183) in insn 167:
Processing use of (reg 183) in insn 166:
Processing use of (reg 13 sp) in insn 175:
Processing use of (reg 0 r0) in insn 175:
  Adding insn 173 to worklist
Processing use of (reg 1 r1) in insn 175:
  Adding insn 174 to worklist
Processing use of (reg 219 [ mode ]) in insn 174:
  Adding insn 172 to worklist
Processing use of (reg 183) in insn 172:
Processing use of (reg 183) in insn 173:
Processing use of (reg 13 sp) in insn 185:
Processing use of (reg 0 r0) in insn 185:
  Adding insn 183 to worklist
Processing use of (reg 1 r1) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 222) in insn 183:
  Adding insn 182 to worklist
Processing use of (reg 24 cc) in insn 189:
  Adding insn 188 to worklist
Processing use of (reg 168 [ ret ]) in insn 188:
Processing use of (reg 24 cc) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 178 [ D.25991 ]) in insn 156:
Processing use of (reg 13 sp) in insn 145:
Processing use of (reg 0 r0) in insn 145:
  Adding insn 143 to worklist
Processing use of (reg 1 r1) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 209) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 175 [ vcollected.382 ]) in insn 148:
  Adding insn 146 to worklist
Processing use of (reg 209) in insn 148:
Processing use of (reg 0 r0) in insn 146:
Processing use of (reg 209) in insn 151:
Processing use of (reg 212) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 13 sp) in insn 139:
Processing use of (reg 0 r0) in insn 139:
  Adding insn 137 to worklist
Processing use of (reg 1 r1) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 176 [ body_len.381 ]) in insn 138:
  Adding insn 132 to worklist
Processing use of (reg 183) in insn 132:
Processing use of (reg 183) in insn 137:
Processing use of (reg 13 sp) in insn 124:
Processing use of (reg 0 r0) in insn 124:
Processing use of (reg 1 r1) in insn 124:
  Adding insn 122 to worklist
Processing use of (reg 2 r2) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 183) in insn 123:
Processing use of (reg 183) in insn 122:
Processing use of (reg 13 sp) in insn 130:
Processing use of (reg 0 r0) in insn 130:
  Adding insn 128 to worklist
Processing use of (reg 1 r1) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 206 [ mode ]) in insn 129:
  Adding insn 127 to worklist
Processing use of (reg 183) in insn 127:
Processing use of (reg 183) in insn 128:
Processing use of (reg 24 cc) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 176 [ body_len.381 ]) in insn 133:
Processing use of (reg 13 sp) in insn 112:
Processing use of (reg 0 r0) in insn 112:
  Adding insn 109 to worklist
Processing use of (reg 1 r1) in insn 112:
  Adding insn 110 to worklist
Processing use of (reg 2 r2) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 200 [ mode ]) in insn 111:
  Adding insn 108 to worklist
Processing use of (reg 183) in insn 108:
Processing use of (reg 171 [ openflags ]) in insn 110:
  Adding insn 289 to worklist
Processing use of (reg 24 cc) in insn 289:
  Adding insn 288 to worklist
Processing use of (reg 248) in insn 289:
  Adding insn 287 to worklist
Processing use of (reg 172 [ ml ]) in insn 288:
  Adding insn 91 to worklist
Processing use of (reg 0 r0) in insn 91:
Processing use of (reg 183) in insn 109:
Processing use of (reg 177 [ wfd.376 ]) in insn 115:
  Adding insn 113 to worklist
Processing use of (reg 183) in insn 115:
Processing use of (reg 0 r0) in insn 113:
Processing use of (reg 24 cc) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 177 [ wfd.376 ]) in insn 116:
Processing use of (reg 13 sp) in insn 90:
Processing use of (reg 24 cc) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 172 [ ml ]) in insn 92:
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 0 r0) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 1 r1) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 196 [ mode ]) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 183) in insn 80:
Processing use of (reg 181 [ collected.373 ]) in insn 81:
  Adding insn 42 to worklist
Processing use of (reg 183) in insn 42:
Processing use of (reg 24 cc) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 178 [ D.25991 ]) in insn 87:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 164 [ ivtmp.840 ]) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 164 [ ivtmp.840 ]) in insn 71:
  Adding insn 52 to worklist
Processing use of (reg 189) in insn 52:
  Adding insn 47 to worklist
Processing use of (reg 0 r0) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 13 sp) in insn 46:
Processing use of (reg 0 r0) in insn 46:
  Adding insn 44 to worklist
Processing use of (reg 1 r1) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 181 [ collected.373 ]) in insn 44:
Processing use of (reg 24 cc) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 170 [ D.26478 ]) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 164 [ ivtmp.840 ]) in insn 66:
Processing use of (reg 249) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 183) in insn 65:
Processing use of (reg 164 [ ivtmp.840 ]) in insn 59:
Processing use of (reg 192 [ <variable>.next ]) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 249) in insn 59:
Processing use of (reg 170 [ D.26478 ]) in insn 58:
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 0 r0) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 170 [ D.26478 ]) in insn 60:
Processing use of (reg 183) in insn 37:
Processing use of (reg 184) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 183) in insn 40:
Processing use of (reg 186) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 189) in insn 49:


do_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={39d,27u} r1={37d,16u} r2={26d,5u} r3={21d} r11={1d,23u} r12={21d} r13={1d,43u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,16u} r25={1d,23u} r26={1d,22u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r163={1d,1u} r164={2d,4u,1d} r166={1d,1u} r168={1d,11u} r169={1d,2u} r170={1d,3u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,2u} r177={1d,2u} r178={1d,6u} r179={1d,2u} r181={1d,2u} r183={1d,25u} r184={1d,1u} r186={1d,1u} r189={1d,2u} r192={1d,1u} r196={1d,1u} r200={1d,1u} r206={1d,1u} r209={1d,3u} r212={1d,1u} r219={1d,1u} r222={1d,1u} r226={2d,3u} r229={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,10u} r237={1d,1u} r244={1d,1u} r248={1d,1u} r249={1d,2u} 
;;    total ref usage 2727{2446d,280u,1e} in 147{127 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1, 24
  dense invalidated 	76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404
0[0,39] 1[39,37] 2[76,26] 3[102,21] 11[123,1] 12[124,21] 13[145,1] 14[146,21] 15[167,20] 16[187,20] 17[207,20] 18[227,20] 19[247,20] 20[267,20] 21[287,20] 22[307,20] 23[327,20] 24[347,36] 25[383,1] 26[384,1] 27[385,20] 28[405,20] 29[425,20] 30[445,20] 31[465,20] 32[485,20] 33[505,20] 34[525,20] 35[545,20] 36[565,20] 37[585,20] 38[605,20] 39[625,20] 40[645,20] 41[665,20] 42[685,20] 43[705,20] 44[725,20] 45[745,20] 46[765,20] 47[785,20] 48[805,20] 49[825,20] 50[845,20] 51[865,20] 52[885,20] 53[905,20] 54[925,20] 55[945,20] 56[965,20] 57[985,20] 58[1005,20] 59[1025,20] 60[1045,20] 61[1065,20] 62[1085,20] 63[1105,20] 64[1125,20] 65[1145,20] 66[1165,20] 67[1185,20] 68[1205,20] 69[1225,20] 70[1245,20] 71[1265,20] 72[1285,20] 73[1305,20] 74[1325,20] 75[1345,20] 76[1365,20] 77[1385,20] 78[1405,20] 79[1425,20] 80[1445,20] 81[1465,20] 82[1485,20] 83[1505,20] 84[1525,20] 85[1545,20] 86[1565,20] 87[1585,20] 88[1605,20] 89[1625,20] 90[1645,20] 91[1665,20] 92[1685,20] 93[1705,20] 94[1725,20] 95[1745,20] 96[1765,20] 97[1785,20] 98[1805,20] 99[1825,20] 100[1845,20] 101[1865,20] 102[1885,20] 103[1905,20] 104[1925,20] 105[1945,20] 106[1965,20] 107[1985,20] 108[2005,20] 109[2025,20] 110[2045,20] 111[2065,20] 112[2085,20] 113[2105,20] 114[2125,20] 115[2145,20] 116[2165,20] 117[2185,20] 118[2205,20] 119[2225,20] 120[2245,20] 121[2265,20] 122[2285,20] 123[2305,20] 124[2325,20] 125[2345,20] 126[2365,20] 127[2385,20] 163[2405,1] 164[2406,2] 166[2408,1] 168[2409,1] 169[2410,1] 170[2411,1] 171[2412,1] 172[2413,1] 173[2414,1] 174[2415,1] 175[2416,1] 176[2417,1] 177[2418,1] 178[2419,1] 179[2420,1] 181[2421,1] 183[2422,1] 184[2423,1] 186[2424,1] 189[2425,1] 192[2426,1] 196[2427,1] 200[2428,1] 206[2429,1] 209[2430,1] 212[2431,1] 219[2432,1] 222[2433,1] 226[2434,2] 229[2436,1] 231[2437,1] 232[2438,1] 233[2439,1] 234[2440,1] 235[2441,1] 237[2442,1] 244[2443,1] 248[2444,1] 249[2445,1] 
(note 31 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 183 184 186 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 181 183 184 186 189
;; live  kill	 14 [lr]
;; rd  in  	(10)
38, 75, 101, 122, 123, 144, 145, 166, 383, 384
;; rd  gen 	(7)
36, 349, 2421, 2422, 2423, 2424, 2425
;; rd  kill	(26)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2421, 2422, 2423, 2424, 2425

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 31 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 32 33 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 36 2 init/initramfs.c:295 (set (reg/f:SI 183)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 init/initramfs.c:295 (set (reg:SI 184)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 39 2 init/initramfs.c:295 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 39 37 40 2 init/initramfs.c:296 (set (reg:SI 186)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 42 2 init/initramfs.c:296 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_EQUAL (const_int 7 [0x7])
            (nil))))

(insn 42 40 44 2 init/initramfs.c:297 (set (reg/f:SI 181 [ collected.373 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 44 42 45 2 init/initramfs.c:297 (set (reg:SI 0 r0)
        (reg/f:SI 181 [ collected.373 ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 init/initramfs.c:297 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114dc5a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114dc5a0>)
        (nil)))

(call_insn/i 46 45 47 2 init/initramfs.c:297 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 47 46 49 2 init/initramfs.c:297 (set (reg:SI 189)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 49 47 50 2 init/initramfs.c:297 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 189)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 2 init/initramfs.c:297 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181 183 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183 189
;; rd  out 	(15)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2421, 2422, 2423, 2424, 2425


;; Succ edge  3 [66.7%]  (fallthru)
;; Succ edge  8 [33.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 183 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 189
;; lr  def 	 164 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 189
;; live  gen 	 164 249
;; live  kill	
;; rd  in  	(15)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2421, 2422, 2423, 2424, 2425
;; rd  gen 	(2)
2406, 2445
;; rd  kill	(3)
2406, 2407, 2445

;; Pred edge  2 [66.7%]  (fallthru)
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 65 3 init/initramfs.c:297 (set (reg:SI 164 [ ivtmp.840 ])
        (reg:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 65 52 296 3 init/initramfs.c:69 discrim 1 (set (reg/f:SI 249)
        (plus:SI (reg/f:SI 183)
            (const_int 220 [0xdc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 220 [0xdc])))
            (nil))))

(jump_insn 296 65 297 3 (set (pc)
        (label_ref 294)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; rd  out 	(17)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2406, 2421, 2422, 2423, 2424, 2425, 2445


;; Succ edge  5 [100.0%] 

(barrier 297 296 67)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; live  gen 	 0 [r0] 192
;; live  kill	 14 [lr]
;; rd  in  	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(1)
2426
;; rd  kill	(22)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2426

;; Pred edge  5 [91.0%] 
(code_label 67 297 55 4 108 "" [1 uses])

(note 55 67 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 58 55 59 4 init/initramfs.c:71 (set (reg/f:SI 192 [ <variable>.next ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 170 [ D.26478 ])
                (const_int 16 [0x10])) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 4 init/initramfs.c:71 (set (mem/f:SI (plus:SI (reg/f:SI 249)
                (reg:SI 164 [ ivtmp.840 ])) [0 S4 A32])
        (reg/f:SI 192 [ <variable>.next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 192 [ <variable>.next ])
        (nil)))

(insn 60 59 61 4 init/initramfs.c:72 (set (reg:SI 0 r0)
        (reg/f:SI 170 [ D.26478 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170 [ D.26478 ])
        (nil)))

(call_insn 61 60 294 4 init/initramfs.c:72 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; rd  out 	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; live  gen 	 24 [cc] 170
;; live  kill	
;; rd  in  	(22)
36, 75, 101, 122, 123, 144, 145, 349, 379, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(2)
380, 2411
;; rd  kill	(1)
2411

;; Pred edge  6 [96.9%]  (dfs_back)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 294 61 293 5 121 "" [2 uses])

(note 293 294 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 293 68 5 init/initramfs.c:69 discrim 1 (set (reg/f:SI 170 [ D.26478 ])
        (mem/f:SI (plus:SI (reg/f:SI 249)
                (reg:SI 164 [ ivtmp.840 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f:SI (plus:SI (reg:SI 164 [ ivtmp.840 ])
                (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 220 [0xdc])))) [0 S4 A32])
        (nil)))

(insn 68 66 69 5 init/initramfs.c:69 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 170 [ D.26478 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 70 5 init/initramfs.c:69 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; rd  out 	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; live  gen 	 24 [cc] 164
;; live  kill	
;; rd  in  	(20)
36, 75, 101, 122, 123, 144, 145, 380, 383, 384, 2406, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(2)
379, 2407
;; rd  kill	(2)
2406, 2407

;; Pred edge  5 [9.0%]  (fallthru)
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 init/initramfs.c:69 discrim 1 (set (reg:SI 164 [ ivtmp.840 ])
        (plus:SI (reg:SI 164 [ ivtmp.840 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 72 71 73 6 init/initramfs.c:68 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ ivtmp.840 ])
            (const_int 128 [0x80]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 73 72 298 6 init/initramfs.c:68 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 294)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
            (nil))))
;; End of basic block 6 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; rd  out 	(19)
36, 75, 101, 122, 123, 144, 145, 379, 383, 384, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445


;; Succ edge  5 [96.9%]  (dfs_back)
;; Succ edge  7 [3.1%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
36, 75, 101, 122, 123, 144, 145, 379, 383, 384, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [3.1%]  (fallthru)
(note 298 73 299 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 299 298 300 7 (set (pc)
        (label_ref 269)) -1 (nil))
;; End of basic block 7 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
36, 75, 101, 122, 123, 144, 145, 379, 383, 384, 2407, 2411, 2421, 2422, 2423, 2424, 2425, 2426, 2445


;; Succ edge  23 [100.0%]  (loop_exit)

(barrier 300 299 77)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 178 179 196
;; live  kill	 14 [lr]
;; rd  in  	(15)
36, 75, 101, 122, 123, 144, 145, 349, 383, 384, 2421, 2422, 2423, 2424, 2425
;; rd  gen 	(4)
377, 2419, 2420, 2427
;; rd  kill	(24)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2419, 2420, 2427

;; Pred edge  2 [33.3%] 
(code_label 77 300 78 8 106 "" [1 uses])

(note 78 77 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 80 78 81 8 init/initramfs.c:301 (set (reg:SI 196 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 81 80 82 8 init/initramfs.c:301 (set (reg:SI 0 r0)
        (reg/f:SI 181 [ collected.373 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 181 [ collected.373 ])
        (nil)))

(insn 82 81 83 8 init/initramfs.c:301 (set (reg:SI 1 r1)
        (reg:SI 196 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 196 [ mode ])
        (nil)))

(call_insn 83 82 85 8 init/initramfs.c:301 (parallel [
            (call (mem:SI (symbol_ref:SI ("clean_path") [flags 0x3] <function_decl 0x114ad300 clean_path>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 85 83 86 8 init/initramfs.c:302 (set (reg:SI 179 [ D.25990 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 86 85 87 8 init/initramfs.c:302 (set (reg:SI 178 [ D.25991 ])
        (and:SI (reg:SI 179 [ D.25990 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 88 8 init/initramfs.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 32768 [0x8000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 8 init/initramfs.c:302 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; rd  out 	(18)
36, 75, 101, 122, 123, 144, 145, 377, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; live  gen 	 0 [r0] 24 [cc] 172
;; live  kill	 14 [lr]
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 377, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(3)
31, 375, 2413
;; rd  kill	(22)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2413

;; Pred edge  8 [0.0%]  (fallthru)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(call_insn 90 89 91 9 init/initramfs.c:303 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("maybe_link") [flags 0x3] <function_decl 0x114ad200 maybe_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 91 90 92 9 init/initramfs.c:303 (set (reg/v:SI 172 [ ml ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 92 91 93 9 init/initramfs.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 172 [ ml ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 94 9 init/initramfs.c:304 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1912 [0x778])
            (nil))))
;; End of basic block 9 -> ( 10 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; rd  out 	(19)
31, 75, 101, 122, 123, 144, 145, 375, 383, 384, 2413, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427


;; Succ edge  10 [80.9%]  (fallthru)
;; Succ edge  23 [19.1%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 177 200 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 171 177 200 248
;; live  kill	 14 [lr]
;; rd  in  	(19)
31, 75, 101, 122, 123, 144, 145, 375, 383, 384, 2413, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(6)
30, 373, 2412, 2418, 2428, 2444
;; rd  kill	(25)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2412, 2418, 2428, 2444

;; Pred edge  9 [80.9%]  (fallthru)
(note 94 93 287 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 287 94 288 10 init/initramfs.c:307 (set (reg:SI 248)
        (const_int 577 [0x241])) 167 {*arm_movsi_insn} (nil))

(insn 288 287 289 10 init/initramfs.c:307 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 172 [ ml ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 172 [ ml ])
        (nil)))

(insn 289 288 108 10 init/initramfs.c:307 (set (reg/v:SI 171 [ openflags ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 65 [0x41])
            (reg:SI 248))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 108 289 109 10 init/initramfs.c:308 (set (reg:SI 200 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 109 108 110 10 init/initramfs.c:308 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 110 109 111 10 init/initramfs.c:308 (set (reg:SI 1 r1)
        (reg/v:SI 171 [ openflags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 171 [ openflags ])
        (nil)))

(insn 111 110 112 10 init/initramfs.c:308 (set (reg:SI 2 r2)
        (reg:SI 200 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 200 [ mode ])
        (nil)))

(call_insn 112 111 113 10 init/initramfs.c:308 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_open") [flags 0x41] <function_decl 0x1145e880 sys_open>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 113 112 115 10 init/initramfs.c:308 (set (reg:SI 177 [ wfd.376 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 115 113 116 10 init/initramfs.c:308 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])
        (reg:SI 177 [ wfd.376 ])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 10 init/initramfs.c:310 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177 [ wfd.376 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177 [ wfd.376 ])
        (nil)))

(jump_insn 117 116 118 10 init/initramfs.c:310 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3666 [0xe52])
            (nil))))
;; End of basic block 10 -> ( 11 23)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 183
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; rd  out 	(23)
30, 75, 101, 122, 123, 144, 145, 373, 383, 384, 2412, 2413, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2444


;; Succ edge  11 [63.3%]  (fallthru)
;; Succ edge  23 [36.7%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176 206
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 176 206
;; live  kill	 14 [lr]
;; rd  in  	(23)
30, 75, 101, 122, 123, 144, 145, 373, 383, 384, 2412, 2413, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2444
;; rd  gen 	(4)
28, 370, 2417, 2429
;; rd  kill	(23)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2417, 2429

;; Pred edge  10 [63.3%]  (fallthru)
(note 118 117 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 122 118 123 11 init/initramfs.c:311 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 100 [0x64]))) [0 uid+0 S4 A32])
        (nil)))

(insn 123 122 124 11 init/initramfs.c:311 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 104 [0x68]))) [0 gid+0 S4 A32])
        (nil)))

(call_insn 124 123 127 11 init/initramfs.c:311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fchown") [flags 0x41] <function_decl 0x1145eb80 sys_fchown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 127 124 128 11 init/initramfs.c:312 (set (reg:SI 206 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 128 127 129 11 init/initramfs.c:312 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(insn 129 128 130 11 init/initramfs.c:312 (set (reg:SI 1 r1)
        (reg:SI 206 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 206 [ mode ])
        (nil)))

(call_insn 130 129 132 11 init/initramfs.c:312 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fchmod") [flags 0x41] <function_decl 0x11458e80 sys_fchmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 132 130 133 11 init/initramfs.c:313 (set (reg:SI 176 [ body_len.381 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 133 132 134 11 init/initramfs.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ body_len.381 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 134 133 135 11 init/initramfs.c:313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; rd  out 	(25)
28, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444


;; Succ edge  12 [39.0%]  (fallthru)
;; Succ edge  13 [61.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(25)
28, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444
;; rd  gen 	(1)
27
;; rd  kill	(21)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166

;; Pred edge  11 [39.0%]  (fallthru)
(note 135 134 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 137 135 138 12 init/initramfs.c:314 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
            (nil))))

(insn 138 137 139 12 init/initramfs.c:314 (set (reg:SI 1 r1)
        (reg:SI 176 [ body_len.381 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ body_len.381 ])
        (nil)))

(call_insn 139 138 140 12 init/initramfs.c:314 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_ftruncate") [flags 0x41] <function_decl 0x11452500 sys_ftruncate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
27, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 175 209 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 175 209 212
;; live  kill	 14 [lr]
;; rd  in  	(26)
27, 28, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2444
;; rd  gen 	(4)
25, 2416, 2430, 2431
;; rd  kill	(24)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2416, 2430, 2431

;; Pred edge  11 [61.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 140 139 141 13 113 "" [1 uses])

(note 141 140 142 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 143 13 init/initramfs.c:315 (set (reg/f:SI 209)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 13 init/initramfs.c:315 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 144 143 145 13 init/initramfs.c:315 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 145 144 146 13 init/initramfs.c:315 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrdup") [flags 0x41] <function_decl 0x10b92580 kstrdup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 146 145 148 13 init/initramfs.c:315 (set (reg/f:SI 175 [ vcollected.382 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 148 146 150 13 init/initramfs.c:315 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])
        (reg/f:SI 175 [ vcollected.382 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 175 [ vcollected.382 ])
        (nil)))

(insn 150 148 151 13 init/initramfs.c:316 (set (reg:SI 212)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 301 13 init/initramfs.c:316 (set (mem/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 212)
        (expr_list:REG_DEAD (reg/f:SI 209)
            (expr_list:REG_EQUAL (const_int 5 [0x5])
                (nil)))))

(jump_insn 301 151 302 13 (set (pc)
        (label_ref 269)) -1 (nil))
;; End of basic block 13 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
25, 75, 101, 122, 123, 144, 145, 370, 383, 384, 2412, 2413, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2428, 2429, 2430, 2431, 2444


;; Succ edge  23 [100.0%] 

(barrier 302 301 154)

;; Start of basic block ( 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 377, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(1)
367
;; rd  kill	(0)


;; Pred edge  8 [100.0%] 
(code_label 154 302 155 14 110 "" [1 uses])

(note 155 154 156 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 14 init/initramfs.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 14 init/initramfs.c:319 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 14 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; rd  out 	(18)
36, 75, 101, 122, 123, 144, 145, 367, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427


;; Succ edge  15 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 168 174 219 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 163 168 174 219 222
;; live  kill	 14 [lr]
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 367, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(7)
20, 348, 2405, 2409, 2415, 2432, 2433
;; rd  kill	(26)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2405, 2409, 2415, 2432, 2433

;; Pred edge  14 [0.0%]  (fallthru)
(note 158 157 160 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 160 158 161 15 init/initramfs.c:320 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 161 160 162 15 init/initramfs.c:320 (set (reg:SI 1 r1)
        (reg:SI 179 [ D.25990 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ D.25990 ])
        (nil)))

(call_insn 162 161 166 15 init/initramfs.c:320 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mkdir") [flags 0x41] <function_decl 0x11464c80 sys_mkdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 166 162 167 15 init/initramfs.c:321 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 167 166 168 15 init/initramfs.c:321 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 100 [0x64]))) [0 uid+0 S4 A32])
        (nil)))

(insn 168 167 169 15 init/initramfs.c:321 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 104 [0x68]))) [0 gid+0 S4 A32])
        (nil)))

(call_insn 169 168 172 15 init/initramfs.c:321 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chown") [flags 0x41] <function_decl 0x1145ea80 sys_chown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 172 169 173 15 init/initramfs.c:322 (set (reg:SI 219 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 173 172 174 15 init/initramfs.c:322 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 174 173 175 15 init/initramfs.c:322 (set (reg:SI 1 r1)
        (reg:SI 219 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 219 [ mode ])
        (nil)))

(call_insn 175 174 177 15 init/initramfs.c:322 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chmod") [flags 0x41] <function_decl 0x11458e00 sys_chmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 177 175 179 15 init/initramfs.c:323 (set (reg/f:SI 163 [ collected.860 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 179 177 180 15 init/initramfs.c:323 (set (reg:SI 174 [ mtime.383 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 108 [0x6c]))) [0 mtime+0 S4 A32])
        (nil)))

(note 180 179 182 15 ("found") NOTE_INSN_DELETED_LABEL 115)

(insn 182 180 183 15 include/linux/slab_def.h:122 (set (reg/f:SI 222)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 183 182 184 15 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 222)
                (const_int 4 [0x4])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 222)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                        (const_int 4 [0x4]))) [0 <variable>.cs_cachep+0 S4 A32])
            (nil))))

(insn 184 183 185 15 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 185 184 186 15 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 186 185 188 15 include/linux/slab_def.h:122 (set (reg/v/f:SI 168 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 188 186 189 15 init/initramfs.c:99 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 168 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 189 188 190 15 init/initramfs.c:99 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; rd  out 	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  17 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433
;; rd  gen 	(0)

;; rd  kill	(21)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166

;; Pred edge  15 [0.0%]  (fallthru)
(note 190 189 192 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 192 190 193 16 init/initramfs.c:100 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11532800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11532800>)
        (nil)))

(call_insn 193 192 194 16 init/initramfs.c:100 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 16 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433



(barrier 194 193 195)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 169 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; live  gen 	 0 [r0] 1 [r1] 166 169 226
;; live  kill	 14 [lr]
;; rd  in  	(23)
20, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2409, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433
;; rd  gen 	(4)
17, 2408, 2410, 2435
;; rd  kill	(25)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2408, 2410, 2434, 2435

;; Pred edge  15 [100.0%] 
(code_label 195 194 196 17 116 "" [1 uses])

(note 196 195 198 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 198 196 199 17 include/linux/list.h:26 (set (mem/s/f/j:SI (reg/v/f:SI 168 [ ret ]) [0 <variable>.list.next+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 17 include/linux/list.h:27 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 200 199 201 17 init/initramfs.c:102 (set (reg:SI 0 r0)
        (reg/f:SI 163 [ collected.860 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ collected.860 ])
        (nil)))

(insn 201 200 202 17 init/initramfs.c:102 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 202 201 203 17 init/initramfs.c:102 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrdup") [flags 0x41] <function_decl 0x10b92580 kstrdup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 203 202 204 17 init/initramfs.c:102 (set (reg/f:SI 166 [ D.26491 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 204 203 205 17 init/initramfs.c:102 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 166 [ D.26491 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166 [ D.26491 ])
        (nil)))

(insn 205 204 295 17 init/initramfs.c:103 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 12 [0xc])) [0 <variable>.mtime+0 S4 A32])
        (reg:SI 174 [ mtime.383 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ mtime.383 ])
        (nil)))

(insn 295 205 207 17 include/linux/list.h:62 (set (reg/f:SI 226)
        (reg/f:SI 183)) -1 (nil))

(insn 207 295 208 17 include/linux/list.h:62 (set (reg/f:SI 169 [ D.26490 ])
        (mem/s/f/j/c:SI (pre_modify:SI (reg/f:SI 226)
                (plus:SI (reg/f:SI 226)
                    (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 226)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])
            (nil))))

(insn 208 207 209 17 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 169 [ D.26490 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 209 208 212 17 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 168 [ ret ]) [0 <variable>.list.next+0 S4 A32])
        (reg/f:SI 169 [ D.26490 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169 [ D.26490 ])
        (nil)))

(insn 212 209 214 17 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/f:SI 226)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 226)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 184 [0xb8])))
            (nil))))

(insn 214 212 303 17 include/linux/list.h:44 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 184 [0xb8])) [0 dir_list.next+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_DEAD (reg/v/f:SI 168 [ ret ])
            (nil))))

(jump_insn 303 214 304 17 (set (pc)
        (label_ref 269)) -1 (nil))
;; End of basic block 17 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
17, 75, 101, 122, 123, 144, 145, 348, 383, 384, 2405, 2408, 2409, 2410, 2415, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2432, 2433, 2435


;; Succ edge  23 [100.0%] 

(barrier 304 303 217)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc] 229 231 232 233 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc] 229 231 232 233 234
;; live  kill	
;; rd  in  	(18)
36, 75, 101, 122, 123, 144, 145, 367, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427
;; rd  gen 	(6)
358, 2436, 2437, 2438, 2439, 2440
;; rd  kill	(5)
2436, 2437, 2438, 2439, 2440

;; Pred edge  14 [100.0%] 
(code_label 217 304 218 18 114 "" [1 uses])

(note 218 217 219 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 220 18 init/initramfs.c:324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 8192 [0x2000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 220 219 222 18 init/initramfs.c:324 (set (reg:SI 229)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 222 220 223 18 init/initramfs.c:324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 24576 [0x6000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 223 222 225 18 init/initramfs.c:324 (set (reg:SI 231)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 225 223 226 18 init/initramfs.c:324 (set (reg:SI 232)
        (ior:SI (reg:SI 229)
            (reg:SI 231))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg:SI 229)
            (nil))))

(insn 226 225 227 18 init/initramfs.c:324 (set (reg:QI 233)
        (subreg:QI (reg:SI 232) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 232)
        (nil)))

(insn 227 226 228 18 init/initramfs.c:324 (set (reg:SI 234)
        (zero_extend:SI (reg:QI 233))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 233)
        (nil)))

(insn 228 227 229 18 init/initramfs.c:324 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 234)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(jump_insn 229 228 230 18 init/initramfs.c:324 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; rd  out 	(23)
36, 75, 101, 122, 123, 144, 145, 358, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440


;; Succ edge  21 [0.0%] 
;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
36, 75, 101, 122, 123, 144, 145, 358, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(1)
357
;; rd  kill	(0)


;; Pred edge  18 [100.0%]  (fallthru)
(note 230 229 231 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 19 init/initramfs.c:324 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 232 231 233 19 init/initramfs.c:324 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; rd  out 	(23)
36, 75, 101, 122, 123, 144, 145, 357, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440


;; Succ edge  21 [0.0%] 
;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
36, 75, 101, 122, 123, 144, 145, 357, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(1)
356
;; rd  kill	(0)


;; Pred edge  19 [100.0%]  (fallthru)
(note 233 232 234 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 235 20 init/initramfs.c:324 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 49152 [0xc000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ D.25991 ])
        (nil)))

(jump_insn 235 234 236 20 init/initramfs.c:324 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 20 -> ( 21 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
36, 75, 101, 122, 123, 144, 145, 356, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440


;; Succ edge  21 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 18 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 173
;; live  kill	 14 [lr]
;; rd  in  	(25)
36, 75, 101, 122, 123, 144, 145, 356, 357, 358, 383, 384, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(3)
16, 354, 2414
;; rd  kill	(22)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2414

;; Pred edge  18 [0.0%] 
;; Pred edge  19 [0.0%] 
;; Pred edge  20 [0.0%]  (fallthru)
(code_label 236 235 237 21 117 "" [2 uses])

(note 237 236 238 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(call_insn 238 237 239 21 init/initramfs.c:326 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("maybe_link") [flags 0x3] <function_decl 0x114ad200 maybe_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 239 238 240 21 init/initramfs.c:326 (set (reg:SI 173 [ D.26023 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 240 239 241 21 init/initramfs.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173 [ D.26023 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173 [ D.26023 ])
        (nil)))

(jump_insn 241 240 242 21 init/initramfs.c:326 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
16, 75, 101, 122, 123, 144, 145, 354, 383, 384, 2414, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440


;; Succ edge  22 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 235 237 244
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 235 237 244
;; live  kill	 14 [lr]
;; rd  in  	(24)
16, 75, 101, 122, 123, 144, 145, 354, 383, 384, 2414, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440
;; rd  gen 	(4)
11, 2441, 2442, 2443
;; rd  kill	(24)
146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 2441, 2442, 2443

;; Pred edge  21 [0.0%]  (fallthru)
(note 242 241 243 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 245 22 init/initramfs.c:327 (set (reg/f:SI 235)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 245 243 247 22 init/initramfs.c:327 (set (reg:SI 237 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 235)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 247 245 248 22 init/initramfs.c:327 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 248 247 249 22 init/initramfs.c:327 (set (reg:SI 1 r1)
        (reg:SI 237 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 237 [ mode ])
        (nil)))

(insn 249 248 250 22 init/initramfs.c:327 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 348 [0x15c])) [0 rdev+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 348 [0x15c]))) [0 rdev+0 S4 A32])
        (nil)))

(call_insn 250 249 254 22 init/initramfs.c:327 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x11458b80 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 254 250 255 22 init/initramfs.c:328 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 255 254 256 22 init/initramfs.c:328 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 100 [0x64]))) [0 uid+0 S4 A32])
        (nil)))

(insn 256 255 257 22 init/initramfs.c:328 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 104 [0x68]))) [0 gid+0 S4 A32])
        (nil)))

(call_insn 257 256 260 22 init/initramfs.c:328 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chown") [flags 0x41] <function_decl 0x1145ea80 sys_chown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 260 257 261 22 init/initramfs.c:329 (set (reg:SI 244 [ mode ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 235)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 261 260 262 22 init/initramfs.c:329 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 262 261 263 22 init/initramfs.c:329 (set (reg:SI 1 r1)
        (reg:SI 244 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 244 [ mode ])
        (nil)))

(call_insn 263 262 266 22 init/initramfs.c:329 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chmod") [flags 0x41] <function_decl 0x11458e00 sys_chmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 266 263 267 22 init/initramfs.c:330 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 267 266 268 22 init/initramfs.c:330 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 235)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 108 [0x6c]))) [0 mtime+0 S4 A32])
            (nil))))

(call_insn 268 267 269 22 init/initramfs.c:330 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
11, 75, 101, 122, 123, 144, 145, 354, 383, 384, 2414, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2427, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 20 13 10 7 9 22 21 17) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(61)
11, 16, 17, 25, 30, 31, 36, 75, 101, 122, 123, 144, 145, 348, 354, 356, 370, 373, 375, 379, 383, 384, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445
;; rd  gen 	(1)
3
;; rd  kill	(0)


;; Pred edge  20 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  10 [36.7%] 
;; Pred edge  7 [100.0%]  (loop_exit)
;; Pred edge  9 [19.1%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  21 [100.0%] 
;; Pred edge  17 [100.0%] 
(code_label 269 268 270 23 109 "" [7 uses])

(note 270 269 275 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 275 270 281 23 init/initramfs.c:334 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 281 275 0 23 init/initramfs.c:334 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 23 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(55)
3, 75, 101, 122, 123, 144, 145, 348, 354, 356, 370, 373, 375, 379, 383, 384, 2405, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_collect (do_collect)[0:1322] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


do_collect

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,6u} r134={1d,1u} r135={2d,1u} r136={1d,3u} r138={1d,16u} r140={1d,1u} r142={1d,1u} r144={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r171={1d,1u} 
;;    total ref usage 222{154d,68u,0e} in 35{34 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,4] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,2] 136[138,1] 138[139,1] 140[140,1] 142[141,1] 144[142,1] 151[143,1] 152[144,1] 154[145,1] 156[146,1] 157[147,1] 160[148,1] 161[149,1] 164[150,1] 165[151,1] 167[152,1] 171[153,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d31(25){ }d32(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d31(bb 0 insn -1) }u3(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138 140 142 144 151 152 154 156 157 160 161 164 165 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 138 140 142 144 151 152 154 156 157 160 161 164 165 167
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32
;; rd  gen 	(19)
2, 27, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  kill	(27)
0, 1, 2, 3, 16, 17, 27, 28, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(27)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d135(bb 2 insn 6) }
;;      reg 140 { d140(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 11
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 5 uid 13
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 17
;;      reg 142 { d141(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 18
;;      reg 144 { d142(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 19
;;      reg 133 { d134(bb 2 insn 9) }
;;   UD chains for insn luid 9 uid 20
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 17) }
;;      reg 1 { d4(bb 2 insn 18) }
;;      reg 2 { d7(bb 2 insn 19) }
;;   UD chains for insn luid 10 uid 24
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 11 uid 25
;;      reg 133 { d134(bb 2 insn 9) }
;;      reg 151 { d143(bb 2 insn 24) }
;;   UD chains for insn luid 12 uid 26
;;      reg 138 { d139(bb 2 insn 5) }
;;      reg 152 { d144(bb 2 insn 25) }
;;   UD chains for insn luid 13 uid 28
;;      reg 133 { d134(bb 2 insn 9) }
;;   UD chains for insn luid 14 uid 30
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 15 uid 31
;;      reg 154 { d145(bb 2 insn 28) }
;;      reg 156 { d146(bb 2 insn 30) }
;;   UD chains for insn luid 16 uid 32
;;      reg 138 { d139(bb 2 insn 5) }
;;      reg 157 { d147(bb 2 insn 31) }
;;   UD chains for insn luid 17 uid 35
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 18 uid 36
;;      reg 133 { d134(bb 2 insn 9) }
;;      reg 160 { d148(bb 2 insn 35) }
;;   UD chains for insn luid 19 uid 37
;;      reg 138 { d139(bb 2 insn 5) }
;;      reg 161 { d149(bb 2 insn 36) }
;;   UD chains for insn luid 20 uid 40
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 21 uid 41
;;      reg 133 { d134(bb 2 insn 9) }
;;      reg 164 { d150(bb 2 insn 40) }
;;   UD chains for insn luid 22 uid 42
;;      reg 138 { d139(bb 2 insn 5) }
;;      reg 165 { d151(bb 2 insn 41) }
;;   UD chains for insn luid 23 uid 44
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 24 uid 45
;;      reg 133 { d134(bb 2 insn 9) }
;;      reg 167 { d152(bb 2 insn 44) }
;;   UD chains for insn luid 25 uid 47
;;      reg 136 { d138(bb 2 insn 45) }
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 26 uid 48
;;      reg 136 { d138(bb 2 insn 45) }
;;   UD chains for insn luid 27 uid 49
;;      reg 24 { d27(bb 2 insn 48) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u45(11){ d12(bb 0 insn -1) }u46(13){ d15(bb 0 insn -1) }u47(25){ d31(bb 0 insn -1) }u48(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(27)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(1)
137
;; rd  kill	(2)
136, 137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(28)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ d12(bb 0 insn -1) }u50(13){ d15(bb 0 insn -1) }u51(25){ d31(bb 0 insn -1) }u52(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 135 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 135 171
;; live  kill	
;; rd  in  	(27)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(2)
136, 153
;; rd  kill	(3)
136, 137, 153
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(29)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 138 { d139(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 59
;;      reg 138 { d139(bb 2 insn 5) }
;;      reg 171 { d153(bb 4 insn 58) }
;;   UD chains for insn luid 2 uid 60
;;      reg 136 { d138(bb 2 insn 45) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u57(11){ d12(bb 0 insn -1) }u58(13){ d15(bb 0 insn -1) }u59(25){ d31(bb 0 insn -1) }u60(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 67
;;      reg 135 { d137(bb 3 insn 51) d136(bb 4 insn 60) }
;;   UD chains for insn luid 1 uid 73
;;      reg 0 { d0(bb 5 insn 67) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u63(0){ d0(bb 5 insn 67) }u64(11){ d12(bb 0 insn -1) }u65(13){ d15(bb 0 insn -1) }u66(14){ }u67(25){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
0, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(30)
0, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 67) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d31(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 37 to worklist
  Adding insn 32 to worklist
  Adding insn 26 to worklist
  Adding insn 20 to worklist
  Adding insn 77 to worklist
  Adding insn 59 to worklist
  Adding insn 73 to worklist
Finished finding needed instructions:
  Adding insn 67 to worklist
Processing use of (reg 135 [ D.25859 ]) in insn 67:
  Adding insn 51 to worklist
  Adding insn 60 to worklist
Processing use of (reg 136 [ remains.342 ]) in insn 60:
  Adding insn 45 to worklist
Processing use of (reg 133 [ n.896 ]) in insn 45:
  Adding insn 9 to worklist
Processing use of (reg 167 [ remains ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 138) in insn 44:
  Adding insn 5 to worklist
Processing use of (reg 134 [ n ]) in insn 9:
  Adding insn 6 to worklist
Processing use of (reg 140 [ count ]) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
Processing use of (reg 138) in insn 6:
Processing use of (reg 0 r0) in insn 73:
Processing use of (reg 138) in insn 59:
Processing use of (reg 171 [ next_state ]) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 138) in insn 58:
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 0 r0) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 1 r1) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 2 r2) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 133 [ n.896 ]) in insn 19:
Processing use of (reg 144 [ victim ]) in insn 18:
  Adding insn 13 to worklist
Processing use of (reg 138) in insn 13:
Processing use of (reg 142 [ collect ]) in insn 17:
  Adding insn 11 to worklist
Processing use of (reg 138) in insn 11:
Processing use of (reg 138) in insn 26:
Processing use of (reg 152) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 133 [ n.896 ]) in insn 25:
Processing use of (reg 151 [ victim ]) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 138) in insn 24:
Processing use of (reg 138) in insn 32:
Processing use of (reg 157) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 154 [ n.896 ]) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 156 [ this_header ]) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 138) in insn 30:
Processing use of (reg 133 [ n.896 ]) in insn 28:
Processing use of (reg 138) in insn 37:
Processing use of (reg 161) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 133 [ n.896 ]) in insn 36:
Processing use of (reg 160 [ count ]) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 138) in insn 35:
Processing use of (reg 138) in insn 42:
Processing use of (reg 165) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 133 [ n.896 ]) in insn 41:
Processing use of (reg 164 [ collect ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 138) in insn 40:
Processing use of (reg 136 [ remains.342 ]) in insn 47:
Processing use of (reg 138) in insn 47:
Processing use of (reg 24 cc) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 136 [ remains.342 ]) in insn 48:


do_collect

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,6u} r134={1d,1u} r135={2d,1u} r136={1d,3u} r138={1d,16u} r140={1d,1u} r142={1d,1u} r144={1d,1u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r156={1d,1u} r157={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r171={1d,1u} 
;;    total ref usage 222{154d,68u,0e} in 35{34 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,4] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,2] 136[138,1] 138[139,1] 140[140,1] 142[141,1] 144[142,1] 151[143,1] 152[144,1] 154[145,1] 156[146,1] 157[147,1] 160[148,1] 161[149,1] 164[150,1] 165[151,1] 167[152,1] 171[153,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138 140 142 144 151 152 154 156 157 160 161 164 165 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 138 140 142 144 151 152 154 156 157 160 161 164 165 167
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32
;; rd  gen 	(19)
2, 27, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  kill	(27)
0, 1, 2, 3, 16, 17, 27, 28, 29, 30, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:206 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:206 (set (reg/v:SI 134 [ n ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 40 [0x28]))) [0 remains+0 S4 A32])
        (nil)))

(insn 8 6 9 2 init/initramfs.c:206 (set (reg:SI 140 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 9 8 11 2 init/initramfs.c:206 (parallel [
            (set (reg/v:SI 133 [ n.896 ])
                (umin:SI (reg/v:SI 134 [ n ])
                    (reg:SI 140 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg:SI 140 [ count ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ n ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 11 9 13 2 init/initramfs.c:209 (set (reg/f:SI 142 [ collect ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 36 [0x24]))) [0 collect+0 S4 A32])
        (nil)))

(insn 13 11 17 2 init/initramfs.c:209 (set (reg/f:SI 144 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 17 13 18 2 init/initramfs.c:209 (set (reg:SI 0 r0)
        (reg/f:SI 142 [ collect ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ collect ])
        (nil)))

(insn 18 17 19 2 init/initramfs.c:209 (set (reg:SI 1 r1)
        (reg/f:SI 144 [ victim ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ victim ])
        (nil)))

(insn 19 18 20 2 init/initramfs.c:209 (set (reg:SI 2 r2)
        (reg/v:SI 133 [ n.896 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 24 2 init/initramfs.c:209 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1150cc00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 24 20 25 2 init/initramfs.c:172 (set (reg/f:SI 151 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 25 24 26 2 init/initramfs.c:172 (set (reg:SI 152)
        (plus:SI (reg/f:SI 151 [ victim ])
            (reg/v:SI 133 [ n.896 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 151 [ victim ])
        (nil)))

(insn 26 25 28 2 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 28 26 30 2 init/initramfs.c:173 (set (reg:DI 154 [ n.896 ])
        (zero_extend:DI (reg/v:SI 133 [ n.896 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 30 28 31 2 init/initramfs.c:173 (set (reg:DI 156 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 138)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 31 30 32 2 init/initramfs.c:173 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 154 [ n.896 ])
                    (reg:DI 156 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 156 [ this_header ])
        (expr_list:REG_DEAD (reg:DI 154 [ n.896 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 32 31 35 2 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 138)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 157)
        (nil)))

(insn 35 32 36 2 init/initramfs.c:174 (set (reg:SI 160 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 36 35 37 2 init/initramfs.c:174 (set (reg:SI 161)
        (minus:SI (reg:SI 160 [ count ])
            (reg/v:SI 133 [ n.896 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 160 [ count ])
        (nil)))

(insn 37 36 40 2 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 40 37 41 2 init/initramfs.c:211 (set (reg/f:SI 164 [ collect ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 36 [0x24]))) [0 collect+0 S4 A32])
        (nil)))

(insn 41 40 42 2 init/initramfs.c:211 (set (reg:SI 165)
        (plus:SI (reg/f:SI 164 [ collect ])
            (reg/v:SI 133 [ n.896 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 164 [ collect ])
        (nil)))

(insn 42 41 44 2 init/initramfs.c:211 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 44 42 45 2 init/initramfs.c:212 (set (reg:SI 167 [ remains ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 40 [0x28]))) [0 remains+0 S4 A32])
        (nil)))

(insn 45 44 47 2 init/initramfs.c:212 (set (reg:SI 136 [ remains.342 ])
        (minus:SI (reg:SI 167 [ remains ])
            (reg/v:SI 133 [ n.896 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 167 [ remains ])
        (expr_list:REG_DEAD (reg/v:SI 133 [ n.896 ])
            (nil))))

(insn 47 45 48 2 init/initramfs.c:212 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 136 [ remains.342 ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 init/initramfs.c:212 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ remains.342 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 50 2 init/initramfs.c:212 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(27)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(27)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(1)
137
;; rd  kill	(2)
136, 137

;; Pred edge  2 [39.0%]  (fallthru)
(note 50 49 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 77 3 init/initramfs.c:213 (set (reg:SI 135 [ D.25859 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 77 51 78 3 (set (pc)
        (label_ref 61)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(28)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152


;; Succ edge  5 [100.0%] 

(barrier 78 77 54)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 135 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 135 171
;; live  kill	
;; rd  in  	(27)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(2)
136, 153
;; rd  kill	(3)
136, 137, 153

;; Pred edge  2 [61.0%] 
(code_label 54 78 55 4 127 "" [1 uses])

(note 55 54 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 58 55 59 4 init/initramfs.c:214 (set (reg:SI 171 [ next_state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 44 [0x2c]))) [0 next_state+0 S4 A32])
        (nil)))

(insn 59 58 60 4 init/initramfs.c:214 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 171 [ next_state ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ next_state ])
        (expr_list:REG_DEAD (reg/f:SI 138)
            (nil))))

(insn 60 59 61 4 init/initramfs.c:215 (set (reg:SI 135 [ D.25859 ])
        (reg:SI 136 [ remains.342 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ remains.342 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(29)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
2, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 61 60 62 5 128 "" [1 uses])

(note 62 61 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 67 62 73 5 init/initramfs.c:216 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.25859 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.25859 ])
        (nil)))

(insn 73 67 0 5 init/initramfs.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 6, 9, 11, 12, 14, 15, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_header (do_header)[0:1323] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 40 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 42 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 42 (  1.9)


do_header

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={9d,4u} r2={9d,4u} r3={5d} r11={1d,21u} r12={5d} r13={1d,25u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={18d,11u} r25={1d,36u,2d} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={2d,3u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,5u} r141={1d,3u,1d} r142={1d,3u} r143={1d,1u} r144={2d,2u} r145={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,5u} r150={1d,2u} r152={7d,1u} r154={1d,3u} r156={1d,5u} r158={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,3u} r166={1d,1u} r168={1d,1u} r178={1d,20u} r179={1d,1u} r180={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r192={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r208={1d,1u} r209={1d,1u} r211={1d,1u} r213={1d,1u,1d} r214={1d,1u} r215={1d,1u} r216={1d,1u,1d} r217={1d,1u} r218={1d,1u} r220={1d,1u} r221={1d,1u,1d} r222={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r232={1d,1u} r233={1d,13u} r238={1d,1u} r241={1d,1u} r243={1d,1u} r248={1d,1u} r250={1d,1u} r252={1d,2u} r256={1d,1u} 
;;    total ref usage 851{582d,263u,6e} in 155{151 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
0[0,10] 1[10,9] 2[19,9] 3[28,5] 11[33,1] 12[34,5] 13[39,1] 14[40,5] 15[45,4] 16[49,4] 17[53,4] 18[57,4] 19[61,4] 20[65,4] 21[69,4] 22[73,4] 23[77,4] 24[81,18] 25[99,1] 26[100,1] 27[101,4] 28[105,4] 29[109,4] 30[113,4] 31[117,4] 32[121,4] 33[125,4] 34[129,4] 35[133,4] 36[137,4] 37[141,4] 38[145,4] 39[149,4] 40[153,4] 41[157,4] 42[161,4] 43[165,4] 44[169,4] 45[173,4] 46[177,4] 47[181,4] 48[185,4] 49[189,4] 50[193,4] 51[197,4] 52[201,4] 53[205,4] 54[209,4] 55[213,4] 56[217,4] 57[221,4] 58[225,4] 59[229,4] 60[233,4] 61[237,4] 62[241,4] 63[245,4] 64[249,4] 65[253,4] 66[257,4] 67[261,4] 68[265,4] 69[269,4] 70[273,4] 71[277,4] 72[281,4] 73[285,4] 74[289,4] 75[293,4] 76[297,4] 77[301,4] 78[305,4] 79[309,4] 80[313,4] 81[317,4] 82[321,4] 83[325,4] 84[329,4] 85[333,4] 86[337,4] 87[341,4] 88[345,4] 89[349,4] 90[353,4] 91[357,4] 92[361,4] 93[365,4] 94[369,4] 95[373,4] 96[377,4] 97[381,4] 98[385,4] 99[389,4] 100[393,4] 101[397,4] 102[401,4] 103[405,4] 104[409,4] 105[413,4] 106[417,4] 107[421,4] 108[425,4] 109[429,4] 110[433,4] 111[437,4] 112[441,4] 113[445,4] 114[449,4] 115[453,4] 116[457,4] 117[461,4] 118[465,4] 119[469,4] 120[473,4] 121[477,4] 122[481,4] 123[485,4] 124[489,4] 125[493,4] 126[497,4] 127[501,4] 135[505,2] 136[507,1] 137[508,1] 138[509,1] 139[510,1] 140[511,1] 141[512,1] 142[513,1] 143[514,1] 144[515,2] 145[517,1] 146[518,1] 147[519,1] 148[520,1] 149[521,1] 150[522,1] 152[523,7] 154[530,1] 156[531,1] 158[532,1] 160[533,1] 162[534,1] 164[535,1] 166[536,1] 168[537,1] 178[538,1] 179[539,1] 180[540,1] 183[541,1] 185[542,1] 187[543,1] 189[544,1] 192[545,1] 194[546,1] 195[547,1] 196[548,1] 197[549,1] 198[550,1] 200[551,1] 201[552,1] 202[553,1] 203[554,1] 204[555,1] 205[556,1] 206[557,1] 208[558,1] 209[559,1] 211[560,1] 213[561,1] 214[562,1] 215[563,1] 216[564,1] 217[565,1] 218[566,1] 220[567,1] 221[568,1] 222[569,1] 227[570,1] 228[571,1] 230[572,1] 232[573,1] 233[574,1] 238[575,1] 241[576,1] 243[577,1] 248[578,1] 250[579,1] 252[580,1] 256[581,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d27(2){ }d32(3){ }d33(11){ }d38(12){ }d39(13){ }d44(14){ }d99(25){ }d100(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 18, 27, 32, 33, 38, 39, 44, 99, 100
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 99, 100
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 18, 27, 32, 33, 38, 39, 44, 99, 100

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d33(bb 0 insn -1) }u1(13){ d39(bb 0 insn -1) }u2(25){ d99(bb 0 insn -1) }u3(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154 156 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 154 156 158
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 27, 32, 33, 38, 39, 44, 99, 100
;; rd  gen 	(5)
7, 82, 530, 531, 532
;; rd  kill	(36)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 530, 531, 532
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; rd  out 	(13)
7, 18, 27, 32, 33, 38, 39, 82, 99, 100, 530, 531, 532
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 156 { d531(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 10
;;      reg 154 { d530(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 13
;;      reg 13 { d39(bb 0 insn -1) }
;;      reg 0 { d8(bb 2 insn 10) }
;;      reg 1 { d12(bb 2 insn 11) }
;;      reg 2 { d26(bb 2 insn 12) }
;;   UD chains for insn luid 6 uid 14
;;      reg 0 { d7(bb 2 insn 13) }
;;   UD chains for insn luid 7 uid 16
;;      reg 158 { d532(bb 2 insn 14) }
;;   UD chains for insn luid 8 uid 17
;;      reg 24 { d82(bb 2 insn 16) }

( 2 )->[3]->( 4 19 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d33(bb 0 insn -1) }u14(13){ d39(bb 0 insn -1) }u15(25){ d99(bb 0 insn -1) }u16(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 160
;; live  kill	
;; rd  in  	(13)
7, 18, 27, 32, 33, 38, 39, 82, 99, 100, 530, 531, 532
;; rd  gen 	(2)
97, 533
;; rd  kill	(19)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 533
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(14)
7, 18, 27, 32, 33, 38, 39, 97, 99, 100, 530, 531, 532, 533
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 156 { d531(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 21
;;      reg 160 { d533(bb 3 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 24 { d97(bb 3 insn 21) }

( 3 )->[4]->( 21 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d33(bb 0 insn -1) }u21(13){ d39(bb 0 insn -1) }u22(25){ d99(bb 0 insn -1) }u23(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 162
;; live  kill	
;; rd  in  	(14)
7, 18, 27, 32, 33, 38, 39, 97, 99, 100, 530, 531, 532, 533
;; rd  gen 	(2)
529, 534
;; rd  kill	(8)
523, 524, 525, 526, 527, 528, 529, 534
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(16)
7, 18, 27, 32, 33, 38, 39, 97, 99, 100, 529, 530, 531, 532, 533, 534
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 26
;;      reg 156 { d531(bb 2 insn 7) }
;;      reg 162 { d534(bb 4 insn 25) }

( 2 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ d33(bb 0 insn -1) }u27(13){ d39(bb 0 insn -1) }u28(25){ d99(bb 0 insn -1) }u29(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 164
;; live  kill	 14 [lr]
;; rd  in  	(13)
7, 18, 27, 32, 33, 38, 39, 82, 99, 100, 530, 531, 532
;; rd  gen 	(3)
5, 81, 535
;; rd  kill	(34)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 535
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 164
;; rd  out 	(14)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 530, 531, 532, 535
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 154 { d530(bb 2 insn 8) }
;;   UD chains for insn luid 3 uid 36
;;      reg 13 { d39(bb 0 insn -1) }
;;      reg 0 { d6(bb 5 insn 33) }
;;      reg 1 { d11(bb 5 insn 34) }
;;      reg 2 { d24(bb 5 insn 35) }
;;   UD chains for insn luid 4 uid 37
;;      reg 0 { d5(bb 5 insn 36) }
;;   UD chains for insn luid 5 uid 39
;;      reg 164 { d535(bb 5 insn 37) }
;;   UD chains for insn luid 6 uid 40
;;      reg 24 { d81(bb 5 insn 39) }

( 5 )->[6]->( 7 19 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ d33(bb 0 insn -1) }u39(13){ d39(bb 0 insn -1) }u40(25){ d99(bb 0 insn -1) }u41(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 166
;; live  kill	
;; rd  in  	(14)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 530, 531, 532, 535
;; rd  gen 	(2)
95, 536
;; rd  kill	(19)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 536
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(15)
5, 18, 27, 32, 33, 38, 39, 95, 99, 100, 530, 531, 532, 535, 536
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 156 { d531(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 44
;;      reg 166 { d536(bb 6 insn 43) }
;;   UD chains for insn luid 2 uid 45
;;      reg 24 { d95(bb 6 insn 44) }

( 6 )->[7]->( 21 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ d33(bb 0 insn -1) }u46(13){ d39(bb 0 insn -1) }u47(25){ d99(bb 0 insn -1) }u48(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 168
;; live  kill	
;; rd  in  	(15)
5, 18, 27, 32, 33, 38, 39, 95, 99, 100, 530, 531, 532, 535, 536
;; rd  gen 	(2)
528, 537
;; rd  kill	(8)
523, 524, 525, 526, 527, 528, 529, 537
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(17)
5, 18, 27, 32, 33, 38, 39, 95, 99, 100, 528, 530, 531, 532, 535, 536, 537
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 49
;;      reg 156 { d531(bb 2 insn 7) }
;;      reg 168 { d537(bb 7 insn 48) }

( 5 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ d33(bb 0 insn -1) }u52(13){ d39(bb 0 insn -1) }u53(25){ d99(bb 0 insn -1) }u54(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  def 	 135 144 252 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; live  gen 	 135 144 252 256
;; live  kill	
;; rd  in  	(14)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 530, 531, 532, 535
;; rd  gen 	(4)
505, 516, 580, 581
;; rd  kill	(6)
505, 506, 515, 516, 580, 581
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; rd  out 	(18)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 505, 516, 530, 531, 532, 535, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 25 { d99(bb 0 insn -1) }
;;      reg 164 { d535(bb 5 insn 37) }
;;   UD chains for insn luid 1 uid 58
;;      reg 154 { d530(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 59
;;      reg 164 { d535(bb 5 insn 37) }
;;   UD chains for insn luid 3 uid 61
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 76
;;      reg 25 { d99(bb 0 insn -1) }

( 9 8 )->[9]->( 9 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ d33(bb 0 insn -1) }u62(13){ d39(bb 0 insn -1) }u63(25){ d99(bb 0 insn -1) }u64(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 138 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 138 144
;; live  kill	 14 [lr]
;; rd  in  	(23)
3, 5, 18, 27, 32, 33, 38, 39, 81, 92, 99, 100, 505, 506, 509, 515, 516, 530, 531, 532, 535, 580, 581
;; rd  gen 	(5)
3, 92, 506, 509, 515
;; rd  kill	(38)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 505, 506, 509, 515, 516
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; rd  out 	(19)
3, 18, 27, 32, 33, 38, 39, 92, 99, 100, 506, 509, 515, 530, 531, 532, 535, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 252 { d580(bb 8 insn 61) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 1 uid 66
;;      reg 144 { d516(bb 8 insn 58) d515(bb 9 insn 78) }
;;   UD chains for insn luid 3 uid 68
;;      reg 13 { d39(bb 0 insn -1) }
;;      reg 0 { d1(bb 9 insn 65) }
;;      reg 1 { d13(bb 9 insn 66) }
;;      reg 2 { d20(bb 9 insn 257) }
;;   UD chains for insn luid 4 uid 71
;;      reg 252 { d580(bb 8 insn 61) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 7 uid 74
;;      reg 13 { d39(bb 0 insn -1) }
;;      reg 0 { d0(bb 9 insn 71) }
;;      reg 1 { d10(bb 9 insn 258) }
;;      reg 2 { d19(bb 9 insn 259) }
;;   UD chains for insn luid 8 uid 75
;;      reg 0 { d3(bb 9 insn 74) }
;;   UD chains for insn luid 9 uid 77
;;      reg 135 { d506(bb 9 insn 79) d505(bb 8 insn 59) }
;;      reg 138 { d509(bb 9 insn 75) }
;;      reg 256 { d581(bb 8 insn 76) }
;;   UD chains for insn luid 10 uid 78
;;      reg 144 { d516(bb 8 insn 58) d515(bb 9 insn 78) }
;;   UD chains for insn luid 11 uid 79
;;      reg 135 { d506(bb 9 insn 79) d505(bb 8 insn 59) }
;;   UD chains for insn luid 12 uid 81
;;      reg 135 { d506(bb 9 insn 79) }
;;   UD chains for insn luid 13 uid 82
;;      reg 24 { d92(bb 9 insn 81) }

( 9 )->[10]->( 20 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u86(11){ d33(bb 0 insn -1) }u87(13){ d39(bb 0 insn -1) }u88(25){ d99(bb 0 insn -1) }u89(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 148 149 150 178 179 180 183 185 187 189 192 194 195 196 197 198 200 201 202 203 204 205 206 208 209 211 213 214 215 216 217 218 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 148 149 150 178 179 180 183 185 187 189 192 194 195 196 197 198 200 201 202 203 204 205 206 208 209 211 213 214 215 216 217 218 220 221 222
;; live  kill	 24 [cc]
;; rd  in  	(19)
3, 18, 27, 32, 33, 38, 39, 92, 99, 100, 506, 509, 515, 530, 531, 532, 535, 580, 581
;; rd  gen 	(41)
88, 510, 511, 512, 513, 514, 520, 521, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569
;; rd  kill	(58)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 510, 511, 512, 513, 514, 520, 521, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; rd  out 	(59)
3, 18, 27, 32, 33, 38, 39, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 85
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 86
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 179 { d539(bb 10 insn 85) }
;;   UD chains for insn luid 3 uid 87
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 88
;;      reg 180 { d540(bb 10 insn 87) }
;;   UD chains for insn luid 5 uid 90
;;      reg 139 { d510(bb 10 insn 88) }
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 6 uid 92
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 93
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 183 { d541(bb 10 insn 92) }
;;   UD chains for insn luid 8 uid 95
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 96
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 185 { d542(bb 10 insn 95) }
;;   UD chains for insn luid 10 uid 98
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 11 uid 99
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 187 { d543(bb 10 insn 98) }
;;   UD chains for insn luid 12 uid 101
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 13 uid 102
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 189 { d544(bb 10 insn 101) }
;;   UD chains for insn luid 14 uid 103
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 15 uid 105
;;      reg 140 { d511(bb 10 insn 103) }
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 16 uid 107
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 17 uid 108
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 192 { d545(bb 10 insn 107) }
;;   UD chains for insn luid 18 uid 110
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 19 uid 111
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 194 { d546(bb 10 insn 110) }
;;   UD chains for insn luid 20 uid 112
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 21 uid 113
;;      reg 196 { d548(bb 10 insn 112) }
;;   UD chains for insn luid 22 uid 114
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 23 uid 115
;;      reg 195 { d547(bb 10 insn 113) }
;;      reg 197 { d549(bb 10 insn 114) }
;;   UD chains for insn luid 24 uid 116
;;      reg 141 { d512(bb 10 insn 115) }
;;   UD chains for insn luid 25 uid 117
;;      reg 198 { d550(bb 10 insn 116) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 26 uid 119
;;      reg 141 { d512(bb 10 insn 115) }
;;   UD chains for insn luid 27 uid 120
;;      reg 200 { d551(bb 10 insn 119) }
;;   UD chains for insn luid 28 uid 121
;;      reg 141 { d512(bb 10 insn 115) }
;;   UD chains for insn luid 29 uid 122
;;      reg 201 { d552(bb 10 insn 120) }
;;      reg 202 { d553(bb 10 insn 121) }
;;   UD chains for insn luid 30 uid 123
;;      reg 143 { d514(bb 10 insn 117) }
;;   UD chains for insn luid 31 uid 124
;;      reg 204 { d555(bb 10 insn 123) }
;;   UD chains for insn luid 32 uid 125
;;      reg 203 { d554(bb 10 insn 122) }
;;      reg 205 { d556(bb 10 insn 124) }
;;   UD chains for insn luid 33 uid 126
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 206 { d557(bb 10 insn 125) }
;;   UD chains for insn luid 34 uid 127
;;      reg 25 { d99(bb 0 insn -1) }
;;   UD chains for insn luid 35 uid 129
;;      reg 142 { d513(bb 10 insn 127) }
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 36 uid 130
;;      reg 142 { d513(bb 10 insn 127) }
;;   UD chains for insn luid 37 uid 131
;;      reg 208 { d558(bb 10 insn 130) }
;;   UD chains for insn luid 38 uid 132
;;      reg 150 { d522(bb 10 insn 131) }
;;   UD chains for insn luid 39 uid 133
;;      reg 149 { d521(bb 10 insn 132) }
;;   UD chains for insn luid 40 uid 135
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 41 uid 136
;;      reg 209 { d559(bb 10 insn 133) }
;;      reg 211 { d560(bb 10 insn 135) }
;;   UD chains for insn luid 42 uid 138
;;      reg 140 { d511(bb 10 insn 103) }
;;   UD chains for insn luid 44 uid 140
;;      reg 213 { d561(bb 10 insn 138) }
;;      reg 215 { d563(bb 10 insn 139) }
;;   eq_note reg 213 { }
;;   UD chains for insn luid 45 uid 141
;;      reg 148 { d520(bb 10 insn 136) }
;;      reg 214 { d562(bb 10 insn 140) }
;;   UD chains for insn luid 47 uid 143
;;      reg 216 { d564(bb 10 insn 141) }
;;      reg 217 { d565(bb 10 insn 142) }
;;   eq_note reg 216 { }
;;   UD chains for insn luid 48 uid 144
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 218 { d566(bb 10 insn 143) }
;;   UD chains for insn luid 50 uid 147
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 220 { d567(bb 10 insn 146) }
;;   UD chains for insn luid 51 uid 148
;;      reg 142 { d513(bb 10 insn 127) }
;;   UD chains for insn luid 53 uid 150
;;      reg 221 { d568(bb 10 insn 148) }
;;      reg 222 { d569(bb 10 insn 149) }
;;   eq_note reg 221 { }
;;   UD chains for insn luid 54 uid 151
;;      reg 24 { d88(bb 10 insn 150) }

( 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u165(11){ d33(bb 0 insn -1) }u166(13){ d39(bb 0 insn -1) }u167(25){ d99(bb 0 insn -1) }u168(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  gen 	 24 [cc] 147
;; live  kill	
;; rd  in  	(59)
3, 18, 27, 32, 33, 38, 39, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(2)
87, 519
;; rd  kill	(19)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 150 178
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 87, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 153
;;      reg 139 { d510(bb 10 insn 88) }
;;   UD chains for insn luid 1 uid 154
;;      reg 147 { d519(bb 11 insn 153) }
;;   UD chains for insn luid 2 uid 155
;;      reg 24 { d87(bb 11 insn 154) }

( 11 )->[12]->( 20 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u172(11){ d33(bb 0 insn -1) }u173(13){ d39(bb 0 insn -1) }u174(25){ d99(bb 0 insn -1) }u175(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 87, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
86
;; rd  kill	(18)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 86, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 157
;;      reg 140 { d511(bb 10 insn 103) }
;;   UD chains for insn luid 1 uid 158
;;      reg 24 { d86(bb 12 insn 157) }

( 12 )->[13]->( 21 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u178(11){ d33(bb 0 insn -1) }u179(13){ d39(bb 0 insn -1) }u180(25){ d99(bb 0 insn -1) }u181(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; lr  def 	 146 152 227 228 230 232
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 146 152 227 228 230 232
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 86, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(6)
518, 527, 570, 571, 572, 573
;; rd  kill	(12)
518, 523, 524, 525, 526, 527, 528, 529, 570, 571, 572, 573
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(66)
3, 18, 27, 32, 33, 38, 39, 86, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 527, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 161
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 1 uid 163
;;      reg 146 { d518(bb 13 insn 161) }
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 2 uid 165
;;      reg 146 { d518(bb 13 insn 161) }
;;      reg 178 { d538(bb 10 insn 84) }
;;   UD chains for insn luid 3 uid 167
;;      reg 140 { d511(bb 10 insn 103) }
;;   UD chains for insn luid 4 uid 168
;;      reg 150 { d522(bb 10 insn 131) }
;;      reg 227 { d570(bb 13 insn 167) }
;;   UD chains for insn luid 5 uid 169
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 228 { d571(bb 13 insn 168) }
;;   UD chains for insn luid 7 uid 172
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 230 { d572(bb 13 insn 171) }
;;   UD chains for insn luid 9 uid 175
;;      reg 178 { d538(bb 10 insn 84) }
;;      reg 232 { d573(bb 13 insn 174) }

( 11 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u196(11){ d33(bb 0 insn -1) }u197(13){ d39(bb 0 insn -1) }u198(25){ d99(bb 0 insn -1) }u199(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 87, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
85
;; rd  kill	(18)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 85, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 181
;;      reg 147 { d519(bb 11 insn 153) }
;;   UD chains for insn luid 1 uid 182
;;      reg 24 { d85(bb 14 insn 181) }

( 14 )->[15]->( 16 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u202(11){ d33(bb 0 insn -1) }u203(13){ d39(bb 0 insn -1) }u204(25){ d99(bb 0 insn -1) }u205(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 85, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
84
;; rd  kill	(18)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 84, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 184
;;      reg 140 { d511(bb 10 insn 103) }
;;   UD chains for insn luid 1 uid 185
;;      reg 24 { d84(bb 15 insn 184) }

( 14 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u208(11){ d33(bb 0 insn -1) }u209(13){ d39(bb 0 insn -1) }u210(25){ d99(bb 0 insn -1) }u211(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 136 145 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; live  gen 	 24 [cc] 136 145 233
;; live  kill	
;; rd  in  	(61)
3, 18, 27, 32, 33, 38, 39, 84, 85, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(4)
83, 507, 517, 574
;; rd  kill	(21)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 507, 517, 574
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149 233
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 148 149 233
;; rd  out 	(63)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 189
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 2 uid 191
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 3 uid 192
;;      reg 136 { d507(bb 16 insn 191) }
;;      reg 149 { d521(bb 10 insn 132) }
;;   UD chains for insn luid 4 uid 193
;;      reg 24 { d83(bb 16 insn 192) }

( 16 )->[17]->( 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u217(11){ d33(bb 0 insn -1) }u218(13){ d39(bb 0 insn -1) }u219(25){ d99(bb 0 insn -1) }u220(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  def 	 137 152 238 241 243
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; live  gen 	 137 152 238 241 243
;; live  kill	
;; rd  in  	(63)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 580, 581
;; rd  gen 	(5)
508, 526, 575, 576, 577
;; rd  kill	(11)
508, 523, 524, 525, 526, 527, 528, 529, 575, 576, 577
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(68)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 526, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 196
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 1 uid 198
;;      reg 137 { d508(bb 17 insn 196) }
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 2 uid 200
;;      reg 137 { d508(bb 17 insn 196) }
;;      reg 149 { d521(bb 10 insn 132) }
;;   UD chains for insn luid 3 uid 201
;;      reg 233 { d574(bb 16 insn 188) }
;;      reg 238 { d575(bb 17 insn 200) }
;;   UD chains for insn luid 4 uid 203
;;      reg 148 { d520(bb 10 insn 136) }
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 5 uid 205
;;      reg 136 { d507(bb 16 insn 191) }
;;      reg 149 { d521(bb 10 insn 132) }
;;   UD chains for insn luid 6 uid 206
;;      reg 233 { d574(bb 16 insn 188) }
;;      reg 241 { d576(bb 17 insn 205) }
;;   UD chains for insn luid 8 uid 209
;;      reg 233 { d574(bb 16 insn 188) }
;;      reg 243 { d577(bb 17 insn 208) }

( 16 )->[18]->( 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u236(11){ d33(bb 0 insn -1) }u237(13){ d39(bb 0 insn -1) }u238(25){ d99(bb 0 insn -1) }u239(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; lr  def 	 152 248 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; live  gen 	 152 248 250
;; live  kill	
;; rd  in  	(63)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 580, 581
;; rd  gen 	(3)
525, 578, 579
;; rd  kill	(9)
523, 524, 525, 526, 527, 528, 529, 578, 579
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(66)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 525, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 578, 579, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 216
;;      reg 145 { d517(bb 16 insn 189) }
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 1 uid 218
;;      reg 145 { d517(bb 16 insn 189) }
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 2 uid 220
;;      reg 149 { d521(bb 10 insn 132) }
;;      reg 233 { d574(bb 16 insn 188) }
;;   UD chains for insn luid 4 uid 223
;;      reg 233 { d574(bb 16 insn 188) }
;;      reg 248 { d578(bb 18 insn 222) }
;;   UD chains for insn luid 6 uid 226
;;      reg 233 { d574(bb 16 insn 188) }
;;      reg 250 { d579(bb 18 insn 225) }

( 3 6 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u250(11){ d33(bb 0 insn -1) }u251(13){ d39(bb 0 insn -1) }u252(25){ d99(bb 0 insn -1) }u253(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	
;; rd  in  	(18)
5, 7, 18, 27, 32, 33, 38, 39, 95, 97, 99, 100, 530, 531, 532, 533, 535, 536
;; rd  gen 	(1)
524
;; rd  kill	(7)
523, 524, 525, 526, 527, 528, 529
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(19)
5, 7, 18, 27, 32, 33, 38, 39, 95, 97, 99, 100, 524, 530, 531, 532, 533, 535, 536
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }

( 12 10 15 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u254(11){ d33(bb 0 insn -1) }u255(13){ d39(bb 0 insn -1) }u256(25){ d99(bb 0 insn -1) }u257(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	
;; rd  in  	(62)
3, 18, 27, 32, 33, 38, 39, 84, 86, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
523
;; rd  kill	(7)
523, 524, 525, 526, 527, 528, 529
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(63)
3, 18, 27, 32, 33, 38, 39, 84, 86, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 523, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }

( 20 18 17 7 13 4 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u258(11){ d33(bb 0 insn -1) }u259(13){ d39(bb 0 insn -1) }u260(25){ d99(bb 0 insn -1) }u261(26){ d100(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(92)
3, 5, 7, 18, 27, 32, 33, 38, 39, 83, 84, 86, 88, 95, 97, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(90)
2, 18, 27, 32, 33, 38, 39, 83, 84, 86, 88, 95, 97, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581
;;  UD chains for artificial uses
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 25 { d99(bb 0 insn -1) }
;;   reg 26 { d100(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 244
;;      reg 152 { d529(bb 4 insn 27) d528(bb 7 insn 50) d527(bb 13 insn 176) d526(bb 17 insn 210) d525(bb 18 insn 227) d524(bb 19 insn 232) d523(bb 20 insn 237) }
;;   UD chains for insn luid 1 uid 250
;;      reg 0 { d2(bb 21 insn 244) }

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u264(0){ d2(bb 21 insn 244) }u265(11){ d33(bb 0 insn -1) }u266(13){ d39(bb 0 insn -1) }u267(14){ }u268(25){ d99(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(90)
2, 18, 27, 32, 33, 38, 39, 83, 84, 86, 88, 95, 97, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(90)
2, 18, 27, 32, 33, 38, 39, 83, 84, 86, 88, 95, 97, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 21 insn 244) }
;;   reg 11 { d33(bb 0 insn -1) }
;;   reg 13 { d39(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d99(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 22 to worklist
  Adding insn 261 to worklist
  Adding insn 26 to worklist
  Adding insn 40 to worklist
  Adding insn 45 to worklist
  Adding insn 263 to worklist
  Adding insn 49 to worklist
  Adding insn 57 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 68 to worklist
  Adding insn 151 to worklist
  Adding insn 147 to worklist
  Adding insn 144 to worklist
  Adding insn 129 to worklist
  Adding insn 126 to worklist
  Adding insn 111 to worklist
  Adding insn 108 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 86 to worklist
  Adding insn 155 to worklist
  Adding insn 158 to worklist
  Adding insn 265 to worklist
  Adding insn 175 to worklist
  Adding insn 172 to worklist
  Adding insn 169 to worklist
  Adding insn 165 to worklist
  Adding insn 163 to worklist
  Adding insn 182 to worklist
  Adding insn 185 to worklist
  Adding insn 193 to worklist
  Adding insn 267 to worklist
  Adding insn 209 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 201 to worklist
  Adding insn 198 to worklist
  Adding insn 269 to worklist
  Adding insn 226 to worklist
  Adding insn 223 to worklist
  Adding insn 220 to worklist
  Adding insn 218 to worklist
  Adding insn 216 to worklist
  Adding insn 271 to worklist
  Adding insn 250 to worklist
Finished finding needed instructions:
  Adding insn 244 to worklist
Processing use of (reg 152 [ D.25868 ]) in insn 244:
  Adding insn 27 to worklist
  Adding insn 50 to worklist
  Adding insn 176 to worklist
  Adding insn 210 to worklist
  Adding insn 227 to worklist
  Adding insn 232 to worklist
  Adding insn 237 to worklist
Processing use of (reg 0 r0) in insn 250:
Processing use of (reg 145 [ name_buf.354 ]) in insn 216:
  Adding insn 189 to worklist
Processing use of (reg 233) in insn 216:
  Adding insn 188 to worklist
Processing use of (reg 233) in insn 189:
Processing use of (reg 145 [ name_buf.354 ]) in insn 218:
Processing use of (reg 233) in insn 218:
Processing use of (reg 149 [ D.25876 ]) in insn 220:
  Adding insn 132 to worklist
Processing use of (reg 233) in insn 220:
Processing use of (reg 150 [ D.25875 ]) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 208) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 142 [ name_len.324 ]) in insn 130:
  Adding insn 127 to worklist
Processing use of (reg 25 sfp) in insn 127:
Processing use of (reg 233) in insn 223:
Processing use of (reg 248) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 233) in insn 226:
Processing use of (reg 250) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 137 [ victim.332 ]) in insn 198:
  Adding insn 196 to worklist
Processing use of (reg 233) in insn 198:
Processing use of (reg 233) in insn 196:
Processing use of (reg 233) in insn 201:
Processing use of (reg 238) in insn 201:
  Adding insn 200 to worklist
Processing use of (reg 137 [ victim.332 ]) in insn 200:
Processing use of (reg 149 [ D.25876 ]) in insn 200:
Processing use of (reg 148 [ D.25878 ]) in insn 203:
  Adding insn 136 to worklist
Processing use of (reg 233) in insn 203:
Processing use of (reg 209 [ D.25876 ]) in insn 136:
  Adding insn 133 to worklist
Processing use of (reg 211 [ this_header ]) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 178) in insn 135:
  Adding insn 84 to worklist
Processing use of (reg 149 [ D.25876 ]) in insn 133:
Processing use of (reg 233) in insn 206:
Processing use of (reg 241) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 136 [ count.331 ]) in insn 205:
  Adding insn 191 to worklist
Processing use of (reg 149 [ D.25876 ]) in insn 205:
Processing use of (reg 233) in insn 191:
Processing use of (reg 233) in insn 209:
Processing use of (reg 243) in insn 209:
  Adding insn 208 to worklist
Processing use of (reg 24 cc) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 136 [ count.331 ]) in insn 192:
Processing use of (reg 149 [ D.25876 ]) in insn 192:
Processing use of (reg 24 cc) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 140 [ body_len.320 ]) in insn 184:
  Adding insn 103 to worklist
Processing use of (reg 25 sfp) in insn 103:
Processing use of (reg 24 cc) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 147 [ D.25890 ]) in insn 181:
  Adding insn 153 to worklist
Processing use of (reg 139 [ mode.315 ]) in insn 153:
  Adding insn 88 to worklist
Processing use of (subreg (reg 180 [ parsed+4 ]) 0) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 25 sfp) in insn 87:
Processing use of (reg 146 [ symlink_buf.352 ]) in insn 163:
  Adding insn 161 to worklist
Processing use of (reg 178) in insn 163:
Processing use of (reg 178) in insn 161:
Processing use of (reg 146 [ symlink_buf.352 ]) in insn 165:
Processing use of (reg 178) in insn 165:
Processing use of (reg 178) in insn 169:
Processing use of (reg 228) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 150 [ D.25875 ]) in insn 168:
Processing use of (reg 227) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 140 [ body_len.320 ]) in insn 167:
Processing use of (reg 178) in insn 172:
Processing use of (reg 230) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 178) in insn 175:
Processing use of (reg 232) in insn 175:
  Adding insn 174 to worklist
Processing use of (reg 24 cc) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 140 [ body_len.320 ]) in insn 157:
Processing use of (reg 24 cc) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 147 [ D.25890 ]) in insn 154:
Processing use of (reg 178) in insn 86:
Processing use of (reg 179 [ parsed ]) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 25 sfp) in insn 85:
Processing use of (subreg (reg 139 [ mode.315 ]) 0) in insn 90:
Processing use of (reg 178) in insn 90:
Processing use of (reg 178) in insn 93:
Processing use of (reg 183 [ parsed+8 ]) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 25 sfp) in insn 92:
Processing use of (reg 178) in insn 96:
Processing use of (reg 185 [ parsed+12 ]) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 25 sfp) in insn 95:
Processing use of (reg 178) in insn 99:
Processing use of (reg 187 [ parsed+16 ]) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 25 sfp) in insn 98:
Processing use of (reg 178) in insn 102:
Processing use of (reg 189 [ parsed+20 ]) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 25 sfp) in insn 101:
Processing use of (reg 140 [ body_len.320 ]) in insn 105:
Processing use of (reg 178) in insn 105:
Processing use of (reg 178) in insn 108:
Processing use of (reg 192 [ parsed+28 ]) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 25 sfp) in insn 107:
Processing use of (reg 178) in insn 111:
Processing use of (reg 194 [ parsed+32 ]) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 25 sfp) in insn 110:
Processing use of (reg 178) in insn 126:
Processing use of (reg 206) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 203) in insn 125:
  Adding insn 122 to worklist
Processing use of (reg 205) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 204) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 143 [ minor ]) in insn 123:
  Adding insn 117 to worklist
Processing use of (reg 198) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 141 [ D.26529 ]) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 195) in insn 115:
  Adding insn 113 to worklist
Processing use of (reg 197 [ parsed+40 ]) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 25 sfp) in insn 114:
Processing use of (reg 196 [ parsed+36 ]) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 25 sfp) in insn 112:
Processing use of (reg 201) in insn 122:
  Adding insn 120 to worklist
Processing use of (reg 202) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 141 [ D.26529 ]) in insn 121:
Processing use of (reg 200) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 141 [ D.26529 ]) in insn 119:
Processing use of (reg 142 [ name_len.324 ]) in insn 129:
Processing use of (reg 178) in insn 129:
Processing use of (reg 178) in insn 144:
Processing use of (reg 218) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 216) in insn 143:
  Adding insn 141 to worklist
Processing use of (reg 217) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 148 [ D.25878 ]) in insn 141:
Processing use of (reg 214) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 213 [ body_len.320 ]) in insn 140:
  Adding insn 138 to worklist
Processing use of (reg 215) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 140 [ body_len.320 ]) in insn 138:
Processing use of (reg 178) in insn 147:
Processing use of (reg 220) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 24 cc) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 221) in insn 150:
  Adding insn 148 to worklist
Processing use of (reg 222) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 142 [ name_len.324 ]) in insn 148:
Processing use of (reg 13 sp) in insn 68:
Processing use of (reg 0 r0) in insn 68:
  Adding insn 65 to worklist
Processing use of (reg 1 r1) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 2 r2) in insn 68:
  Adding insn 257 to worklist
Processing use of (reg 144 [ s ]) in insn 66:
  Adding insn 58 to worklist
  Adding insn 78 to worklist
Processing use of (reg 144 [ s ]) in insn 78:
Processing use of (reg 154 [ collected.344 ]) in insn 58:
  Adding insn 8 to worklist
Processing use of (reg 156) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 252) in insn 65:
  Adding insn 61 to worklist
Processing use of (reg 25 sfp) in insn 61:
Processing use of (reg 13 sp) in insn 74:
Processing use of (reg 0 r0) in insn 74:
  Adding insn 71 to worklist
Processing use of (reg 1 r1) in insn 74:
  Adding insn 258 to worklist
Processing use of (reg 2 r2) in insn 74:
  Adding insn 259 to worklist
Processing use of (reg 252) in insn 71:
Processing use of (reg 135 [ ivtmp.931 ]) in insn 77:
  Adding insn 79 to worklist
  Adding insn 59 to worklist
Processing use of (reg 138 [ D.26544 ]) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 256) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 25 sfp) in insn 76:
Processing use of (reg 0 r0) in insn 75:
Processing use of (reg 164) in insn 59:
  Adding insn 37 to worklist
Processing use of (reg 0 r0) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 0 r0) in insn 36:
  Adding insn 33 to worklist
Processing use of (reg 1 r1) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 2 r2) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 154 [ collected.344 ]) in insn 33:
Processing use of (reg 135 [ ivtmp.931 ]) in insn 79:
Processing use of (reg 24 cc) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 135 [ ivtmp.931 ]) in insn 81:
Processing use of (reg 25 sfp) in insn 57:
Processing use of (subreg (reg 164) 0) in insn 57:
Processing use of (reg 156) in insn 49:
Processing use of (reg 168) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 24 cc) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 166 [ message ]) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 156) in insn 43:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 164) in insn 39:
Processing use of (reg 156) in insn 26:
Processing use of (reg 162) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 160 [ message ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 156) in insn 20:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 158) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 0 r0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 2 r2) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 154 [ collected.344 ]) in insn 10:


do_header

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={9d,4u} r2={9d,4u} r3={5d} r11={1d,21u} r12={5d} r13={1d,25u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={18d,11u} r25={1d,36u,2d} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={2d,3u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,5u} r141={1d,3u,1d} r142={1d,3u} r143={1d,1u} r144={2d,2u} r145={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,5u} r150={1d,2u} r152={7d,1u} r154={1d,3u} r156={1d,5u} r158={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,3u} r166={1d,1u} r168={1d,1u} r178={1d,20u} r179={1d,1u} r180={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r192={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r208={1d,1u} r209={1d,1u} r211={1d,1u} r213={1d,1u,1d} r214={1d,1u} r215={1d,1u} r216={1d,1u,1d} r217={1d,1u} r218={1d,1u} r220={1d,1u} r221={1d,1u,1d} r222={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r232={1d,1u} r233={1d,13u} r238={1d,1u} r241={1d,1u} r243={1d,1u} r248={1d,1u} r250={1d,1u} r252={1d,2u} r256={1d,1u} 
;;    total ref usage 851{582d,263u,6e} in 155{151 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504
0[0,10] 1[10,9] 2[19,9] 3[28,5] 11[33,1] 12[34,5] 13[39,1] 14[40,5] 15[45,4] 16[49,4] 17[53,4] 18[57,4] 19[61,4] 20[65,4] 21[69,4] 22[73,4] 23[77,4] 24[81,18] 25[99,1] 26[100,1] 27[101,4] 28[105,4] 29[109,4] 30[113,4] 31[117,4] 32[121,4] 33[125,4] 34[129,4] 35[133,4] 36[137,4] 37[141,4] 38[145,4] 39[149,4] 40[153,4] 41[157,4] 42[161,4] 43[165,4] 44[169,4] 45[173,4] 46[177,4] 47[181,4] 48[185,4] 49[189,4] 50[193,4] 51[197,4] 52[201,4] 53[205,4] 54[209,4] 55[213,4] 56[217,4] 57[221,4] 58[225,4] 59[229,4] 60[233,4] 61[237,4] 62[241,4] 63[245,4] 64[249,4] 65[253,4] 66[257,4] 67[261,4] 68[265,4] 69[269,4] 70[273,4] 71[277,4] 72[281,4] 73[285,4] 74[289,4] 75[293,4] 76[297,4] 77[301,4] 78[305,4] 79[309,4] 80[313,4] 81[317,4] 82[321,4] 83[325,4] 84[329,4] 85[333,4] 86[337,4] 87[341,4] 88[345,4] 89[349,4] 90[353,4] 91[357,4] 92[361,4] 93[365,4] 94[369,4] 95[373,4] 96[377,4] 97[381,4] 98[385,4] 99[389,4] 100[393,4] 101[397,4] 102[401,4] 103[405,4] 104[409,4] 105[413,4] 106[417,4] 107[421,4] 108[425,4] 109[429,4] 110[433,4] 111[437,4] 112[441,4] 113[445,4] 114[449,4] 115[453,4] 116[457,4] 117[461,4] 118[465,4] 119[469,4] 120[473,4] 121[477,4] 122[481,4] 123[485,4] 124[489,4] 125[493,4] 126[497,4] 127[501,4] 135[505,2] 136[507,1] 137[508,1] 138[509,1] 139[510,1] 140[511,1] 141[512,1] 142[513,1] 143[514,1] 144[515,2] 145[517,1] 146[518,1] 147[519,1] 148[520,1] 149[521,1] 150[522,1] 152[523,7] 154[530,1] 156[531,1] 158[532,1] 160[533,1] 162[534,1] 164[535,1] 166[536,1] 168[537,1] 178[538,1] 179[539,1] 180[540,1] 183[541,1] 185[542,1] 187[543,1] 189[544,1] 192[545,1] 194[546,1] 195[547,1] 196[548,1] 197[549,1] 198[550,1] 200[551,1] 201[552,1] 202[553,1] 203[554,1] 204[555,1] 205[556,1] 206[557,1] 208[558,1] 209[559,1] 211[560,1] 213[561,1] 214[562,1] 215[563,1] 216[564,1] 217[565,1] 218[566,1] 220[567,1] 221[568,1] 222[569,1] 227[570,1] 228[571,1] 230[572,1] 232[573,1] 233[574,1] 238[575,1] 241[576,1] 243[577,1] 248[578,1] 250[579,1] 252[580,1] 256[581,1] 
(note 3 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154 156 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 154 156 158
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 27, 32, 33, 38, 39, 44, 99, 100
;; rd  gen 	(5)
7, 82, 530, 531, 532
;; rd  kill	(36)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 530, 531, 532

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/initramfs.c:220 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 init/initramfs.c:220 (set (reg/f:SI 154 [ collected.344 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 10 8 11 2 init/initramfs.c:220 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ collected.344 ])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/initramfs.c:220 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11536380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11536380>)
        (nil)))

(insn 12 11 13 2 init/initramfs.c:220 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 13 12 14 2 init/initramfs.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 14 13 16 2 init/initramfs.c:220 (set (reg:SI 158)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 16 14 17 2 init/initramfs.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 17 16 18 2 init/initramfs.c:220 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; rd  out 	(13)
7, 18, 27, 32, 33, 38, 39, 82, 99, 100, 530, 531, 532


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 160
;; live  kill	
;; rd  in  	(13)
7, 18, 27, 32, 33, 38, 39, 82, 99, 100, 530, 531, 532
;; rd  gen 	(2)
97, 533
;; rd  kill	(19)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 533

;; Pred edge  2 [0.0%]  (fallthru)
(note 18 17 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 18 21 3 init/initramfs.c:15 (set (reg/f:SI 160 [ message ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 21 20 22 3 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 160 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 160 [ message ])
        (nil)))

(jump_insn 22 21 23 3 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 3 -> ( 4 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(14)
7, 18, 27, 32, 33, 38, 39, 97, 99, 100, 530, 531, 532, 533


;; Succ edge  4 [15.0%]  (fallthru)
;; Succ edge  19 [85.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 162
;; live  kill	
;; rd  in  	(14)
7, 18, 27, 32, 33, 38, 39, 97, 99, 100, 530, 531, 532, 533
;; rd  gen 	(2)
529, 534
;; rd  kill	(8)
523, 524, 525, 526, 527, 528, 529, 534

;; Pred edge  3 [15.0%]  (fallthru)
(note 23 22 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 4 init/initramfs.c:16 (set (reg/f:SI 162)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11527b90>)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11527b90>)
                (nil)))))

(insn 27 26 261 4 init/initramfs.c:222 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 261 27 262 4 (set (pc)
        (label_ref 238)) -1 (nil))
;; End of basic block 4 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(16)
7, 18, 27, 32, 33, 38, 39, 97, 99, 100, 529, 530, 531, 532, 533, 534


;; Succ edge  21 [100.0%] 

(barrier 262 261 30)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 164
;; live  kill	 14 [lr]
;; rd  in  	(13)
7, 18, 27, 32, 33, 38, 39, 82, 99, 100, 530, 531, 532
;; rd  gen 	(3)
5, 81, 535
;; rd  kill	(34)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 535

;; Pred edge  2 [100.0%] 
(code_label 30 262 31 5 133 "" [1 uses])

(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 31 34 5 init/initramfs.c:224 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ collected.344 ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 init/initramfs.c:224 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1153c020>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1153c020>)
        (nil)))

(insn 35 34 36 5 init/initramfs.c:224 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 36 35 37 5 init/initramfs.c:224 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 37 36 39 5 init/initramfs.c:224 (set (reg:SI 164)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 39 37 40 5 init/initramfs.c:224 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 5 init/initramfs.c:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 164
;; rd  out 	(14)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 530, 531, 532, 535


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 166
;; live  kill	
;; rd  in  	(14)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 530, 531, 532, 535
;; rd  gen 	(2)
95, 536
;; rd  kill	(19)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 536

;; Pred edge  5 [50.0%]  (fallthru)
(note 41 40 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 43 41 44 6 init/initramfs.c:15 (set (reg/f:SI 166 [ message ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 44 43 45 6 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 166 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 166 [ message ])
        (nil)))

(jump_insn 45 44 46 6 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 6 -> ( 7 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(15)
5, 18, 27, 32, 33, 38, 39, 95, 99, 100, 530, 531, 532, 535, 536


;; Succ edge  7 [15.0%]  (fallthru)
;; Succ edge  19 [85.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 168
;; live  kill	
;; rd  in  	(15)
5, 18, 27, 32, 33, 38, 39, 95, 99, 100, 530, 531, 532, 535, 536
;; rd  gen 	(2)
528, 537
;; rd  kill	(8)
523, 524, 525, 526, 527, 528, 529, 537

;; Pred edge  6 [15.0%]  (fallthru)
(note 46 45 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 46 49 7 init/initramfs.c:16 (set (reg/f:SI 168)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x114f9ed0>)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 168)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x114f9ed0>)
                (nil)))))

(insn 50 49 263 7 init/initramfs.c:226 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 263 50 264 7 (set (pc)
        (label_ref 238)) -1 (nil))
;; End of basic block 7 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(17)
5, 18, 27, 32, 33, 38, 39, 95, 99, 100, 528, 530, 531, 532, 535, 536, 537


;; Succ edge  21 [100.0%] 

(barrier 264 263 53)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  def 	 135 144 252 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; live  gen 	 135 144 252 256
;; live  kill	
;; rd  in  	(14)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 530, 531, 532, 535
;; rd  gen 	(4)
505, 516, 580, 581
;; rd  kill	(6)
505, 506, 515, 516, 580, 581

;; Pred edge  5 [50.0%] 
(code_label 53 264 54 8 136 "" [1 uses])

(note 54 53 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 54 58 8 init/initramfs.c:135 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 buf+8 S1 A32])
        (subreg:QI (reg:SI 164) 0)) 178 {*arm_movqi_insn} (nil))

(insn 58 57 59 8 init/initramfs.c:136 (set (reg/v/f:SI 144 [ s ])
        (plus:SI (reg/f:SI 154 [ collected.344 ])
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 154 [ collected.344 ])
        (nil)))

(insn 59 58 61 8 init/initramfs.c:136 (set (reg:SI 135 [ ivtmp.931 ])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 61 59 76 8 init/initramfs.c:137 (set (reg/f:SI 252)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 76 61 80 8 init/initramfs.c:138 (set (reg/f:SI 256)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; rd  out 	(18)
5, 18, 27, 32, 33, 38, 39, 81, 99, 100, 505, 516, 530, 531, 532, 535, 580, 581


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 138 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 138 144
;; live  kill	 14 [lr]
;; rd  in  	(23)
3, 5, 18, 27, 32, 33, 38, 39, 81, 92, 99, 100, 505, 506, 509, 515, 516, 530, 531, 532, 535, 580, 581
;; rd  gen 	(5)
3, 92, 506, 509, 515
;; rd  kill	(38)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 40, 41, 42, 43, 44, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 505, 506, 509, 515, 516

;; Pred edge  9 [91.7%]  (dfs_back)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 80 76 60 9 137 "" [1 uses])

(note 60 80 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 65 60 66 9 init/initramfs.c:137 (set (reg:SI 0 r0)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 66 65 257 9 init/initramfs.c:137 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ s ])) 167 {*arm_movsi_insn} (nil))

(insn 257 66 68 9 init/initramfs.c:137 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 68 257 71 9 init/initramfs.c:137 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1150cc00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 71 68 258 9 init/initramfs.c:138 (set (reg:SI 0 r0)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 258 71 259 9 init/initramfs.c:138 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 259 258 74 9 init/initramfs.c:138 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 74 259 75 9 init/initramfs.c:138 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10aa5680 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 75 74 77 9 init/initramfs.c:138 (set (reg:SI 138 [ D.26544 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 77 75 78 9 init/initramfs.c:138 (set (mem/s/j:SI (plus:SI (reg/f:SI 256)
                (reg:SI 135 [ ivtmp.931 ])) [0 parsed S4 A32])
        (reg:SI 138 [ D.26544 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.26544 ])
        (nil)))

(insn 78 77 79 9 init/initramfs.c:136 discrim 2 (set (reg/v/f:SI 144 [ s ])
        (plus:SI (reg/v/f:SI 144 [ s ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 79 78 81 9 init/initramfs.c:136 discrim 2 (set (reg:SI 135 [ ivtmp.931 ])
        (plus:SI (reg:SI 135 [ ivtmp.931 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 81 79 82 9 init/initramfs.c:136 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ ivtmp.931 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 9 init/initramfs.c:136 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
            (nil))))
;; End of basic block 9 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; rd  out 	(19)
3, 18, 27, 32, 33, 38, 39, 92, 99, 100, 506, 509, 515, 530, 531, 532, 535, 580, 581


;; Succ edge  9 [91.7%]  (dfs_back)
;; Succ edge  10 [8.3%]  (fallthru,loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 148 149 150 178 179 180 183 185 187 189 192 194 195 196 197 198 200 201 202 203 204 205 206 208 209 211 213 214 215 216 217 218 220 221 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 148 149 150 178 179 180 183 185 187 189 192 194 195 196 197 198 200 201 202 203 204 205 206 208 209 211 213 214 215 216 217 218 220 221 222
;; live  kill	 24 [cc]
;; rd  in  	(19)
3, 18, 27, 32, 33, 38, 39, 92, 99, 100, 506, 509, 515, 530, 531, 532, 535, 580, 581
;; rd  gen 	(41)
88, 510, 511, 512, 513, 514, 520, 521, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569
;; rd  kill	(58)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 510, 511, 512, 513, 514, 520, 521, 522, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569

;; Pred edge  9 [8.3%]  (fallthru,loop_exit)
(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 10 init/initramfs.c:140 (set (reg/f:SI 178)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 10 init/initramfs.c:140 (set (reg:SI 179 [ parsed ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 parsed+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 10 init/initramfs.c:140 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 212 [0xd4])) [0 ino+0 S4 A32])
        (reg:SI 179 [ parsed ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ parsed ])
        (nil)))

(insn 87 86 88 10 init/initramfs.c:141 (set (reg:SI 180 [ parsed+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8])) [0 parsed+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 90 10 init/initramfs.c:141 (set (reg:SI 139 [ mode.315 ])
        (zero_extend:SI (subreg:HI (reg:SI 180 [ parsed+4 ]) 0))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg:SI 180 [ parsed+4 ])
        (nil)))

(insn 90 88 92 10 init/initramfs.c:141 (set (mem/c/i:HI (plus:SI (reg/f:SI 178)
                (const_int 216 [0xd8])) [0 mode+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ mode.315 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 92 90 93 10 init/initramfs.c:142 (set (reg:SI 183 [ parsed+8 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 parsed+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 95 10 init/initramfs.c:142 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])
        (reg:SI 183 [ parsed+8 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 183 [ parsed+8 ])
        (nil)))

(insn 95 93 96 10 init/initramfs.c:143 (set (reg:SI 185 [ parsed+12 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 parsed+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 98 10 init/initramfs.c:143 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])
        (reg:SI 185 [ parsed+12 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 185 [ parsed+12 ])
        (nil)))

(insn 98 96 99 10 init/initramfs.c:144 (set (reg:SI 187 [ parsed+16 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 parsed+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 101 10 init/initramfs.c:144 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 200 [0xc8])) [0 nlink+0 S4 A32])
        (reg:SI 187 [ parsed+16 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 187 [ parsed+16 ])
        (nil)))

(insn 101 99 102 10 init/initramfs.c:145 (set (reg:SI 189 [ parsed+20 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 parsed+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 10 init/initramfs.c:145 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])
        (reg:SI 189 [ parsed+20 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 189 [ parsed+20 ])
        (nil)))

(insn 103 102 105 10 init/initramfs.c:146 (set (reg:SI 140 [ body_len.320 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 parsed+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 105 103 107 10 init/initramfs.c:146 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])
        (reg:SI 140 [ body_len.320 ])) 167 {*arm_movsi_insn} (nil))

(insn 107 105 108 10 init/initramfs.c:147 (set (reg:SI 192 [ parsed+28 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 parsed+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 110 10 init/initramfs.c:147 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 204 [0xcc])) [0 major+0 S4 A32])
        (reg:SI 192 [ parsed+28 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 192 [ parsed+28 ])
        (nil)))

(insn 110 108 111 10 init/initramfs.c:148 (set (reg:SI 194 [ parsed+32 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 parsed+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 10 init/initramfs.c:148 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 208 [0xd0])) [0 minor+0 S4 A32])
        (reg:SI 194 [ parsed+32 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 194 [ parsed+32 ])
        (nil)))

(insn 112 111 113 10 init/initramfs.c:149 (set (reg:SI 196 [ parsed+36 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 parsed+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 10 init/initramfs.c:149 (set (reg:SI 195)
        (ashift:SI (reg:SI 196 [ parsed+36 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 196 [ parsed+36 ])
        (nil)))

(insn 114 113 115 10 init/initramfs.c:149 (set (reg:SI 197 [ parsed+40 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 parsed+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 115 114 116 10 init/initramfs.c:149 (set (reg:SI 141 [ D.26529 ])
        (ior:SI (reg:SI 195)
            (reg:SI 197 [ parsed+40 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 197 [ parsed+40 ])
        (expr_list:REG_DEAD (reg:SI 195)
            (nil))))

(insn 116 115 117 10 include/linux/kdev_t.h:44 (set (reg:SI 198)
        (and:SI (reg:SI 141 [ D.26529 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 117 116 119 10 include/linux/kdev_t.h:44 (set (reg/v:SI 143 [ minor ])
        (and:SI (reg:SI 198)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_EQUAL (and:SI (reg:SI 141 [ D.26529 ])
                (const_int 1048575 [0xfffff]))
            (nil))))

(insn 119 117 120 10 init/initramfs.c:149 (set (reg:SI 200)
        (lshiftrt:SI (reg:SI 141 [ D.26529 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 120 119 121 10 init/initramfs.c:149 (set (reg:SI 201)
        (ashift:SI (reg:SI 200)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 121 120 122 10 init/initramfs.c:149 (set (reg:SI 202)
        (and:SI (reg:SI 141 [ D.26529 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.26529 ])
        (nil)))

(insn 122 121 123 10 init/initramfs.c:149 (set (reg:SI 203)
        (ior:SI (reg:SI 201)
            (reg:SI 202))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_DEAD (reg:SI 201)
            (nil))))

(insn 123 122 124 10 init/initramfs.c:149 (set (reg:SI 204)
        (and:SI (reg/v:SI 143 [ minor ])
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ minor ])
        (nil)))

(insn 124 123 125 10 init/initramfs.c:149 (set (reg:SI 205)
        (ashift:SI (reg:SI 204)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 125 124 126 10 init/initramfs.c:149 (set (reg:SI 206)
        (ior:SI (reg:SI 203)
            (reg:SI 205))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_DEAD (reg:SI 203)
            (nil))))

(insn 126 125 127 10 init/initramfs.c:149 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 348 [0x15c])) [0 rdev+0 S4 A32])
        (reg:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 127 126 129 10 init/initramfs.c:150 (set (reg:SI 142 [ name_len.324 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 parsed+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 129 127 130 10 init/initramfs.c:150 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])
        (reg:SI 142 [ name_len.324 ])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 10 init/initramfs.c:229 (set (reg:SI 208)
        (plus:SI (reg:SI 142 [ name_len.324 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 10 init/initramfs.c:229 (set (reg:SI 150 [ D.25875 ])
        (and:SI (reg:SI 208)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 132 131 133 10 init/initramfs.c:229 (set (reg:SI 149 [ D.25876 ])
        (plus:SI (reg:SI 150 [ D.25875 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 133 132 135 10 init/initramfs.c:229 (set (reg:DI 209 [ D.25876 ])
        (zero_extend:DI (reg:SI 149 [ D.25876 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 135 133 136 10 init/initramfs.c:229 (set (reg:DI 211 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 178)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 136 135 138 10 init/initramfs.c:229 (parallel [
            (set (reg:DI 148 [ D.25878 ])
                (plus:DI (reg:DI 209 [ D.25876 ])
                    (reg:DI 211 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 211 [ this_header ])
        (expr_list:REG_DEAD (reg:DI 209 [ D.25876 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 138 136 139 10 init/initramfs.c:230 (set (reg:DI 213 [ body_len.320 ])
        (zero_extend:DI (reg:SI 140 [ body_len.320 ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 139 138 140 10 init/initramfs.c:230 (set (reg:DI 215)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 140 139 141 10 init/initramfs.c:230 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 213 [ body_len.320 ])
                    (reg:DI 215)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 215)
        (expr_list:REG_DEAD (reg:DI 213 [ body_len.320 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 213 [ body_len.320 ])
                        (const_int 3 [0x3]))
                    (nil))))))

(insn 141 140 142 10 init/initramfs.c:230 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg:DI 214)
                    (reg:DI 148 [ D.25878 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 214)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 142 141 143 10 init/initramfs.c:230 (set (reg:DI 217)
        (const_int -4 [0xfffffffffffffffc])) 163 {*arm_movdi} (nil))

(insn 143 142 144 10 init/initramfs.c:230 (set (reg:DI 218)
        (and:DI (reg:DI 216)
            (reg:DI 217))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_DEAD (reg:DI 216)
            (expr_list:REG_EQUAL (and:DI (reg:DI 216)
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))

(insn 144 143 146 10 init/initramfs.c:230 (set (mem/c/i:DI (plus:SI (reg/f:SI 178)
                (const_int 48 [0x30])) [0 next_header+0 S8 A64])
        (reg:DI 218)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 218)
        (nil)))

(insn 146 144 147 10 init/initramfs.c:231 (set (reg:SI 220)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 10 init/initramfs.c:231 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 148 147 149 10 init/initramfs.c:232 (set (reg:SI 221)
        (plus:SI (reg:SI 142 [ name_len.324 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142 [ name_len.324 ])
        (nil)))

(insn 149 148 150 10 init/initramfs.c:232 (set (reg:SI 222)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 10 init/initramfs.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 221)
            (reg:SI 222))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_DEAD (reg:SI 221)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 221)
                    (const_int 4095 [0xfff]))
                (nil)))))

(jump_insn 151 150 152 10 init/initramfs.c:232 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 10 -> ( 20 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; rd  out 	(59)
3, 18, 27, 32, 33, 38, 39, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581


;; Succ edge  20 [39.0%] 
;; Succ edge  11 [61.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  gen 	 24 [cc] 147
;; live  kill	
;; rd  in  	(59)
3, 18, 27, 32, 33, 38, 39, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(2)
87, 519
;; rd  kill	(19)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 519

;; Pred edge  10 [61.0%]  (fallthru)
(note 152 151 153 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 11 init/initramfs.c:234 (set (reg:SI 147 [ D.25890 ])
        (and:SI (reg:SI 139 [ mode.315 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139 [ mode.315 ])
        (nil)))

(insn 154 153 155 11 init/initramfs.c:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.25890 ])
            (const_int 40960 [0xa000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 155 154 156 11 init/initramfs.c:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 150 178
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 87, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  14 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 87, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
86
;; rd  kill	(18)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98

;; Pred edge  11 [28.0%]  (fallthru)
(note 156 155 157 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 157 156 158 12 init/initramfs.c:235 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ body_len.320 ])
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 158 157 159 12 init/initramfs.c:235 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 20 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 86, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581


;; Succ edge  20 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; lr  def 	 146 152 227 228 230 232
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 146 152 227 228 230 232
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 86, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(6)
518, 527, 570, 571, 572, 573
;; rd  kill	(12)
518, 523, 524, 525, 526, 527, 528, 529, 570, 571, 572, 573

;; Pred edge  12 [50.0%]  (fallthru)
(note 159 158 161 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 161 159 163 13 init/initramfs.c:237 (set (reg/f:SI 146 [ symlink_buf.352 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70]))) [0 symlink_buf+0 S4 A32])
        (nil)))

(insn 163 161 165 13 init/initramfs.c:237 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 146 [ symlink_buf.352 ])) 167 {*arm_movsi_insn} (nil))

(insn 165 163 167 13 init/initramfs.c:237 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 146 [ symlink_buf.352 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146 [ symlink_buf.352 ])
        (nil)))

(insn 167 165 168 13 init/initramfs.c:238 (set (reg:SI 227)
        (plus:SI (reg:SI 140 [ body_len.320 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140 [ body_len.320 ])
        (nil)))

(insn 168 167 169 13 init/initramfs.c:238 (set (reg:SI 228)
        (plus:SI (reg:SI 227)
            (reg:SI 150 [ D.25875 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 227)
        (expr_list:REG_DEAD (reg:SI 150 [ D.25875 ])
            (nil))))

(insn 169 168 171 13 init/initramfs.c:238 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (nil)))

(insn 171 169 172 13 init/initramfs.c:239 (set (reg:SI 230)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 172 171 174 13 init/initramfs.c:239 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_EQUAL (const_int 6 [0x6])
            (nil))))

(insn 174 172 175 13 init/initramfs.c:240 (set (reg:SI 232)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 13 init/initramfs.c:240 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 232)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_DEAD (reg/f:SI 178)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 176 175 265 13 init/initramfs.c:241 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 265 176 266 13 init/initramfs.c:241 (set (pc)
        (label_ref 238)) -1 (nil))
;; End of basic block 13 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(66)
3, 18, 27, 32, 33, 38, 39, 86, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 518, 519, 520, 521, 522, 527, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 580, 581


;; Succ edge  21 [100.0%] 

(barrier 266 265 179)

;; Start of basic block ( 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 87, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
85
;; rd  kill	(18)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98

;; Pred edge  11 [72.0%] 
(code_label 179 266 180 14 139 "" [1 uses])

(note 180 179 181 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 14 init/initramfs.c:243 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.25890 ])
            (const_int 32768 [0x8000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ D.25890 ])
        (nil)))

(jump_insn 182 181 183 14 init/initramfs.c:243 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 85, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581


;; Succ edge  16 [0.0%] 
;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(60)
3, 18, 27, 32, 33, 38, 39, 85, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
84
;; rd  kill	(18)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98

;; Pred edge  14 [100.0%]  (fallthru)
(note 183 182 184 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 185 15 init/initramfs.c:243 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ body_len.320 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ body_len.320 ])
        (nil)))

(jump_insn 185 184 186 15 init/initramfs.c:243 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; rd  out 	(60)
3, 18, 27, 32, 33, 38, 39, 84, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 136 145 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; live  gen 	 24 [cc] 136 145 233
;; live  kill	
;; rd  in  	(61)
3, 18, 27, 32, 33, 38, 39, 84, 85, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(4)
83, 507, 517, 574
;; rd  kill	(21)
81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 507, 517, 574

;; Pred edge  14 [0.0%] 
;; Pred edge  15 [0.0%]  (fallthru)
(code_label 186 185 187 16 140 "" [1 uses])

(note 187 186 188 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 16 init/initramfs.c:244 (set (reg/f:SI 233)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 191 16 init/initramfs.c:244 (set (reg/f:SI 145 [ name_buf.354 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 116 [0x74]))) [0 name_buf+0 S4 A32])
        (nil)))

(insn 191 189 192 16 init/initramfs.c:184 (set (reg:SI 136 [ count.331 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 192 191 193 16 init/initramfs.c:184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ count.331 ])
            (reg:SI 149 [ D.25876 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 16 init/initramfs.c:184 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149 233
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 148 149 233
;; rd  out 	(63)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 580, 581


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  def 	 137 152 238 241 243
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; live  gen 	 137 152 238 241 243
;; live  kill	
;; rd  in  	(63)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 580, 581
;; rd  gen 	(5)
508, 526, 575, 576, 577
;; rd  kill	(11)
508, 523, 524, 525, 526, 527, 528, 529, 575, 576, 577

;; Pred edge  16 [0.0%]  (fallthru)
(note 194 193 196 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 196 194 198 17 init/initramfs.c:185 (set (reg/f:SI 137 [ victim.332 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 198 196 200 17 init/initramfs.c:185 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 137 [ victim.332 ])) 167 {*arm_movsi_insn} (nil))

(insn 200 198 201 17 init/initramfs.c:172 (set (reg:SI 238)
        (plus:SI (reg/f:SI 137 [ victim.332 ])
            (reg:SI 149 [ D.25876 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137 [ victim.332 ])
        (nil)))

(insn 201 200 203 17 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 238)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 238)
        (nil)))

(insn 203 201 205 17 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 233)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 148 [ D.25878 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 148 [ D.25878 ])
        (nil)))

(insn 205 203 206 17 init/initramfs.c:174 (set (reg:SI 241)
        (minus:SI (reg:SI 136 [ count.331 ])
            (reg:SI 149 [ D.25876 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.25876 ])
        (expr_list:REG_DEAD (reg:SI 136 [ count.331 ])
            (nil))))

(insn 206 205 208 17 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 241)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 241)
        (nil)))

(insn 208 206 209 17 init/initramfs.c:187 (set (reg:SI 243)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 209 208 210 17 init/initramfs.c:187 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 243)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_DEAD (reg/f:SI 233)
            (expr_list:REG_EQUAL (const_int 4 [0x4])
                (nil)))))

(insn 210 209 267 17 init/initramfs.c:245 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 267 210 268 17 (set (pc)
        (label_ref 238)) -1 (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(68)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 526, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 575, 576, 577, 580, 581


;; Succ edge  21 [100.0%] 

(barrier 268 267 213)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; lr  def 	 152 248 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; live  gen 	 152 248 250
;; live  kill	
;; rd  in  	(63)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 580, 581
;; rd  gen 	(3)
525, 578, 579
;; rd  kill	(9)
523, 524, 525, 526, 527, 528, 529, 578, 579

;; Pred edge  16 [100.0%] 
(code_label 213 268 214 18 141 "" [1 uses])

(note 214 213 216 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 216 214 218 18 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 145 [ name_buf.354 ])) 167 {*arm_movsi_insn} (nil))

(insn 218 216 220 18 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 145 [ name_buf.354 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145 [ name_buf.354 ])
        (nil)))

(insn 220 218 222 18 init/initramfs.c:190 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 149 [ D.25876 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.25876 ])
        (nil)))

(insn 222 220 223 18 init/initramfs.c:191 (set (reg:SI 248)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 223 222 225 18 init/initramfs.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 248)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 225 223 226 18 init/initramfs.c:192 (set (reg:SI 250)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 18 init/initramfs.c:192 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 250)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 250)
        (expr_list:REG_DEAD (reg/f:SI 233)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 227 226 269 18 init/initramfs.c:245 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 269 227 270 18 (set (pc)
        (label_ref 238)) -1 (nil))
;; End of basic block 18 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(66)
3, 18, 27, 32, 33, 38, 39, 83, 99, 100, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 525, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 574, 578, 579, 580, 581


;; Succ edge  21 [100.0%] 

(barrier 270 269 230)

;; Start of basic block ( 3 6) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	
;; rd  in  	(18)
5, 7, 18, 27, 32, 33, 38, 39, 95, 97, 99, 100, 530, 531, 532, 533, 535, 536
;; rd  gen 	(1)
524
;; rd  kill	(7)
523, 524, 525, 526, 527, 528, 529

;; Pred edge  3 [85.0%] 
;; Pred edge  6 [85.0%] 
(code_label 230 270 231 19 134 "" [2 uses])

(note 231 230 232 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 271 19 init/initramfs.c:222 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 271 232 272 19 (set (pc)
        (label_ref 238)) -1 (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(19)
5, 7, 18, 27, 32, 33, 38, 39, 95, 97, 99, 100, 524, 530, 531, 532, 533, 535, 536


;; Succ edge  21 [100.0%] 

(barrier 272 271 235)

;; Start of basic block ( 12 10 15) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u254(11){ }u255(13){ }u256(25){ }u257(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	
;; rd  in  	(62)
3, 18, 27, 32, 33, 38, 39, 84, 86, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581
;; rd  gen 	(1)
523
;; rd  kill	(7)
523, 524, 525, 526, 527, 528, 529

;; Pred edge  12 [50.0%] 
;; Pred edge  10 [39.0%] 
;; Pred edge  15 [100.0%] 
(code_label 235 272 236 20 138 "" [3 uses])

(note 236 235 237 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 238 20 init/initramfs.c:233 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; rd  out 	(63)
3, 18, 27, 32, 33, 38, 39, 84, 86, 88, 99, 100, 506, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 523, 530, 531, 532, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 580, 581


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 18 17 7 13 4 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u258(11){ }u259(13){ }u260(25){ }u261(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(92)
3, 5, 7, 18, 27, 32, 33, 38, 39, 83, 84, 86, 88, 95, 97, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  19 [100.0%] 
(code_label 238 237 239 21 135 "" [6 uses])

(note 239 238 244 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 244 239 250 21 init/initramfs.c:246 (set (reg/i:SI 0 r0)
        (reg:SI 152 [ D.25868 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152 [ D.25868 ])
        (nil)))

(insn 250 244 0 21 init/initramfs.c:246 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(90)
2, 18, 27, 32, 33, 38, 39, 83, 84, 86, 88, 95, 97, 99, 100, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function populate_rootfs (populate_rootfs)[0:1338] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 20 (  1.8)


populate_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,10u} r1={11d,4u} r2={7d} r3={7d} r11={1d,10u} r12={7d} r13={1d,16u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,10u} r26={1d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} 
;;    total ref usage 826{742d,84u,0e} in 43{37 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725
0[0,13] 1[13,11] 2[24,7] 3[31,7] 11[38,1] 12[39,7] 13[46,1] 14[47,7] 15[54,6] 16[60,6] 17[66,6] 18[72,6] 19[78,6] 20[84,6] 21[90,6] 22[96,6] 23[102,6] 24[108,10] 25[118,1] 26[119,1] 27[120,6] 28[126,6] 29[132,6] 30[138,6] 31[144,6] 32[150,6] 33[156,6] 34[162,6] 35[168,6] 36[174,6] 37[180,6] 38[186,6] 39[192,6] 40[198,6] 41[204,6] 42[210,6] 43[216,6] 44[222,6] 45[228,6] 46[234,6] 47[240,6] 48[246,6] 49[252,6] 50[258,6] 51[264,6] 52[270,6] 53[276,6] 54[282,6] 55[288,6] 56[294,6] 57[300,6] 58[306,6] 59[312,6] 60[318,6] 61[324,6] 62[330,6] 63[336,6] 64[342,6] 65[348,6] 66[354,6] 67[360,6] 68[366,6] 69[372,6] 70[378,6] 71[384,6] 72[390,6] 73[396,6] 74[402,6] 75[408,6] 76[414,6] 77[420,6] 78[426,6] 79[432,6] 80[438,6] 81[444,6] 82[450,6] 83[456,6] 84[462,6] 85[468,6] 86[474,6] 87[480,6] 88[486,6] 89[492,6] 90[498,6] 91[504,6] 92[510,6] 93[516,6] 94[522,6] 95[528,6] 96[534,6] 97[540,6] 98[546,6] 99[552,6] 100[558,6] 101[564,6] 102[570,6] 103[576,6] 104[582,6] 105[588,6] 106[594,6] 107[600,6] 108[606,6] 109[612,6] 110[618,6] 111[624,6] 112[630,6] 113[636,6] 114[642,6] 115[648,6] 116[654,6] 117[660,6] 118[666,6] 119[672,6] 120[678,6] 121[684,6] 122[690,6] 123[696,6] 124[702,6] 125[708,6] 126[714,6] 127[720,6] 133[726,1] 134[727,1] 135[728,1] 138[729,1] 139[730,1] 140[731,1] 143[732,1] 144[733,1] 145[734,1] 147[735,1] 148[736,1] 149[737,1] 150[738,1] 151[739,1] 152[740,1] 153[741,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d23(1){ }d30(2){ }d37(3){ }d38(11){ }d45(12){ }d46(13){ }d53(14){ }d118(25){ }d119(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
12, 23, 30, 37, 38, 45, 46, 53, 118, 119
;; rd  kill	(56)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 118, 119
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
12, 23, 30, 37, 38, 45, 46, 53, 118, 119

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d38(bb 0 insn -1) }u1(13){ d46(bb 0 insn -1) }u2(25){ d118(bb 0 insn -1) }u3(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 23, 30, 37, 38, 45, 46, 53, 118, 119
;; rd  gen 	(4)
11, 116, 728, 729
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 47, 48, 49, 50, 51, 52, 53, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 728, 729
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 138 { d729(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 7) }
;;      reg 1 { d22(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 0 { d11(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 135 { d728(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 24 { d116(bb 2 insn 11) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d38(bb 0 insn -1) }u12(13){ d46(bb 0 insn -1) }u13(25){ d118(bb 0 insn -1) }u14(26){ d119(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729
;; rd  gen 	(0)

;; rd  kill	(7)
47, 48, 49, 50, 51, 52, 53
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d11(bb 2 insn 9) }

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d38(bb 0 insn -1) }u18(13){ d46(bb 0 insn -1) }u19(25){ d118(bb 0 insn -1) }u20(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729
;; rd  gen 	(3)
114, 730, 731
;; rd  kill	(12)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 730, 731
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(14)
11, 23, 30, 37, 38, 45, 46, 114, 118, 119, 728, 729, 730, 731
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 20
;;      reg 139 { d730(bb 4 insn 19) }
;;   UD chains for insn luid 2 uid 21
;;      reg 140 { d731(bb 4 insn 20) }
;;   UD chains for insn luid 3 uid 22
;;      reg 24 { d114(bb 4 insn 21) }

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ d38(bb 0 insn -1) }u25(13){ d46(bb 0 insn -1) }u26(25){ d118(bb 0 insn -1) }u27(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(14)
11, 23, 30, 37, 38, 45, 46, 114, 118, 119, 728, 729, 730, 731
;; rd  gen 	(7)
7, 111, 726, 727, 732, 733, 734
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 47, 48, 49, 50, 51, 52, 53, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 726, 727, 732, 733, 734
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(19)
7, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 26
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d2(bb 5 insn 25) }
;;   UD chains for insn luid 2 uid 28
;;      reg 139 { d730(bb 4 insn 19) }
;;   UD chains for insn luid 4 uid 30
;;      reg 143 { d732(bb 5 insn 29) }
;;   UD chains for insn luid 5 uid 31
;;      reg 134 { d727(bb 5 insn 28) }
;;      reg 145 { d734(bb 5 insn 30) }
;;   UD chains for insn luid 6 uid 32
;;      reg 134 { d727(bb 5 insn 28) }
;;   UD chains for insn luid 7 uid 33
;;      reg 144 { d733(bb 5 insn 31) }
;;   UD chains for insn luid 8 uid 34
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d8(bb 5 insn 32) }
;;      reg 1 { d18(bb 5 insn 33) }
;;   UD chains for insn luid 9 uid 35
;;      reg 0 { d7(bb 5 insn 34) }
;;   UD chains for insn luid 10 uid 36
;;      reg 133 { d726(bb 5 insn 35) }
;;   UD chains for insn luid 11 uid 37
;;      reg 24 { d111(bb 5 insn 36) }

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ d38(bb 0 insn -1) }u43(13){ d46(bb 0 insn -1) }u44(25){ d118(bb 0 insn -1) }u45(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(19)
7, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734
;; rd  gen 	(1)
6
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 47, 48, 49, 50, 51, 52, 53
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
6, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 41
;;      reg 133 { d726(bb 5 insn 35) }
;;   UD chains for insn luid 2 uid 42
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d1(bb 6 insn 40) }
;;      reg 1 { d16(bb 6 insn 41) }

( 5 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ d38(bb 0 insn -1) }u51(13){ d46(bb 0 insn -1) }u52(25){ d118(bb 0 insn -1) }u53(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	
;; rd  in  	(20)
6, 7, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734
;; rd  gen 	(3)
109, 735, 736
;; rd  kill	(12)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 735, 736
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 46
;;      reg 147 { d735(bb 7 insn 45) }
;;   UD chains for insn luid 2 uid 47
;;      reg 148 { d736(bb 7 insn 46) }
;;   UD chains for insn luid 3 uid 48
;;      reg 24 { d109(bb 7 insn 47) }

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(11){ d38(bb 0 insn -1) }u58(13){ d46(bb 0 insn -1) }u59(25){ d118(bb 0 insn -1) }u60(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 149 150
;; live  kill	 14 [lr]
;; rd  in  	(22)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736
;; rd  gen 	(2)
737, 738
;; rd  kill	(9)
47, 48, 49, 50, 51, 52, 53, 737, 738
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 52
;;      reg 149 { d737(bb 8 insn 50) }
;;   UD chains for insn luid 3 uid 53
;;      reg 150 { d738(bb 8 insn 51) }
;;   UD chains for insn luid 4 uid 54
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d5(bb 8 insn 52) }
;;      reg 1 { d14(bb 8 insn 53) }

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ d38(bb 0 insn -1) }u67(13){ d46(bb 0 insn -1) }u68(25){ d118(bb 0 insn -1) }u69(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 151 152 153
;; live  kill	
;; rd  in  	(24)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738
;; rd  gen 	(3)
739, 740, 741
;; rd  kill	(3)
739, 740, 741
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 59
;;      reg 151 { d739(bb 9 insn 57) }
;;      reg 152 { d740(bb 9 insn 58) }
;;   UD chains for insn luid 4 uid 62
;;      reg 152 { d740(bb 9 insn 58) }
;;      reg 153 { d741(bb 9 insn 60) }

( 4 9 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u74(11){ d38(bb 0 insn -1) }u75(13){ d46(bb 0 insn -1) }u76(25){ d118(bb 0 insn -1) }u77(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(29)
6, 7, 11, 23, 30, 37, 38, 45, 46, 109, 114, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; rd  gen 	(1)
0
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 23, 30, 37, 38, 45, 46, 109, 114, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 75
;;      reg 0 { d0(bb 10 insn 69) }

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u79(0){ d0(bb 10 insn 69) }u80(11){ d38(bb 0 insn -1) }u81(13){ d46(bb 0 insn -1) }u82(14){ }u83(25){ d118(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 23, 30, 37, 38, 45, 46, 109, 114, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
0, 23, 30, 37, 38, 45, 46, 109, 114, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 10 insn 69) }
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d118(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 26 to worklist
  Adding insn 42 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 75 to worklist
Finished finding needed instructions:
  Adding insn 69 to worklist
Processing use of (reg 0 r0) in insn 75:
Processing use of (reg 151) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 152) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 152) in insn 62:
Processing use of (reg 153) in insn 62:
  Adding insn 60 to worklist
Processing use of (reg 13 sp) in insn 54:
Processing use of (reg 0 r0) in insn 54:
  Adding insn 52 to worklist
Processing use of (reg 1 r1) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 150) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 149) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 24 cc) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 148 [ do_retain_initrd ]) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 147) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 13 sp) in insn 42:
Processing use of (reg 0 r0) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 1 r1) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 133 [ err.957 ]) in insn 41:
  Adding insn 35 to worklist
Processing use of (reg 0 r0) in insn 35:
Processing use of (reg 13 sp) in insn 26:
Processing use of (reg 0 r0) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 1 r1) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 144) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 134 [ initrd_start.956 ]) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 145 [ initrd_end ]) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 143) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 139) in insn 28:
  Adding insn 19 to worklist
Processing use of (reg 134 [ initrd_start.956 ]) in insn 32:
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 133 [ err.957 ]) in insn 36:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 140 [ initrd_start ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 139) in insn 20:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 1 r1) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 6 to worklist
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ err ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 0 r0) in insn 10:


populate_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,10u} r1={11d,4u} r2={7d} r3={7d} r11={1d,10u} r12={7d} r13={1d,16u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,10u} r26={1d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} 
;;    total ref usage 826{742d,84u,0e} in 43{37 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725
0[0,13] 1[13,11] 2[24,7] 3[31,7] 11[38,1] 12[39,7] 13[46,1] 14[47,7] 15[54,6] 16[60,6] 17[66,6] 18[72,6] 19[78,6] 20[84,6] 21[90,6] 22[96,6] 23[102,6] 24[108,10] 25[118,1] 26[119,1] 27[120,6] 28[126,6] 29[132,6] 30[138,6] 31[144,6] 32[150,6] 33[156,6] 34[162,6] 35[168,6] 36[174,6] 37[180,6] 38[186,6] 39[192,6] 40[198,6] 41[204,6] 42[210,6] 43[216,6] 44[222,6] 45[228,6] 46[234,6] 47[240,6] 48[246,6] 49[252,6] 50[258,6] 51[264,6] 52[270,6] 53[276,6] 54[282,6] 55[288,6] 56[294,6] 57[300,6] 58[306,6] 59[312,6] 60[318,6] 61[324,6] 62[330,6] 63[336,6] 64[342,6] 65[348,6] 66[354,6] 67[360,6] 68[366,6] 69[372,6] 70[378,6] 71[384,6] 72[390,6] 73[396,6] 74[402,6] 75[408,6] 76[414,6] 77[420,6] 78[426,6] 79[432,6] 80[438,6] 81[444,6] 82[450,6] 83[456,6] 84[462,6] 85[468,6] 86[474,6] 87[480,6] 88[486,6] 89[492,6] 90[498,6] 91[504,6] 92[510,6] 93[516,6] 94[522,6] 95[528,6] 96[534,6] 97[540,6] 98[546,6] 99[552,6] 100[558,6] 101[564,6] 102[570,6] 103[576,6] 104[582,6] 105[588,6] 106[594,6] 107[600,6] 108[606,6] 109[612,6] 110[618,6] 111[624,6] 112[630,6] 113[636,6] 114[642,6] 115[648,6] 116[654,6] 117[660,6] 118[666,6] 119[672,6] 120[678,6] 121[684,6] 122[690,6] 123[696,6] 124[702,6] 125[708,6] 126[714,6] 127[720,6] 133[726,1] 134[727,1] 135[728,1] 138[729,1] 139[730,1] 140[731,1] 143[732,1] 144[733,1] 145[734,1] 147[735,1] 148[736,1] 149[737,1] 150[738,1] 151[739,1] 152[740,1] 153[741,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 23, 30, 37, 38, 45, 46, 53, 118, 119
;; rd  gen 	(4)
11, 116, 728, 729
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 47, 48, 49, 50, 51, 52, 53, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 728, 729

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 init/initramfs.c:574 (set (reg/f:SI 138)
        (symbol_ref:SI ("__initramfs_size") [flags 0xc0] <var_decl 0x114d2180 __initramfs_size>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:574 (set (reg:SI 0 r0)
        (symbol_ref:SI ("__initramfs_start") [flags 0xc0] <var_decl 0x114d2120 __initramfs_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__initramfs_start") [flags 0xc0] <var_decl 0x114d2120 __initramfs_start>)
        (nil)))

(insn 8 7 9 2 init/initramfs.c:574 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 138) [0 __initramfs_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("__initramfs_size") [flags 0xc0] <var_decl 0x114d2180 __initramfs_size>) [0 __initramfs_size+0 S4 A32])
            (nil))))

(call_insn 9 8 10 2 init/initramfs.c:574 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unpack_to_rootfs") [flags 0x3] <function_decl 0x114ad980 unpack_to_rootfs>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 11 2 init/initramfs.c:574 (set (reg/v/f:SI 135 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 init/initramfs.c:575 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ err ])
        (nil)))

(jump_insn 12 11 13 2 init/initramfs.c:575 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729
;; rd  gen 	(0)

;; rd  kill	(7)
47, 48, 49, 50, 51, 52, 53

;; Pred edge  2 [0.0%]  (fallthru)
(note 13 12 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 15 13 16 3 init/initramfs.c:576 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729



(barrier 16 15 17)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(12)
11, 23, 30, 37, 38, 45, 46, 116, 118, 119, 728, 729
;; rd  gen 	(3)
114, 730, 731
;; rd  kill	(12)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 730, 731

;; Pred edge  2 [100.0%] 
(code_label 17 16 18 4 149 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 init/initramfs.c:577 (set (reg/f:SI 139)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 init/initramfs.c:577 (set (reg:SI 140 [ initrd_start ])
        (mem/c/i:SI (reg/f:SI 139) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>) [0 initrd_start+0 S4 A32])
        (nil)))

(insn 21 20 22 4 init/initramfs.c:577 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ initrd_start ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ initrd_start ])
        (nil)))

(jump_insn 22 21 23 4 init/initramfs.c:577 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(14)
11, 23, 30, 37, 38, 45, 46, 114, 118, 119, 728, 729, 730, 731


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(14)
11, 23, 30, 37, 38, 45, 46, 114, 118, 119, 728, 729, 730, 731
;; rd  gen 	(7)
7, 111, 726, 727, 732, 733, 734
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 47, 48, 49, 50, 51, 52, 53, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 726, 727, 732, 733, 734

;; Pred edge  4 [0.0%]  (fallthru)
(note 23 22 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 26 5 init/initramfs.c:601 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1153ef80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1153ef80>)
        (nil)))

(call_insn 26 25 28 5 init/initramfs.c:601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a86380 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 28 26 29 5 init/initramfs.c:602 (set (reg:SI 134 [ initrd_start.956 ])
        (mem/c/i:SI (reg/f:SI 139) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>) [0 initrd_start+0 S4 A32])
            (nil))))

(insn 29 28 30 5 init/initramfs.c:602 (set (reg/f:SI 143)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 init/initramfs.c:602 (set (reg:SI 145 [ initrd_end ])
        (mem/c/i:SI (reg/f:SI 143) [0 initrd_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>) [0 initrd_end+0 S4 A32])
            (nil))))

(insn 31 30 32 5 init/initramfs.c:602 (set (reg:SI 144)
        (minus:SI (reg:SI 145 [ initrd_end ])
            (reg:SI 134 [ initrd_start.956 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 145 [ initrd_end ])
        (nil)))

(insn 32 31 33 5 init/initramfs.c:602 (set (reg:SI 0 r0)
        (reg:SI 134 [ initrd_start.956 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ initrd_start.956 ])
        (nil)))

(insn 33 32 34 5 init/initramfs.c:602 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(call_insn 34 33 35 5 init/initramfs.c:602 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unpack_to_rootfs") [flags 0x3] <function_decl 0x114ad980 unpack_to_rootfs>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 34 36 5 init/initramfs.c:602 (set (reg/v/f:SI 133 [ err.957 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 36 35 37 5 init/initramfs.c:604 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ err.957 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 37 36 38 5 init/initramfs.c:604 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(19)
7, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(19)
7, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734
;; rd  gen 	(1)
6
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 47, 48, 49, 50, 51, 52, 53

;; Pred edge  5 [0.0%]  (fallthru)
(note 38 37 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 41 6 init/initramfs.c:605 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1163ce00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1163ce00>)
        (nil)))

(insn 41 40 42 6 init/initramfs.c:605 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ err.957 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ err.957 ])
        (nil)))

(call_insn 42 41 43 6 init/initramfs.c:605 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a86380 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
6, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	
;; rd  in  	(20)
6, 7, 23, 30, 37, 38, 45, 46, 111, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734
;; rd  gen 	(3)
109, 735, 736
;; rd  kill	(12)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 735, 736

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 43 42 44 7 151 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 7 init/initramfs.c:497 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 init/initramfs.c:497 (set (reg:SI 148 [ do_retain_initrd ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 88 [0x58])) [0 do_retain_initrd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 88 [0x58]))) [0 do_retain_initrd+0 S4 A32])
            (nil))))

(insn 47 46 48 7 init/initramfs.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ do_retain_initrd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ do_retain_initrd ])
        (nil)))

(jump_insn 48 47 49 7 init/initramfs.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736


;; Succ edge  9 [71.0%] 
;; Succ edge  8 [29.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 149 150
;; live  kill	 14 [lr]
;; rd  in  	(22)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736
;; rd  gen 	(2)
737, 738
;; rd  kill	(9)
47, 48, 49, 50, 51, 52, 53, 737, 738

;; Pred edge  7 [29.0%]  (fallthru)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 8 init/initramfs.c:517 (set (reg/f:SI 149)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 8 init/initramfs.c:517 (set (reg/f:SI 150)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 init/initramfs.c:517 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 149) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>) [0 initrd_start+0 S4 A32])
            (nil))))

(insn 53 52 54 8 init/initramfs.c:517 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 150) [0 initrd_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>) [0 initrd_end+0 S4 A32])
            (nil))))

(call_insn 54 53 55 8 init/initramfs.c:517 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_initrd_mem") [flags 0x41] <function_decl 0x114adb80 free_initrd_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 151 152 153
;; live  kill	
;; rd  in  	(24)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738
;; rd  gen 	(3)
739, 740, 741
;; rd  kill	(3)
739, 740, 741

;; Pred edge  7 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 152 ("skip") [1 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 init/initramfs.c:519 (set (reg/f:SI 151)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 9 init/initramfs.c:519 (set (reg:SI 152)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 9 init/initramfs.c:519 (set (mem/c/i:SI (reg/f:SI 151) [0 initrd_start+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 60 59 62 9 init/initramfs.c:520 (set (reg/f:SI 153)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 62 60 63 9 init/initramfs.c:520 (set (mem/c/i:SI (reg/f:SI 153) [0 initrd_end+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_DEAD (reg:SI 152)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
6, 7, 23, 30, 37, 38, 45, 46, 109, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(29)
6, 7, 11, 23, 30, 37, 38, 45, 46, 109, 114, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741
;; rd  gen 	(1)
0
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12

;; Pred edge  4 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 63 62 64 10 150 "" [1 uses])

(note 64 63 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 69 64 75 10 init/initramfs.c:610 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 75 69 0 10 init/initramfs.c:610 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 23, 30, 37, 38, 45, 46, 109, 114, 118, 119, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
