
;; Function error (error)[0:1311] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 9 -- before reload
;;   ======================================================

;;	  0-->     6 r134=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->     2 r133=r0                           :cortex_a8_default
;;	  3-->     7 r135=[r134]                       :cortex_a8_load_store_1
;;	  5-->     8 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  7-->     9 pc={(cc!=0x0)?L18:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 12 to 12 -- before reload
;;   ======================================================

;;	  0-->    12 [r134]=r133                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 12
;;   new tail = 12


;; Procedure interblock/speculative motions == 0/0 




error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={1d,2u} r135={1d,1u} 
;;    total ref usage 36{14d,22u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 2 2 init/initramfs.c:15 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 2 6 7 2 init/initramfs.c:14 (set (reg/v/f:SI 133 [ x ])
        (reg:SI 0 r0 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ x ])
        (nil)))

(insn 7 2 8 2 init/initramfs.c:15 (set (reg/f:SI 135 [ message ])
        (mem/f/c/i:SI (reg/f:SI 134) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 8 7 9 2 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ message ])
        (nil)))

(jump_insn 9 8 10 2 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  3 [21.6%]  (fallthru)
;; Succ edge  4 [78.4%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	

;; Pred edge  2 [21.6%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 18 3 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 134) [0 message+0 S4 A32])
        (reg/v/f:SI 133 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ x ])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [78.4%] 
(code_label 18 12 21 4 3 "" [1 uses])

(note 21 18 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 40 21 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_start (do_start)[0:1321] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


do_start

Dataflow summary:
def_info->table_size = 26, use_info->table_size = 53
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r137={1d,14u} r142={1d,1u} r145={1d} r146={1d,1u} r147={2d,2u} r149={1d,1u} r151={1d,1u} r155={1d,1u} r157={1d,1u} r159={1d,1u} 
;;    total ref usage 79{26d,52u,1e} in 28{28 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d11(25){ }d12(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; lr  def 	 24 [cc] 134 142 146 147 149 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 134 142 145 146 147 149 151
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 155 157 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 155 157 159
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u48(0){ }u49(11){ }u50(13){ }u51(14){ }u52(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 65 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 24 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 54 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 17 to worklist
  Adding insn 13 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 5 to 10 -- before reload
;;   ======================================================

;;	  0-->     5 r137=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->     8 r133=[r137+0x8]                   :cortex_a8_load_store_1
;;	  4-->     6 r135=[r137+0x4]                   :cortex_a8_load_store_1
;;	  5-->     9 cc=cmp(r133,0x6d)                 :cortex_a8_default
;;	  7-->    10 pc={(leu(cc,0x0))?L33:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 5
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 13 to 65 -- before reload
;;   ======================================================

;;	  0-->    13 r134=[r137+0xc]                   :cortex_a8_load_store_1
;;	  0-->    22 r146=0x6e                         :cortex_a8_default
;;	  1-->    21 r147=[r137+0x18]                  :cortex_a8_load_store_1
;;	  1-->    26 r149=r133-0x6e                    :cortex_a8_default
;;	  2-->    27 [r137+0x8]=r149                   :cortex_a8_load_store_1
;;	  2-->    17 r142=r134+0x6e                    :cortex_a8_default
;;	  3-->    23 {r147=r147+r146;clobber cc;}      :cortex_a8_default
;;	  3-->    18 [r137+0xc]=r142                   :cortex_a8_load_store_1
;;	  4-->    24 [r137+0x18]=r147                  :cortex_a8_load_store_1
;;	  4-->    29 r151=0x2                          :cortex_a8_default
;;	  5-->    30 [r137+0x20]=r151                  :cortex_a8_load_store_1
;;	  6-->    15 [r137+0x10]=r134                  :cortex_a8_load_store_1
;;	  6-->    65 pc=L48                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 13
;;   new tail = 65

;;   ======================================================
;;   -- basic block 4 from 36 to 47 -- before reload
;;   ======================================================

;;	  0-->    38 [r137+0x24]=r135                  :cortex_a8_load_store_1
;;	  0-->    40 r155=0x6e                         :cortex_a8_default
;;	  1-->    41 [r137+0x28]=r155                  :cortex_a8_load_store_1
;;	  1-->    43 r157=0x2                          :cortex_a8_default
;;	  2-->    44 [r137+0x2c]=r157                  :cortex_a8_load_store_1
;;	  2-->    46 r159=0x1                          :cortex_a8_default
;;	  3-->    47 [r137+0x20]=r159                  :cortex_a8_load_store_1
;;	  4-->    36 [r137+0x10]=r135                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 36
;;   new tail = 47

;;   ======================================================
;;   -- basic block 5 from 54 to 60 -- before reload
;;   ======================================================

;;	  0-->    54 r0=0x0                            :cortex_a8_default
;;	  0-->    60 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 54
;;   new tail = 60


;; Procedure interblock/speculative motions == 0/0 




do_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,2u} r137={1d,14u} r142={1d,1u} r145={1d} r146={1d,1u} r147={2d,2u} r149={1d,1u} r151={1d,1u} r155={1d,1u} r157={1d,1u} r159={1d,1u} 
;;    total ref usage 79{26d,52u,1e} in 28{28 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 8 2 init/initramfs.c:200 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 5 6 2 init/initramfs.c:184 (set (reg:SI 133 [ count.331 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 6 8 9 2 init/initramfs.c:200 (set (reg/f:SI 135 [ header_buf.335 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 header_buf+0 S4 A32])
        (nil)))

(insn 9 6 10 2 init/initramfs.c:184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ count.331 ])
            (const_int 109 [0x6d]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 init/initramfs.c:184 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; lr  def 	 24 [cc] 134 142 146 147 149 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 134 142 146 147 149 151
;; live  kill	 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 22 3 init/initramfs.c:185 (set (reg/f:SI 134 [ victim.332 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 22 13 21 3 init/initramfs.c:173 (set (reg:DI 146)
        (const_int 110 [0x6e])) 163 {*arm_movdi} (nil))

(insn 21 22 26 3 init/initramfs.c:173 (set (reg:DI 147)
        (mem/c/i:DI (plus:SI (reg/f:SI 137)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 26 21 27 3 init/initramfs.c:174 (set (reg:SI 149)
        (plus:SI (reg:SI 133 [ count.331 ])
            (const_int -110 [0xffffffffffffff92]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 133 [ count.331 ])
        (nil)))

(insn 27 26 17 3 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 17 27 23 3 init/initramfs.c:172 (set (reg/f:SI 142)
        (plus:SI (reg/f:SI 134 [ victim.332 ])
            (const_int 110 [0x6e]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 134 [ victim.332 ])
        (nil)))

(insn 23 17 18 3 init/initramfs.c:173 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg:DI 147)
                    (reg:DI 146)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 146)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg:DI 145 [ this_header ])
                    (const_int 110 [0x6e]))
                (nil)))))

(insn 18 23 24 3 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))

(insn 24 18 29 3 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 137)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 147)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 147)
        (nil)))

(insn 29 24 30 3 init/initramfs.c:187 (set (reg:SI 151)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 15 3 init/initramfs.c:187 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (expr_list:REG_EQUAL (const_int 2 [0x2])
                (nil)))))

(insn 15 30 65 3 init/initramfs.c:185 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 134 [ victim.332 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 65 15 66 3 (set (pc)
        (label_ref 48)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [100.0%] 

(barrier 66 65 33)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137
;; lr  def 	 155 157 159
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 155 157 159
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 33 66 34 4 7 "" [1 uses])

(note 34 33 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 38 34 40 4 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 135 [ header_buf.335 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ header_buf.335 ])
        (nil)))

(insn 40 38 41 4 init/initramfs.c:190 (set (reg:SI 155)
        (const_int 110 [0x6e])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 43 4 init/initramfs.c:190 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 110 [0x6e])
            (nil))))

(insn 43 41 44 4 init/initramfs.c:191 (set (reg:SI 157)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 46 4 init/initramfs.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 46 44 47 4 init/initramfs.c:192 (set (reg:SI 159)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 36 4 init/initramfs.c:192 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 36 47 48 4 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 135 [ header_buf.335 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 48 36 49 5 8 "" [1 uses])

(note 49 48 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 49 60 5 init/initramfs.c:202 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 54 67 5 init/initramfs.c:202 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 67 60 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_skip (do_skip)[0:1324] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 14 -- before reload
;;   ======================================================

;;	  0-->     5 r140=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->     6 r138=[r140+0x18]                  :cortex_a8_load_store_1
;;	  4-->     8 r137=[r140+0x8]                   :cortex_a8_load_store_1
;;	  5-->    81 r165=[r140+0x34]                  :cortex_a8_load_store_1
;;	  6-->    10 {r136=zxn(r137)+r138;clobber cc;} :cortex_a8_default
;;	  6-->    80 r164=[r140+0x30]                  :cortex_a8_load_store_1
;;	  7-->    13 cc=cmp(r165,r136#4)               :cortex_a8_default
;;	  9-->    14 pc={(cc>0x0)?L79:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 5
;;   new tail = 14

;;   ======================================================
;;   -- basic block 3 from 16 to 16 -- before reload
;;   ======================================================

;;	  0-->    16 pc={(cc!=0x0)?L38:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 16
;;   new tail = 16

;;   ======================================================
;;   -- basic block 4 from 17 to 18 -- before reload
;;   ======================================================

;;	  0-->    17 cc=cmp(r164,r136#0)               :cortex_a8_default
;;	  2-->    18 pc={(leu(cc,0x0))?L38:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 17
;;   new tail = 18

;;   ======================================================
;;   -- basic block 5 from 25 to 82 -- before reload
;;   ======================================================

;;	  0-->    25 r144=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    33 r150=0x0                          :cortex_a8_default
;;	  1-->    35 r134=0x1                          :cortex_a8_default
;;	  3-->    27 r146=[r144+0xc]                   :cortex_a8_load_store_1
;;	  4-->    34 [r144+0x8]=r150                   :cortex_a8_load_store_1
;;	  5-->    28 r147=r146+r137                    :cortex_a8_default
;;	  5-->    31 [r144+0x18]=r136                  :cortex_a8_load_store_1
;;	  6-->    29 [r144+0xc]=r147                   :cortex_a8_load_store_1
;;	  6-->    82 pc=L58                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 25
;;   new tail = 82

;;   ======================================================
;;   -- basic block 6 from 40 to 57 -- before reload
;;   ======================================================

;;	  0-->    41 r151=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    57 r134=0x0                          :cortex_a8_default
;;	  1-->    40 r133=r164-r138#0                  :cortex_a8_default
;;	  2-->    48 {r157=zxn(r133)+r138;clobber cc;} :cortex_a8_default
;;	  2-->    51 r159=r137-r133                    :cortex_a8_default
;;	  3-->    55 r162=[r151+0x2c]                  :cortex_a8_load_store_1
;;	  4-->    43 r153=[r151+0xc]                   :cortex_a8_load_store_1
;;	  5-->    49 [r151+0x18]=r157                  :cortex_a8_load_store_1
;;	  6-->    56 [r151+0x20]=r162                  :cortex_a8_load_store_1
;;	  6-->    44 r154=r153+r133                    :cortex_a8_default
;;	  7-->    52 [r151+0x8]=r159                   :cortex_a8_load_store_1
;;	  8-->    45 [r151+0xc]=r154                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 8
;;   new head = 40
;;   new tail = 57

;;   ======================================================
;;   -- basic block 7 from 64 to 70 -- before reload
;;   ======================================================

;;	  0-->    64 r0=r134                           :cortex_a8_default
;;	  0-->    70 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 64
;;   new tail = 70


;; Procedure interblock/speculative motions == 0/0 




do_skip

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,7u} r12={1d} r13={1d,7u} r14={1d,1u} r24={4d,3u} r25={1d,7u} r26={1d,6u} r133={1d,3u} r134={2d,1u} r136={1d,3u} r137={1d,3u} r138={1d,3u} r140={1d,4u} r144={1d,4u} r146={1d,1u} r147={1d,1u} r150={1d,1u} r151={1d,6u} r153={1d,1u} r154={1d,1u} r157={1d,1u} r159={1d,1u} r162={1d,1u} r164={1d,2u} r165={1d,1u} 
;;    total ref usage 105{34d,71u,0e} in 34{34 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138 140 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138 140 164 165
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 2 5 2 NOTE_INSN_DELETED)

(insn 5 9 6 2 init/initramfs.c:250 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:250 (set (reg:DI 138 [ this_header.355 ])
        (mem/c/i:DI (plus:SI (reg/f:SI 140)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 8 6 81 2 init/initramfs.c:250 (set (reg:SI 137 [ count.356 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 81 8 10 2 init/initramfs.c:250 (set (reg:SI 165 [ next_header.357+4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 52 [0x34])) [0 next_header+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 52 [0x34]))) [0 next_header+4 S4 A32])
            (nil))))

(insn 10 81 80 2 init/initramfs.c:250 (parallel [
            (set (reg:DI 136 [ D.25909 ])
                (plus:DI (zero_extend:DI (reg:SI 137 [ count.356 ]))
                    (reg:DI 138 [ this_header.355 ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 80 10 13 2 init/initramfs.c:250 (set (reg:SI 164 [ next_header.357 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 48 [0x30])) [0 next_header+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 48 [0x30]))) [0 next_header+0 S4 A64])
        (nil)))

(insn 13 80 14 2 init/initramfs.c:250 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ next_header.357+4 ])
            (subreg:SI (reg:DI 136 [ D.25909 ]) 4))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165 [ next_header.357+4 ])
        (nil)))

(jump_insn 14 13 72 2 init/initramfs.c:250 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 72 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 16 72 73 3 init/initramfs.c:250 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [29.0%]  (fallthru)
(note 73 16 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 73 18 4 init/initramfs.c:250 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ next_header.357 ])
            (subreg:SI (reg:DI 136 [ D.25909 ]) 0))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 79 4 init/initramfs.c:250 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 164


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 134 144 146 147 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 134 144 146 147 150
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 79 18 24 5 19 "" [1 uses])

(note 24 79 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 33 5 init/initramfs.c:172 (set (reg/f:SI 144)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 33 25 35 5 init/initramfs.c:174 (set (reg:SI 150)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 33 27 5 init/initramfs.c:252 (set (reg:SI 134 [ D.25913 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 27 35 34 5 init/initramfs.c:172 (set (reg/f:SI 146 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 34 27 28 5 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_DEAD (reg/f:SI 144)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 28 34 31 5 init/initramfs.c:172 (set (reg:SI 147)
        (plus:SI (reg/f:SI 146 [ victim ])
            (reg:SI 137 [ count.356 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 146 [ victim ])
        (expr_list:REG_DEAD (reg:SI 137 [ count.356 ])
            (nil))))

(insn 31 28 29 5 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 144)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 136 [ D.25909 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 136 [ D.25909 ])
        (nil)))

(insn 29 31 82 5 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 144)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(jump_insn 82 29 83 5 init/initramfs.c:252 (set (pc)
        (label_ref 58)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  7 [100.0%] 

(barrier 83 82 38)

;; Start of basic block ( 3 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 164
;; lr  def 	 24 [cc] 133 134 151 153 154 157 159 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 164
;; live  gen 	 133 134 151 153 154 157 159 162
;; live  kill	 24 [cc]

;; Pred edge  3 [71.0%] 
;; Pred edge  4 [50.0%] 
(code_label 38 83 39 6 15 "" [2 uses])

(note 39 38 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 47 39 41 6 NOTE_INSN_DELETED)

(insn 41 47 57 6 init/initramfs.c:172 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 57 41 40 6 init/initramfs.c:256 (set (reg:SI 134 [ D.25913 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 40 57 48 6 init/initramfs.c:254 (set (reg:SI 133 [ D.25916 ])
        (minus:SI (reg:SI 164 [ next_header.357 ])
            (subreg:SI (reg:DI 138 [ this_header.355 ]) 0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 164 [ next_header.357 ])
        (nil)))

(insn 48 40 51 6 init/initramfs.c:173 (parallel [
            (set (reg:DI 157)
                (plus:DI (zero_extend:DI (reg:SI 133 [ D.25916 ]))
                    (reg:DI 138 [ this_header.355 ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 138 [ this_header.355 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 51 48 55 6 init/initramfs.c:174 (set (reg:SI 159)
        (minus:SI (reg:SI 137 [ count.356 ])
            (reg:SI 133 [ D.25916 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 137 [ count.356 ])
        (expr_list:REG_DEAD (reg:SI 133 [ D.25916 ])
            (nil))))

(insn 55 51 43 6 init/initramfs.c:255 (set (reg:SI 162 [ next_state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 44 [0x2c]))) [0 next_state+0 S4 A32])
        (nil)))

(insn 43 55 49 6 init/initramfs.c:172 (set (reg/f:SI 153 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 49 43 56 6 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 151)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 157)
        (nil)))

(insn 56 49 44 6 init/initramfs.c:255 (set (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162 [ next_state ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162 [ next_state ])
        (expr_list:REG_DEAD (reg/f:SI 151)
            (nil))))

(insn 44 56 52 6 init/initramfs.c:172 (set (reg:SI 154)
        (plus:SI (reg/f:SI 153 [ victim ])
            (reg:SI 133 [ D.25916 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 153 [ victim ])
        (nil)))

(insn 52 44 45 6 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 45 52 58 6 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 58 45 59 7 17 "" [1 uses])

(note 59 58 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 64 59 70 7 init/initramfs.c:258 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25913 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.25913 ])
        (nil)))

(insn 70 64 84 7 init/initramfs.c:258 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 84 70 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_reset (do_reset)[0:1325] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)


do_reset

Dataflow summary:
def_info->table_size = 44, use_info->table_size = 94
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,12u} r12={1d} r13={1d,12u} r14={1d,1u} r24={9d,5u} r25={1d,12u} r26={1d,11u} r227={1d,2u} r230={2d,2u} r231={2d,3u,1d} r232={2d,3u} r233={2d,6u,2d} r234={1d,3u} r236={1d,1u} r238={1d,4u} r241={1d,3u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r249={1d,1u} r252={1d,5u} r253={1d,1u} r256={1d,1u} r257={1d,2u} r258={1d,1u} r262={1d,1u} r263={1d,2u} r264={1d,2u} r265={3d,3u} r266={3d,3u} 
;;    total ref usage 161{51d,107u,3e} in 52{52 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d18(25){ }d19(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 232 233 234 238 262 263 264
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 232 233 234 235 238 262
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262

( 2 7 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233 234
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262

( 4 )->[5]->( 10 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 263 264
;; lr  def 	 24 [cc] 230 241 244 265
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235
;; live  gen 	 230 241 244
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 3 )->[6]->( 7 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 262
;; lr  def 	 24 [cc] 232 233 236 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	 24 [cc] 232 233 236 245
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245 262

( 6 )->[7]->( 3 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 262

( 12 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 247
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 24 [cc] 247
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 249
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 11 9 8 5 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 6 )->[11]->( 12 10 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 245 263 264
;; lr  def 	 24 [cc] 227 231 252 253 256 257 258 266
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 235 245
;; live  gen 	 24 [cc] 227 231 252 253 256 257 258
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252

( 11 )->[12]->( 8 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u89(0){ }u90(11){ }u91(13){ }u92(14){ }u93(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 109 to worklist
  Adding insn 111 to worklist
  Adding insn 190 to worklist
  Adding insn 120 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 131 to worklist
  Adding insn 194 to worklist
  Adding insn 139 to worklist
  Adding insn 143 to worklist
  Adding insn 180 to worklist
  Adding insn 169 to worklist
  Adding insn 162 to worklist
  Adding insn 159 to worklist
  Adding insn 157 to worklist
  Adding insn 197 to worklist
Finished finding needed instructions:
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
processing block 10 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 174 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 142 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
  Adding insn 138 to worklist
  Adding insn 137 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
  Adding insn 168 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 161 to worklist
  Adding insn 156 to worklist
  Adding insn 155 to worklist
  Adding insn 153 to worklist
  Adding insn 210 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
  Adding insn 152 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 262 263 264
  Adding insn 130 to worklist
  Adding insn 127 to worklist
  Adding insn 189 to worklist
  Adding insn 125 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 119 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 203 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
  Adding insn 110 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
  Adding insn 108 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
  Adding insn 126 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 99 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
;;   ======================================================
;;   -- basic block 3 from 108 to 109 -- before reload
;;   ======================================================

;;	  0-->   108 cc=cmp(r233#0,r234)               :cortex_a8_default
changing bb of uid 189
  from 6 to 3
;;	  0-->   189 r245=0x1                          :cortex_a8_default
;;	  2-->   109 pc={(cc!=0x0)?L123:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 108
;;   new tail = 109

;;   ======================================================
;;   -- basic block 4 from 110 to 111 -- before reload
;;   ======================================================

;;	  0-->   110 cc=cmp(r233#4,0x0)                :cortex_a8_default
;;	  2-->   111 pc={(cc!=0x0)?L123:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 110
;;   new tail = 111

;;   ======================================================
;;   -- basic block 6 from 125 to 131 -- before reload
;;   ======================================================

;;	  0-->   125 r236=zxn([r232++])                :cortex_a8_load_store_1
;;	  0-->   127 {r233=r233+r262;clobber cc;}      :cortex_a8_default
;;	  2-->   130 cc=cmp(r236,0x0)                  :cortex_a8_default
;;	  4-->   131 pc={(cc!=0x0)?L192:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 125
;;   new tail = 131

;;   ======================================================
;;   -- basic block 7 from 194 to 194 -- before reload
;;   ======================================================

;;	  0-->   194 pc=L129                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 194
;;   new tail = 194

;;   ======================================================
;;   -- basic block 2 from 99 to 126 -- before reload
;;   ======================================================

;;	  0-->    99 r238=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   106 r233=0x0                          :cortex_a8_default
;;	  1-->   126 r262=0x1                          :cortex_a8_default
;;	  3-->   104 r232=[r238+0xc]                   :cortex_a8_load_store_1
;;	  4-->   201 r263=[r238+0x18]                  :cortex_a8_load_store_1
;;	  5-->   202 r264=[r238+0x1c]                  :cortex_a8_load_store_1
;;	  6-->   102 r234=[r238+0x8]                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 99
;;   new tail = 126

;;   ======================================================
;;   -- basic block 5 from 203 to 190 -- before reload
;;   ======================================================

;;	  0-->   114 r241=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   203 clobber r265                      :nothing
;;	  0-->   204 r265#0=r263                       :cortex_a8_default
;;	  1-->   205 r265#4=r264                       :cortex_a8_default
;;	  1-->   119 r244=r234-r233#0                  :cortex_a8_default
;;	  2-->   206 r230=r265                         :cortex_a8_default
;;	  3-->   120 [r241+0x8]=r244                   :cortex_a8_load_store_1
;;	  3-->   113 {r230=r233+r230;clobber cc;}      :cortex_a8_default
;;	  4-->   115 [r241+0xc]=r232                   :cortex_a8_load_store_1
;;	  5-->   117 [r241+0x18]=r230                  :cortex_a8_load_store_1
;;	  5-->   190 pc=L144                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 203
;;   new tail = 190

;;   ======================================================
;;   -- basic block 8 from 137 to 139 -- before reload
;;   ======================================================

;;	  0-->   137 r247=[r252]                       :cortex_a8_load_store_1
;;	  2-->   138 cc=cmp(r247,0x0)                  :cortex_a8_default
;;	  4-->   139 pc={(cc!=0x0)?L144:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 137
;;   new tail = 139

;;   ======================================================
;;   -- basic block 9 from 142 to 143 -- before reload
;;   ======================================================

;;	  0-->   142 r249=`*.LC0'                      :cortex_a8_load_store_1
;;	  3-->   143 [r252]=r249                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 142
;;   new tail = 143

;;   ======================================================
;;   -- basic block 10 from 174 to 180 -- before reload
;;   ======================================================

;;	  0-->   174 r0=0x1                            :cortex_a8_default
;;	  0-->   180 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 174
;;   new tail = 180

;;   ======================================================
;;   -- basic block 11 from 152 to 169 -- before reload
;;   ======================================================

;;	  0-->   207 clobber r266                      :nothing
;;	  0-->   208 r266#0=r263                       :cortex_a8_default
;;	  0-->   152 {r227=r233-r245;clobber cc;}      :cortex_a8_default
;;	  1-->   209 r266#4=r264                       :cortex_a8_default
;;	  1-->   164 r258=0x3                          :cortex_a8_default
;;	  2-->   210 r231=r266                         :cortex_a8_default
;;	  2-->   155 r252=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->   153 {r231=r227+r231;clobber cc;}      :cortex_a8_default
;;	  3-->   161 r256=r234-r227#0                  :cortex_a8_default
;;	  4-->   165 r257=r231&r258                    :cortex_a8_default
;;	  4-->   156 r253=r232-0x1                     :cortex_a8_default
;;	  5-->   168 {cc=cmp(r257#0|r257#4,0x0);clobber:cortex_a8_default
;;	  5-->   157 [r252+0xc]=r253                   :cortex_a8_load_store_1
;;	  6-->   162 [r252+0x8]=r256                   :cortex_a8_load_store_1
;;	  7-->   159 [r252+0x18]=r231                  :cortex_a8_load_store_1
;;	  7-->   169 pc={(cc==0x0)?L144:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 152
;;   new tail = 169

;;   ======================================================
;;   -- basic block 12 from 197 to 197 -- before reload
;;   ======================================================

;;	  0-->   197 pc=L163                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 197
;;   new tail = 197


;; Procedure interblock/speculative motions == 1/1 




do_reset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,12u} r12={1d} r13={1d,12u} r14={1d,1u} r24={9d,5u} r25={1d,12u} r26={1d,11u} r227={1d,2u} r230={2d,2u} r231={2d,3u,1d} r232={2d,3u} r233={2d,6u,2d} r234={1d,3u} r236={1d,1u} r238={1d,4u} r241={1d,3u} r244={1d,1u} r245={1d,1u} r247={1d,1u} r249={1d,1u} r252={1d,5u} r253={1d,1u} r256={1d,1u} r257={1d,2u} r258={1d,1u} r262={1d,1u} r263={1d,2u} r264={1d,2u} r265={3d,3u} r266={3d,3u} 
;;    total ref usage 161{51d,107u,3e} in 52{52 regular + 0 call} insns.
(note 95 0 97 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 232 233 234 238 262 263 264
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 232 233 234 238 262 263 264
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 97 95 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 96 97 99 2 NOTE_INSN_FUNCTION_BEG)

(insn 99 96 106 2 init/initramfs.c:261 (set (reg/f:SI 238)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 106 99 126 2 init/initramfs.c:260 (set (reg:DI 233 [ ivtmp.533 ])
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 126 106 104 2 init/initramfs.c:262 discrim 2 (set (reg:DI 262)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 104 126 201 2 init/initramfs.c:261 (set (reg:SI 232 [ ivtmp.535 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 238)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 victim+0 S4 A32])
            (nil))))

(insn 201 104 202 2 init/initramfs.c:261 (set (reg:SI 263 [ this_header_lsm.527 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 24 [0x18])) [0 this_header+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 202 201 102 2 init/initramfs.c:261 (set (reg:SI 264 [ this_header_lsm.527+4 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 28 [0x1c])) [0 this_header+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 102 202 129 2 init/initramfs.c:261 (set (reg:SI 234 [ count_lsm.528 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 238)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 7) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233 234
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (dfs_back)
(code_label 129 102 107 3 25 "" [1 uses])

(note 107 129 108 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 189 3 init/initramfs.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 0)
            (reg:SI 234 [ count_lsm.528 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 189 108 109 3 init/initramfs.c:262 discrim 2 (set (reg:DI 245)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(jump_insn 109 189 182 3 init/initramfs.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 233
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [29.0%]  (fallthru)
(note 182 109 110 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 110 182 111 4 init/initramfs.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 4 init/initramfs.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264


;; Succ edge  6 [71.0%] 
;; Succ edge  5 [29.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 263 264
;; lr  def 	 24 [cc] 230 241 244 265
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 263 264
;; live  gen 	 230 241 244 265
;; live  kill	 24 [cc] 265

;; Pred edge  4 [29.0%]  (fallthru,loop_exit)
(note 112 111 114 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 114 112 203 5 init/initramfs.c:260 (set (reg/f:SI 241)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 203 114 204 5 init/initramfs.c:260 (clobber (reg:DI 265 [ D.26681 ])) -1 (nil))

(insn 204 203 205 5 init/initramfs.c:260 (set (subreg:SI (reg:DI 265 [ D.26681 ]) 0)
        (reg:SI 263 [ this_header_lsm.527 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 263 [ this_header_lsm.527 ])
        (nil)))

(insn 205 204 119 5 init/initramfs.c:260 (set (subreg:SI (reg:DI 265 [ D.26681 ]) 4)
        (reg:SI 264 [ this_header_lsm.527+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 264 [ this_header_lsm.527+4 ])
        (nil)))

(insn 119 205 206 5 init/initramfs.c:260 (set (reg:SI 244)
        (minus:SI (reg:SI 234 [ count_lsm.528 ])
            (subreg:SI (reg:DI 233 [ ivtmp.533 ]) 0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 234 [ count_lsm.528 ])
        (expr_list:REG_DEAD (reg:DI 233 [ ivtmp.533 ])
            (nil))))

(insn 206 119 120 5 init/initramfs.c:260 (set (reg:DI 230 [ D.26681 ])
        (reg:DI 265 [ D.26681 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 265 [ D.26681 ])
        (nil)))

(insn 120 206 113 5 init/initramfs.c:260 (set (mem/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 244)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_DEAD (reg/f:SI 241)
            (nil))))

(insn 113 120 115 5 init/initramfs.c:260 (parallel [
            (set (reg:DI 230 [ D.26681 ])
                (plus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 230 [ D.26681 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 115 113 117 5 init/initramfs.c:260 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 232 [ ivtmp.535 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 232 [ ivtmp.535 ])
        (nil)))

(insn 117 115 190 5 init/initramfs.c:260 (set (mem/c/i:DI (plus:SI (reg/f:SI 241)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 230 [ D.26681 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 230 [ D.26681 ])
        (nil)))

(jump_insn 190 117 191 5 (set (pc)
        (label_ref 144)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%] 

(barrier 191 190 123)

;; Start of basic block ( 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 262
;; lr  def 	 24 [cc] 232 233 236 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 262 263 264
;; live  gen 	 24 [cc] 232 233 236 245
;; live  kill	 24 [cc]

;; Pred edge  4 [71.0%] 
;; Pred edge  3 [71.0%] 
(code_label 123 191 124 6 23 "" [2 uses])

(note 124 123 125 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 127 6 init/initramfs.c:262 discrim 2 (set (reg:SI 236 [ D.25927 ])
        (zero_extend:SI (mem:QI (post_inc:SI (reg:SI 232 [ ivtmp.535 ])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_INC (reg:SI 232 [ ivtmp.535 ])
        (nil)))

(insn 127 125 130 6 init/initramfs.c:262 discrim 2 (parallel [
            (set (reg:DI 233 [ ivtmp.533 ])
                (plus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 262)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (expr_list:REG_EQUAL (plus:DI (reg:DI 233 [ ivtmp.533 ])
                (const_int 1 [0x1]))
            (nil))))

(insn 130 127 131 6 init/initramfs.c:262 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 236 [ D.25927 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 236 [ D.25927 ])
        (nil)))

(jump_insn 131 130 193 6 init/initramfs.c:262 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 262 263 264


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%]  (loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  gen 	
;; live  kill	

;; Pred edge  6 [0.0%]  (fallthru)
(note 193 131 194 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 194 193 195 7 (set (pc)
        (label_ref 129)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 262 263 264


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 195 194 163)

;; Start of basic block ( 12) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 247
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 24 [cc] 247
;; live  kill	

;; Pred edge  12 [100.0%] 
(code_label 163 195 135 8 27 "" [1 uses])

(note 135 163 137 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 137 135 138 8 init/initramfs.c:15 (set (reg/f:SI 247 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 138 137 139 8 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 247 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 247 [ message ])
        (nil)))

(jump_insn 139 138 140 8 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252


;; Succ edge  9 [21.6%]  (fallthru)
;; Succ edge  10 [78.4%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 249
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	 249
;; live  kill	

;; Pred edge  8 [21.6%]  (fallthru)
(note 140 139 142 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 142 140 143 9 init/initramfs.c:16 (set (reg/f:SI 249)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11561d50>)) 167 {*arm_movsi_insn} (nil))

(insn 143 142 144 9 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 252)
        (expr_list:REG_DEAD (reg/f:SI 249)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11561d50>)
                (nil)))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 11 9 8 5) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  11 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [78.4%] 
;; Pred edge  5 [100.0%] 
(code_label 144 143 145 10 24 "" [3 uses])

(note 145 144 174 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 174 145 180 10 init/initramfs.c:267 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 180 174 192 10 init/initramfs.c:267 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 263 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 232 233 234 245 263 264
;; lr  def 	 24 [cc] 227 231 252 253 256 257 258 266
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 232 233 234 245 263 264
;; live  gen 	 24 [cc] 227 231 252 253 256 257 258 266
;; live  kill	 24 [cc] 266

;; Pred edge  6 [100.0%]  (loop_exit)
(code_label 192 180 150 11 30 "" [1 uses])

(note 150 192 166 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 166 150 167 11 NOTE_INSN_DELETED)

(note 167 166 207 11 NOTE_INSN_DELETED)

(insn 207 167 208 11 init/initramfs.c:260 (clobber (reg:DI 266 [ D.26679 ])) -1 (nil))

(insn 208 207 152 11 init/initramfs.c:260 (set (subreg:SI (reg:DI 266 [ D.26679 ]) 0)
        (reg:SI 263 [ this_header_lsm.527 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 263 [ this_header_lsm.527 ])
        (nil)))

(insn 152 208 209 11 init/initramfs.c:267 (parallel [
            (set (reg:DI 227 [ ivtmp.554 ])
                (minus:DI (reg:DI 233 [ ivtmp.533 ])
                    (reg:DI 245)))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg:DI 245)
        (expr_list:REG_DEAD (reg:DI 233 [ ivtmp.533 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 233 [ ivtmp.533 ])
                        (const_int -1 [0xffffffffffffffff]))
                    (nil))))))

(insn 209 152 164 11 init/initramfs.c:260 (set (subreg:SI (reg:DI 266 [ D.26679 ]) 4)
        (reg:SI 264 [ this_header_lsm.527+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 264 [ this_header_lsm.527+4 ])
        (nil)))

(insn 164 209 210 11 init/initramfs.c:264 discrim 1 (set (reg:DI 258)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 210 164 155 11 init/initramfs.c:260 (set (reg:DI 231 [ D.26679 ])
        (reg:DI 266 [ D.26679 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 266 [ D.26679 ])
        (nil)))

(insn 155 210 153 11 init/initramfs.c:260 (set (reg/f:SI 252)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 153 155 161 11 init/initramfs.c:260 (parallel [
            (set (reg:DI 231 [ D.26679 ])
                (plus:DI (reg:DI 227 [ ivtmp.554 ])
                    (reg:DI 231 [ D.26679 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 161 153 165 11 init/initramfs.c:260 (set (reg:SI 256)
        (minus:SI (reg:SI 234 [ count_lsm.528 ])
            (subreg:SI (reg:DI 227 [ ivtmp.554 ]) 0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 234 [ count_lsm.528 ])
        (expr_list:REG_DEAD (reg:DI 227 [ ivtmp.554 ])
            (nil))))

(insn 165 161 156 11 init/initramfs.c:264 discrim 1 (set (reg:DI 257)
        (and:DI (reg:DI 231 [ D.26679 ])
            (reg:DI 258))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 258)
        (expr_list:REG_DEAD (reg:DI 231 [ D.26679 ])
            (expr_list:REG_EQUAL (and:DI (reg:DI 231 [ D.26679 ])
                    (const_int 3 [0x3]))
                (nil)))))

(insn 156 165 168 11 init/initramfs.c:260 (set (reg:SI 253)
        (plus:SI (reg:SI 232 [ ivtmp.535 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 232 [ ivtmp.535 ])
        (nil)))

(insn 168 156 157 11 init/initramfs.c:264 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (subreg:SI (reg:DI 257) 0)
                        (subreg:SI (reg:DI 257) 4))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:DI 257)
        (nil)))

(insn 157 168 162 11 init/initramfs.c:260 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 253)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 253)
        (nil)))

(insn 162 157 159 11 init/initramfs.c:260 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 256)
        (nil)))

(insn 159 162 169 11 init/initramfs.c:260 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 231 [ D.26679 ])) 163 {*arm_movdi} (nil))

(jump_insn 169 159 196 11 init/initramfs.c:264 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 11 -> ( 12 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252


;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  gen 	
;; live  kill	

;; Pred edge  11 [0.0%]  (fallthru)
(note 196 169 197 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 197 196 198 12 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 252


;; Succ edge  8 [100.0%] 

(barrier 198 197 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_buffer (flush_buffer)[0:1332] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 11 -- before reload
;;   ======================================================

;;	  0-->     8 r142=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->     3 r137=r1                           :cortex_a8_default
;;	  1-->     2 r140=r0                           :cortex_a8_default
;;	  1-->     7 r141=r137                         :cortex_a8_default
;;	  3-->     9 r143=[r142]                       :cortex_a8_load_store_1
;;	  5-->    10 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  7-->    11 pc={(cc==0x0)?L16:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 110 -- before reload
;;   ======================================================

;;	  0-->    13 r137=0xffffffffffffffff           :cortex_a8_default
;;	  0-->   110 pc=L83                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 13
;;   new tail = 110

;;   ======================================================
;;   -- basic block 4 from 18 to 113 -- before reload
;;   ======================================================

;;	  0-->    53 r166=r142                         :cortex_a8_default
;;	  0-->    18 r138=r140                         :cortex_a8_default
;;	  1-->   103 r167=r166                         :cortex_a8_default
;;	  1-->    49 r168=`*.LC1'                      :cortex_a8_load_store_1
;;	  2-->    41 r169=0x7                          :cortex_a8_default
;;	  2-->   113 pc=L112                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 18
;;   new tail = 113

;;   ======================================================
;;   -- basic block 5 from 22 to 25 -- before reload
;;   ======================================================

;;	  0-->    23 r136=zxn([r138+r135])             :cortex_a8_load_store_1
;;	  0-->    22 r133=r138+r135                    :cortex_a8_default
;;	  2-->    24 cc=cmp(r136,0x30)                 :cortex_a8_default
;;	  4-->    25 pc={(cc!=0x0)?L34:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 22
;;   new tail = 25

;;   ======================================================
;;   -- basic block 6 from 27 to 115 -- before reload
;;   ======================================================

;;	  0-->    27 r141=r141-r135                    :cortex_a8_default
;;	  0-->    30 [r167+0x20]=r163                  :cortex_a8_load_store_1
;;	  1-->    31 r138=r133                         :cortex_a8_default
;;	  1-->   115 pc=L112                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 27
;;   new tail = 115

;;   ======================================================
;;   -- basic block 7 from 36 to 37 -- before reload
;;   ======================================================

;;	  0-->    36 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  2-->    37 pc={(cc!=0x0)?L46:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 36
;;   new tail = 37

;;   ======================================================
;;   -- basic block 8 from 39 to 117 -- before reload
;;   ======================================================

;;	  0-->    39 r141=r141-r135                    :cortex_a8_default
;;	  0-->    42 [r167+0x20]=r169                  :cortex_a8_load_store_1
;;	  1-->    43 r138=r133                         :cortex_a8_default
;;	  1-->   117 pc=L112                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 39
;;   new tail = 117

;;   ======================================================
;;   -- basic block 9 from 50 to 50 -- before reload
;;   ======================================================

;;	  0-->    50 [r167]=r168                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 50
;;   new tail = 50

;;   ======================================================
;;   -- basic block 10 from 54 to 56 -- before reload
;;   ======================================================

;;	  0-->    54 [r166+0x8]=r141                   :cortex_a8_load_store_1
;;	  1-->    56 [r166+0xc]=r138                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 54
;;   new tail = 56

;;   ======================================================
;;   -- basic block 11 from 60 to 70 -- before reload
;;   ======================================================

;;	  0-->    60 r154=[r166+0x20]                  :cortex_a8_load_store_1
;;	  3-->    63 r157=r154*0x4+r166                :cortex_a8_default
;;	  4-->    66 r0=call [[r157+0x38]]             :cortex_a8_issue_branch
;;	 36-->    69 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 38-->    70 pc={(cc==0x0)?L68:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 60
;;   new tail = 70

;;   ======================================================
;;   -- basic block 12 from 73 to 76 -- before reload
;;   ======================================================

;;	  0-->    73 r161=[r167+0x8]                   :cortex_a8_load_store_1
;;	  2-->    74 r135=r141-r161                    :cortex_a8_default
;;	  3-->    75 cc=cmp(r135,r141)                 :cortex_a8_default
;;	  5-->    76 pc={(geu(cc,0x0))?L83:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 73
;;   new tail = 76

;;   ======================================================
;;   -- basic block 13 from 80 to 82 -- before reload
;;   ======================================================

;;	  0-->    80 r163=[r167]                       :cortex_a8_load_store_1
;;	  2-->    81 cc=cmp(r163,0x0)                  :cortex_a8_default
;;	  4-->    82 pc={(cc==0x0)?L78:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 80
;;   new tail = 82

;;   ======================================================
;;   -- basic block 14 from 89 to 95 -- before reload
;;   ======================================================

;;	  0-->    89 r0=r137                           :cortex_a8_default
;;	  0-->    95 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 89
;;   new tail = 95


;; Procedure interblock/speculative motions == 0/0 




flush_buffer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={2d,1u} r2={2d} r3={2d} r11={1d,14u} r12={2d} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,6u} r25={1d,14u} r26={1d,13u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r135={1d,5u} r136={1d,2u} r137={2d,2u} r138={3d,3u} r140={1d,1u} r141={3d,5u} r142={1d,2u} r143={1d,1u} r154={1d,1u} r157={1d,1u} r161={1d,1u} r163={1d,2u} r166={1d,5u} r167={1d,5u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 264{156d,108u,0e} in 46{45 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 140 141 142 143
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 3 2 init/initramfs.c:392 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 3 8 2 2 init/initramfs.c:388 (set (reg/v:SI 137 [ origLen ])
        (reg:SI 1 r1 [ len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ len ])
        (nil)))

(insn 2 3 7 2 init/initramfs.c:388 (set (reg/v/f:SI 140 [ bufv ])
        (reg:SI 0 r0 [ bufv ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bufv ])
        (nil)))

(insn 7 2 9 2 init/initramfs.c:391 (set (reg/v:SI 141 [ len ])
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 init/initramfs.c:392 (set (reg/f:SI 143 [ message ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 10 9 11 2 init/initramfs.c:392 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ message ])
        (nil)))

(jump_insn 11 10 12 2 init/initramfs.c:392 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140 141 142


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  4 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 110 3 init/initramfs.c:393 (set (reg/v:SI 137 [ origLen ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 110 13 111 3 (set (pc)
        (label_ref 83)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  14 [100.0%] 

(barrier 111 110 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  def 	 138 166 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 141 142
;; live  gen 	 138 166 167 168 169
;; live  kill	

;; Pred edge  2 [0.0%] 
(code_label 16 111 17 4 36 "" [1 uses])

(note 17 16 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 17 18 4 init/initramfs.c:379 (set (reg/f:SI 166)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(insn 18 53 103 4 init/initramfs.c:389 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 140 [ bufv ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ bufv ])
        (nil)))

(insn 103 18 49 4 init/initramfs.c:382 discrim 1 (set (reg/f:SI 167)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 49 103 41 4 init/initramfs.c:16 (set (reg/f:SI 168)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 41 49 113 4 init/initramfs.c:403 (set (reg:SI 169)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(jump_insn 113 41 114 4 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169


;; Succ edge  10 [100.0%] 

(barrier 114 113 78)

;; Start of basic block ( 13) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 24 [cc] 133 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; live  gen 	 24 [cc] 133 136
;; live  kill	

;; Pred edge  13 [0.0%] 
(code_label 78 114 21 5 42 "" [1 uses])

(note 21 78 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 22 5 init/initramfs.c:395 (set (reg/v:SI 136 [ c ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 138 [ buf ])
                    (reg:SI 135 [ D.26319 ])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 22 23 24 5 init/initramfs.c:395 (set (reg/v/f:SI 133 [ buf.581 ])
        (plus:SI (reg/v/f:SI 138 [ buf ])
            (reg:SI 135 [ D.26319 ]))) 4 {*arm_addsi3} (nil))

(insn 24 22 25 5 init/initramfs.c:396 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ c ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 5 init/initramfs.c:396 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 163 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 163 166 167 168 169


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 163 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 163 167
;; lr  def 	 138 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 163 166 167 168 169
;; live  gen 	 138 141
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 30 6 init/initramfs.c:398 (set (reg/v:SI 141 [ len ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 135 [ D.26319 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26319 ])
        (nil)))

(insn 30 27 31 6 init/initramfs.c:399 (set (mem/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg/f:SI 163 [ message ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ message ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 31 30 115 6 init/initramfs.c:397 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 133 [ buf.581 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ buf.581 ])
        (nil)))

(jump_insn 115 31 116 6 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169


;; Succ edge  10 [100.0%]  (dfs_back)

(barrier 116 115 34)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 141 166 167 168 169
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [72.0%] 
(code_label 34 116 35 7 39 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 init/initramfs.c:400 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ c ])
        (nil)))

(jump_insn 37 36 38 7 init/initramfs.c:400 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 138 141 166 167 168 169


;; Succ edge  8 [100.0%]  (fallthru)
;; Succ edge  9 [0.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 141 167 169
;; lr  def 	 138 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141 166 167 168 169
;; live  gen 	 138 141
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 42 8 init/initramfs.c:402 (set (reg/v:SI 141 [ len ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 135 [ D.26319 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26319 ])
        (nil)))

(insn 42 39 43 8 init/initramfs.c:403 (set (mem/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 7 [0x7])
        (nil)))

(insn 43 42 117 8 init/initramfs.c:401 (set (reg/v/f:SI 138 [ buf ])
        (reg/v/f:SI 133 [ buf.581 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ buf.581 ])
        (nil)))

(jump_insn 117 43 118 8 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169


;; Succ edge  10 [100.0%]  (dfs_back)

(barrier 118 117 46)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	
;; live  kill	

;; Pred edge  7 [0.0%] 
(code_label 46 118 47 9 40 "" [1 uses])

(note 47 46 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 47 112 9 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 167) [0 message+0 S4 A32])
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 6 4 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 166
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (dfs_back)
;; Pred edge  4 [100.0%] 
;; Pred edge  8 [100.0%]  (dfs_back)
(code_label 112 50 109 10 45 "" [3 uses])

(note 109 112 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 54 109 56 10 init/initramfs.c:379 (set (mem/c/i:SI (plus:SI (reg/f:SI 166)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg/v:SI 141 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 56 54 68 10 init/initramfs.c:380 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 166)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/v/f:SI 138 [ buf ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	 0 [r0] 24 [cc] 154 157
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [86.0%]  (dfs_back)
(code_label 68 56 57 11 41 "" [1 uses])

(note 57 68 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 62 57 65 11 NOTE_INSN_DELETED)

(note 65 62 67 11 NOTE_INSN_DELETED)

(note 67 65 60 11 NOTE_INSN_DELETED)

(insn 60 67 63 11 init/initramfs.c:382 discrim 1 (set (reg:SI 154 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 166)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [0 state+0 S4 A32])
        (nil)))

(insn 63 60 66 11 init/initramfs.c:382 discrim 1 (set (reg:SI 157)
        (plus:SI (mult:SI (reg:SI 154 [ state ])
                (const_int 4 [0x4]))
            (reg/f:SI 166))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 154 [ state ])
        (nil)))

(call_insn 66 63 69 11 init/initramfs.c:382 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg:SI 157)
                                (const_int 56 [0x38])) [0 actions S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 157)
        (nil))
    (nil))

(insn 69 66 70 11 init/initramfs.c:382 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 70 69 71 11 init/initramfs.c:382 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 11 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169


;; Succ edge  11 [86.0%]  (dfs_back)
;; Succ edge  12 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 167
;; lr  def 	 24 [cc] 135 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 166 167 168 169
;; live  gen 	 24 [cc] 135 161
;; live  kill	

;; Pred edge  11 [14.0%]  (fallthru,loop_exit)
(note 71 70 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 73 71 74 12 init/initramfs.c:384 (set (reg:SI 161 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 167)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 74 73 75 12 init/initramfs.c:384 (set (reg:SI 135 [ D.26319 ])
        (minus:SI (reg/v:SI 141 [ len ])
            (reg:SI 161 [ count ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 161 [ count ])
        (nil)))

(insn 75 74 76 12 init/initramfs.c:394 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.26319 ])
            (reg/v:SI 141 [ len ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 12 init/initramfs.c:394 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169


;; Succ edge  13 [95.5%]  (fallthru)
;; Succ edge  14 [4.5%]  (loop_exit)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 166 167 168 169
;; live  gen 	 24 [cc] 163
;; live  kill	

;; Pred edge  12 [95.5%]  (fallthru)
(note 77 76 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 80 77 81 13 init/initramfs.c:394 discrim 2 (set (reg/f:SI 163 [ message ])
        (mem/f/c/i:SI (reg/f:SI 167) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 81 80 82 13 init/initramfs.c:394 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 13 init/initramfs.c:394 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 13 -> ( 5 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 141 163 166 167 168 169


;; Succ edge  5 [0.0%] 
;; Succ edge  14 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12 13 3) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  12 [4.5%]  (loop_exit)
;; Pred edge  13 [100.0%]  (fallthru,loop_exit)
;; Pred edge  3 [100.0%] 
(code_label 83 82 84 14 37 "" [2 uses])

(note 84 83 89 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 89 84 95 14 init/initramfs.c:408 (set (reg/i:SI 0 r0)
        (reg/v:SI 137 [ origLen ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ origLen ])
        (nil)))

(insn 95 89 119 14 init/initramfs.c:408 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 119 95 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function retain_initrd_param (retain_initrd_param)[0:1334] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 8 -- before reload
;;   ======================================================

;;	  0-->     6 r136=zxn([r0])                    :cortex_a8_load_store_1
;;	  2-->     7 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  4-->     8 pc={(cc==0x0)?L13:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 35 -- before reload
;;   ======================================================

;;	  0-->    10 r133=0x0                          :cortex_a8_default
;;	  0-->    35 pc=L19                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 35

;;   ======================================================
;;   -- basic block 4 from 15 to 18 -- before reload
;;   ======================================================

;;	  0-->    16 r138=0x1                          :cortex_a8_default
;;	  0-->    15 r137=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->    18 r133=r138                         :cortex_a8_default
;;	  3-->    17 [r137+0x58]=r138                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 15
;;   new tail = 18

;;   ======================================================
;;   -- basic block 5 from 25 to 31 -- before reload
;;   ======================================================

;;	  0-->    25 r0=r133                           :cortex_a8_default
;;	  0-->    31 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 25
;;   new tail = 31


;; Procedure interblock/speculative motions == 0/0 




retain_initrd_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 46{17d,29u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/initramfs.c:479 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(insn 7 6 8 2 init/initramfs.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(jump_insn 8 7 9 2 init/initramfs.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 35 3 init/initramfs.c:480 (set (reg:SI 133 [ D.26190 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 35 10 36 3 (set (pc)
        (label_ref 19)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%] 

(barrier 36 35 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 36 14 4 50 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 15 4 init/initramfs.c:481 (set (reg:SI 138)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 16 18 4 init/initramfs.c:481 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 18 15 17 4 init/initramfs.c:482 (set (reg:SI 133 [ D.26190 ])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 17 18 19 4 init/initramfs.c:481 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 88 [0x58])) [0 do_retain_initrd+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 19 17 20 5 51 "" [1 uses])

(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 20 31 5 init/initramfs.c:483 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.26190 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.26190 ])
        (nil)))

(insn 31 25 37 5 init/initramfs.c:483 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 31 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function clean_path (clean_path)[0:1327] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 13 -- before reload
;;   ======================================================

;;	  0-->     3 r136=r1                           :cortex_a8_default
;;	  0-->     9 r1=sfp-0x40                       :cortex_a8_default
;;	  1-->     2 r135=r0                           :cortex_a8_default
;;	  1-->    10 r0=call [`sys_newlstat']          :cortex_a8_issue_branch
;;	 33-->    12 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    13 pc={(cc!=0x0)?L39:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 2
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 15 to 20 -- before reload
;;   ======================================================

;;	  0-->    15 r133=zxn([sfp-0x38])              :cortex_a8_load_store_1
;;	  2-->    17 r139=r136^r133                    :cortex_a8_default
;;	  3-->    19 {cc=cmp(r139&0xf000,0x0);clobber s:cortex_a8_default
;;	  5-->    20 pc={(cc==0x0)?L39:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 15
;;   new tail = 20

;;   ======================================================
;;   -- basic block 4 from 22 to 24 -- before reload
;;   ======================================================

;;	  0-->    22 r141=r133&0xf000                  :cortex_a8_default
;;	  1-->    23 cc=cmp(r141,0x4000)               :cortex_a8_default
;;	  3-->    24 pc={(cc!=0x0)?L30:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 22
;;   new tail = 24

;;   ======================================================
;;   -- basic block 5 from 26 to 43 -- before reload
;;   ======================================================

;;	  0-->    26 r0=r135                           :cortex_a8_default
;;	  1-->    27 r0=call [`sys_rmdir']             :cortex_a8_issue_branch
;;	  1-->    43 pc=L39                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 26
;;   new tail = 43

;;   ======================================================
;;   -- basic block 6 from 32 to 33 -- before reload
;;   ======================================================

;;	  0-->    32 r0=r135                           :cortex_a8_default
;;	  1-->    33 r0=call [`sys_unlink']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 32
;;   new tail = 33


;; Procedure interblock/speculative motions == 0/0 




clean_path

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={4d} r3={4d} r11={1d,7u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,9u} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r135={1d,2u} r136={1d,1u} r139={1d,1u} r141={1d,1u} 
;;    total ref usage 422{372d,50u,0e} in 18{15 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 11 2 NOTE_INSN_DELETED)

(note 11 7 3 2 NOTE_INSN_DELETED)

(insn 3 11 9 2 init/initramfs.c:280 (set (reg/v:SI 136 [ mode ])
        (reg:SI 1 r1 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mode ])
        (nil)))

(insn 9 3 2 2 init/initramfs.c:283 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(insn 2 9 10 2 init/initramfs.c:280 (set (reg/v/f:SI 135 [ path ])
        (reg:SI 0 r0 [ path ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 2 12 2 init/initramfs.c:283 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_newlstat") [flags 0x41] <function_decl 0x11452980 sys_newlstat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 10 13 2 init/initramfs.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 13 12 14 2 init/initramfs.c:283 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 24 [cc] 133 139
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 16 14 18 3 NOTE_INSN_DELETED)

(note 18 16 15 3 NOTE_INSN_DELETED)

(insn 15 18 17 3 init/initramfs.c:283 discrim 1 (set (reg:SI 133 [ D.25967 ])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -56 [0xffffffffffffffc8])) [0 st.st_mode+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 17 15 19 3 init/initramfs.c:283 discrim 1 (set (reg:SI 139)
        (xor:SI (reg/v:SI 136 [ mode ])
            (reg:SI 133 [ D.25967 ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ mode ])
        (nil)))

(insn 19 17 20 3 init/initramfs.c:283 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 139)
                        (const_int 61440 [0xf000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 20 19 21 3 init/initramfs.c:283 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 init/initramfs.c:284 (set (reg:SI 141)
        (and:SI (reg:SI 133 [ D.25967 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.25967 ])
        (nil)))

(insn 23 22 24 4 init/initramfs.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 24 23 25 4 init/initramfs.c:284 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [19.9%]  (fallthru)
;; Succ edge  6 [80.1%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [19.9%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 init/initramfs.c:285 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ path ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ path ])
        (nil)))

(call_insn 27 26 43 5 init/initramfs.c:285 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_rmdir") [flags 0x41] <function_decl 0x11464e00 sys_rmdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 43 27 44 5 (set (pc)
        (label_ref 39)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%] 

(barrier 44 43 30)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [80.1%] 
(code_label 30 44 31 6 57 "" [1 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 init/initramfs.c:287 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ path ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ path ])
        (nil)))

(call_insn 33 32 39 6 init/initramfs.c:287 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x11458d00 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  5 [100.0%] 
(code_label 39 33 42 7 58 "" [3 uses])

(note 42 39 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 42 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_utime (do_utime)[0:1315] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 30 -- before reload
;;   ======================================================

;;	  0-->     2 r135=r0                           :cortex_a8_default
;;	  0-->     3 r136=r1                           :cortex_a8_default
;;	  1-->    15 r1=r135                           :cortex_a8_default
;;	  1-->    14 r0=0xffffffffffffff9c             :cortex_a8_default
;;	  2-->    16 r2=sfp-0x10                       :cortex_a8_default
;;	  2-->    17 r3=0x100                          :cortex_a8_default
;;	  3-->    10 [sfp-0x8]=r136                    :cortex_a8_load_store_1
;;	  3-->     8 r137=0x0                          :cortex_a8_default
;;	  4-->    12 [sfp-0x4]=r137                    :cortex_a8_load_store_1
;;	  5-->     7 [sfp-0x10]=r136                   :cortex_a8_load_store_1
;;	  6-->     9 [sfp-0xc]=r137                    :cortex_a8_load_store_1
;;	  6-->    18 r0=call [`do_utimes']             :cortex_a8_issue_branch
;;	  7-->    30 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 30


;; Procedure interblock/speculative motions == 0/0 




do_utime

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,2u} r137={1d,2u} 
;;    total ref usage 161{134d,27u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 13 2 NOTE_INSN_FUNCTION_BEG)

(note 13 4 2 2 NOTE_INSN_DELETED)

(insn 2 13 3 2 init/initramfs.c:78 (set (reg/v/f:SI 135 [ filename ])
        (reg:SI 0 r0 [ filename ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ filename ])
        (nil)))

(insn 3 2 15 2 init/initramfs.c:78 (set (reg/v:SI 136 [ mtime ])
        (reg:SI 1 r1 [ mtime ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mtime ])
        (nil)))

(insn 15 3 14 2 init/initramfs.c:86 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ filename ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ filename ])
        (nil)))

(insn 14 15 16 2 init/initramfs.c:86 (set (reg:SI 0 r0)
        (const_int -100 [0xffffffffffffff9c])) 167 {*arm_movsi_insn} (nil))

(insn 16 14 17 2 init/initramfs.c:86 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 17 16 10 2 init/initramfs.c:86 (set (reg:SI 3 r3)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(insn 10 17 8 2 init/initramfs.c:83 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.tv_sec+0 S4 A64])
        (reg/v:SI 136 [ mtime ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ mtime ])
        (nil)))

(insn 8 10 12 2 init/initramfs.c:82 (set (reg:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 7 2 init/initramfs.c:84 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.tv_nsec+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 7 12 9 2 init/initramfs.c:81 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 <variable>.tv_sec+0 S4 A64])
        (reg/v:SI 136 [ mtime ])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 18 2 init/initramfs.c:82 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 <variable>.tv_nsec+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 18 9 30 2 init/initramfs.c:86 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utimes") [flags 0x41] <function_decl 0x10c9bf80 do_utimes>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 18 34 2 init/initramfs.c:87 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 34 30 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_symlink (do_symlink)[0:1330] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 62 -- before reload
;;   ======================================================

;;	  0-->     5 r136=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    17 r147=0x0                          :cortex_a8_default
;;	  1-->    21 r1=r147                           :cortex_a8_default
;;	  3-->     9 r140=[r136+0x60]                  :cortex_a8_load_store_1
;;	  4-->     6 r134=[r136+0x10]                  :cortex_a8_load_store_1
;;	  5-->    10 r139=r140+0x1                     :cortex_a8_default
;;	  5-->    12 r142=[r136+0x5c]                  :cortex_a8_load_store_1
;;	  6-->    11 r141=r139&0xfffffffffffffffc      :cortex_a8_default
;;	  6-->    20 r0=r134                           :cortex_a8_default
;;	  7-->    14 r144=r134+r141                    :cortex_a8_default
;;	  8-->    15 r145=r144+r142                    :cortex_a8_default
;;	 10-->    19 [r145+0x2]=r147#0                 :cortex_a8_load_store_1
;;	 11-->    22 call [`clean_path']               :cortex_a8_issue_branch
;;	 11-->    26 r152=[r136+0x60]                  :cortex_a8_load_store_1
;;	 12-->    24 r133=[r136+0x10]                  :cortex_a8_load_store_1
;;	 13-->    27 r151=r152+0x1                     :cortex_a8_default
;;	 14-->    28 r153=r151&0xfffffffffffffffc      :cortex_a8_default
;;	 14-->    32 r1=r133                           :cortex_a8_default
;;	 15-->    29 r154=r153+0x2                     :cortex_a8_default
;;	 16-->    31 r0=r133+r154                      :cortex_a8_default
;;	 17-->    33 r0=call [`sys_symlink']           :cortex_a8_issue_branch
;;	 17-->    38 r1=[r136+0x64]                    :cortex_a8_load_store_1
;;	 18-->    39 r2=[r136+0x68]                    :cortex_a8_load_store_1
;;	 19-->    37 r0=[r136+0x10]                    :cortex_a8_load_store_1
;;	 20-->    40 r0=call [`sys_lchown']            :cortex_a8_issue_branch
;;	 20-->    43 r0=[r136+0x10]                    :cortex_a8_load_store_1
;;	 21-->    44 r1=[r136+0x6c]                    :cortex_a8_load_store_1
;;	 22-->    45 r0=call [`do_utime']              :cortex_a8_issue_branch
;;	 22-->    56 r0=r147                           :cortex_a8_default
;;	 23-->    47 r162=0x3                          :cortex_a8_default
;;	 23-->    48 [r136+0x20]=r162                  :cortex_a8_load_store_1
;;	 24-->    50 r164=0x7                          :cortex_a8_default
;;	 24-->    51 [r136+0x2c]=r164                  :cortex_a8_load_store_1
;;	 25-->    62 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 25
;;   new head = 5
;;   new tail = 62


;; Procedure interblock/speculative motions == 0/0 




do_symlink

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={10d,6u} r1={9d,4u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,6u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r136={1d,12u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,3u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r162={1d,1u} r164={1d,1u} 
;;    total ref usage 558{504d,54u,0e} in 34{30 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 139 140 141 142 144 145 147 151 152 153 154 162 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 136 139 140 141 142 144 145 147 151 152 153 154 162 164
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 30 2 NOTE_INSN_FUNCTION_BEG)

(note 30 2 5 2 NOTE_INSN_DELETED)

(insn 5 30 17 2 init/initramfs.c:356 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 17 5 21 2 init/initramfs.c:356 (set (reg:SI 147)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 21 17 9 2 init/initramfs.c:357 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 9 21 6 2 init/initramfs.c:356 (set (reg:SI 140 [ name_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 6 9 10 2 init/initramfs.c:356 (set (reg/f:SI 134 [ collected.393 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 6 12 2 init/initramfs.c:356 (set (reg:SI 139)
        (plus:SI (reg:SI 140 [ name_len ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140 [ name_len ])
        (nil)))

(insn 12 10 11 2 init/initramfs.c:356 (set (reg:SI 142 [ body_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 12 20 2 init/initramfs.c:356 (set (reg:SI 141)
        (and:SI (reg:SI 139)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 20 11 14 2 init/initramfs.c:357 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ collected.393 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ collected.393 ])
        (nil)))

(insn 14 20 15 2 init/initramfs.c:356 (set (reg:SI 144)
        (plus:SI (reg/f:SI 134 [ collected.393 ])
            (reg:SI 141))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 15 14 19 2 init/initramfs.c:356 (set (reg:SI 145)
        (plus:SI (reg:SI 144)
            (reg:SI 142 [ body_len ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 142 [ body_len ])
            (nil))))

(insn 19 15 22 2 init/initramfs.c:356 (set (mem:QI (plus:SI (reg:SI 145)
                (const_int 2 [0x2])) [0 S1 A8])
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 22 19 26 2 init/initramfs.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("clean_path") [flags 0x3] <function_decl 0x114ad300 clean_path>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 22 24 2 init/initramfs.c:358 (set (reg:SI 152 [ name_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 26 27 2 init/initramfs.c:358 (set (reg/f:SI 133 [ collected.674 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 24 28 2 init/initramfs.c:358 (set (reg:SI 151)
        (plus:SI (reg:SI 152 [ name_len ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 152 [ name_len ])
        (nil)))

(insn 28 27 32 2 init/initramfs.c:358 (set (reg:SI 153)
        (and:SI (reg:SI 151)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 32 28 29 2 init/initramfs.c:358 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ collected.674 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ collected.674 ])
        (nil)))

(insn 29 32 31 2 init/initramfs.c:358 (set (reg:SI 154)
        (plus:SI (reg:SI 153)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 31 29 33 2 init/initramfs.c:358 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 133 [ collected.674 ])
            (reg:SI 154))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(call_insn 33 31 38 2 init/initramfs.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_symlink") [flags 0x41] <function_decl 0x11458c80 sys_symlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 38 33 39 2 init/initramfs.c:359 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 37 2 init/initramfs.c:359 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 39 40 2 init/initramfs.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 37 43 2 init/initramfs.c:359 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_lchown") [flags 0x41] <function_decl 0x1145eb00 sys_lchown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 43 40 44 2 init/initramfs.c:360 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 2 init/initramfs.c:360 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 56 2 init/initramfs.c:360 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 56 45 47 2 init/initramfs.c:364 (set (reg/i:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 47 56 48 2 init/initramfs.c:361 (set (reg:SI 162)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 50 2 init/initramfs.c:361 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 50 48 51 2 init/initramfs.c:362 (set (reg:SI 164)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 62 2 init/initramfs.c:362 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 136)
            (expr_list:REG_EQUAL (const_int 7 [0x7])
                (nil)))))

(insn 62 51 66 2 init/initramfs.c:364 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 66 62 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function unpack_to_rootfs (unpack_to_rootfs)[0:1333] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 77 (  2.4)


unpack_to_rootfs

Dataflow summary:
def_info->table_size = 1768, use_info->table_size = 347
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={29d,23u} r1={22d,8u} r2={18d,3u} r3={17d,2u} r11={1d,31u} r12={15d} r13={1d,48u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={34d,17u} r25={1d,33u,1d} r26={1d,30u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r134={2d,2u} r135={2d,10u,1d} r138={1d,2u} r139={1d,2u} r141={1d,2u} r142={1d,2u} r145={1d,3u,2d} r146={1d,1u} r148={1d,3u} r149={1d,2u} r151={1d,2u} r154={4d,7u} r155={4d,8u} r156={1d,3u} r157={1d,9u} r163={1d,1u} r165={1d,1u} r168={1d,2u} r170={1d,2u} r174={1d,4u} r175={1d,1u} r176={1d,1u} r183={1d,1u} r186={1d,1u} r190={1d,1u} r193={2d,2u} r198={1d,2u} r202={1d,1u} r206={1d,1u} r214={1d,1u} r218={1d,1u} r220={1d,1u} r226={1d,1u} r229={1d,1u} r231={1d,1u} r235={1d,1u} r239={1d,4u} r248={2d,3u} r249={1d,1u} r250={1d,1u} r252={1d,22u} r254={1d,1u} r255={1d,2u} r256={1d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,2u} 
;;    total ref usage 2085{1755d,326u,4e} in 163{149 regular + 14 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d28(0){ }d50(1){ }d68(2){ }d85(3){ }d86(11){ }d101(12){ }d102(13){ }d117(14){ }d279(25){ }d280(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 154 155 156 157 163
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 154 155 156 157 163
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc] 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157

( 2 3 4 )->[5]->( )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[6]->( 27 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 168 170 252 254 255 256 257 258 259 260 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  gen 	 168 170 252 253 254 255 256 257 258 259 260
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260

( 27 )->[7]->( 8 12 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 252
;; lr  def 	 24 [cc] 145 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 145 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260

( 7 )->[8]->( 9 14 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 174 175 176
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 253 254 255 256 257 258 259 260

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260

( 9 10 )->[10]->( 10 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 24 [cc] 183 186
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260

( 10 )->[11]->( 27 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 260
;; lr  def 	 141 154 155 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 141 154 155 190
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260

( 7 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 12 )->[13]->( 27 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252
;; lr  def 	 24 [cc] 154 155 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 154 155 192 193
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260

( 12 8 )->[14]->( 15 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 264 265
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 146
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260

( 14 )->[15]->( 16 23 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 155 255 258
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 198
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 15 )->[16]->( 17 23 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 202
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 16 )->[17]->( 23 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 259
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 14 )->[18]->( 19 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260

( 18 )->[19]->( 20 23 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 206
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260

( 19 )->[20]->( 23 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 252 257
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 18 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 214
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 16 17 21 15 19 22 20 )->[23]->( 24 26 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 218
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 220
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260

( 23 24 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 255
;; lr  def 	 24 [cc] 148 154 155 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 148 154 155 226
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260

( 26 11 6 13 )->[27]->( 7 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 252
;; lr  def 	 24 [cc] 229 231 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 253 254 255 256 257 258 259 260
;; live  gen 	 24 [cc] 229 231 235
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 253 254 255 256 257 258 259 260

( 27 )->[28]->( 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  def 	 134 135 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; live  gen 	 134 135 248 249 250
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250

( 30 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 249 250
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 0 [r0] 1 [r1] 134 135 138 139
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250

( 29 28 )->[30]->( 29 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 248
;; lr  def 	 24 [cc] 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 24 [cc] 239
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250

( 30 )->[31]->( 1 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 31 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u341(0){ }u342(11){ }u343(13){ }u344(14){ }u345(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 30 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 43 to worklist
  Adding insn 46 to worklist
  Adding insn 51 to worklist
  Adding insn 326 to worklist
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 71 to worklist
  Adding insn 78 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 82 to worklist
  Adding insn 100 to worklist
  Adding insn 96 to worklist
  Adding insn 328 to worklist
  Adding insn 112 to worklist
  Adding insn 330 to worklist
  Adding insn 119 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 344 to worklist
  Adding insn 343 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 139 to worklist
  Adding insn 156 to worklist
  Adding insn 332 to worklist
  Adding insn 160 to worklist
  Adding insn 167 to worklist
  Adding insn 172 to worklist
  Adding insn 334 to worklist
  Adding insn 185 to worklist
  Adding insn 181 to worklist
  Adding insn 193 to worklist
  Adding insn 197 to worklist
  Adding insn 203 to worklist
  Adding insn 208 to worklist
  Adding insn 212 to worklist
  Adding insn 220 to worklist
  Adding insn 238 to worklist
  Adding insn 336 to worklist
  Adding insn 261 to worklist
  Adding insn 259 to worklist
  Adding insn 257 to worklist
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 272 to worklist
  Adding insn 295 to worklist
  Adding insn 282 to worklist
  Adding insn 279 to worklist
  Adding insn 276 to worklist
Finished finding needed instructions:
processing block 5 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 50 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 99 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 219 to worklist
  Adding insn 216 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 207 to worklist
  Adding insn 206 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 202 to worklist
  Adding insn 201 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 155 to worklist
  Adding insn 154 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 150 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 138 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 171 to worklist
  Adding insn 170 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 192 to worklist
  Adding insn 191 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 166 to worklist
  Adding insn 165 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 134 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 254 255 256 257 258 259 260 264 265
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 111 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
  Adding insn 265 to worklist
  Adding insn 264 to worklist
  Adding insn 260 to worklist
  Adding insn 258 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
processing block 31 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 289 to worklist
  Adding insn 281 to worklist
  Adding insn 278 to worklist
  Adding insn 275 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
  Adding insn 271 to worklist
  Adding insn 303 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
  Adding insn 253 to worklist
  Adding insn 251 to worklist
  Adding insn 242 to worklist
  Adding insn 241 to worklist
  Adding insn 324 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 254 255 256 257 258 259 260 264 265
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 230 to worklist
  Adding insn 308 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
  Adding insn 307 to worklist
  Adding insn 159 to worklist
  Adding insn 142 to worklist
  Adding insn 175 to worklist
  Adding insn 211 to worklist
  Adding insn 215 to worklist
  Adding insn 128 to worklist
  Adding insn 342 to worklist
  Adding insn 341 to worklist
  Adding insn 340 to worklist
  Adding insn 229 to worklist
  Adding insn 59 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
  Adding insn 45 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 32 n_edges 47 count 87 (  2.7)
;;   ======================================================
;;   -- basic block 2 from 2 to 38 -- before reload
;;   ======================================================

;;	  0-->     9 r156=`malloc_sizes'               :cortex_a8_load_store_1
;;	  0-->     2 r154=r0                           :cortex_a8_default
;;	  1-->     3 r155=r1                           :cortex_a8_default
;;	  1-->    11 r1=0xd0                           :cortex_a8_default
;;	  2-->    14 r157=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->    10 r0=[r156+0x1c]                    :cortex_a8_load_store_1
;;	  4-->    12 r0=call [`kmem_cache_alloc']      :cortex_a8_issue_branch
;;	  4-->    20 r1=0xd0                           :cortex_a8_default
;;	 36-->    15 [r157+0x4]=r0                     :cortex_a8_load_store_1
;;	 37-->    19 r0=[r156+0x5c]                    :cortex_a8_load_store_1
;;	 38-->    21 r0=call [`kmem_cache_alloc']      :cortex_a8_issue_branch
;;	 38-->    29 r1=0xd0                           :cortex_a8_default
;;	 70-->    24 [r157+0x70]=r0                    :cortex_a8_load_store_1
;;	 71-->    28 r0=[r156+0x54]                    :cortex_a8_load_store_1
;;	 72-->    30 r0=call [`kmem_cache_alloc']      :cortex_a8_issue_branch
;;	 72-->    31 r142=r0                           :cortex_a8_default
;;	 73-->    36 r163=[r157+0x4]                   :cortex_a8_load_store_1
;;	 74-->    34 [r157+0x74]=r142                  :cortex_a8_load_store_1
;;	 75-->    37 cc=cmp(r163,0x0)                  :cortex_a8_default
;;	 77-->    38 pc={(cc==0x0)?L47:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 77
;;   new head = 2
;;   new tail = 38

;;   ======================================================
;;   -- basic block 3 from 41 to 43 -- before reload
;;   ======================================================

;;	  0-->    41 r165=[r157+0x70]                  :cortex_a8_load_store_1
;;	  2-->    42 cc=cmp(r165,0x0)                  :cortex_a8_default
;;	  4-->    43 pc={(cc==0x0)?L47:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 41
;;   new tail = 43

;;   ======================================================
;;   -- basic block 4 from 45 to 46 -- before reload
;;   ======================================================

;;	  0-->    45 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  2-->    46 pc={(cc!=0x0)?L53:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 45
;;   new tail = 46

;;   ======================================================
;;   -- basic block 5 from 50 to 51 -- before reload
;;   ======================================================

;;	  0-->    50 r0=`*.LC2'                        :cortex_a8_load_store_1
;;	  1-->    51 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 6 from 56 to 326 -- before reload
;;   ======================================================

;;	  0-->    59 r170=0x0                          :cortex_a8_default
;;	  0-->   229 r252=r157                         :cortex_a8_default
;;	  1-->   340 r266=r170                         :cortex_a8_default
;;	  1-->    60 [r157+0x18]=r170                  :cortex_a8_load_store_1
;;	  2-->   342 r265=r266#4                       :cortex_a8_default
;;	  2-->    56 r168=0x0                          :cortex_a8_default
;;	  3-->    63 [r157]=r168                       :cortex_a8_load_store_1
;;	  3-->   341 r264=r266#0                       :cortex_a8_default
;;	  4-->    57 [r157+0x20]=r168                  :cortex_a8_load_store_1
;;	  4-->   128 r254=sfp-0x4                      :cortex_a8_default
;;	  5-->   215 r255=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  5-->   175 r257=r252+0x78                    :cortex_a8_default
;;	  6-->   211 r256=`*.LC1'                      :cortex_a8_load_store_1
;;	  6-->   307 r260=r252                         :cortex_a8_default
;;	  7-->   142 r258=`error'                      :cortex_a8_load_store_1
;;	  8-->   159 r259=`*.LC3'                      :cortex_a8_load_store_1
;;	  8-->   326 pc=L325                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 8
;;   new head = 56
;;   new tail = 326

;;   ======================================================
;;   -- basic block 7 from 68 to 71 -- before reload
;;   ======================================================

;;	  0-->    69 r151=zxn([r154])                  :cortex_a8_load_store_1
;;	  1-->    68 r145=[r252+0x18]                  :cortex_a8_load_store_1
;;	  2-->    70 cc=cmp(r151,0x30)                 :cortex_a8_default
;;	  4-->    71 pc={(cc!=0x0)?L109:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 68
;;   new tail = 71

;;   ======================================================
;;   -- basic block 8 from 73 to 78 -- before reload
;;   ======================================================

;;	  0-->    73 r175=0x3                          :cortex_a8_default
;;	  1-->    74 r174=r145&r175                    :cortex_a8_default
;;	  2-->    77 {cc=cmp(r174#0|r174#4,0x0);r176=r1:cortex_a8_default
;;	  4-->    78 pc={(cc!=0x0)?L122:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 73
;;   new tail = 78

;;   ======================================================
;;   -- basic block 9 from 82 to 86 -- before reload
;;   ======================================================

;;	  0-->    82 [r252+0x20]=r176                  :cortex_a8_load_store_1
;;	  1-->    84 [r252+0x8]=r155                   :cortex_a8_load_store_1
;;	  2-->    86 [r252+0xc]=r154                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 82
;;   new tail = 86

;;   ======================================================
;;   -- basic block 10 from 90 to 100 -- before reload
;;   ======================================================

;;	  0-->    90 r183=[r252+0x20]                  :cortex_a8_load_store_1
;;	  3-->    93 r186=r183*0x4+r252                :cortex_a8_default
;;	  4-->    96 r0=call [[r186+0x38]]             :cortex_a8_issue_branch
;;	 36-->    99 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 38-->   100 pc={(cc==0x0)?L98:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 90
;;   new tail = 100

;;   ======================================================
;;   -- basic block 11 from 103 to 328 -- before reload
;;   ======================================================

;;	  0-->   103 r190=[r260+0x8]                   :cortex_a8_load_store_1
;;	  2-->   104 r141=r155-r190                    :cortex_a8_default
;;	  3-->   106 r155=r155-r141                    :cortex_a8_default
;;	  3-->   105 r154=r154+r141                    :cortex_a8_default
;;	  4-->   328 pc=L325                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 103
;;   new tail = 328

;;   ======================================================
;;   -- basic block 12 from 111 to 112 -- before reload
;;   ======================================================

;;	  0-->   111 cc=cmp(r151,0x0)                  :cortex_a8_default
;;	  2-->   112 pc={(cc!=0x0)?L122:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 111
;;   new tail = 112

;;   ======================================================
;;   -- basic block 13 from 114 to 330 -- before reload
;;   ======================================================

;;	  0-->   117 r193=0x1                          :cortex_a8_default
;;	  0-->   114 r154=r154+0x1                     :cortex_a8_default
;;	  1-->   118 {r193=r145+r193;clobber cc;}      :cortex_a8_default
;;	  1-->   119 [r252+0x18]=r193                  :cortex_a8_load_store_1
;;	  2-->   115 r155=r155-0x1                     :cortex_a8_default
;;	  2-->   330 pc=L325                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 114
;;   new tail = 330

;;   ======================================================
;;   -- basic block 14 from 343 to 135 -- before reload
;;   ======================================================

;;	  0-->   129 r0=r154                           :cortex_a8_default
;;	  0-->   130 r1=r155                           :cortex_a8_default
;;	  1-->   131 r2=r254                           :cortex_a8_default
;;	  1-->   343 [r252+0x18]=r264                  :cortex_a8_load_store_1
;;	  2-->   344 [r252+0x1c]=r265                  :cortex_a8_load_store_1
;;	  2-->   132 r0=call [`decompress_method']     :cortex_a8_issue_branch
;;	 34-->   134 {cc=cmp(r0,0x0);r146=r0;}         :cortex_a8_default
;;	 36-->   135 pc={(cc==0x0)?L163:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 343
;;   new tail = 135

;;   ======================================================
;;   -- basic block 15 from 138 to 151 -- before reload
;;   ======================================================

;;	  0-->   138 r198=0x0                          :cortex_a8_default
;;	  0-->   141 [sp+0x4]=r255                     :cortex_a8_load_store_1
;;	  1-->   139 [sp]=r198                         :cortex_a8_load_store_1
;;	  1-->   146 r2=r198                           :cortex_a8_default
;;	  2-->   143 [sp+0x8]=r258                     :cortex_a8_load_store_1
;;	  2-->   144 r0=r154                           :cortex_a8_default
;;	  3-->   145 r1=r155                           :cortex_a8_default
;;	  3-->   147 r3=`flush_buffer'                 :cortex_a8_load_store_1
;;	  4-->   148 r0=call [r146]                    :cortex_a8_issue_branch
;;	 36-->   150 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 38-->   151 pc={(cc==0x0)?L198:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 138
;;   new tail = 151

;;   ======================================================
;;   -- basic block 16 from 154 to 156 -- before reload
;;   ======================================================

;;	  0-->   154 r202=[r252]                       :cortex_a8_load_store_1
;;	  2-->   155 cc=cmp(r202,0x0)                  :cortex_a8_default
;;	  4-->   156 pc={(cc!=0x0)?L198:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 154
;;   new tail = 156

;;   ======================================================
;;   -- basic block 17 from 160 to 332 -- before reload
;;   ======================================================

;;	  0-->   160 [r252]=r259                       :cortex_a8_load_store_1
;;	  0-->   332 pc=L198                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 160
;;   new tail = 332

;;   ======================================================
;;   -- basic block 18 from 165 to 167 -- before reload
;;   ======================================================

;;	  0-->   165 r149=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  2-->   166 cc=cmp(r149,0x0)                  :cortex_a8_default
;;	  4-->   167 pc={(cc==0x0)?L188:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 165
;;   new tail = 167

;;   ======================================================
;;   -- basic block 19 from 170 to 172 -- before reload
;;   ======================================================

;;	  0-->   170 r206=[r252]                       :cortex_a8_load_store_1
;;	  2-->   171 cc=cmp(r206,0x0)                  :cortex_a8_default
;;	  4-->   172 pc={(cc!=0x0)?L198:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 170
;;   new tail = 172

;;   ======================================================
;;   -- basic block 20 from 177 to 334 -- before reload
;;   ======================================================

;;	  0-->   180 r3=r149                           :cortex_a8_default
;;	  0-->   177 r0=const(`*.LANCHOR0'+0x78)       :cortex_a8_load_store_1
;;	  1-->   178 r1=0x40                           :cortex_a8_default
;;	  1-->   179 r2=`*.LC4'                        :cortex_a8_load_store_1
;;	  2-->   181 r0=call [`snprintf']              :cortex_a8_issue_branch
;;	  2-->   185 [r252]=r257                       :cortex_a8_load_store_1
;;	  3-->   334 pc=L198                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 177
;;   new tail = 334

;;   ======================================================
;;   -- basic block 21 from 191 to 193 -- before reload
;;   ======================================================

;;	  0-->   191 r214=[r252]                       :cortex_a8_load_store_1
;;	  2-->   192 cc=cmp(r214,0x0)                  :cortex_a8_default
;;	  4-->   193 pc={(cc!=0x0)?L198:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 191
;;   new tail = 193

;;   ======================================================
;;   -- basic block 22 from 197 to 197 -- before reload
;;   ======================================================

;;	  0-->   197 [r252]=r256                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 197
;;   new tail = 197

;;   ======================================================
;;   -- basic block 23 from 201 to 203 -- before reload
;;   ======================================================

;;	  0-->   201 r218=[r252+0x20]                  :cortex_a8_load_store_1
;;	  2-->   202 cc=cmp(r218,0x7)                  :cortex_a8_default
;;	  4-->   203 pc={(cc==0x0)?L213:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 201
;;   new tail = 203

;;   ======================================================
;;   -- basic block 24 from 206 to 208 -- before reload
;;   ======================================================

;;	  0-->   206 r220=[r252]                       :cortex_a8_load_store_1
;;	  2-->   207 cc=cmp(r220,0x0)                  :cortex_a8_default
;;	  4-->   208 pc={(cc!=0x0)?L213:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 206
;;   new tail = 208

;;   ======================================================
;;   -- basic block 25 from 212 to 212 -- before reload
;;   ======================================================

;;	  0-->   212 [r252]=r256                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 212
;;   new tail = 212

;;   ======================================================
;;   -- basic block 26 from 216 to 222 -- before reload
;;   ======================================================

;;	  0-->   216 r148=[r255]                       :cortex_a8_load_store_1
;;	  2-->   222 r155=r155-r148                    :cortex_a8_default
;;	  2-->   221 r154=r154+r148                    :cortex_a8_default
;;	  3-->   219 {r226=zxn(r148)+r145;clobber cc;} :cortex_a8_default
;;	  3-->   220 [r252+0x18]=r226                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 216
;;   new tail = 222

;;   ======================================================
;;   -- basic block 27 from 308 to 238 -- before reload
;;   ======================================================

;;	  0-->   230 r231=[r252]                       :cortex_a8_load_store_1
;;	  1-->   308 r229=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->   236 {r235=r155!=0x0&r231==0x0;clobber :cortex_a8_default
;;	  3-->   237 cc=cmp(r235,0x0)                  :cortex_a8_default
;;	  5-->   238 pc={(cc!=0x0)?L225:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 308
;;   new tail = 238

;;   ======================================================
;;   -- basic block 28 from 324 to 336 -- before reload
;;   ======================================================

;;	  0-->   324 r248=r229                         :cortex_a8_default
;;	  0-->   251 r249=0x100100                     :cortex_a8_load_store_1
;;	  1-->   253 r250=0x200200                     :cortex_a8_load_store_1
;;	  2-->   241 r135=[pre r248+=0xb8]             :cortex_a8_load_store_1
;;	  5-->   242 r134=[r135]                       :cortex_a8_load_store_1
;;	  5-->   336 pc=L266                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 324
;;   new tail = 336

;;   ======================================================
;;   -- basic block 29 from 247 to 265 -- before reload
;;   ======================================================

;;	  0-->   247 r139=[r135+0x4]                   :cortex_a8_load_store_1
;;	  1-->   248 r138=[r135]                       :cortex_a8_load_store_1
;;	  4-->   249 [r138+0x4]=r139                   :cortex_a8_load_store_1
;;	  5-->   250 [r139]=r138                       :cortex_a8_load_store_1
;;	  6-->   252 [r135]=r249                       :cortex_a8_load_store_1
;;	  7-->   254 [r135+0x4]=r250                   :cortex_a8_load_store_1
;;	  8-->   256 r1=[r135+0xc]                     :cortex_a8_load_store_1
;;	  9-->   255 r0=[r135+0x8]                     :cortex_a8_load_store_1
;;	 10-->   257 r0=call [`do_utime']              :cortex_a8_issue_branch
;;	 10-->   258 r0=[r135+0x8]                     :cortex_a8_load_store_1
;;	 11-->   259 call [`kfree']                    :cortex_a8_issue_branch
;;	 11-->   260 r0=r135                           :cortex_a8_default
;;	 12-->   261 call [`kfree']                    :cortex_a8_issue_branch
;;	 12-->   264 r135=r134                         :cortex_a8_default
;;	 13-->   265 r134=[r134]                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 13
;;   new head = 247
;;   new tail = 265

;;   ======================================================
;;   -- basic block 30 from 303 to 272 -- before reload
;;   ======================================================

;;	  0-->   271 cc=cmp(r135,r248)                 :cortex_a8_default
;;	  0-->   303 r239=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->   272 pc={(cc!=0x0)?L268:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 303
;;   new tail = 272

;;   ======================================================
;;   -- basic block 31 from 275 to 295 -- before reload
;;   ======================================================

;;	  0-->   275 r0=[r239+0x74]                    :cortex_a8_load_store_1
;;	  1-->   276 call [`kfree']                    :cortex_a8_issue_branch
;;	  1-->   278 r0=[r239+0x70]                    :cortex_a8_load_store_1
;;	  2-->   279 call [`kfree']                    :cortex_a8_issue_branch
;;	  2-->   281 r0=[r239+0x4]                     :cortex_a8_load_store_1
;;	  3-->   282 call [`kfree']                    :cortex_a8_issue_branch
;;	  3-->   289 r0=[r239]                         :cortex_a8_load_store_1
;;	  4-->   295 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 275
;;   new tail = 295


;; Procedure interblock/speculative motions == 0/0 




unpack_to_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={29d,23u} r1={22d,8u} r2={18d,3u} r3={17d,2u} r11={1d,31u} r12={15d} r13={1d,48u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={34d,17u} r25={1d,33u,1d} r26={1d,30u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r134={2d,2u} r135={2d,10u,1d} r138={1d,2u} r139={1d,2u} r141={1d,2u} r142={1d,2u} r145={1d,3u,2d} r146={1d,1u} r148={1d,3u} r149={1d,2u} r151={1d,2u} r154={4d,7u} r155={4d,8u} r156={1d,3u} r157={1d,9u} r163={1d,1u} r165={1d,1u} r168={1d,2u} r170={1d,2u} r174={1d,4u} r175={1d,1u} r176={1d,1u} r183={1d,1u} r186={1d,1u} r190={1d,1u} r193={2d,2u} r198={1d,2u} r202={1d,1u} r206={1d,1u} r214={1d,1u} r218={1d,1u} r220={1d,1u} r226={1d,1u} r229={1d,1u} r231={1d,1u} r235={1d,1u} r239={1d,4u} r248={2d,3u} r249={1d,1u} r250={1d,1u} r252={1d,22u} r254={1d,1u} r255={1d,2u} r256={1d,2u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,2u} 
;;    total ref usage 2085{1755d,326u,4e} in 163{149 regular + 14 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 154 155 156 157 163
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 154 155 156 157 163
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 13 2 ("found") NOTE_INSN_DELETED_LABEL 66)

(note 13 7 16 2 NOTE_INSN_DELETED)

(note 16 13 22 2 ("found") NOTE_INSN_DELETED_LABEL 67)

(note 22 16 25 2 NOTE_INSN_DELETED)

(note 25 22 9 2 ("found") NOTE_INSN_DELETED_LABEL 68)

(insn 9 25 2 2 include/linux/slab_def.h:122 (set (reg/f:SI 156)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 2 9 3 2 init/initramfs.c:415 (set (reg/v/f:SI 154 [ buf ])
        (reg:SI 0 r0 [ buf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ buf ])
        (nil)))

(insn 3 2 11 2 init/initramfs.c:415 (set (reg/v:SI 155 [ len ])
        (reg:SI 1 r1 [ len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ len ])
        (nil)))

(insn 11 3 14 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 14 11 10 2 init/initramfs.c:421 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 14 12 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 28 [0x1c])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                    (const_int 28 [0x1c]))) [0 <variable>.cs_cachep+0 S4 A32])
        (nil)))

(call_insn 12 10 20 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 12 15 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 15 20 19 2 init/initramfs.c:421 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 19 15 21 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 92 [0x5c])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                    (const_int 92 [0x5c]))) [0 <variable>.cs_cachep+0 S4 A32])
        (nil)))

(call_insn 21 19 29 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 21 24 2 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 24 29 28 2 init/initramfs.c:422 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 28 24 30 2 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 156)
                (const_int 84 [0x54])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                        (const_int 84 [0x54]))) [0 <variable>.cs_cachep+0 S4 A32])
            (nil))))

(call_insn 30 28 31 2 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 30 36 2 include/linux/slab_def.h:122 (set (reg/v/f:SI 142 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 36 31 34 2 init/initramfs.c:425 (set (reg/f:SI 163 [ header_buf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 header_buf+0 S4 A32])
        (nil)))

(insn 34 36 37 2 init/initramfs.c:423 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])
        (reg/v/f:SI 142 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 37 34 38 2 init/initramfs.c:425 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ header_buf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ header_buf ])
        (nil)))

(jump_insn 38 37 39 2 init/initramfs.c:425 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157


;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc] 165
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 39 38 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 3 init/initramfs.c:425 discrim 1 (set (reg/f:SI 165 [ symlink_buf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70]))) [0 symlink_buf+0 S4 A32])
        (nil)))

(insn 42 41 43 3 init/initramfs.c:425 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 165 [ symlink_buf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 165 [ symlink_buf ])
        (nil)))

(jump_insn 43 42 44 3 init/initramfs.c:425 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 154 155 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
(note 44 43 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 4 init/initramfs.c:425 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ ret ])
        (nil)))

(jump_insn 46 45 47 4 init/initramfs.c:425 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 47 46 48 5 69 "" [2 uses])

(note 48 47 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 48 51 5 init/initramfs.c:426 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1151e780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1151e780>)
        (nil)))

(call_insn 51 50 52 5 init/initramfs.c:426 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 52 51 53)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 168 170 252 254 255 256 257 258 259 260 264 265 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 157
;; live  gen 	 168 170 252 254 255 256 257 258 259 260 264 265 266
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 53 52 54 6 70 "" [1 uses])

(note 54 53 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 54 229 6 init/initramfs.c:429 (set (reg:DI 170)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 229 59 340 6 init/initramfs.c:431 discrim 1 (set (reg/f:SI 252)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(insn 340 229 60 6 init/initramfs.c:446 (set (reg:DI 266)
        (reg:DI 170)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 170)
        (nil)))

(insn 60 340 342 6 init/initramfs.c:429 (set (mem/c/i:DI (plus:SI (reg/f:SI 157)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 170)) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 342 60 56 6 init/initramfs.c:446 (set (reg:SI 265 [+4 ])
        (subreg:SI (reg:DI 266) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:DI 266)
        (nil)))

(insn 56 342 63 6 init/initramfs.c:428 (set (reg:SI 168)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 63 56 341 6 init/initramfs.c:430 (set (mem/f/c/i:SI (reg/f:SI 157) [0 message+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 341 63 57 6 init/initramfs.c:446 (set (reg:SI 264)
        (subreg:SI (reg:DI 266) 0)) 167 {*arm_movsi_insn} (nil))

(insn 57 341 128 6 init/initramfs.c:428 (set (mem/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 128 57 215 6 init/initramfs.c:447 (set (reg/f:SI 254)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 215 128 175 6 init/initramfs.c:464 (set (reg/f:SI 255)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 175 215 211 6 init/initramfs.c:455 (set (reg/f:SI 257)
        (plus:SI (reg/f:SI 252)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 211 175 307 6 init/initramfs.c:16 (set (reg/f:SI 256)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)) 167 {*arm_movsi_insn} (nil))

(insn 307 211 142 6 init/initramfs.c:382 discrim 1 (set (reg/f:SI 260)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 142 307 159 6 init/initramfs.c:449 (set (reg/f:SI 258)
        (symbol_ref:SI ("error") [flags 0x3] <function_decl 0x11487300 error>)) 167 {*arm_movsi_insn} (nil))

(insn 159 142 326 6 init/initramfs.c:16 (set (reg/f:SI 259)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x115a92d0>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 326 159 327 6 init/initramfs.c:431 (set (pc)
        (label_ref 325)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  27 [100.0%] 

(barrier 327 326 225)

;; Start of basic block ( 27) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 252
;; lr  def 	 24 [cc] 145 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 145 151
;; live  kill	

;; Pred edge  27 [91.0%] 
(code_label 225 327 66 7 79 "" [1 uses])

(note 66 225 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 69 66 68 7 init/initramfs.c:433 (set (reg:SI 151 [ D.26144 ])
        (zero_extend:SI (mem:QI (reg/v/f:SI 154 [ buf ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 68 69 70 7 init/initramfs.c:432 (set (reg/v:DI 145 [ saved_offset ])
        (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 70 68 71 7 init/initramfs.c:433 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26144 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 7 init/initramfs.c:433 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 8 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 174 175 176
;; live  kill	

;; Pred edge  7 [28.0%]  (fallthru)
(note 72 71 75 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 75 72 76 8 NOTE_INSN_DELETED)

(note 76 75 73 8 NOTE_INSN_DELETED)

(insn 73 76 74 8 init/initramfs.c:433 discrim 1 (set (reg:DI 175)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 74 73 77 8 init/initramfs.c:433 discrim 1 (set (reg:DI 174)
        (and:DI (reg/v:DI 145 [ saved_offset ])
            (reg:DI 175))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 175)
        (expr_list:REG_EQUAL (and:DI (reg/v:DI 145 [ saved_offset ])
                (const_int 3 [0x3]))
            (nil))))

(insn 77 74 78 8 init/initramfs.c:433 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (subreg:SI (reg:DI 174) 0)
                        (subreg:SI (reg:DI 174) 4))
                    (const_int 0 [0x0])))
            (set (reg:SI 176)
                (ior:SI (subreg:SI (reg:DI 174) 0)
                    (subreg:SI (reg:DI 174) 4)))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:DI 174)
        (nil)))

(jump_insn 78 77 79 8 init/initramfs.c:433 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 176 252 254 255 256 257 258 259 260 264 265


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 176 252 254 255 256 257 258 259 260 264 265
;; live  gen 	
;; live  kill	

;; Pred edge  8 [0.0%]  (fallthru)
(note 79 78 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 82 79 84 9 init/initramfs.c:434 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 84 82 86 9 init/initramfs.c:379 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 86 84 98 9 init/initramfs.c:380 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 0 [r0] 24 [cc] 183 186
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [86.0%]  (dfs_back)
(code_label 98 86 87 10 74 "" [1 uses])

(note 87 98 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 92 87 95 10 NOTE_INSN_DELETED)

(note 95 92 97 10 NOTE_INSN_DELETED)

(note 97 95 90 10 NOTE_INSN_DELETED)

(insn 90 97 93 10 init/initramfs.c:382 discrim 1 (set (reg:SI 183 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [0 state+0 S4 A32])
        (nil)))

(insn 93 90 96 10 init/initramfs.c:382 discrim 1 (set (reg:SI 186)
        (plus:SI (mult:SI (reg:SI 183 [ state ])
                (const_int 4 [0x4]))
            (reg/f:SI 252))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 183 [ state ])
        (nil)))

(call_insn 96 93 99 10 init/initramfs.c:382 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg:SI 186)
                                (const_int 56 [0x38])) [0 actions S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 186)
        (nil))
    (nil))

(insn 99 96 100 10 init/initramfs.c:382 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 100 99 101 10 init/initramfs.c:382 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 10 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  10 [86.0%]  (dfs_back)
;; Succ edge  11 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 260
;; lr  def 	 141 154 155 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 141 154 155 190
;; live  kill	

;; Pred edge  10 [14.0%]  (fallthru,loop_exit)
(note 101 100 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 103 101 104 11 init/initramfs.c:384 (set (reg:SI 190 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 260)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 104 103 106 11 init/initramfs.c:384 (set (reg:SI 141 [ D.26367 ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 190 [ count ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 190 [ count ])
        (nil)))

(insn 106 104 105 11 init/initramfs.c:437 (set (reg/v:SI 155 [ len ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 141 [ D.26367 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.26367 ])
        (nil)))

(insn 105 106 328 11 init/initramfs.c:436 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (reg:SI 141 [ D.26367 ]))) 4 {*arm_addsi3} (nil))

(jump_insn 328 105 329 11 init/initramfs.c:438 (set (pc)
        (label_ref 325)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  27 [100.0%]  (dfs_back)

(barrier 329 328 109)

;; Start of basic block ( 7) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 151 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [72.0%] 
(code_label 109 329 110 12 72 "" [1 uses])

(note 110 109 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 12 init/initramfs.c:440 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.26144 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ D.26144 ])
        (nil)))

(jump_insn 112 111 113 12 init/initramfs.c:440 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 140 [0x8c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  13 [98.6%]  (fallthru)
;; Succ edge  14 [1.4%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252
;; lr  def 	 24 [cc] 154 155 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 154 155 193
;; live  kill	 24 [cc]

;; Pred edge  12 [98.6%]  (fallthru)
(note 113 112 117 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 117 113 114 13 init/initramfs.c:443 (set (reg:DI 193)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 114 117 118 13 init/initramfs.c:441 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 118 114 119 13 init/initramfs.c:443 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg/v:DI 145 [ saved_offset ])
                    (reg:DI 193)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg/v:DI 145 [ saved_offset ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (expr_list:REG_EQUAL (plus:DI (reg/v:DI 145 [ saved_offset ])
                    (const_int 1 [0x1]))
                (nil)))))

(insn 119 118 115 13 init/initramfs.c:443 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 193)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 193)
        (nil)))

(insn 115 119 330 13 init/initramfs.c:442 (set (reg/v:SI 155 [ len ])
        (plus:SI (reg/v:SI 155 [ len ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 330 115 331 13 init/initramfs.c:444 (set (pc)
        (label_ref 325)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  27 [100.0%]  (dfs_back)

(barrier 331 330 122)

;; Start of basic block ( 12 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 264 265
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 146
;; live  kill	 14 [lr]

;; Pred edge  12 [1.4%] 
;; Pred edge  8 [100.0%] 
(code_label 122 331 123 14 73 "" [2 uses])

(note 123 122 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 133 123 129 14 NOTE_INSN_DELETED)

(insn 129 133 130 14 init/initramfs.c:447 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 14 init/initramfs.c:447 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 131 130 343 14 init/initramfs.c:447 (set (reg:SI 2 r2)
        (reg/f:SI 254)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 343 131 344 14 init/initramfs.c:446 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S4 A64])
        (reg:SI 264)) 167 {*arm_movsi_insn} (nil))

(insn 344 343 132 14 init/initramfs.c:446 (set (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 28 [0x1c])) [0 this_header+4 S4 A32])
        (reg:SI 265 [+4 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 132 344 134 14 init/initramfs.c:447 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("decompress_method") [flags 0x41] <function_decl 0x114ad900 decompress_method>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 134 132 135 14 init/initramfs.c:448 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 146 [ decompress ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 135 134 136 14 init/initramfs.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 14 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  18 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 155 255 258
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 198
;; live  kill	 14 [lr]

;; Pred edge  14 [69.8%]  (fallthru)
(note 136 135 149 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 149 136 138 15 NOTE_INSN_DELETED)

(insn 138 149 141 15 init/initramfs.c:449 (set (reg:SI 198)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 141 138 139 15 init/initramfs.c:449 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 255)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 139 141 146 15 init/initramfs.c:449 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 146 139 143 15 init/initramfs.c:449 (set (reg:SI 2 r2)
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 143 146 144 15 init/initramfs.c:449 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 258)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("error") [flags 0x3] <function_decl 0x11487300 error>)
        (nil)))

(insn 144 143 145 15 init/initramfs.c:449 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ buf ])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 147 15 init/initramfs.c:449 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 147 145 148 15 init/initramfs.c:449 (set (reg:SI 3 r3)
        (symbol_ref:SI ("flush_buffer") [flags 0x3] <function_decl 0x114ad800 flush_buffer>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("flush_buffer") [flags 0x3] <function_decl 0x114ad800 flush_buffer>)
        (nil)))

(call_insn 148 147 150 15 init/initramfs.c:449 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 146 [ decompress ]) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/v/f:SI 146 [ decompress ])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 150 148 151 15 init/initramfs.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 151 150 152 15 init/initramfs.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 202
;; live  kill	

;; Pred edge  15 [0.0%]  (fallthru)
(note 152 151 154 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 154 152 155 16 init/initramfs.c:15 (set (reg/f:SI 202 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 155 154 156 16 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 202 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 202 [ message ])
        (nil)))

(jump_insn 156 155 157 16 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 16 -> ( 17 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  17 [15.0%]  (fallthru)
;; Succ edge  23 [85.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 259
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	
;; live  kill	

;; Pred edge  16 [15.0%]  (fallthru)
(note 157 156 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 160 157 332 17 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 259)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x115a92d0>)
        (nil)))

(jump_insn 332 160 333 17 (set (pc)
        (label_ref 198)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  23 [100.0%] 

(barrier 333 332 163)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u190(11){ }u191(13){ }u192(25){ }u193(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 149
;; live  kill	

;; Pred edge  14 [30.2%] 
(code_label 163 333 164 18 75 "" [1 uses])

(note 164 163 165 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 165 164 166 18 init/initramfs.c:453 (set (reg/f:SI 149 [ compress_name.420 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 compress_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 167 18 init/initramfs.c:453 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 149 [ compress_name.420 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 167 166 168 18 init/initramfs.c:453 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 18 -> ( 19 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  19 [100.0%]  (fallthru)
;; Succ edge  21 [0.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u197(11){ }u198(13){ }u199(25){ }u200(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 206
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
(note 168 167 170 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 170 168 171 19 init/initramfs.c:454 (set (reg/f:SI 206 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 171 170 172 19 init/initramfs.c:454 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 206 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 206 [ message ])
        (nil)))

(jump_insn 172 171 173 19 init/initramfs.c:454 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 19 -> ( 20 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  20 [6.7%]  (fallthru)
;; Succ edge  23 [93.3%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 252 257
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  19 [6.7%]  (fallthru)
(note 173 172 180 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 180 173 177 20 init/initramfs.c:455 (set (reg:SI 3 r3)
        (reg/f:SI 149 [ compress_name.420 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ compress_name.420 ])
        (nil)))

(insn 177 180 178 20 init/initramfs.c:455 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(insn 178 177 179 20 init/initramfs.c:455 (set (reg:SI 1 r1)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 181 20 init/initramfs.c:455 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114fc3c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114fc3c0>)
        (nil)))

(call_insn 181 179 185 20 init/initramfs.c:455 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("snprintf") [flags 0x41] <function_decl 0x5115e680 snprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 185 181 334 20 init/initramfs.c:458 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 257)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 120 [0x78])))
        (nil)))

(jump_insn 334 185 335 20 (set (pc)
        (label_ref 198)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  23 [100.0%] 

(barrier 335 334 188)

;; Start of basic block ( 18) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 214
;; live  kill	

;; Pred edge  18 [0.0%] 
(code_label 188 335 189 21 77 "" [1 uses])

(note 189 188 191 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 21 init/initramfs.c:15 (set (reg/f:SI 214 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 192 191 193 21 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 214 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 214 [ message ])
        (nil)))

(jump_insn 193 192 194 21 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  22 [15.0%]  (fallthru)
;; Succ edge  23 [85.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	
;; live  kill	

;; Pred edge  21 [15.0%]  (fallthru)
(note 194 193 197 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 197 194 198 22 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)
        (nil)))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 16 17 21 15 19 22 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 218
;; live  kill	

;; Pred edge  16 [85.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  21 [85.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  19 [93.3%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 198 197 199 23 76 "" [6 uses])

(note 199 198 201 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 201 199 202 23 init/initramfs.c:462 (set (reg:SI 218 [ state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 252)
                (const_int 32 [0x20])) [0 state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 32 [0x20]))) [0 state+0 S4 A32])
        (nil)))

(insn 202 201 203 23 init/initramfs.c:462 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 218 [ state ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 218 [ state ])
        (nil)))

(jump_insn 203 202 204 23 init/initramfs.c:462 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 23 -> ( 24 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  24 [0.0%]  (fallthru)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 220
;; live  kill	

;; Pred edge  23 [0.0%]  (fallthru)
(note 204 203 206 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 206 204 207 24 init/initramfs.c:15 (set (reg/f:SI 220 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 207 206 208 24 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 220 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 220 [ message ])
        (nil)))

(jump_insn 208 207 209 24 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  25 [15.0%]  (fallthru)
;; Succ edge  26 [85.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u243(11){ }u244(13){ }u245(25){ }u246(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 252 256
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	
;; live  kill	

;; Pred edge  24 [15.0%]  (fallthru)
(note 209 208 212 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 212 209 213 25 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])
        (reg/f:SI 256)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11505e40>)
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 23 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 255
;; lr  def 	 24 [cc] 148 154 155 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 148 154 155 226
;; live  kill	 24 [cc]

;; Pred edge  23 [100.0%] 
;; Pred edge  24 [85.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 213 212 214 26 78 "" [2 uses])

(note 214 213 218 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 218 214 216 26 NOTE_INSN_DELETED)

(insn 216 218 222 26 init/initramfs.c:464 (set (reg:SI 148 [ my_inptr.423 ])
        (mem/c/i:SI (reg/f:SI 255) [0 my_inptr+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 my_inptr+0 S4 A32])
        (nil)))

(insn 222 216 221 26 init/initramfs.c:466 (set (reg/v:SI 155 [ len ])
        (minus:SI (reg/v:SI 155 [ len ])
            (reg:SI 148 [ my_inptr.423 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 148 [ my_inptr.423 ])
        (nil)))

(insn 221 222 219 26 init/initramfs.c:465 (set (reg/v/f:SI 154 [ buf ])
        (plus:SI (reg/v/f:SI 154 [ buf ])
            (reg:SI 148 [ my_inptr.423 ]))) 4 {*arm_addsi3} (nil))

(insn 219 221 220 26 init/initramfs.c:464 (parallel [
            (set (reg:DI 226)
                (plus:DI (zero_extend:DI (reg:SI 148 [ my_inptr.423 ]))
                    (reg/v:DI 145 [ saved_offset ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg/v:DI 145 [ saved_offset ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 220 219 325 26 init/initramfs.c:464 (set (mem/c/i:DI (plus:SI (reg/f:SI 252)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 226)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 226)
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 11 6 13) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 252
;; lr  def 	 24 [cc] 229 231 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 252 254 255 256 257 258 259 260 264 265
;; live  gen 	 24 [cc] 229 231 235
;; live  kill	 24 [cc]

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (dfs_back)
;; Pred edge  6 [100.0%] 
;; Pred edge  13 [100.0%]  (dfs_back)
(code_label 325 220 323 27 84 "" [3 uses])

(note 323 325 226 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 226 323 227 27 NOTE_INSN_DELETED)

(note 227 226 231 27 NOTE_INSN_DELETED)

(note 231 227 232 27 NOTE_INSN_DELETED)

(note 232 231 234 27 NOTE_INSN_DELETED)

(note 234 232 235 27 NOTE_INSN_DELETED)

(note 235 234 230 27 NOTE_INSN_DELETED)

(insn 230 235 308 27 init/initramfs.c:431 discrim 1 (set (reg/f:SI 231 [ message ])
        (mem/f/c/i:SI (reg/f:SI 252) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 308 230 236 27 init/initramfs.c:431 discrim 1 (set (reg/f:SI 229)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 236 308 237 27 init/initramfs.c:431 discrim 1 (parallel [
            (set (reg:SI 235)
                (and:SI (ne:SI (reg/v:SI 155 [ len ])
                        (const_int 0 [0x0]))
                    (eq:SI (reg/f:SI 231 [ message ])
                        (const_int 0 [0x0]))))
            (clobber (reg:CC 24 cc))
        ]) 290 {*and_scc_scc_nodom} (expr_list:REG_DEAD (reg/f:SI 231 [ message ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 237 236 238 27 init/initramfs.c:431 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 235)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 235)
        (nil)))

(jump_insn 238 237 239 27 init/initramfs.c:431 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 27 -> ( 7 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 254 255 256 257 258 259 260 264 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 229 252 254 255 256 257 258 259 260 264 265


;; Succ edge  7 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; lr  def 	 134 135 248 249 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 229
;; live  gen 	 134 135 248 249 250
;; live  kill	

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 239 238 324 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 324 239 251 28 init/initramfs.c:110 (set (reg/f:SI 248)
        (reg/f:SI 229)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 229)
        (nil)))

(insn 251 324 253 28 include/linux/list.h:107 (set (reg:SI 249)
        (const_int 1048832 [0x100100])) 167 {*arm_movsi_insn} (nil))

(insn 253 251 241 28 include/linux/list.h:108 (set (reg:SI 250)
        (const_int 2097664 [0x200200])) 167 {*arm_movsi_insn} (nil))

(insn 241 253 242 28 init/initramfs.c:110 (set (reg/v/f:SI 135 [ de ])
        (mem/s/f/j/c:SI (pre_modify:SI (reg/f:SI 248)
                (plus:SI (reg/f:SI 248)
                    (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 248)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])
            (nil))))

(insn 242 241 336 28 init/initramfs.c:110 (set (reg/v/f:SI 134 [ de.751 ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 336 242 337 28 (set (pc)
        (label_ref 266)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250


;; Succ edge  30 [100.0%] 

(barrier 337 336 268)

;; Start of basic block ( 30) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 249 250
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 0 [r0] 1 [r1] 134 135 138 139
;; live  kill	 14 [lr]

;; Pred edge  30 [0.0%] 
(code_label 268 337 246 29 81 "" [1 uses])

(note 246 268 262 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 262 246 247 29 NOTE_INSN_DELETED)

(insn 247 262 248 29 include/linux/list.h:106 (set (reg/f:SI 139 [ D.26385 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 29 include/linux/list.h:106 (set (reg/f:SI 138 [ D.26386 ])
        (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 29 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ D.26386 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 139 [ D.26385 ])) 167 {*arm_movsi_insn} (nil))

(insn 250 249 252 29 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 139 [ D.26385 ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 138 [ D.26386 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.26385 ])
        (expr_list:REG_DEAD (reg/f:SI 138 [ D.26386 ])
            (nil))))

(insn 252 250 254 29 include/linux/list.h:107 (set (mem/s/f/j:SI (reg/v/f:SI 135 [ de ]) [0 <variable>.list.next+0 S4 A32])
        (reg:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1048832 [0x100100])
        (nil)))

(insn 254 252 256 29 include/linux/list.h:108 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg:SI 250)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2097664 [0x200200])
        (nil)))

(insn 256 254 255 29 init/initramfs.c:112 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 12 [0xc])) [0 <variable>.mtime+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 255 256 257 29 init/initramfs.c:112 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 257 255 258 29 init/initramfs.c:112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 258 257 259 29 init/initramfs.c:113 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ de ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 259 258 260 29 init/initramfs.c:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 260 259 261 29 init/initramfs.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ de ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ de ])
        (nil)))

(call_insn 261 260 264 29 init/initramfs.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 264 261 265 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 135 [ de ])
        (reg/v/f:SI 134 [ de.751 ])) 167 {*arm_movsi_insn} (nil))

(insn 265 264 266 29 init/initramfs.c:110 discrim 2 (set (reg/v/f:SI 134 [ de.751 ])
        (mem/s/f/j:SI (reg/v/f:SI 134 [ de.751 ]) [0 <variable>.list.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250


;; Succ edge  30 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 29 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 248
;; lr  def 	 24 [cc] 239
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 248 249 250
;; live  gen 	 24 [cc] 239
;; live  kill	

;; Pred edge  29 [100.0%]  (fallthru,dfs_back)
;; Pred edge  28 [100.0%] 
(code_label 266 265 267 30 80 "" [1 uses])

(note 267 266 271 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 271 267 303 30 init/initramfs.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ de ])
            (reg/f:SI 248))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 135 [ de ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 184 [0xb8]))))
        (nil)))

(insn 303 271 272 30 init/initramfs.c:110 (set (reg/f:SI 239)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 272 303 273 30 init/initramfs.c:110 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 268)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 30 -> ( 29 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 239 248 249 250


;; Succ edge  29 [0.0%] 
;; Succ edge  31 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 239
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  30 [100.0%]  (fallthru,loop_exit)
(note 273 272 284 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 284 273 275 31 NOTE_INSN_DELETED)

(insn 275 284 276 31 init/initramfs.c:469 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 116 [0x74]))) [0 name_buf+0 S4 A32])
        (nil)))

(call_insn 276 275 278 31 init/initramfs.c:469 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 278 276 279 31 init/initramfs.c:470 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70]))) [0 symlink_buf+0 S4 A32])
        (nil)))

(call_insn 279 278 281 31 init/initramfs.c:470 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 281 279 282 31 init/initramfs.c:471 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 4 [0x4])) [0 header_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 header_buf+0 S4 A32])
        (nil)))

(call_insn 282 281 289 31 init/initramfs.c:471 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 289 282 295 31 init/initramfs.c:473 (set (reg/i:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 239) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 239)
        (nil)))

(insn 295 289 345 31 init/initramfs.c:473 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 31 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 345 295 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_copy (do_copy)[0:1329] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 10 -- before reload
;;   ======================================================

;;	  0-->     5 r139=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->     6 r137=[r139+0x8]                   :cortex_a8_load_store_1
;;	  4-->     8 r136=[r139+0x5c]                  :cortex_a8_load_store_1
;;	  6-->     9 cc=cmp(r137,r136)                 :cortex_a8_default
;;	  8-->    10 pc={(ltu(cc,0x0))?L53:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 5
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 14 to 99 -- before reload
;;   ======================================================

;;	  0-->    16 r2=r136                           :cortex_a8_default
;;	  0-->    15 r1=[r139+0xc]                     :cortex_a8_load_store_1
;;	  1-->    14 r0=[r139+0xc0]                    :cortex_a8_load_store_1
;;	  2-->    17 r0=call [`sys_write']             :cortex_a8_issue_branch
;;	  2-->    19 r0=[r139+0xc0]                    :cortex_a8_load_store_1
;;	  3-->    20 r0=call [`sys_close']             :cortex_a8_issue_branch
;;	  3-->    24 r1=[r139+0x6c]                    :cortex_a8_load_store_1
;;	  4-->    23 r0=[r139+0xc4]                    :cortex_a8_load_store_1
;;	  5-->    25 r0=call [`do_utime']              :cortex_a8_issue_branch
;;	  5-->    27 r0=[r139+0xc4]                    :cortex_a8_load_store_1
;;	  6-->    28 call [`kfree']                    :cortex_a8_issue_branch
;;	  6-->    30 r134=[r139+0x5c]                  :cortex_a8_load_store_1
;;	  7-->    33 r150=[r139+0xc]                   :cortex_a8_load_store_1
;;	  7-->    48 r162=0x3                          :cortex_a8_default
;;	  8-->    39 r155=[r139+0x18]                  :cortex_a8_load_store_1
;;	  8-->    50 r135=0x0                          :cortex_a8_default
;;	  9-->    44 r159=[r139+0x8]                   :cortex_a8_load_store_1
;;	  9-->    34 r151=r150+r134                    :cortex_a8_default
;;	 10-->    49 [r139+0x20]=r162                  :cortex_a8_load_store_1
;;	 10-->    40 {r156=zxn(r134)+r155;clobber cc;} :cortex_a8_default
;;	 11-->    45 r160=r159-r134                    :cortex_a8_default
;;	 11-->    35 [r139+0xc]=r151                   :cortex_a8_load_store_1
;;	 12-->    41 [r139+0x18]=r156                  :cortex_a8_load_store_1
;;	 13-->    46 [r139+0x8]=r160                   :cortex_a8_load_store_1
;;	 13-->    99 pc=L83                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 13
;;   new head = 14
;;   new tail = 99

;;   ======================================================
;;   -- basic block 4 from 57 to 82 -- before reload
;;   ======================================================

;;	  0-->    59 r2=r137                           :cortex_a8_default
;;	  0-->    57 r0=[r139+0xc0]                    :cortex_a8_load_store_1
;;	  1-->    58 r1=[r139+0xc]                     :cortex_a8_load_store_1
;;	  2-->    60 r0=call [`sys_write']             :cortex_a8_issue_branch
;;	  2-->    62 r133=[r139+0x8]                   :cortex_a8_load_store_1
;;	  3-->    65 r168=[r139+0x5c]                  :cortex_a8_load_store_1
;;	  3-->    82 r135=0x1                          :cortex_a8_default
;;	  4-->    70 r172=[r139+0xc]                   :cortex_a8_load_store_1
;;	  4-->    80 r180=0x0                          :cortex_a8_default
;;	  5-->    76 r177=[r139+0x18]                  :cortex_a8_load_store_1
;;	  5-->    66 r169=r168-r133                    :cortex_a8_default
;;	  6-->    81 [r139+0x8]=r180                   :cortex_a8_load_store_1
;;	  6-->    71 r173=r172+r133                    :cortex_a8_default
;;	  7-->    77 {r178=zxn(r133)+r177;clobber cc;} :cortex_a8_default
;;	  7-->    67 [r139+0x5c]=r169                  :cortex_a8_load_store_1
;;	  8-->    72 [r139+0xc]=r173                   :cortex_a8_load_store_1
;;	  9-->    78 [r139+0x18]=r178                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 9
;;   new head = 57
;;   new tail = 82

;;   ======================================================
;;   -- basic block 5 from 89 to 95 -- before reload
;;   ======================================================

;;	  0-->    89 r0=r135                           :cortex_a8_default
;;	  0-->    95 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 89
;;   new tail = 95


;; Procedure interblock/speculative motions == 0/0 




do_copy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={9d,3u} r2={8d,2u} r3={6d} r11={1d,5u} r12={6d} r13={1d,10u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={8d,1u} r25={1d,5u} r26={1d,4u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,3u} r134={1d,3u} r135={2d,1u} r136={1d,2u} r137={1d,2u} r139={1d,26u} r150={1d,1u} r151={1d,1u} r155={1d,1u} r156={1d,1u} r159={1d,1u} r160={1d,1u} r162={1d,1u} r168={1d,1u} r169={1d,1u} r172={1d,1u} r173={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} 
;;    total ref usage 719{630d,89u,0e} in 49{44 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 139
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:338 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:338 (set (reg:SI 137 [ count.385 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 8 6 9 2 init/initramfs.c:338 (set (reg:SI 136 [ body_len.386 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 9 8 10 2 init/initramfs.c:338 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ count.385 ])
            (reg:SI 136 [ body_len.386 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 init/initramfs.c:338 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9997 [0x270d])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 150 151 155 156 159 160 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 150 151 155 156 159 160 162
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 37 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 37 11 16 3 NOTE_INSN_DELETED)

(insn 16 37 15 3 init/initramfs.c:339 (set (reg:SI 2 r2)
        (reg:SI 136 [ body_len.386 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ body_len.386 ])
        (nil)))

(insn 15 16 14 3 init/initramfs.c:339 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 14 15 17 3 init/initramfs.c:339 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(call_insn 17 14 19 3 init/initramfs.c:339 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_write") [flags 0x41] <function_decl 0x11464900 sys_write>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 19 17 20 3 init/initramfs.c:340 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(call_insn 20 19 24 3 init/initramfs.c:340 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_close") [flags 0x41] <function_decl 0x1145e900 sys_close>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 24 20 23 3 init/initramfs.c:341 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 108 [0x6c]))) [0 mtime+0 S4 A32])
        (nil)))

(insn 23 24 25 3 init/initramfs.c:341 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 196 [0xc4]))) [0 vcollected+0 S4 A32])
        (nil)))

(call_insn 25 23 27 3 init/initramfs.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 27 25 28 3 init/initramfs.c:342 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 196 [0xc4]))) [0 vcollected+0 S4 A32])
        (nil)))

(call_insn 28 27 30 3 init/initramfs.c:342 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 28 33 3 init/initramfs.c:343 (set (reg:SI 134 [ body_len.779 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 33 30 48 3 init/initramfs.c:172 (set (reg/f:SI 150 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 48 33 39 3 init/initramfs.c:344 (set (reg:SI 162)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 39 48 50 3 init/initramfs.c:173 (set (reg:DI 155 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 50 39 44 3 init/initramfs.c:345 (set (reg:SI 135 [ D.26039 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 44 50 34 3 init/initramfs.c:174 (set (reg:SI 159 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 34 44 49 3 init/initramfs.c:172 (set (reg:SI 151)
        (plus:SI (reg/f:SI 150 [ victim ])
            (reg:SI 134 [ body_len.779 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 150 [ victim ])
        (nil)))

(insn 49 34 40 3 init/initramfs.c:344 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (const_int 3 [0x3])
                (nil)))))

(insn 40 49 45 3 init/initramfs.c:173 (parallel [
            (set (reg:DI 156)
                (plus:DI (zero_extend:DI (reg:SI 134 [ body_len.779 ]))
                    (reg:DI 155 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 155 [ this_header ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 45 40 35 3 init/initramfs.c:174 (set (reg:SI 160)
        (minus:SI (reg:SI 159 [ count ])
            (reg:SI 134 [ body_len.779 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 159 [ count ])
        (expr_list:REG_DEAD (reg:SI 134 [ body_len.779 ])
            (nil))))

(insn 35 45 41 3 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 41 35 46 3 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 156)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 156)
        (nil)))

(insn 46 41 99 3 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(jump_insn 99 46 100 3 init/initramfs.c:345 (set (pc)
        (label_ref 83)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%] 

(barrier 100 99 53)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 168 169 172 173 177 178 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 135 168 169 172 173 177 178 180
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [100.0%] 
(code_label 53 100 54 4 88 "" [1 uses])

(note 54 53 74 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 74 54 59 4 NOTE_INSN_DELETED)

(insn 59 74 57 4 init/initramfs.c:347 (set (reg:SI 2 r2)
        (reg:SI 137 [ count.385 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ count.385 ])
        (nil)))

(insn 57 59 58 4 init/initramfs.c:347 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(insn 58 57 60 4 init/initramfs.c:347 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(call_insn 60 58 62 4 init/initramfs.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_write") [flags 0x41] <function_decl 0x11464900 sys_write>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 62 60 65 4 init/initramfs.c:348 (set (reg:SI 133 [ count.784 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 65 62 82 4 init/initramfs.c:348 (set (reg:SI 168 [ body_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 82 65 70 4 init/initramfs.c:350 (set (reg:SI 135 [ D.26039 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 70 82 80 4 init/initramfs.c:172 (set (reg/f:SI 172 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 80 70 76 4 init/initramfs.c:174 (set (reg:SI 180)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 76 80 66 4 init/initramfs.c:173 (set (reg:DI 177 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 66 76 81 4 init/initramfs.c:348 (set (reg:SI 169)
        (minus:SI (reg:SI 168 [ body_len ])
            (reg:SI 133 [ count.784 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 168 [ body_len ])
        (nil)))

(insn 81 66 71 4 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 180)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 71 81 77 4 init/initramfs.c:172 (set (reg:SI 173)
        (plus:SI (reg/f:SI 172 [ victim ])
            (reg:SI 133 [ count.784 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 172 [ victim ])
        (nil)))

(insn 77 71 67 4 init/initramfs.c:173 (parallel [
            (set (reg:DI 178)
                (plus:DI (zero_extend:DI (reg:SI 133 [ count.784 ]))
                    (reg:DI 177 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 177 [ this_header ])
        (expr_list:REG_DEAD (reg:SI 133 [ count.784 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 67 77 72 4 init/initramfs.c:348 (set (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 72 67 78 4 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 78 72 83 4 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 178)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 178)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 83 78 84 5 89 "" [1 uses])

(note 84 83 89 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 89 84 95 5 init/initramfs.c:352 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.26039 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26039 ])
        (nil)))

(insn 95 89 101 5 init/initramfs.c:352 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 101 95 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function maybe_link (maybe_link)[0:1326] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 8 -- before reload
;;   ======================================================

;;	  0-->     5 r147=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->     6 r148=[r147+0xc8]                  :cortex_a8_load_store_1
;;	  5-->     7 cc=cmp(r148,0x1)                  :cortex_a8_default
;;	  7-->     8 pc={(gtu(cc,0x0))?L13:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 5
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 130 -- before reload
;;   ======================================================

;;	  0-->    10 r140=0x0                          :cortex_a8_default
;;	  0-->   130 pc=L112                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 130

;;   ======================================================
;;   -- basic block 4 from 16 to 132 -- before reload
;;   ======================================================

;;	  0-->    16 r145=[r147+0xcc]                  :cortex_a8_load_store_1
;;	  0-->    30 r157=r147+0xdc                    :cortex_a8_default
;;	  1-->    18 r144=[r147+0xd0]                  :cortex_a8_load_store_1
;;	  2-->    20 r143=[r147+0xd4]                  :cortex_a8_load_store_1
;;	  3-->    22 r142=zxn([r147+0xd8])             :cortex_a8_load_store_1
;;	  4-->    25 r154=r143+r144                    :cortex_a8_default
;;	  4-->    24 r141=[r147+0x10]                  :cortex_a8_load_store_1
;;	  5-->    27 r136=r145*0x8+r154                :cortex_a8_default
;;	  7-->    31 r158=r136 0>>0x5+r136             :cortex_a8_default
;;	  8-->    32 r159=r158&0x1f                    :cortex_a8_default
;;	 10-->    34 r134=r159*0x4+r157                :cortex_a8_default
;;	 10-->   132 pc=L72                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 10
;;   new head = 16
;;   new tail = 132

;;   ======================================================
;;   -- basic block 5 from 38 to 40 -- before reload
;;   ======================================================

;;	  0-->    38 r161=[r133]                       :cortex_a8_load_store_1
;;	  2-->    39 cc=cmp(r161,r143)                 :cortex_a8_default
;;	  4-->    40 pc={(cc!=0x0)?L69:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 38
;;   new tail = 40

;;   ======================================================
;;   -- basic block 6 from 42 to 44 -- before reload
;;   ======================================================

;;	  0-->    42 r162=[r133+0x4]                   :cortex_a8_load_store_1
;;	  2-->    43 cc=cmp(r162,r144)                 :cortex_a8_default
;;	  4-->    44 pc={(cc!=0x0)?L69:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 42
;;   new tail = 44

;;   ======================================================
;;   -- basic block 7 from 46 to 48 -- before reload
;;   ======================================================

;;	  0-->    46 r163=[r133+0x8]                   :cortex_a8_load_store_1
;;	  2-->    47 cc=cmp(r163,r145)                 :cortex_a8_default
;;	  4-->    48 pc={(cc!=0x0)?L69:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 46
;;   new tail = 48

;;   ======================================================
;;   -- basic block 8 from 50 to 56 -- before reload
;;   ======================================================

;;	  0-->    50 r165=zxn([r133+0xc])              :cortex_a8_load_store_1
;;	  2-->    53 r167=r142^r165                    :cortex_a8_default
;;	  3-->    55 {cc=cmp(r167&0xf000,0x0);clobber s:cortex_a8_default
;;	  5-->    56 pc={(cc!=0x0)?L69:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 50
;;   new tail = 56

;;   ======================================================
;;   -- basic block 9 from 59 to 134 -- before reload
;;   ======================================================

;;	  0-->    59 r0=r133+0x14                      :cortex_a8_default
;;	  0-->    60 r1=r141                           :cortex_a8_default
;;	  1-->    61 r0=call [`sys_link']              :cortex_a8_issue_branch
;;	 33-->   128 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 34-->   129 r140={(cc<0x0)?0xffffffffffffffff::cortex_a8_default
;;	 34-->   134 pc=L112                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 34
;;   new head = 59
;;   new tail = 134

;;   ======================================================
;;   -- basic block 10 from 71 to 71 -- before reload
;;   ======================================================

;;	  0-->    71 r134=r133+0x10                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 71
;;   new tail = 71

;;   ======================================================
;;   -- basic block 11 from 74 to 77 -- before reload
;;   ======================================================

;;	  0-->    74 r133=[r134]                       :cortex_a8_load_store_1
;;	  2-->    76 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  4-->    77 pc={(cc!=0x0)?L75:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 74
;;   new tail = 77

;;   ======================================================
;;   -- basic block 12 from 80 to 87 -- before reload
;;   ======================================================

;;	  0-->    80 r170=`malloc_sizes'               :cortex_a8_load_store_1
;;	  0-->    82 r1=0xd0                           :cortex_a8_default
;;	  3-->    81 r0=[r170+0x54]                    :cortex_a8_load_store_1
;;	  4-->    83 r0=call [`kmem_cache_alloc']      :cortex_a8_issue_branch
;;	 36-->    86 {cc=cmp(r0,0x0);r138=r0;}         :cortex_a8_default
;;	 38-->    87 pc={(cc!=0x0)?L93:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 80
;;   new tail = 87

;;   ======================================================
;;   -- basic block 13 from 90 to 91 -- before reload
;;   ======================================================

;;	  0-->    90 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	  1-->    91 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 90
;;   new tail = 91

;;   ======================================================
;;   -- basic block 14 from 95 to 106 -- before reload
;;   ======================================================

;;	  0-->    95 [r138+0x8]=r145                   :cortex_a8_load_store_1
;;	  0-->   101 r1=r141                           :cortex_a8_default
;;	  1-->    96 [r138+0x4]=r144                   :cortex_a8_load_store_1
;;	  1-->   100 r0=r138+0x14                      :cortex_a8_default
;;	  2-->    97 [r138]=r143                       :cortex_a8_load_store_1
;;	  3-->    98 [r138+0xc]=r142#0                 :cortex_a8_load_store_1
;;	  4-->   102 r0=call [`strcpy']                :cortex_a8_issue_branch
;;	  4-->   106 r140=r133                         :cortex_a8_default
;;	  5-->   104 [r138+0x10]=r133                  :cortex_a8_load_store_1
;;	  6-->   105 [r134]=r138                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 95
;;   new tail = 106

;;   ======================================================
;;   -- basic block 15 from 118 to 124 -- before reload
;;   ======================================================

;;	  0-->   118 r0=r140                           :cortex_a8_default
;;	  0-->   124 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 118
;;   new tail = 124


;; Procedure interblock/speculative motions == 0/0 




maybe_link

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,9u} r1={8d,3u} r2={5d} r3={5d} r11={1d,15u} r12={5d} r13={1d,19u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,15u} r26={1d,14u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,9u} r134={2d,2u} r136={1d,2u} r138={1d,7u} r140={3d,1u} r141={1d,2u} r142={1d,2u} r143={1d,3u} r144={1d,3u} r145={1d,3u} r147={1d,7u} r148={1d,1u} r154={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r167={1d,1u} r170={1d,1u} 
;;    total ref usage 655{519d,136u,0e} in 61{57 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/initramfs.c:271 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/initramfs.c:271 (set (reg:SI 148 [ nlink ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 200 [0xc8])) [0 nlink+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 200 [0xc8]))) [0 nlink+0 S4 A32])
        (nil)))

(insn 7 6 8 2 init/initramfs.c:271 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ nlink ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ nlink ])
        (nil)))

(jump_insn 8 7 9 2 init/initramfs.c:271 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147


;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 130 3 init/initramfs.c:276 (set (reg:SI 140 [ D.25953 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 130 10 131 3 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  15 [100.0%] 

(barrier 131 130 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134 136 141 142 143 144 145 154 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 134 136 141 142 143 144 145 154 157 158 159
;; live  kill	

;; Pred edge  2 [0.0%] 
(code_label 13 131 14 4 94 "" [1 uses])

(note 14 13 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 14 28 4 NOTE_INSN_DELETED)

(note 28 26 33 4 NOTE_INSN_DELETED)

(note 33 28 16 4 NOTE_INSN_DELETED)

(insn 16 33 30 4 init/initramfs.c:272 (set (reg:SI 145 [ major.364 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 204 [0xcc])) [0 major+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 204 [0xcc]))) [0 major+0 S4 A32])
        (nil)))

(insn 30 16 18 4 init/initramfs.c:41 (set (reg/f:SI 157)
        (plus:SI (reg/f:SI 147)
            (const_int 220 [0xdc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 220 [0xdc])))
            (nil))))

(insn 18 30 20 4 init/initramfs.c:272 (set (reg:SI 144 [ minor.366 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 208 [0xd0])) [0 minor+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 208 [0xd0]))) [0 minor+0 S4 A32])
        (nil)))

(insn 20 18 22 4 init/initramfs.c:272 (set (reg:SI 143 [ ino.368 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 212 [0xd4])) [0 ino+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 212 [0xd4]))) [0 ino+0 S4 A32])
        (nil)))

(insn 22 20 25 4 init/initramfs.c:272 (set (reg:SI 142 [ mode.369 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 147)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 25 22 24 4 init/initramfs.c:32 (set (reg:SI 154)
        (plus:SI (reg:SI 143 [ ino.368 ])
            (reg:SI 144 [ minor.366 ]))) 4 {*arm_addsi3} (nil))

(insn 24 25 27 4 init/initramfs.c:272 (set (reg/f:SI 141 [ collected.370 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 27 24 31 4 init/initramfs.c:32 (set (reg/v:SI 136 [ tmp ])
        (plus:SI (mult:SI (reg:SI 145 [ major.364 ])
                (const_int 8 [0x8]))
            (reg:SI 154))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 31 27 32 4 init/initramfs.c:41 (set (reg:SI 158)
        (plus:SI (lshiftrt:SI (reg/v:SI 136 [ tmp ])
                (const_int 5 [0x5]))
            (reg/v:SI 136 [ tmp ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/v:SI 136 [ tmp ])
        (nil)))

(insn 32 31 34 4 init/initramfs.c:41 (set (reg:SI 159)
        (and:SI (reg:SI 158)
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 34 32 132 4 init/initramfs.c:41 (set (reg/v/f:SI 134 [ p ])
        (plus:SI (mult:SI (reg:SI 159)
                (const_int 4 [0x4]))
            (reg/f:SI 157))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (nil))))

(jump_insn 132 34 133 4 (set (pc)
        (label_ref 72)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145


;; Succ edge  11 [100.0%] 

(barrier 133 132 75)

;; Start of basic block ( 11) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; lr  def 	 24 [cc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 161
;; live  kill	

;; Pred edge  11 [95.5%] 
(code_label 75 133 37 5 99 "" [1 uses])

(note 37 75 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 init/initramfs.c:42 (set (reg:SI 161 [ <variable>.ino ])
        (mem/s/j:SI (reg/f:SI 133 [ D.26472 ]) [0 <variable>.ino+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 5 init/initramfs.c:42 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161 [ <variable>.ino ])
            (reg:SI 143 [ ino.368 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.ino ])
        (nil)))

(jump_insn 40 39 41 5 init/initramfs.c:42 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  10 [72.0%] 
;; Succ edge  6 [28.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 162
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 6 init/initramfs.c:44 (set (reg:SI 162 [ <variable>.minor ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ D.26472 ])
                (const_int 4 [0x4])) [0 <variable>.minor+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 init/initramfs.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162 [ <variable>.minor ])
            (reg:SI 144 [ minor.366 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162 [ <variable>.minor ])
        (nil)))

(jump_insn 44 43 45 6 init/initramfs.c:44 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  10 [72.0%] 
;; Succ edge  7 [28.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 145
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 163
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 7 init/initramfs.c:46 (set (reg:SI 163 [ <variable>.major ])
        (mem/s/j:SI (plus:SI (reg/f:SI 133 [ D.26472 ])
                (const_int 8 [0x8])) [0 <variable>.major+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 init/initramfs.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ <variable>.major ])
            (reg:SI 145 [ major.364 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.major ])
        (nil)))

(jump_insn 48 47 49 7 init/initramfs.c:46 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  10 [72.0%] 
;; Succ edge  8 [28.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 142
;; lr  def 	 24 [cc] 165 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 24 [cc] 165 167
;; live  kill	

;; Pred edge  7 [28.0%]  (fallthru)
(note 49 48 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 52 49 54 8 NOTE_INSN_DELETED)

(note 54 52 50 8 NOTE_INSN_DELETED)

(insn 50 54 53 8 init/initramfs.c:48 (set (reg:SI 165 [ <variable>.mode ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/f:SI 133 [ D.26472 ])
                    (const_int 12 [0xc])) [0 <variable>.mode+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 53 50 55 8 init/initramfs.c:48 (set (reg:SI 167)
        (xor:SI (reg:SI 142 [ mode.369 ])
            (reg:SI 165 [ <variable>.mode ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 165 [ <variable>.mode ])
        (nil)))

(insn 55 53 56 8 init/initramfs.c:48 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 167)
                        (const_int 61440 [0xf000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(jump_insn 56 55 57 8 init/initramfs.c:48 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140
;; live  kill	 14 [lr]

;; Pred edge  8 [50.0%]  (fallthru,loop_exit)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 58 57 62 9 NOTE_INSN_DELETED)

(note 62 58 59 9 NOTE_INSN_DELETED)

(insn 59 62 60 9 init/initramfs.c:274 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 133 [ D.26472 ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26472 ])
        (nil)))

(insn 60 59 61 9 init/initramfs.c:274 (set (reg:SI 1 r1)
        (reg/f:SI 141 [ collected.370 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ collected.370 ])
        (nil)))

(call_insn 61 60 128 9 init/initramfs.c:274 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_link") [flags 0x41] <function_decl 0x11458c00 sys_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 128 61 129 9 init/initramfs.c:274 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 129 128 134 9 init/initramfs.c:274 discrim 2 (set (reg:SI 140 [ D.25953 ])
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -1 [0xffffffffffffffff])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 134 129 135 9 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  15 [100.0%] 

(barrier 135 134 69)

;; Start of basic block ( 5 6 7 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 141 142 143 144 145
;; live  gen 	 134
;; live  kill	

;; Pred edge  5 [72.0%] 
;; Pred edge  6 [72.0%] 
;; Pred edge  7 [72.0%] 
;; Pred edge  8 [50.0%] 
(code_label 69 135 70 10 97 "" [4 uses])

(note 70 69 71 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 10 init/initramfs.c:41 (set (reg/v/f:SI 134 [ p ])
        (plus:SI (reg/f:SI 133 [ D.26472 ])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26472 ])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145


;; Succ edge  11 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 142 143 144 145
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 72 71 73 11 96 "" [1 uses])

(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 11 init/initramfs.c:41 discrim 1 (set (reg/f:SI 133 [ D.26472 ])
        (mem/f:SI (reg/v/f:SI 134 [ p ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 74 77 11 init/initramfs.c:41 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.26472 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 79 11 init/initramfs.c:41 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 11 -> ( 5 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145


;; Succ edge  5 [95.5%] 
;; Succ edge  12 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138 170
;; live  kill	 14 [lr]

;; Pred edge  11 [4.5%]  (fallthru,loop_exit)
(note 79 77 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 78 79 84 12 ("found") NOTE_INSN_DELETED_LABEL 100)

(note 84 78 80 12 NOTE_INSN_DELETED)

(insn 80 84 82 12 include/linux/slab_def.h:122 (set (reg/f:SI 170)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 82 80 81 12 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 81 82 83 12 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 170)
                (const_int 84 [0x54])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                        (const_int 84 [0x54]))) [0 <variable>.cs_cachep+0 S4 A32])
            (nil))))

(call_insn 83 81 86 12 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 83 87 12 init/initramfs.c:53 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 138 [ ret ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 87 86 88 12 init/initramfs.c:53 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 88 87 90 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 90 88 91 13 init/initramfs.c:54 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x115c7780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x115c7780>)
        (nil)))

(call_insn 91 90 92 13 init/initramfs.c:54 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 13 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 92 91 93)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 141 142 143 144 145
;; live  gen 	 0 [r0] 1 [r1] 140
;; live  kill	 14 [lr]

;; Pred edge  12 [100.0%] 
(code_label 93 92 94 14 101 "" [1 uses])

(note 94 93 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 99 94 95 14 NOTE_INSN_DELETED)

(insn 95 99 101 14 init/initramfs.c:55 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 8 [0x8])) [0 <variable>.major+0 S4 A32])
        (reg:SI 145 [ major.364 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ major.364 ])
        (nil)))

(insn 101 95 96 14 init/initramfs.c:59 (set (reg:SI 1 r1)
        (reg/f:SI 141 [ collected.370 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ collected.370 ])
        (nil)))

(insn 96 101 100 14 init/initramfs.c:56 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.minor+0 S4 A32])
        (reg:SI 144 [ minor.366 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ minor.366 ])
        (nil)))

(insn 100 96 97 14 init/initramfs.c:59 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 138 [ ret ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 97 100 98 14 init/initramfs.c:57 (set (mem/s/j:SI (reg/v/f:SI 138 [ ret ]) [0 <variable>.ino+0 S4 A32])
        (reg:SI 143 [ ino.368 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ ino.368 ])
        (nil)))

(insn 98 97 102 14 init/initramfs.c:58 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 12 [0xc])) [0 <variable>.mode+0 S2 A32])
        (subreg/s/u:HI (reg:SI 142 [ mode.369 ]) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 142 [ mode.369 ])
        (nil)))

(call_insn 102 98 106 14 init/initramfs.c:59 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 106 102 104 14 init/initramfs.c:276 (set (reg:SI 140 [ D.25953 ])
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26472 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 104 106 105 14 init/initramfs.c:60 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 138 [ ret ])
                (const_int 16 [0x10])) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 133 [ D.26472 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 105 104 112 14 init/initramfs.c:61 (set (mem/f:SI (reg/v/f:SI 134 [ p ]) [0 S4 A32])
        (reg/v/f:SI 138 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ ret ])
        (expr_list:REG_DEAD (reg/v/f:SI 134 [ p ])
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 3 14 9) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [100.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 112 105 113 15 95 "" [2 uses])

(note 113 112 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 118 113 124 15 init/initramfs.c:277 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ D.25953 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.25953 ])
        (nil)))

(insn 124 118 136 15 init/initramfs.c:277 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 136 124 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_name (do_name)[0:1328] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 35 to 50 -- before reload
;;   ======================================================

;;	  0-->    35 r183=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    36 r184=0x3                          :cortex_a8_default
;;	  1-->    45 r1=`*.LC6'                        :cortex_a8_load_store_1
;;	  1-->    39 r186=0x7                          :cortex_a8_default
;;	  3-->    42 r181=[r183+0x10]                  :cortex_a8_load_store_1
;;	  4-->    37 [r183+0x20]=r184                  :cortex_a8_load_store_1
;;	  5-->    44 r0=r181                           :cortex_a8_default
;;	  5-->    40 [r183+0x2c]=r186                  :cortex_a8_load_store_1
;;	  6-->    46 r0=call [`strcmp']                :cortex_a8_issue_branch
;;	 38-->    49 {cc=cmp(r0,0x0);r189=r0;}         :cortex_a8_default
;;	 40-->    50 pc={(cc!=0x0)?L77:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 40
;;   new head = 35
;;   new tail = 50

;;   ======================================================
;;   -- basic block 3 from 52 to 296 -- before reload
;;   ======================================================

;;	  0-->    52 r164=r189                         :cortex_a8_default
;;	  0-->    65 r249=r183+0xdc                    :cortex_a8_default
;;	  1-->   296 pc=L294                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 52
;;   new tail = 296

;;   ======================================================
;;   -- basic block 4 from 58 to 61 -- before reload
;;   ======================================================

;;	  0-->    58 r192=[r170+0x10]                  :cortex_a8_load_store_1
;;	  0-->    60 r0=r170                           :cortex_a8_default
;;	  3-->    59 [r249+r164]=r192                  :cortex_a8_load_store_1
;;	  3-->    61 call [`kfree']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 58
;;   new tail = 61

;;   ======================================================
;;   -- basic block 5 from 66 to 69 -- before reload
;;   ======================================================

;;	  0-->    66 r170=[r249+r164]                  :cortex_a8_load_store_1
;;	  2-->    68 cc=cmp(r170,0x0)                  :cortex_a8_default
;;	  4-->    69 pc={(cc!=0x0)?L67:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 66
;;   new tail = 69

;;   ======================================================
;;   -- basic block 6 from 71 to 73 -- before reload
;;   ======================================================

;;	  0-->    71 r164=r164+0x4                     :cortex_a8_default
;;	  1-->    72 cc=cmp(r164,0x80)                 :cortex_a8_default
;;	  3-->    73 pc={(cc!=0x0)?L294:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 71
;;   new tail = 73

;;   ======================================================
;;   -- basic block 7 from 299 to 299 -- before reload
;;   ======================================================

;;	  0-->   299 pc=L269                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 299
;;   new tail = 299

;;   ======================================================
;;   -- basic block 8 from 81 to 88 -- before reload
;;   ======================================================

;;	  0-->    81 r0=r181                           :cortex_a8_default
;;	  0-->    82 r1=zxn([r183+0xd8])               :cortex_a8_load_store_1
;;	  1-->    83 call [`clean_path']               :cortex_a8_issue_branch
;;	  1-->    85 r179=zxn([r183+0xd8])             :cortex_a8_load_store_1
;;	  3-->    86 r178=r179&0xf000                  :cortex_a8_default
;;	  4-->    87 cc=cmp(r178,0x8000)               :cortex_a8_default
;;	  6-->    88 pc={(cc!=0x0)?L154:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 81
;;   new tail = 88

;;   ======================================================
;;   -- basic block 9 from 90 to 93 -- before reload
;;   ======================================================

;;	  0-->    90 r0=call [`maybe_link']            :cortex_a8_issue_branch
;;	 32-->    92 {cc=cmp(r0,0x0);r172=r0;}         :cortex_a8_default
;;	 34-->    93 pc={(cc<0x0)?L269:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 34
;;   new head = 90
;;   new tail = 93

;;   ======================================================
;;   -- basic block 10 from 287 to 117 -- before reload
;;   ======================================================

;;	  0-->   287 r248=0x241                        :cortex_a8_default
;;	  0-->   109 r0=[r183+0x10]                    :cortex_a8_load_store_1
;;	  1-->   110 {r1={(r172!=0x1)?r248:0x41};clobbe:cortex_a8_default
;;	  1-->   111 r2=zxn([r183+0xd8])               :cortex_a8_load_store_1
;;	  2-->   112 r0=call [`sys_open']              :cortex_a8_issue_branch
;;	  2-->   113 r177=r0                           :cortex_a8_default
;;	  3-->   116 cc=cmp(r177,0x0)                  :cortex_a8_default
;;	  3-->   115 [r183+0xc0]=r177                  :cortex_a8_load_store_1
;;	  5-->   117 pc={(cc<0x0)?L269:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 287
;;   new tail = 117

;;   ======================================================
;;   -- basic block 11 from 122 to 134 -- before reload
;;   ======================================================

;;	  0-->   122 r1=[r183+0x64]                    :cortex_a8_load_store_1
;;	  1-->   123 r2=[r183+0x68]                    :cortex_a8_load_store_1
;;	  2-->   124 r0=call [`sys_fchown']            :cortex_a8_issue_branch
;;	  2-->   128 r0=[r183+0xc0]                    :cortex_a8_load_store_1
;;	  3-->   129 r1=zxn([r183+0xd8])               :cortex_a8_load_store_1
;;	  4-->   130 r0=call [`sys_fchmod']            :cortex_a8_issue_branch
;;	  4-->   132 r176=[r183+0x5c]                  :cortex_a8_load_store_1
;;	  6-->   133 cc=cmp(r176,0x0)                  :cortex_a8_default
;;	  8-->   134 pc={(cc==0x0)?L140:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 122
;;   new tail = 134

;;   ======================================================
;;   -- basic block 12 from 137 to 139 -- before reload
;;   ======================================================

;;	  0-->   137 r0=[r183+0xc0]                    :cortex_a8_load_store_1
;;	  0-->   138 r1=r176                           :cortex_a8_default
;;	  1-->   139 r0=call [`sys_ftruncate']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 137
;;   new tail = 139

;;   ======================================================
;;   -- basic block 13 from 142 to 301 -- before reload
;;   ======================================================

;;	  0-->   142 r209=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   144 r1=0xd0                           :cortex_a8_default
;;	  3-->   143 r0=[r209+0x10]                    :cortex_a8_load_store_1
;;	  4-->   145 r0=call [`kstrdup']               :cortex_a8_issue_branch
;;	  4-->   150 r212=0x5                          :cortex_a8_default
;;	  5-->   151 [r209+0x20]=r212                  :cortex_a8_load_store_1
;;	 36-->   148 [r209+0xc4]=r0                    :cortex_a8_load_store_1
;;	 36-->   301 pc=L269                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 36
;;   new head = 142
;;   new tail = 301

;;   ======================================================
;;   -- basic block 14 from 156 to 157 -- before reload
;;   ======================================================

;;	  0-->   156 cc=cmp(r178,0x4000)               :cortex_a8_default
;;	  2-->   157 pc={(cc!=0x0)?L217:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 156
;;   new tail = 157

;;   ======================================================
;;   -- basic block 15 from 160 to 189 -- before reload
;;   ======================================================

;;	  0-->   161 r1=r179                           :cortex_a8_default
;;	  0-->   160 r0=[r183+0x10]                    :cortex_a8_load_store_1
;;	  1-->   162 r0=call [`sys_mkdir']             :cortex_a8_issue_branch
;;	  1-->   168 r2=[r183+0x68]                    :cortex_a8_load_store_1
;;	  2-->   167 r1=[r183+0x64]                    :cortex_a8_load_store_1
;;	  3-->   166 r0=[r183+0x10]                    :cortex_a8_load_store_1
;;	  4-->   169 r0=call [`sys_chown']             :cortex_a8_issue_branch
;;	  4-->   174 r1=zxn([r183+0xd8])               :cortex_a8_load_store_1
;;	  5-->   173 r0=[r183+0x10]                    :cortex_a8_load_store_1
;;	  6-->   175 r0=call [`sys_chmod']             :cortex_a8_issue_branch
;;	  6-->   182 r222=`malloc_sizes'               :cortex_a8_load_store_1
;;	  7-->   184 r1=0xd0                           :cortex_a8_default
;;	  7-->   177 r163=[r183+0x10]                  :cortex_a8_load_store_1
;;	  8-->   179 r174=[r183+0x6c]                  :cortex_a8_load_store_1
;;	  9-->   183 r0=[r222+0x4]                     :cortex_a8_load_store_1
;;	 10-->   185 r0=call [`kmem_cache_alloc']      :cortex_a8_issue_branch
;;	 42-->   188 {cc=cmp(r0,0x0);r168=r0;}         :cortex_a8_default
;;	 44-->   189 pc={(cc!=0x0)?L195:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 44
;;   new head = 160
;;   new tail = 189

;;   ======================================================
;;   -- basic block 16 from 192 to 193 -- before reload
;;   ======================================================

;;	  0-->   192 r0=`*.LC7'                        :cortex_a8_load_store_1
;;	  1-->   193 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 192
;;   new tail = 193

;;   ======================================================
;;   -- basic block 17 from 198 to 303 -- before reload
;;   ======================================================

;;	  0-->   198 [r168]=r168                       :cortex_a8_load_store_1
;;	  0-->   200 r0=r163                           :cortex_a8_default
;;	  1-->   199 [r168+0x4]=r168                   :cortex_a8_load_store_1
;;	  1-->   201 r1=0xd0                           :cortex_a8_default
;;	  2-->   202 r0=call [`kstrdup']               :cortex_a8_issue_branch
;;	  2-->   295 r226=r183                         :cortex_a8_default
;;	  3-->   205 [r168+0xc]=r174                   :cortex_a8_load_store_1
;;	 34-->   204 [r168+0x8]=r0                     :cortex_a8_load_store_1
;;	 35-->   207 r169=[pre r226+=0xb8]             :cortex_a8_load_store_1
;;	 38-->   208 [r169+0x4]=r168                   :cortex_a8_load_store_1
;;	 39-->   209 [r168]=r169                       :cortex_a8_load_store_1
;;	 40-->   212 [r168+0x4]=r226                   :cortex_a8_load_store_1
;;	 41-->   214 [r183+0xb8]=r168                  :cortex_a8_load_store_1
;;	 41-->   303 pc=L269                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 41
;;   new head = 198
;;   new tail = 303

;;   ======================================================
;;   -- basic block 18 from 228 to 229 -- before reload
;;   ======================================================

;;	  0-->   228 cc=cmp(r178==0x2000|r178==0x6000,0:cortex_a8_default
;;	  2-->   229 pc={(cc!=0x0)?L236:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 228
;;   new tail = 229

;;   ======================================================
;;   -- basic block 19 from 231 to 232 -- before reload
;;   ======================================================

;;	  0-->   231 cc=cmp(r178,0x1000)               :cortex_a8_default
;;	  2-->   232 pc={(cc==0x0)?L236:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 231
;;   new tail = 232

;;   ======================================================
;;   -- basic block 20 from 234 to 235 -- before reload
;;   ======================================================

;;	  0-->   234 cc=cmp(r178,0xc000)               :cortex_a8_default
;;	  2-->   235 pc={(cc!=0x0)?L269:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 234
;;   new tail = 235

;;   ======================================================
;;   -- basic block 21 from 238 to 241 -- before reload
;;   ======================================================

;;	  0-->   238 r0=call [`maybe_link']            :cortex_a8_issue_branch
;;	 32-->   240 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 34-->   241 pc={(cc!=0x0)?L269:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 34
;;   new head = 238
;;   new tail = 241

;;   ======================================================
;;   -- basic block 22 from 243 to 268 -- before reload
;;   ======================================================

;;	  0-->   243 r235=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->   248 r1=zxn([r235+0xd8])               :cortex_a8_load_store_1
;;	  4-->   249 r2=[r235+0x15c]                   :cortex_a8_load_store_1
;;	  5-->   247 r0=[r235+0x10]                    :cortex_a8_load_store_1
;;	  6-->   250 r0=call [`sys_mknod']             :cortex_a8_issue_branch
;;	  6-->   255 r1=[r235+0x64]                    :cortex_a8_load_store_1
;;	  7-->   256 r2=[r235+0x68]                    :cortex_a8_load_store_1
;;	  8-->   254 r0=[r235+0x10]                    :cortex_a8_load_store_1
;;	  9-->   257 r0=call [`sys_chown']             :cortex_a8_issue_branch
;;	  9-->   262 r1=zxn([r235+0xd8])               :cortex_a8_load_store_1
;;	 10-->   261 r0=[r235+0x10]                    :cortex_a8_load_store_1
;;	 11-->   263 r0=call [`sys_chmod']             :cortex_a8_issue_branch
;;	 11-->   267 r1=[r235+0x6c]                    :cortex_a8_load_store_1
;;	 12-->   266 r0=[r235+0x10]                    :cortex_a8_load_store_1
;;	 13-->   268 r0=call [`do_utime']              :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 13
;;   new head = 243
;;   new tail = 268

;;   ======================================================
;;   -- basic block 23 from 275 to 281 -- before reload
;;   ======================================================

;;	  0-->   275 r0=0x0                            :cortex_a8_default
;;	  0-->   281 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 275
;;   new tail = 281


;; Procedure interblock/speculative motions == 0/0 




do_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={39d,30u} r1={37d,16u} r2={26d,5u} r3={21d} r11={1d,23u} r12={21d} r13={1d,43u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={34d,13u} r25={1d,23u} r26={1d,22u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r163={1d,1u} r164={2d,4u,1d} r168={1d,10u} r169={1d,2u} r170={1d,3u} r172={1d,1u} r174={1d,1u} r176={1d,2u} r177={1d,2u} r178={1d,6u} r179={1d,2u} r181={1d,2u} r183={1d,25u} r184={1d,1u} r186={1d,1u} r189={1d,1u} r192={1d,1u} r209={1d,3u} r212={1d,1u} r222={1d,1u} r226={2d,3u} r235={1d,10u} r248={1d,1u} r249={1d,2u} 
;;    total ref usage 2692{2429d,262u,1e} in 126{106 regular + 20 call} insns.
(note 31 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 183 184 186 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 181 183 184 186 189
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 31 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 32 33 47 2 NOTE_INSN_FUNCTION_BEG)

(note 47 32 35 2 NOTE_INSN_DELETED)

(insn 35 47 36 2 init/initramfs.c:295 (set (reg/f:SI 183)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 45 2 init/initramfs.c:295 (set (reg:SI 184)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 45 36 39 2 init/initramfs.c:297 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114dc5a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114dc5a0>)
        (nil)))

(insn 39 45 42 2 init/initramfs.c:296 (set (reg:SI 186)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 42 39 37 2 init/initramfs.c:297 (set (reg/f:SI 181 [ collected.373 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 37 42 44 2 init/initramfs.c:295 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 44 37 40 2 init/initramfs.c:297 (set (reg:SI 0 r0)
        (reg/f:SI 181 [ collected.373 ])) 167 {*arm_movsi_insn} (nil))

(insn 40 44 46 2 init/initramfs.c:296 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_EQUAL (const_int 7 [0x7])
            (nil))))

(call_insn/i 46 40 49 2 init/initramfs.c:297 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 49 46 50 2 init/initramfs.c:297 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 189)
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 50 49 51 2 init/initramfs.c:297 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3333 [0xd05])
            (nil))))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181 183 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183 189


;; Succ edge  3 [66.7%]  (fallthru)
;; Succ edge  8 [33.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 183 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 189
;; lr  def 	 164 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 189
;; live  gen 	 164 249
;; live  kill	

;; Pred edge  2 [66.7%]  (fallthru)
(note 51 50 52 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 65 3 init/initramfs.c:297 (set (reg:SI 164 [ ivtmp.840 ])
        (reg:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 65 52 296 3 init/initramfs.c:69 discrim 1 (set (reg/f:SI 249)
        (plus:SI (reg/f:SI 183)
            (const_int 220 [0xdc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 220 [0xdc])))
            (nil))))

(jump_insn 296 65 297 3 (set (pc)
        (label_ref 294)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249


;; Succ edge  5 [100.0%] 

(barrier 297 296 67)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249
;; live  gen 	 0 [r0] 192
;; live  kill	 14 [lr]

;; Pred edge  5 [91.0%] 
(code_label 67 297 55 4 108 "" [1 uses])

(note 55 67 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 58 55 60 4 init/initramfs.c:71 (set (reg/f:SI 192 [ <variable>.next ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 170 [ D.26478 ])
                (const_int 16 [0x10])) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 60 58 59 4 init/initramfs.c:72 (set (reg:SI 0 r0)
        (reg/f:SI 170 [ D.26478 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170 [ D.26478 ])
        (nil)))

(insn 59 60 61 4 init/initramfs.c:71 (set (mem/f:SI (plus:SI (reg/f:SI 249)
                (reg:SI 164 [ ivtmp.840 ])) [0 S4 A32])
        (reg/f:SI 192 [ <variable>.next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 192 [ <variable>.next ])
        (nil)))

(call_insn 61 59 294 4 init/initramfs.c:72 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10c2b080 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; live  gen 	 24 [cc] 170
;; live  kill	

;; Pred edge  6 [96.9%]  (dfs_back)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 294 61 293 5 121 "" [2 uses])

(note 293 294 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 293 68 5 init/initramfs.c:69 discrim 1 (set (reg/f:SI 170 [ D.26478 ])
        (mem/f:SI (plus:SI (reg/f:SI 249)
                (reg:SI 164 [ ivtmp.840 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f:SI (plus:SI (reg:SI 164 [ ivtmp.840 ])
                (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 220 [0xdc])))) [0 S4 A32])
        (nil)))

(insn 68 66 69 5 init/initramfs.c:69 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 170 [ D.26478 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 70 5 init/initramfs.c:69 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 249


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249
;; live  gen 	 24 [cc] 164
;; live  kill	

;; Pred edge  5 [9.0%]  (fallthru)
(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 init/initramfs.c:69 discrim 1 (set (reg:SI 164 [ ivtmp.840 ])
        (plus:SI (reg:SI 164 [ ivtmp.840 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 72 71 73 6 init/initramfs.c:68 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ ivtmp.840 ])
            (const_int 128 [0x80]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 73 72 298 6 init/initramfs.c:68 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 294)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
            (nil))))
;; End of basic block 6 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 249


;; Succ edge  5 [96.9%]  (dfs_back)
;; Succ edge  7 [3.1%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [3.1%]  (fallthru,loop_exit)
(note 298 73 299 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 299 298 300 7 (set (pc)
        (label_ref 269)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  23 [100.0%] 

(barrier 300 299 77)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 183
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 178 179
;; live  kill	 14 [lr]

;; Pred edge  2 [33.3%] 
(code_label 77 300 78 8 106 "" [1 uses])

(note 78 77 80 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 80 78 81 8 NOTE_INSN_DELETED)

(insn 81 80 82 8 init/initramfs.c:301 (set (reg:SI 0 r0)
        (reg/f:SI 181 [ collected.373 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 181 [ collected.373 ])
        (nil)))

(insn 82 81 83 8 init/initramfs.c:301 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn 83 82 85 8 init/initramfs.c:301 (parallel [
            (call (mem:SI (symbol_ref:SI ("clean_path") [flags 0x3] <function_decl 0x114ad300 clean_path>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 85 83 86 8 init/initramfs.c:302 (set (reg:SI 179 [ D.25990 ])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 216 [0xd8]))) [0 mode+0 S2 A16]))
        (nil)))

(insn 86 85 87 8 init/initramfs.c:302 (set (reg:SI 178 [ D.25991 ])
        (and:SI (reg:SI 179 [ D.25990 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 88 8 init/initramfs.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 32768 [0x8000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 8 init/initramfs.c:302 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; live  gen 	 0 [r0] 24 [cc] 172
;; live  kill	 14 [lr]

;; Pred edge  8 [0.0%]  (fallthru)
(note 89 88 91 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 91 89 90 9 NOTE_INSN_DELETED)

(call_insn 90 91 92 9 init/initramfs.c:303 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("maybe_link") [flags 0x3] <function_decl 0x114ad200 maybe_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 92 90 93 9 init/initramfs.c:304 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 172 [ ml ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 93 92 94 9 init/initramfs.c:304 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1912 [0x778])
            (nil))))
;; End of basic block 9 -> ( 10 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 172 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183


;; Succ edge  10 [80.9%]  (fallthru)
;; Succ edge  23 [19.1%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 177 248
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 177 248
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  9 [80.9%]  (fallthru)
(note 94 93 288 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 288 94 289 10 NOTE_INSN_DELETED)

(note 289 288 108 10 NOTE_INSN_DELETED)

(note 108 289 287 10 NOTE_INSN_DELETED)

(insn 287 108 109 10 init/initramfs.c:307 (set (reg:SI 248)
        (const_int 577 [0x241])) 167 {*arm_movsi_insn} (nil))

(insn 109 287 110 10 init/initramfs.c:308 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 110 109 111 10 init/initramfs.c:308 (parallel [
            (set (reg:SI 1 r1)
                (if_then_else:SI (ne (reg/v:SI 172 [ ml ])
                        (const_int 1 [0x1]))
                    (reg:SI 248)
                    (const_int 65 [0x41])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg/v:SI 172 [ ml ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 111 110 112 10 init/initramfs.c:308 (set (reg:SI 2 r2)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn 112 111 113 10 init/initramfs.c:308 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_open") [flags 0x41] <function_decl 0x1145e880 sys_open>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 113 112 116 10 init/initramfs.c:308 (set (reg:SI 177 [ wfd.376 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 116 113 115 10 init/initramfs.c:310 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177 [ wfd.376 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177 [ wfd.376 ])
        (nil)))

(insn 115 116 117 10 init/initramfs.c:308 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])
        (reg:SI 177 [ wfd.376 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 117 115 118 10 init/initramfs.c:310 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3666 [0xe52])
            (nil))))
;; End of basic block 10 -> ( 11 23)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 183
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183


;; Succ edge  11 [63.3%]  (fallthru)
;; Succ edge  23 [36.7%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 176
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 176
;; live  kill	 14 [lr]

;; Pred edge  10 [63.3%]  (fallthru)
(note 118 117 127 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 127 118 122 11 NOTE_INSN_DELETED)

(insn 122 127 123 11 init/initramfs.c:311 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 100 [0x64]))) [0 uid+0 S4 A32])
        (nil)))

(insn 123 122 124 11 init/initramfs.c:311 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 104 [0x68]))) [0 gid+0 S4 A32])
        (nil)))

(call_insn 124 123 128 11 init/initramfs.c:311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fchown") [flags 0x41] <function_decl 0x1145eb80 sys_fchown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 128 124 129 11 init/initramfs.c:312 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
        (nil)))

(insn 129 128 130 11 init/initramfs.c:312 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn 130 129 132 11 init/initramfs.c:312 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fchmod") [flags 0x41] <function_decl 0x11458e80 sys_fchmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 132 130 133 11 init/initramfs.c:313 (set (reg:SI 176 [ body_len.381 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 body_len+0 S4 A32])
        (nil)))

(insn 133 132 134 11 init/initramfs.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ body_len.381 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 134 133 135 11 init/initramfs.c:313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183


;; Succ edge  12 [39.0%]  (fallthru)
;; Succ edge  13 [61.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 183
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  11 [39.0%]  (fallthru)
(note 135 134 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 137 135 138 12 init/initramfs.c:314 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 192 [0xc0])) [0 wfd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 192 [0xc0]))) [0 wfd+0 S4 A32])
            (nil))))

(insn 138 137 139 12 init/initramfs.c:314 (set (reg:SI 1 r1)
        (reg:SI 176 [ body_len.381 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ body_len.381 ])
        (nil)))

(call_insn 139 138 140 12 init/initramfs.c:314 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_ftruncate") [flags 0x41] <function_decl 0x11452500 sys_ftruncate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 209 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 209 212
;; live  kill	 14 [lr]

;; Pred edge  11 [61.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 140 139 141 13 113 "" [1 uses])

(note 141 140 146 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 146 141 142 13 NOTE_INSN_DELETED)

(insn 142 146 144 13 init/initramfs.c:315 (set (reg/f:SI 209)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 144 142 143 13 init/initramfs.c:315 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 143 144 145 13 init/initramfs.c:315 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 145 143 150 13 init/initramfs.c:315 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrdup") [flags 0x41] <function_decl 0x10b92580 kstrdup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 150 145 151 13 init/initramfs.c:316 (set (reg:SI 212)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 148 13 init/initramfs.c:316 (set (mem/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 212)
        (expr_list:REG_DEAD (reg/f:SI 209)
            (expr_list:REG_EQUAL (const_int 5 [0x5])
                (nil)))))

(insn 148 151 301 13 init/initramfs.c:315 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 196 [0xc4])) [0 vcollected+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 301 148 302 13 (set (pc)
        (label_ref 269)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  23 [100.0%] 

(barrier 302 301 154)

;; Start of basic block ( 8) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%] 
(code_label 154 302 155 14 110 "" [1 uses])

(note 155 154 156 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 14 init/initramfs.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 14 init/initramfs.c:319 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 14 -> ( 15 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178 179 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 183


;; Succ edge  15 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163 168 174 222
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 183
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 163 168 174 222
;; live  kill	 14 [lr]

;; Pred edge  14 [0.0%]  (fallthru)
(note 158 157 172 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 172 158 180 15 NOTE_INSN_DELETED)

(note 180 172 186 15 ("found") NOTE_INSN_DELETED_LABEL 115)

(note 186 180 161 15 NOTE_INSN_DELETED)

(insn 161 186 160 15 init/initramfs.c:320 (set (reg:SI 1 r1)
        (reg:SI 179 [ D.25990 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ D.25990 ])
        (nil)))

(insn 160 161 162 15 init/initramfs.c:320 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 162 160 168 15 init/initramfs.c:320 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mkdir") [flags 0x41] <function_decl 0x11464c80 sys_mkdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 168 162 167 15 init/initramfs.c:321 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 104 [0x68]))) [0 gid+0 S4 A32])
        (nil)))

(insn 167 168 166 15 init/initramfs.c:321 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 100 [0x64]))) [0 uid+0 S4 A32])
        (nil)))

(insn 166 167 169 15 init/initramfs.c:321 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 169 166 174 15 init/initramfs.c:321 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chown") [flags 0x41] <function_decl 0x1145ea80 sys_chown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 174 169 173 15 init/initramfs.c:322 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 183)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 173 174 175 15 init/initramfs.c:322 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 175 173 182 15 init/initramfs.c:322 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chmod") [flags 0x41] <function_decl 0x11458e00 sys_chmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 182 175 184 15 include/linux/slab_def.h:122 (set (reg/f:SI 222)
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)) 167 {*arm_movsi_insn} (nil))

(insn 184 182 177 15 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 177 184 179 15 init/initramfs.c:323 (set (reg/f:SI 163 [ collected.860 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 179 177 183 15 init/initramfs.c:323 (set (reg:SI 174 [ mtime.383 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 108 [0x6c]))) [0 mtime+0 S4 A32])
        (nil)))

(insn 183 179 185 15 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 222)
                (const_int 4 [0x4])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 222)
        (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x10efe840 malloc_sizes>)
                        (const_int 4 [0x4]))) [0 <variable>.cs_cachep+0 S4 A32])
            (nil))))

(call_insn 185 183 188 15 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x10efa480 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 188 185 189 15 init/initramfs.c:99 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 168 [ ret ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 189 188 190 15 init/initramfs.c:99 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  17 [100.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  15 [0.0%]  (fallthru)
(note 190 189 192 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 192 190 193 16 init/initramfs.c:100 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11532800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11532800>)
        (nil)))

(call_insn 193 192 194 16 init/initramfs.c:100 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 16 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 194 193 195)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163 168 174 183
;; live  gen 	 0 [r0] 1 [r1] 169 226
;; live  kill	 14 [lr]

;; Pred edge  15 [100.0%] 
(code_label 195 194 196 17 116 "" [1 uses])

(note 196 195 203 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 203 196 198 17 NOTE_INSN_DELETED)

(insn 198 203 200 17 include/linux/list.h:26 (set (mem/s/f/j:SI (reg/v/f:SI 168 [ ret ]) [0 <variable>.list.next+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 200 198 199 17 init/initramfs.c:102 (set (reg:SI 0 r0)
        (reg/f:SI 163 [ collected.860 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ collected.860 ])
        (nil)))

(insn 199 200 201 17 include/linux/list.h:27 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 201 199 202 17 init/initramfs.c:102 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(call_insn 202 201 295 17 init/initramfs.c:102 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kstrdup") [flags 0x41] <function_decl 0x10b92580 kstrdup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 295 202 205 17 include/linux/list.h:62 (set (reg/f:SI 226)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (nil))

(insn 205 295 204 17 init/initramfs.c:103 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 12 [0xc])) [0 <variable>.mtime+0 S4 A32])
        (reg:SI 174 [ mtime.383 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ mtime.383 ])
        (nil)))

(insn 204 205 207 17 init/initramfs.c:102 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 207 204 208 17 include/linux/list.h:62 (set (reg/f:SI 169 [ D.26490 ])
        (mem/s/f/j/c:SI (pre_modify:SI (reg/f:SI 226)
                (plus:SI (reg/f:SI 226)
                    (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 226)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 184 [0xb8]))) [0 dir_list.next+0 S4 A32])
            (nil))))

(insn 208 207 209 17 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 169 [ D.26490 ])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 209 208 212 17 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 168 [ ret ]) [0 <variable>.list.next+0 S4 A32])
        (reg/f:SI 169 [ D.26490 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169 [ D.26490 ])
        (nil)))

(insn 212 209 214 17 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 168 [ ret ])
                (const_int 4 [0x4])) [0 <variable>.list.prev+0 S4 A32])
        (reg/f:SI 226)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 226)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 184 [0xb8])))
            (nil))))

(insn 214 212 303 17 include/linux/list.h:44 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 184 [0xb8])) [0 dir_list.next+0 S4 A32])
        (reg/v/f:SI 168 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_DEAD (reg/v/f:SI 168 [ ret ])
            (nil))))

(jump_insn 303 214 304 17 (set (pc)
        (label_ref 269)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  23 [100.0%] 

(barrier 304 303 217)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%] 
(code_label 217 304 218 18 114 "" [1 uses])

(note 218 217 219 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 219 218 220 18 NOTE_INSN_DELETED)

(note 220 219 222 18 NOTE_INSN_DELETED)

(note 222 220 223 18 NOTE_INSN_DELETED)

(note 223 222 225 18 NOTE_INSN_DELETED)

(note 225 223 226 18 NOTE_INSN_DELETED)

(note 226 225 227 18 NOTE_INSN_DELETED)

(note 227 226 228 18 NOTE_INSN_DELETED)

(insn 228 227 229 18 init/initramfs.c:324 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg:SI 178 [ D.25991 ])
                    (const_int 8192 [0x2000]))
                (eq:SI (reg:SI 178 [ D.25991 ])
                    (const_int 24576 [0x6000])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (nil))

(jump_insn 229 228 230 18 init/initramfs.c:324 (set (pc)
        (if_then_else (ne (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178


;; Succ edge  21 [0.0%] 
;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
(note 230 229 231 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 19 init/initramfs.c:324 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 232 231 233 19 init/initramfs.c:324 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178


;; Succ edge  21 [0.0%] 
;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
(note 233 232 234 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 235 20 init/initramfs.c:324 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ D.25991 ])
            (const_int 49152 [0xc000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ D.25991 ])
        (nil)))

(jump_insn 235 234 236 20 init/initramfs.c:324 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 20 -> ( 21 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  21 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 18 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  18 [0.0%] 
;; Pred edge  19 [0.0%] 
;; Pred edge  20 [0.0%]  (fallthru)
(code_label 236 235 237 21 117 "" [2 uses])

(note 237 236 239 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 239 237 238 21 NOTE_INSN_DELETED)

(call_insn 238 239 240 21 init/initramfs.c:326 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("maybe_link") [flags 0x3] <function_decl 0x114ad200 maybe_link>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 240 238 241 21 init/initramfs.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 241 240 242 21 init/initramfs.c:326 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 269)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  22 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 235
;; live  kill	 14 [lr]

;; Pred edge  21 [0.0%]  (fallthru)
(note 242 241 245 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 245 242 260 22 NOTE_INSN_DELETED)

(note 260 245 243 22 NOTE_INSN_DELETED)

(insn 243 260 248 22 init/initramfs.c:327 (set (reg/f:SI 235)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 248 243 249 22 init/initramfs.c:327 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 235)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 249 248 247 22 init/initramfs.c:327 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 348 [0x15c])) [0 rdev+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 348 [0x15c]))) [0 rdev+0 S4 A32])
        (nil)))

(insn 247 249 250 22 init/initramfs.c:327 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 250 247 255 22 init/initramfs.c:327 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x11458b80 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 255 250 256 22 init/initramfs.c:328 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 100 [0x64]))) [0 uid+0 S4 A32])
        (nil)))

(insn 256 255 254 22 init/initramfs.c:328 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 104 [0x68]))) [0 gid+0 S4 A32])
        (nil)))

(insn 254 256 257 22 init/initramfs.c:328 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 257 254 262 22 init/initramfs.c:328 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chown") [flags 0x41] <function_decl 0x1145ea80 sys_chown>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 262 257 261 22 init/initramfs.c:329 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 235)
                    (const_int 216 [0xd8])) [0 mode+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 261 262 263 22 init/initramfs.c:329 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 263 261 267 22 init/initramfs.c:329 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chmod") [flags 0x41] <function_decl 0x11458e00 sys_chmod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 267 263 266 22 init/initramfs.c:330 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 235)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 108 [0x6c]))) [0 mtime+0 S4 A32])
            (nil))))

(insn 266 267 268 22 init/initramfs.c:330 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 235)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(call_insn 268 266 269 22 init/initramfs.c:330 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_utime") [flags 0x3] <function_decl 0x11487700 do_utime>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 20 13 10 7 9 22 21 17) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  20 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  10 [36.7%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  9 [19.1%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  21 [100.0%] 
;; Pred edge  17 [100.0%] 
(code_label 269 268 270 23 109 "" [7 uses])

(note 270 269 275 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 275 270 281 23 init/initramfs.c:334 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 281 275 306 23 init/initramfs.c:334 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 23 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 306 281 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_collect (do_collect)[0:1322] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 49 -- before reload
;;   ======================================================

;;	  0-->     5 r138=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->     6 r134=[r138+0x28]                  :cortex_a8_load_store_1
;;	  4-->     8 r140=[r138+0x8]                   :cortex_a8_load_store_1
;;	  5-->    17 r0=[r138+0x24]                    :cortex_a8_load_store_1
;;	  6-->     9 {r133=umin(r134,r140);clobber cc;}:cortex_a8_default
;;	  6-->    18 r1=[r138+0xc]                     :cortex_a8_load_store_1
;;	  7-->    19 r2=r133                           :cortex_a8_default
;;	  8-->    20 r0=call [`memcpy']                :cortex_a8_issue_branch
;;	  8-->    44 r167=[r138+0x28]                  :cortex_a8_load_store_1
;;	  9-->    30 r156=[r138+0x18]                  :cortex_a8_load_store_1
;;	 10-->    45 r136=r167-r133                    :cortex_a8_default
;;	 10-->    24 r151=[r138+0xc]                   :cortex_a8_load_store_1
;;	 11-->    31 {r157=zxn(r133)+r156;clobber cc;} :cortex_a8_default
;;	 11-->    48 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	 12-->    35 r160=[r138+0x8]                   :cortex_a8_load_store_1
;;	 12-->    25 r152=r151+r133                    :cortex_a8_default
;;	 13-->    40 r164=[r138+0x24]                  :cortex_a8_load_store_1
;;	 14-->    26 [r138+0xc]=r152                   :cortex_a8_load_store_1
;;	 14-->    36 r161=r160-r133                    :cortex_a8_default
;;	 15-->    32 [r138+0x18]=r157                  :cortex_a8_load_store_1
;;	 15-->    41 r165=r164+r133                    :cortex_a8_default
;;	 16-->    37 [r138+0x8]=r161                   :cortex_a8_load_store_1
;;	 17-->    42 [r138+0x24]=r165                  :cortex_a8_load_store_1
;;	 18-->    47 [r138+0x28]=r136                  :cortex_a8_load_store_1
;;	 18-->    49 pc={(cc==0x0)?L54:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 18
;;   new head = 5
;;   new tail = 49

;;   ======================================================
;;   -- basic block 3 from 51 to 77 -- before reload
;;   ======================================================

;;	  0-->    51 r135=0x1                          :cortex_a8_default
;;	  0-->    77 pc=L61                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 51
;;   new tail = 77

;;   ======================================================
;;   -- basic block 4 from 58 to 60 -- before reload
;;   ======================================================

;;	  0-->    58 r171=[r138+0x2c]                  :cortex_a8_load_store_1
;;	  0-->    60 r135=r136                         :cortex_a8_default
;;	  3-->    59 [r138+0x20]=r171                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 58
;;   new tail = 60

;;   ======================================================
;;   -- basic block 5 from 67 to 73 -- before reload
;;   ======================================================

;;	  0-->    67 r0=r135                           :cortex_a8_default
;;	  0-->    73 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 67
;;   new tail = 73


;; Procedure interblock/speculative motions == 0/0 




do_collect

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,6u} r134={1d,1u} r135={2d,1u} r136={1d,3u} r138={1d,16u} r140={1d,1u} r151={1d,1u} r152={1d,1u} r156={1d,1u} r157={1d,1u} r160={1d,1u} r161={1d,1u} r164={1d,1u} r165={1d,1u} r167={1d,1u} r171={1d,1u} 
;;    total ref usage 216{151d,65u,0e} in 32{31 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138 140 151 152 156 157 160 161 164 165 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 138 140 151 152 156 157 160 161 164 165 167
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 2 13 2 NOTE_INSN_DELETED)

(note 13 11 28 2 NOTE_INSN_DELETED)

(note 28 13 5 2 NOTE_INSN_DELETED)

(insn 5 28 6 2 init/initramfs.c:206 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/initramfs.c:206 (set (reg/v:SI 134 [ n ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 40 [0x28]))) [0 remains+0 S4 A32])
        (nil)))

(insn 8 6 17 2 init/initramfs.c:206 (set (reg:SI 140 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 17 8 9 2 init/initramfs.c:209 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 17 18 2 init/initramfs.c:206 (parallel [
            (set (reg/v:SI 133 [ n.896 ])
                (umin:SI (reg/v:SI 134 [ n ])
                    (reg:SI 140 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg:SI 140 [ count ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ n ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 18 9 19 2 init/initramfs.c:209 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 init/initramfs.c:209 (set (reg:SI 2 r2)
        (reg/v:SI 133 [ n.896 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 44 2 init/initramfs.c:209 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1150cc00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 44 20 30 2 init/initramfs.c:212 (set (reg:SI 167 [ remains ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 40 [0x28]))) [0 remains+0 S4 A32])
        (nil)))

(insn 30 44 45 2 init/initramfs.c:173 (set (reg:DI 156 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 138)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 45 30 24 2 init/initramfs.c:212 (set (reg:SI 136 [ remains.342 ])
        (minus:SI (reg:SI 167 [ remains ])
            (reg/v:SI 133 [ n.896 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 167 [ remains ])
        (expr_list:REG_DEAD (reg/v:SI 133 [ n.896 ])
            (nil))))

(insn 24 45 31 2 init/initramfs.c:172 (set (reg/f:SI 151 [ victim ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 31 24 48 2 init/initramfs.c:173 (parallel [
            (set (reg:DI 157)
                (plus:DI (zero_extend:DI (reg/v:SI 133 [ n.896 ]))
                    (reg:DI 156 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 156 [ this_header ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 48 31 35 2 init/initramfs.c:212 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ remains.342 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 35 48 25 2 init/initramfs.c:174 (set (reg:SI 160 [ count ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 25 35 40 2 init/initramfs.c:172 (set (reg:SI 152)
        (plus:SI (reg/f:SI 151 [ victim ])
            (reg/v:SI 133 [ n.896 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 151 [ victim ])
        (nil)))

(insn 40 25 26 2 init/initramfs.c:211 (set (reg/f:SI 164 [ collect ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 36 [0x24]))) [0 collect+0 S4 A32])
        (nil)))

(insn 26 40 36 2 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 36 26 32 2 init/initramfs.c:174 (set (reg:SI 161)
        (minus:SI (reg:SI 160 [ count ])
            (reg/v:SI 133 [ n.896 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 160 [ count ])
        (nil)))

(insn 32 36 41 2 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 138)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 157)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 157)
        (nil)))

(insn 41 32 37 2 init/initramfs.c:211 (set (reg:SI 165)
        (plus:SI (reg/f:SI 164 [ collect ])
            (reg/v:SI 133 [ n.896 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 164 [ collect ])
        (nil)))

(insn 37 41 42 2 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 42 37 47 2 init/initramfs.c:211 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 47 42 49 2 init/initramfs.c:212 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 136 [ remains.342 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 49 47 50 2 init/initramfs.c:212 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 50 49 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 77 3 init/initramfs.c:213 (set (reg:SI 135 [ D.25859 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 77 51 78 3 (set (pc)
        (label_ref 61)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%] 

(barrier 78 77 54)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 135 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 135 171
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 54 78 55 4 127 "" [1 uses])

(note 55 54 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 58 55 60 4 init/initramfs.c:214 (set (reg:SI 171 [ next_state ])
        (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 44 [0x2c]))) [0 next_state+0 S4 A32])
        (nil)))

(insn 60 58 59 4 init/initramfs.c:215 (set (reg:SI 135 [ D.25859 ])
        (reg:SI 136 [ remains.342 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ remains.342 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 59 60 61 4 init/initramfs.c:214 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 171 [ next_state ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ next_state ])
        (expr_list:REG_DEAD (reg/f:SI 138)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 61 59 62 5 128 "" [1 uses])

(note 62 61 67 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 67 62 73 5 init/initramfs.c:216 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.25859 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.25859 ])
        (nil)))

(insn 73 67 79 5 init/initramfs.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 79 73 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_header (do_header)[0:1323] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 40 (  1.8)


do_header

Dataflow summary:
def_info->table_size = 582, use_info->table_size = 269
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={9d,4u} r2={9d,4u} r3={5d} r11={1d,21u} r12={5d} r13={1d,25u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={18d,11u} r25={1d,36u,2d} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={2d,3u} r136={1d,2u} r137={1d,2u} r139={1d,2u} r140={1d,5u} r141={1d,3u} r142={1d,3u} r144={2d,2u} r145={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,5u} r150={1d,2u} r152={7d,1u} r154={1d,3u} r156={1d,5u} r160={1d,1u} r162={1d,1u} r164={1d,2u} r166={1d,1u} r168={1d,1u} r178={1d,20u} r179={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r200={1d,1u} r202={1d,1u} r203={1d,1u} r204={2d,2u} r206={1d,1u} r208={1d,1u} r211={1d,1u} r215={1d,1u} r216={2d,2u,1d} r217={1d,1u} r218={1d,1u} r220={1d,1u} r221={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r232={1d,1u} r233={1d,13u} r238={1d,1u} r241={1d,1u} r243={1d,1u} r248={1d,1u} r250={1d,1u} r252={1d,2u} r256={1d,1u} 
;;    total ref usage 828{572d,253u,3e} in 144{140 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d27(2){ }d32(3){ }d33(11){ }d38(12){ }d39(13){ }d44(14){ }d99(25){ }d100(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 154 156
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156

( 2 )->[3]->( 4 19 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 160
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156

( 3 )->[4]->( 21 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 162
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 2 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 164
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 164

( 5 )->[6]->( 7 19 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 166
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156

( 6 )->[7]->( 21 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 168
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 5 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  def 	 135 144 252 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; live  gen 	 135 144 252 256
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256

( 9 8 )->[9]->( 9 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 144
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256

( 9 )->[10]->( 20 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 148 149 150 178 179 183 185 187 189 192 194 196 197 200 202 203 204 206 208 211 215 216 217 218 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 148 149 150 178 179 183 185 187 189 192 194 196 197 200 202 203 204 206 208 211 214 215 216 217 218 220 221
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178

( 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  gen 	 24 [cc] 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 150 178

( 11 )->[12]->( 20 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178

( 12 )->[13]->( 21 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; lr  def 	 146 152 227 228 230 232
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 146 152 227 228 230 232
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 11 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149

( 14 )->[15]->( 16 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149

( 14 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 136 145 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; live  gen 	 24 [cc] 136 145 233
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149 233
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 148 149 233

( 16 )->[17]->( 21 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  def 	 137 152 238 241 243
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; live  gen 	 137 152 238 241 243
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 16 )->[18]->( 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; lr  def 	 152 248 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; live  gen 	 152 248 250
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 3 6 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 12 10 15 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u254(11){ }u255(13){ }u256(25){ }u257(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152

( 20 18 17 7 13 4 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u258(11){ }u259(13){ }u260(25){ }u261(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u264(0){ }u265(11){ }u266(13){ }u267(14){ }u268(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 22 to worklist
  Adding insn 261 to worklist
  Adding insn 26 to worklist
  Adding insn 40 to worklist
  Adding insn 36 to worklist
  Adding insn 45 to worklist
  Adding insn 263 to worklist
  Adding insn 49 to worklist
  Adding insn 57 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 74 to worklist
  Adding insn 68 to worklist
  Adding insn 151 to worklist
  Adding insn 147 to worklist
  Adding insn 144 to worklist
  Adding insn 129 to worklist
  Adding insn 126 to worklist
  Adding insn 111 to worklist
  Adding insn 108 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 86 to worklist
  Adding insn 155 to worklist
  Adding insn 158 to worklist
  Adding insn 265 to worklist
  Adding insn 175 to worklist
  Adding insn 172 to worklist
  Adding insn 169 to worklist
  Adding insn 165 to worklist
  Adding insn 163 to worklist
  Adding insn 182 to worklist
  Adding insn 185 to worklist
  Adding insn 193 to worklist
  Adding insn 267 to worklist
  Adding insn 209 to worklist
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 201 to worklist
  Adding insn 198 to worklist
  Adding insn 269 to worklist
  Adding insn 226 to worklist
  Adding insn 223 to worklist
  Adding insn 220 to worklist
  Adding insn 218 to worklist
  Adding insn 216 to worklist
  Adding insn 271 to worklist
  Adding insn 250 to worklist
Finished finding needed instructions:
processing block 21 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 244 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 27 to worklist
  Adding insn 25 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 232 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
  Adding insn 21 to worklist
  Adding insn 20 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 50 to worklist
  Adding insn 48 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
  Adding insn 44 to worklist
  Adding insn 43 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 237 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 171 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 161 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
  Adding insn 157 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 210 to worklist
  Adding insn 208 to worklist
  Adding insn 205 to worklist
  Adding insn 200 to worklist
  Adding insn 196 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
  Adding insn 227 to worklist
  Adding insn 225 to worklist
  Adding insn 222 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149 233
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
  Adding insn 184 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
  Adding insn 181 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150 178
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
  Adding insn 150 to worklist
  Adding insn 148 to worklist
  Adding insn 146 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 127 to worklist
  Adding insn 125 to worklist
  Adding insn 274 to worklist
  Adding insn 273 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 119 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 112 to worklist
  Adding insn 110 to worklist
  Adding insn 107 to worklist
  Adding insn 103 to worklist
  Adding insn 101 to worklist
  Adding insn 98 to worklist
  Adding insn 95 to worklist
  Adding insn 92 to worklist
  Adding insn 88 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144 252 256
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 259 to worklist
  Adding insn 258 to worklist
  Adding insn 71 to worklist
  Adding insn 257 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
  Adding insn 76 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 164
  Adding insn 39 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 32 count 42 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 7 to 17 -- before reload
;;   ======================================================

;;	  0-->     7 r156=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    12 r2=0x6                            :cortex_a8_default
;;	  1-->    11 r1=`*.LC8'                        :cortex_a8_load_store_1
;;	  3-->     8 r154=[r156+0x10]                  :cortex_a8_load_store_1
;;	  5-->    10 r0=r154                           :cortex_a8_default
;;	  6-->    13 r0=call [`memcmp']                :cortex_a8_issue_branch
;;	 38-->    16 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 40-->    17 pc={(cc!=0x0)?L30:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 40
;;   new head = 7
;;   new tail = 17

;;   ======================================================
;;   -- basic block 3 from 20 to 22 -- before reload
;;   ======================================================

;;	  0-->    20 r160=[r156]                       :cortex_a8_load_store_1
;;	  2-->    21 cc=cmp(r160,0x0)                  :cortex_a8_default
;;	  4-->    22 pc={(cc!=0x0)?L230:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 20
;;   new tail = 22

;;   ======================================================
;;   -- basic block 4 from 25 to 261 -- before reload
;;   ======================================================

;;	  0-->    25 r162=`*.LC9'                      :cortex_a8_load_store_1
;;	  0-->    27 r152=0x1                          :cortex_a8_default
;;	  3-->    26 [r156]=r162                       :cortex_a8_load_store_1
;;	  3-->   261 pc=L238                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 25
;;   new tail = 261

;;   ======================================================
;;   -- basic block 5 from 33 to 40 -- before reload
;;   ======================================================

;;	  0-->    33 r0=r154                           :cortex_a8_default
;;	  0-->    34 r1=`*.LC10'                       :cortex_a8_load_store_1
;;	  1-->    35 r2=0x6                            :cortex_a8_default
;;	  2-->    36 r0=call [`memcmp']                :cortex_a8_issue_branch
;;	 34-->    39 {cc=cmp(r0,0x0);r164=r0;}         :cortex_a8_default
;;	 36-->    40 pc={(cc==0x0)?L53:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 33
;;   new tail = 40

;;   ======================================================
;;   -- basic block 6 from 43 to 45 -- before reload
;;   ======================================================

;;	  0-->    43 r166=[r156]                       :cortex_a8_load_store_1
;;	  2-->    44 cc=cmp(r166,0x0)                  :cortex_a8_default
;;	  4-->    45 pc={(cc!=0x0)?L230:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 43
;;   new tail = 45

;;   ======================================================
;;   -- basic block 7 from 48 to 263 -- before reload
;;   ======================================================

;;	  0-->    48 r168=`*.LC11'                     :cortex_a8_load_store_1
;;	  0-->    50 r152=0x1                          :cortex_a8_default
;;	  3-->    49 [r156]=r168                       :cortex_a8_load_store_1
;;	  3-->   263 pc=L238                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 48
;;   new tail = 263

;;   ======================================================
;;   -- basic block 8 from 57 to 76 -- before reload
;;   ======================================================

;;	  0-->    58 r144=r154+0x6                     :cortex_a8_default
;;	  0-->    59 r135=r164                         :cortex_a8_default
;;	  1-->    61 r252=sfp-0xc                      :cortex_a8_default
;;	  1-->    76 r256=sfp-0x3c                     :cortex_a8_default
;;	  2-->    57 [sfp-0x4]=r164#0                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 57
;;   new tail = 76

;;   ======================================================
;;   -- basic block 9 from 65 to 82 -- before reload
;;   ======================================================

;;	  0-->    66 r1=r144                           :cortex_a8_default
;;	  0-->   257 r2=0x8                            :cortex_a8_default
;;	  1-->    65 r0=r252                           :cortex_a8_default
;;	  1-->    78 r144=r144+0x8                     :cortex_a8_default
;;	  2-->    68 r0=call [`memcpy']                :cortex_a8_issue_branch
;;	  2-->    71 r0=r252                           :cortex_a8_default
;;	  3-->   258 r1=0x0                            :cortex_a8_default
;;	  3-->   259 r2=0x10                           :cortex_a8_default
;;	  4-->    74 r0=call [`simple_strtoul']        :cortex_a8_issue_branch
;;	 36-->    77 [r256+r135]=r0                    :cortex_a8_load_store_1
;;	 36-->    79 r135=r135+0x4                     :cortex_a8_default
;;	 37-->    81 cc=cmp(r135,0x30)                 :cortex_a8_default
;;	 39-->    82 pc={(cc!=0x0)?L80:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 39
;;   new head = 65
;;   new tail = 82

;;   ======================================================
;;   -- basic block 10 from 84 to 151 -- before reload
;;   ======================================================

;;	  0-->    84 r178=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   139 r215=0x3                          :cortex_a8_default
;;	  1-->   127 r142=[sfp-0x10]                   :cortex_a8_load_store_1
;;	  1-->   142 r217=0xfffffffffffffffc           :cortex_a8_default
;;	  2-->   112 r196=[sfp-0x18]                   :cortex_a8_load_store_1
;;	  2-->   146 r220=0x3                          :cortex_a8_default
;;	  3-->   114 r197=[sfp-0x14]                   :cortex_a8_load_store_1
;;	  3-->   130 r208=r142+0x1                     :cortex_a8_default
;;	  4-->   131 r150=r208&0xfffffffffffffffc      :cortex_a8_default
;;	  4-->   103 r140=[sfp-0x24]                   :cortex_a8_load_store_1
;;	  5-->   115 r141=r196<<0x14|r197              :cortex_a8_default
;;	  5-->   135 r211=[r178+0x18]                  :cortex_a8_load_store_1
;;	  6-->   273 r204=0xfff00                      :cortex_a8_load_store_1
;;	  6-->   132 r149=r150+0x2                     :cortex_a8_default
;;	  7-->   136 {r148=zxn(r149)+r211;clobber cc;} :cortex_a8_default
;;	  7-->   140 {r216=zxn(r140)+r215;clobber cc;} :cortex_a8_default
;;	  8-->   148 r221=r142-0x1                     :cortex_a8_default
;;	  8-->    85 r179=[sfp-0x3c]                   :cortex_a8_load_store_1
;;	  9-->    88 r139=zxn([sfp-0x38])              :cortex_a8_load_store_1
;;	  9-->   119 r200=r141 0>>0x14                 :cortex_a8_default
;;	 10-->    92 r183=[sfp-0x34]                   :cortex_a8_load_store_1
;;	 10-->   141 {r216=r216+r148;clobber cc;}      :cortex_a8_default
;;	 11-->    95 r185=[sfp-0x30]                   :cortex_a8_load_store_1
;;	 11-->   274 r204=r141&r204                    :cortex_a8_default
;;	 12-->    98 r187=[sfp-0x2c]                   :cortex_a8_load_store_1
;;	 12-->   150 cc=cmp(r221,0x1000)               :cortex_a8_default
;;	 13-->   101 r189=[sfp-0x28]                   :cortex_a8_load_store_1
;;	 13-->   121 r202=r141&0xff                    :cortex_a8_default
;;	 14-->   107 r192=[sfp-0x20]                   :cortex_a8_load_store_1
;;	 14-->   122 r203=r200<<0x8|r202               :cortex_a8_default
;;	 15-->   110 r194=[sfp-0x1c]                   :cortex_a8_load_store_1
;;	 15-->   125 r206=r204<<0xc|r203               :cortex_a8_default
;;	 16-->   143 r218=r216&r217                    :cortex_a8_default
;;	 16-->    86 [r178+0xd4]=r179                  :cortex_a8_load_store_1
;;	 17-->    93 [r178+0x64]=r183                  :cortex_a8_load_store_1
;;	 18-->    96 [r178+0x68]=r185                  :cortex_a8_load_store_1
;;	 19-->    99 [r178+0xc8]=r187                  :cortex_a8_load_store_1
;;	 20-->   102 [r178+0x6c]=r189                  :cortex_a8_load_store_1
;;	 21-->   108 [r178+0xcc]=r192                  :cortex_a8_load_store_1
;;	 22-->   111 [r178+0xd0]=r194                  :cortex_a8_load_store_1
;;	 23-->   126 [r178+0x15c]=r206                 :cortex_a8_load_store_1
;;	 24-->   144 [r178+0x30]=r218                  :cortex_a8_load_store_1
;;	 25-->   147 [r178+0x20]=r220                  :cortex_a8_load_store_1
;;	 26-->    90 [r178+0xd8]=r139#0                :cortex_a8_load_store_1
;;	 27-->   105 [r178+0x5c]=r140                  :cortex_a8_load_store_1
;;	 28-->   129 [r178+0x60]=r142                  :cortex_a8_load_store_1
;;	 28-->   151 pc={(geu(cc,0x0))?L235:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 28
;;   new head = 84
;;   new tail = 151

;;   ======================================================
;;   -- basic block 11 from 153 to 155 -- before reload
;;   ======================================================

;;	  0-->   153 r147=r139&0xf000                  :cortex_a8_default
;;	  1-->   154 cc=cmp(r147,0xa000)               :cortex_a8_default
;;	  3-->   155 pc={(cc!=0x0)?L179:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 153
;;   new tail = 155

;;   ======================================================
;;   -- basic block 12 from 157 to 158 -- before reload
;;   ======================================================

;;	  0-->   157 cc=cmp(r140,0x1000)               :cortex_a8_default
;;	  2-->   158 pc={(gtu(cc,0x0))?L235:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 157
;;   new tail = 158

;;   ======================================================
;;   -- basic block 13 from 161 to 265 -- before reload
;;   ======================================================

;;	  0-->   161 r146=[r178+0x70]                  :cortex_a8_load_store_1
;;	  0-->   167 r227=r140+0x2                     :cortex_a8_default
;;	  1-->   168 r228=r227+r150                    :cortex_a8_default
;;	  1-->   169 [r178+0x28]=r228                  :cortex_a8_load_store_1
;;	  2-->   171 r230=0x6                          :cortex_a8_default
;;	  2-->   172 [r178+0x2c]=r230                  :cortex_a8_load_store_1
;;	  3-->   165 [r178+0x24]=r146                  :cortex_a8_load_store_1
;;	  3-->   174 r232=0x1                          :cortex_a8_default
;;	  4-->   175 [r178+0x20]=r232                  :cortex_a8_load_store_1
;;	  4-->   176 r152=0x0                          :cortex_a8_default
;;	  5-->   163 [r178+0x10]=r146                  :cortex_a8_load_store_1
;;	  5-->   265 pc=L238                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 161
;;   new tail = 265

;;   ======================================================
;;   -- basic block 14 from 181 to 182 -- before reload
;;   ======================================================

;;	  0-->   181 cc=cmp(r147,0x8000)               :cortex_a8_default
;;	  2-->   182 pc={(cc==0x0)?L186:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 181
;;   new tail = 182

;;   ======================================================
;;   -- basic block 15 from 184 to 185 -- before reload
;;   ======================================================

;;	  0-->   184 cc=cmp(r140,0x0)                  :cortex_a8_default
;;	  2-->   185 pc={(cc!=0x0)?L235:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 184
;;   new tail = 185

;;   ======================================================
;;   -- basic block 16 from 188 to 193 -- before reload
;;   ======================================================

;;	  0-->   188 r233=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->   191 r136=[r233+0x8]                   :cortex_a8_load_store_1
;;	  4-->   189 r145=[r233+0x74]                  :cortex_a8_load_store_1
;;	  5-->   192 cc=cmp(r136,r149)                 :cortex_a8_default
;;	  7-->   193 pc={(ltu(cc,0x0))?L213:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 188
;;   new tail = 193

;;   ======================================================
;;   -- basic block 17 from 196 to 267 -- before reload
;;   ======================================================

;;	  0-->   196 r137=[r233+0xc]                   :cortex_a8_load_store_1
;;	  0-->   205 r241=r136-r149                    :cortex_a8_default
;;	  1-->   203 [r233+0x18]=r148                  :cortex_a8_load_store_1
;;	  1-->   208 r243=0x4                          :cortex_a8_default
;;	  2-->   209 [r233+0x20]=r243                  :cortex_a8_load_store_1
;;	  2-->   200 r238=r137+r149                    :cortex_a8_default
;;	  3-->   206 [r233+0x8]=r241                   :cortex_a8_load_store_1
;;	  3-->   210 r152=0x0                          :cortex_a8_default
;;	  4-->   201 [r233+0xc]=r238                   :cortex_a8_load_store_1
;;	  5-->   198 [r233+0x10]=r137                  :cortex_a8_load_store_1
;;	  5-->   267 pc=L238                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 196
;;   new tail = 267

;;   ======================================================
;;   -- basic block 18 from 216 to 269 -- before reload
;;   ======================================================

;;	  0-->   218 [r233+0x24]=r145                  :cortex_a8_load_store_1
;;	  0-->   222 r248=0x4                          :cortex_a8_default
;;	  1-->   220 [r233+0x28]=r149                  :cortex_a8_load_store_1
;;	  1-->   225 r250=0x1                          :cortex_a8_default
;;	  2-->   226 [r233+0x20]=r250                  :cortex_a8_load_store_1
;;	  2-->   227 r152=0x0                          :cortex_a8_default
;;	  3-->   223 [r233+0x2c]=r248                  :cortex_a8_load_store_1
;;	  4-->   216 [r233+0x10]=r145                  :cortex_a8_load_store_1
;;	  4-->   269 pc=L238                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 216
;;   new tail = 269

;;   ======================================================
;;   -- basic block 19 from 232 to 271 -- before reload
;;   ======================================================

;;	  0-->   232 r152=0x1                          :cortex_a8_default
;;	  0-->   271 pc=L238                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 232
;;   new tail = 271

;;   ======================================================
;;   -- basic block 20 from 237 to 237 -- before reload
;;   ======================================================

;;	  0-->   237 r152=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 237
;;   new tail = 237

;;   ======================================================
;;   -- basic block 21 from 244 to 250 -- before reload
;;   ======================================================

;;	  0-->   244 r0=r152                           :cortex_a8_default
;;	  0-->   250 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 244
;;   new tail = 250


;; Procedure interblock/speculative motions == 0/0 




do_header

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,10u} r1={9d,4u} r2={9d,4u} r3={5d} r11={1d,21u} r12={5d} r13={1d,25u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={18d,11u} r25={1d,36u,2d} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={2d,3u} r136={1d,2u} r137={1d,2u} r139={1d,2u} r140={1d,5u} r141={1d,3u} r142={1d,3u} r144={2d,2u} r145={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,5u} r150={1d,2u} r152={7d,1u} r154={1d,3u} r156={1d,5u} r160={1d,1u} r162={1d,1u} r164={1d,2u} r166={1d,1u} r168={1d,1u} r178={1d,20u} r179={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r200={1d,1u} r202={1d,1u} r203={1d,1u} r204={2d,2u} r206={1d,1u} r208={1d,1u} r211={1d,1u} r215={1d,1u} r216={2d,2u,1d} r217={1d,1u} r218={1d,1u} r220={1d,1u} r221={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r232={1d,1u} r233={1d,13u} r238={1d,1u} r241={1d,1u} r243={1d,1u} r248={1d,1u} r250={1d,1u} r252={1d,2u} r256={1d,1u} 
;;    total ref usage 828{572d,253u,3e} in 144{140 regular + 4 call} insns.
(note 3 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 154 156
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 14 2 NOTE_INSN_FUNCTION_BEG)

(note 14 4 7 2 NOTE_INSN_DELETED)

(insn 7 14 12 2 init/initramfs.c:220 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 7 11 2 init/initramfs.c:220 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 11 12 8 2 init/initramfs.c:220 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11536380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11536380>)
        (nil)))

(insn 8 11 10 2 init/initramfs.c:220 (set (reg/f:SI 154 [ collected.344 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))) [0 collected+0 S4 A32])
        (nil)))

(insn 10 8 13 2 init/initramfs.c:220 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ collected.344 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 13 10 16 2 init/initramfs.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 13 17 2 init/initramfs.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 17 16 18 2 init/initramfs.c:220 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 160
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 18 17 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 18 21 3 init/initramfs.c:15 (set (reg/f:SI 160 [ message ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 21 20 22 3 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 160 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 160 [ message ])
        (nil)))

(jump_insn 22 21 23 3 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 3 -> ( 4 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156


;; Succ edge  4 [15.0%]  (fallthru)
;; Succ edge  19 [85.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 162
;; live  kill	

;; Pred edge  3 [15.0%]  (fallthru)
(note 23 22 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 23 27 4 init/initramfs.c:16 (set (reg/f:SI 162)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11527b90>)) 167 {*arm_movsi_insn} (nil))

(insn 27 25 26 4 init/initramfs.c:222 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 26 27 261 4 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])
        (reg/f:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11527b90>)
                (nil)))))

(jump_insn 261 26 262 4 (set (pc)
        (label_ref 238)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%] 

(barrier 262 261 30)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 164
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 30 262 31 5 133 "" [1 uses])

(note 31 30 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 37 31 33 5 NOTE_INSN_DELETED)

(insn 33 37 34 5 init/initramfs.c:224 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ collected.344 ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 init/initramfs.c:224 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1153c020>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1153c020>)
        (nil)))

(insn 35 34 36 5 init/initramfs.c:224 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 36 35 39 5 init/initramfs.c:224 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 36 40 5 init/initramfs.c:224 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 164)
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 40 39 41 5 init/initramfs.c:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 164


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 24 [cc] 166
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 41 40 43 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 43 41 44 6 init/initramfs.c:15 (set (reg/f:SI 166 [ message ])
        (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 message+0 S4 A32])
        (nil)))

(insn 44 43 45 6 init/initramfs.c:15 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 166 [ message ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 166 [ message ])
        (nil)))

(jump_insn 45 44 46 6 init/initramfs.c:15 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 6 -> ( 7 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156


;; Succ edge  7 [15.0%]  (fallthru)
;; Succ edge  19 [85.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 152 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 152 168
;; live  kill	

;; Pred edge  6 [15.0%]  (fallthru)
(note 46 45 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 46 50 7 init/initramfs.c:16 (set (reg/f:SI 168)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x114f9ed0>)) 167 {*arm_movsi_insn} (nil))

(insn 50 48 49 7 init/initramfs.c:226 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 49 50 263 7 init/initramfs.c:16 (set (mem/f/c/i:SI (reg/f:SI 156) [0 message+0 S4 A32])
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 168)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x114f9ed0>)
                (nil)))))

(jump_insn 263 49 264 7 (set (pc)
        (label_ref 238)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%] 

(barrier 264 263 53)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; lr  def 	 135 144 252 256
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 164
;; live  gen 	 135 144 252 256
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 53 264 54 8 136 "" [1 uses])

(note 54 53 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 58 54 59 8 init/initramfs.c:136 (set (reg/v/f:SI 144 [ s ])
        (plus:SI (reg/f:SI 154 [ collected.344 ])
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 154 [ collected.344 ])
        (nil)))

(insn 59 58 61 8 init/initramfs.c:136 (set (reg:SI 135 [ ivtmp.931 ])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 61 59 76 8 init/initramfs.c:137 (set (reg/f:SI 252)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 76 61 57 8 init/initramfs.c:138 (set (reg/f:SI 256)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 57 76 80 8 init/initramfs.c:135 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 buf+8 S1 A32])
        (subreg:QI (reg:SI 164) 0)) 178 {*arm_movqi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 144
;; live  kill	 14 [lr]

;; Pred edge  9 [91.7%]  (dfs_back)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 80 57 60 9 137 "" [1 uses])

(note 60 80 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 75 60 66 9 NOTE_INSN_DELETED)

(insn 66 75 257 9 init/initramfs.c:137 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ s ])) 167 {*arm_movsi_insn} (nil))

(insn 257 66 65 9 init/initramfs.c:137 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 65 257 78 9 init/initramfs.c:137 (set (reg:SI 0 r0)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 78 65 68 9 init/initramfs.c:136 discrim 2 (set (reg/v/f:SI 144 [ s ])
        (plus:SI (reg/v/f:SI 144 [ s ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 68 78 71 9 init/initramfs.c:137 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1150cc00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 71 68 258 9 init/initramfs.c:138 (set (reg:SI 0 r0)
        (reg/f:SI 252)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 258 71 259 9 init/initramfs.c:138 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 259 258 74 9 init/initramfs.c:138 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 74 259 77 9 init/initramfs.c:138 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10aa5680 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 77 74 79 9 init/initramfs.c:138 (set (mem/s/j:SI (plus:SI (reg/f:SI 256)
                (reg:SI 135 [ ivtmp.931 ])) [0 parsed S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 79 77 81 9 init/initramfs.c:136 discrim 2 (set (reg:SI 135 [ ivtmp.931 ])
        (plus:SI (reg:SI 135 [ ivtmp.931 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 81 79 82 9 init/initramfs.c:136 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ ivtmp.931 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 83 9 init/initramfs.c:136 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
            (nil))))
;; End of basic block 9 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 144 252 256
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144 252 256


;; Succ edge  9 [91.7%]  (dfs_back)
;; Succ edge  10 [8.3%]  (fallthru,loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 148 149 150 178 179 183 185 187 189 192 194 196 197 200 202 203 204 206 208 211 215 216 217 218 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 148 149 150 178 179 183 185 187 189 192 194 196 197 200 202 203 204 206 208 211 215 216 217 218 220 221
;; live  kill	 24 [cc]

;; Pred edge  9 [8.3%]  (fallthru,loop_exit)
(note 83 82 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 87 83 113 10 NOTE_INSN_DELETED)

(note 113 87 116 10 NOTE_INSN_DELETED)

(note 116 113 117 10 NOTE_INSN_DELETED)

(note 117 116 120 10 NOTE_INSN_DELETED)

(note 120 117 124 10 NOTE_INSN_DELETED)

(note 124 120 133 10 NOTE_INSN_DELETED)

(note 133 124 138 10 NOTE_INSN_DELETED)

(note 138 133 149 10 NOTE_INSN_DELETED)

(note 149 138 84 10 NOTE_INSN_DELETED)

(insn 84 149 139 10 init/initramfs.c:140 (set (reg/f:SI 178)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 139 84 127 10 init/initramfs.c:230 (set (reg:DI 215)
        (const_int 3 [0x3])) 163 {*arm_movdi} (nil))

(insn 127 139 142 10 init/initramfs.c:150 (set (reg:SI 142 [ name_len.324 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 parsed+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 142 127 112 10 init/initramfs.c:230 (set (reg:DI 217)
        (const_int -4 [0xfffffffffffffffc])) 163 {*arm_movdi} (nil))

(insn 112 142 146 10 init/initramfs.c:149 (set (reg:SI 196 [ parsed+36 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 parsed+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 146 112 114 10 init/initramfs.c:231 (set (reg:SI 220)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 114 146 130 10 init/initramfs.c:149 (set (reg:SI 197 [ parsed+40 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 parsed+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 130 114 131 10 init/initramfs.c:229 (set (reg:SI 208)
        (plus:SI (reg:SI 142 [ name_len.324 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 131 130 103 10 init/initramfs.c:229 (set (reg:SI 150 [ D.25875 ])
        (and:SI (reg:SI 208)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 103 131 115 10 init/initramfs.c:146 (set (reg:SI 140 [ body_len.320 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 parsed+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 115 103 135 10 init/initramfs.c:149 (set (reg:SI 141 [ D.26529 ])
        (ior:SI (ashift:SI (reg:SI 196 [ parsed+36 ])
                (const_int 20 [0x14]))
            (reg:SI 197 [ parsed+40 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 197 [ parsed+40 ])
        (expr_list:REG_DEAD (reg:SI 196 [ parsed+36 ])
            (nil))))

(insn 135 115 273 10 init/initramfs.c:229 (set (reg:DI 211 [ this_header ])
        (mem/c/i:DI (plus:SI (reg/f:SI 178)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUAL (mem/c/i:DI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 this_header+0 S8 A64])
        (nil)))

(insn 273 135 132 10 init/initramfs.c:149 (set (reg:SI 204)
        (const_int 1048320 [0xfff00])) 167 {*arm_movsi_insn} (nil))

(insn 132 273 136 10 init/initramfs.c:229 (set (reg:SI 149 [ D.25876 ])
        (plus:SI (reg:SI 150 [ D.25875 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 136 132 140 10 init/initramfs.c:229 (parallel [
            (set (reg:DI 148 [ D.25878 ])
                (plus:DI (zero_extend:DI (reg:SI 149 [ D.25876 ]))
                    (reg:DI 211 [ this_header ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 211 [ this_header ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 140 136 148 10 init/initramfs.c:230 (parallel [
            (set (reg:DI 216)
                (plus:DI (zero_extend:DI (reg:SI 140 [ body_len.320 ]))
                    (reg:DI 215)))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 215)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 148 140 85 10 init/initramfs.c:232 (set (reg:SI 221)
        (plus:SI (reg:SI 142 [ name_len.324 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142 [ name_len.324 ])
        (nil)))

(insn 85 148 88 10 init/initramfs.c:140 (set (reg:SI 179 [ parsed ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 parsed+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 88 85 119 10 init/initramfs.c:141 (set (reg:SI 139 [ mode.315 ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -56 [0xffffffffffffffc8])) [0 parsed+4 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 119 88 92 10 init/initramfs.c:149 (set (reg:SI 200)
        (lshiftrt:SI (reg:SI 141 [ D.26529 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 92 119 141 10 init/initramfs.c:142 (set (reg:SI 183 [ parsed+8 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 parsed+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 141 92 95 10 init/initramfs.c:230 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg:DI 216)
                    (reg:DI 148 [ D.25878 ])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 95 141 274 10 init/initramfs.c:143 (set (reg:SI 185 [ parsed+12 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 parsed+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 274 95 98 10 init/initramfs.c:149 (set (reg:SI 204)
        (and:SI (reg:SI 141 [ D.26529 ])
            (reg:SI 204))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.26529 ])
        (nil)))

(insn 98 274 150 10 init/initramfs.c:144 (set (reg:SI 187 [ parsed+16 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 parsed+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 150 98 101 10 init/initramfs.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 221)
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn 101 150 121 10 init/initramfs.c:145 (set (reg:SI 189 [ parsed+20 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 parsed+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 121 101 107 10 init/initramfs.c:149 (set (reg:SI 202)
        (and:SI (reg:SI 141 [ D.26529 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 107 121 122 10 init/initramfs.c:147 (set (reg:SI 192 [ parsed+28 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 parsed+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 122 107 110 10 init/initramfs.c:149 (set (reg:SI 203)
        (ior:SI (ashift:SI (reg:SI 200)
                (const_int 8 [0x8]))
            (reg:SI 202))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_DEAD (reg:SI 200)
            (nil))))

(insn 110 122 125 10 init/initramfs.c:148 (set (reg:SI 194 [ parsed+32 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 parsed+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 125 110 143 10 init/initramfs.c:149 (set (reg:SI 206)
        (ior:SI (ashift:SI (reg:SI 204)
                (const_int 12 [0xc]))
            (reg:SI 203))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg:SI 203)
            (nil))))

(insn 143 125 86 10 init/initramfs.c:230 (set (reg:DI 218)
        (and:DI (reg:DI 216)
            (reg:DI 217))) 64 {anddi3} (expr_list:REG_DEAD (reg:DI 217)
        (expr_list:REG_DEAD (reg:DI 216)
            (expr_list:REG_EQUAL (and:DI (reg:DI 216)
                    (const_int -4 [0xfffffffffffffffc]))
                (nil)))))

(insn 86 143 93 10 init/initramfs.c:140 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 212 [0xd4])) [0 ino+0 S4 A32])
        (reg:SI 179 [ parsed ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ parsed ])
        (nil)))

(insn 93 86 96 10 init/initramfs.c:142 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 100 [0x64])) [0 uid+0 S4 A32])
        (reg:SI 183 [ parsed+8 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 183 [ parsed+8 ])
        (nil)))

(insn 96 93 99 10 init/initramfs.c:143 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 104 [0x68])) [0 gid+0 S4 A32])
        (reg:SI 185 [ parsed+12 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 185 [ parsed+12 ])
        (nil)))

(insn 99 96 102 10 init/initramfs.c:144 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 200 [0xc8])) [0 nlink+0 S4 A32])
        (reg:SI 187 [ parsed+16 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 187 [ parsed+16 ])
        (nil)))

(insn 102 99 108 10 init/initramfs.c:145 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 108 [0x6c])) [0 mtime+0 S4 A32])
        (reg:SI 189 [ parsed+20 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 189 [ parsed+20 ])
        (nil)))

(insn 108 102 111 10 init/initramfs.c:147 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 204 [0xcc])) [0 major+0 S4 A32])
        (reg:SI 192 [ parsed+28 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 192 [ parsed+28 ])
        (nil)))

(insn 111 108 126 10 init/initramfs.c:148 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 208 [0xd0])) [0 minor+0 S4 A32])
        (reg:SI 194 [ parsed+32 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 194 [ parsed+32 ])
        (nil)))

(insn 126 111 144 10 init/initramfs.c:149 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 348 [0x15c])) [0 rdev+0 S4 A32])
        (reg:SI 206)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 144 126 147 10 init/initramfs.c:230 (set (mem/c/i:DI (plus:SI (reg/f:SI 178)
                (const_int 48 [0x30])) [0 next_header+0 S8 A64])
        (reg:DI 218)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 218)
        (nil)))

(insn 147 144 90 10 init/initramfs.c:231 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 90 147 105 10 init/initramfs.c:141 (set (mem/c/i:HI (plus:SI (reg/f:SI 178)
                (const_int 216 [0xd8])) [0 mode+0 S2 A16])
        (subreg/s/u:HI (reg:SI 139 [ mode.315 ]) 0)) 176 {*movhi_insn_arch4} (nil))

(insn 105 90 129 10 init/initramfs.c:146 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 92 [0x5c])) [0 body_len+0 S4 A32])
        (reg:SI 140 [ body_len.320 ])) 167 {*arm_movsi_insn} (nil))

(insn 129 105 151 10 init/initramfs.c:150 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 96 [0x60])) [0 name_len+0 S4 A32])
        (reg:SI 142 [ name_len.324 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 151 129 152 10 init/initramfs.c:232 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 10 -> ( 20 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178


;; Succ edge  20 [39.0%] 
;; Succ edge  11 [61.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 148 149 150 178
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  10 [61.0%]  (fallthru)
(note 152 151 153 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 11 init/initramfs.c:234 (set (reg:SI 147 [ D.25890 ])
        (and:SI (reg:SI 139 [ mode.315 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139 [ mode.315 ])
        (nil)))

(insn 154 153 155 11 init/initramfs.c:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.25890 ])
            (const_int 40960 [0xa000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 155 154 156 11 init/initramfs.c:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149 150 178


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  14 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 156 155 157 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 157 156 158 12 init/initramfs.c:235 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ body_len.320 ])
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 158 157 159 12 init/initramfs.c:235 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 20 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178


;; Succ edge  20 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 150 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; lr  def 	 146 152 227 228 230 232
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 178
;; live  gen 	 146 152 227 228 230 232
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 159 158 161 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 161 159 167 13 init/initramfs.c:237 (set (reg/f:SI 146 [ symlink_buf.352 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 112 [0x70])) [0 symlink_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 112 [0x70]))) [0 symlink_buf+0 S4 A32])
        (nil)))

(insn 167 161 168 13 init/initramfs.c:238 (set (reg:SI 227)
        (plus:SI (reg:SI 140 [ body_len.320 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140 [ body_len.320 ])
        (nil)))

(insn 168 167 169 13 init/initramfs.c:238 (set (reg:SI 228)
        (plus:SI (reg:SI 227)
            (reg:SI 150 [ D.25875 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 227)
        (expr_list:REG_DEAD (reg:SI 150 [ D.25875 ])
            (nil))))

(insn 169 168 171 13 init/initramfs.c:238 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (nil)))

(insn 171 169 172 13 init/initramfs.c:239 (set (reg:SI 230)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 172 171 165 13 init/initramfs.c:239 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_EQUAL (const_int 6 [0x6])
            (nil))))

(insn 165 172 174 13 init/initramfs.c:237 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 146 [ symlink_buf.352 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146 [ symlink_buf.352 ])
        (nil)))

(insn 174 165 175 13 init/initramfs.c:240 (set (reg:SI 232)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 13 init/initramfs.c:240 (set (mem/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 232)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 232)
        (expr_list:REG_DEAD (reg/f:SI 178)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 176 175 163 13 init/initramfs.c:241 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 163 176 265 13 init/initramfs.c:237 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 178)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 146 [ symlink_buf.352 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 265 163 266 13 init/initramfs.c:241 (set (pc)
        (label_ref 238)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%] 

(barrier 266 265 179)

;; Start of basic block ( 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 147 148 149
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 179 266 180 14 139 "" [1 uses])

(note 180 179 181 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 14 init/initramfs.c:243 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ D.25890 ])
            (const_int 32768 [0x8000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ D.25890 ])
        (nil)))

(jump_insn 182 181 183 14 init/initramfs.c:243 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149


;; Succ edge  16 [0.0%] 
;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 149
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
(note 183 182 184 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 185 15 init/initramfs.c:243 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ body_len.320 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ body_len.320 ])
        (nil)))

(jump_insn 185 184 186 15 init/initramfs.c:243 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 235)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 15 -> ( 16 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149


;; Succ edge  16 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 136 145 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149
;; live  gen 	 24 [cc] 136 145 233
;; live  kill	

;; Pred edge  14 [0.0%] 
;; Pred edge  15 [0.0%]  (fallthru)
(code_label 186 185 187 16 140 "" [1 uses])

(note 187 186 188 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 191 16 init/initramfs.c:244 (set (reg/f:SI 233)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 191 188 189 16 init/initramfs.c:184 (set (reg:SI 136 [ count.331 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 8 [0x8])) [0 count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 count+0 S4 A32])
        (nil)))

(insn 189 191 192 16 init/initramfs.c:244 (set (reg/f:SI 145 [ name_buf.354 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 116 [0x74])) [0 name_buf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 116 [0x74]))) [0 name_buf+0 S4 A32])
        (nil)))

(insn 192 189 193 16 init/initramfs.c:184 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ count.331 ])
            (reg:SI 149 [ D.25876 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 16 init/initramfs.c:184 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 145 148 149 233
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 145 148 149 233


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; lr  def 	 137 152 238 241 243
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 233
;; live  gen 	 137 152 238 241 243
;; live  kill	

;; Pred edge  16 [0.0%]  (fallthru)
(note 194 193 196 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 196 194 205 17 init/initramfs.c:185 (set (reg/f:SI 137 [ victim.332 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 victim+0 S4 A32])
        (nil)))

(insn 205 196 203 17 init/initramfs.c:174 (set (reg:SI 241)
        (minus:SI (reg:SI 136 [ count.331 ])
            (reg:SI 149 [ D.25876 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.25876 ])
        (expr_list:REG_DEAD (reg:SI 136 [ count.331 ])
            (nil))))

(insn 203 205 208 17 init/initramfs.c:173 (set (mem/c/i:DI (plus:SI (reg/f:SI 233)
                (const_int 24 [0x18])) [0 this_header+0 S8 A64])
        (reg:DI 148 [ D.25878 ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 148 [ D.25878 ])
        (nil)))

(insn 208 203 209 17 init/initramfs.c:187 (set (reg:SI 243)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 209 208 200 17 init/initramfs.c:187 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 243)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_DEAD (reg/f:SI 233)
            (expr_list:REG_EQUAL (const_int 4 [0x4])
                (nil)))))

(insn 200 209 206 17 init/initramfs.c:172 (set (reg:SI 238)
        (plus:SI (reg/f:SI 137 [ victim.332 ])
            (reg:SI 149 [ D.25876 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137 [ victim.332 ])
        (nil)))

(insn 206 200 210 17 init/initramfs.c:174 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 8 [0x8])) [0 count+0 S4 A32])
        (reg:SI 241)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 241)
        (nil)))

(insn 210 206 201 17 init/initramfs.c:245 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 201 210 198 17 init/initramfs.c:172 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 12 [0xc])) [0 victim+0 S4 A32])
        (reg:SI 238)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 238)
        (nil)))

(insn 198 201 267 17 init/initramfs.c:185 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 137 [ victim.332 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 267 198 268 17 (set (pc)
        (label_ref 238)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%] 

(barrier 268 267 213)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 149 233
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; lr  def 	 152 248 250
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 149 233
;; live  gen 	 152 248 250
;; live  kill	

;; Pred edge  16 [100.0%] 
(code_label 213 268 214 18 141 "" [1 uses])

(note 214 213 218 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 218 214 222 18 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 36 [0x24])) [0 collect+0 S4 A32])
        (reg/f:SI 145 [ name_buf.354 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145 [ name_buf.354 ])
        (nil)))

(insn 222 218 220 18 init/initramfs.c:191 (set (reg:SI 248)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 220 222 225 18 init/initramfs.c:190 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 40 [0x28])) [0 remains+0 S4 A32])
        (reg:SI 149 [ D.25876 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.25876 ])
        (nil)))

(insn 225 220 226 18 init/initramfs.c:192 (set (reg:SI 250)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 18 init/initramfs.c:192 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 32 [0x20])) [0 state+0 S4 A32])
        (reg:SI 250)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 250)
        (expr_list:REG_DEAD (reg/f:SI 233)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 227 226 223 18 init/initramfs.c:245 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 223 227 216 18 init/initramfs.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 44 [0x2c])) [0 next_state+0 S4 A32])
        (reg:SI 248)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 216 223 269 18 init/initramfs.c:189 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 collected+0 S4 A32])
        (reg/f:SI 145 [ name_buf.354 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 269 216 270 18 (set (pc)
        (label_ref 238)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%] 

(barrier 270 269 230)

;; Start of basic block ( 3 6) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u250(11){ }u251(13){ }u252(25){ }u253(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	

;; Pred edge  3 [85.0%] 
;; Pred edge  6 [85.0%] 
(code_label 230 270 231 19 134 "" [2 uses])

(note 231 230 232 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 271 19 init/initramfs.c:222 (set (reg:SI 152 [ D.25868 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 271 232 272 19 (set (pc)
        (label_ref 238)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%] 

(barrier 272 271 235)

;; Start of basic block ( 12 10 15) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u254(11){ }u255(13){ }u256(25){ }u257(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  10 [39.0%] 
;; Pred edge  15 [100.0%] 
(code_label 235 272 236 20 138 "" [3 uses])

(note 236 235 237 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 237 236 238 20 init/initramfs.c:233 (set (reg:SI 152 [ D.25868 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 18 17 7 13 4 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u258(11){ }u259(13){ }u260(25){ }u261(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  19 [100.0%] 
(code_label 238 237 239 21 135 "" [6 uses])

(note 239 238 244 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 244 239 250 21 init/initramfs.c:246 (set (reg/i:SI 0 r0)
        (reg:SI 152 [ D.25868 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152 [ D.25868 ])
        (nil)))

(insn 250 244 276 21 init/initramfs.c:246 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 276 250 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function populate_rootfs (populate_rootfs)[0:1338] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 18 (  1.6)


populate_rootfs

Dataflow summary:
def_info->table_size = 742, use_info->table_size = 84
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,12u} r1={11d,4u} r2={7d} r3={7d} r11={1d,10u} r12={7d} r13={1d,16u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,10u} r26={1d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r143={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} 
;;    total ref usage 822{740d,82u,0e} in 40{34 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d23(1){ }d30(2){ }d37(3){ }d38(11){ }d45(12){ }d46(13){ }d53(14){ }d118(25){ }d119(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 143 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 143 145
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 5 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 149 150
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 151 152 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 9 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u79(0){ }u80(11){ }u81(13){ }u82(14){ }u83(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 26 to worklist
  Adding insn 42 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 75 to worklist
Finished finding needed instructions:
processing block 3 lr out =  13 [sp] 25 [sfp] 26 [afp]
processing block 10 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 69 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 20 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 6 to 12 -- before reload
;;   ======================================================

;;	  0-->     6 r138=`__initramfs_size'           :cortex_a8_load_store_1
;;	  1-->     7 r0=`__initramfs_start'            :cortex_a8_load_store_1
;;	  3-->     8 r1=[r138]                         :cortex_a8_load_store_1
;;	  4-->     9 r0=call [`unpack_to_rootfs']      :cortex_a8_issue_branch
;;	 36-->    11 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 38-->    12 pc={(cc==0x0)?L17:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 6
;;   new tail = 12

;;   ======================================================
;;   -- basic block 3 from 15 to 15 -- before reload
;;   ======================================================

;;	  0-->    15 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 15

;;   ======================================================
;;   -- basic block 4 from 19 to 22 -- before reload
;;   ======================================================

;;	  0-->    19 r139=`initrd_start'               :cortex_a8_load_store_1
;;	  3-->    20 r140=[r139]                       :cortex_a8_load_store_1
;;	  5-->    21 cc=cmp(r140,0x0)                  :cortex_a8_default
;;	  7-->    22 pc={(cc==0x0)?L63:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 19
;;   new tail = 22

;;   ======================================================
;;   -- basic block 5 from 25 to 37 -- before reload
;;   ======================================================

;;	  0-->    25 r0=`*.LC12'                       :cortex_a8_load_store_1
;;	  1-->    26 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->    29 r143=`initrd_end'                 :cortex_a8_load_store_1
;;	  2-->    28 r134=[r139]                       :cortex_a8_load_store_1
;;	  4-->    30 r145=[r143]                       :cortex_a8_load_store_1
;;	  4-->    32 r0=r134                           :cortex_a8_default
;;	  6-->    33 r1=r145-r0                        :cortex_a8_default
;;	  7-->    34 r0=call [`unpack_to_rootfs']      :cortex_a8_issue_branch
;;	 39-->    36 {cc=cmp(r0,0x0);r133=r0;}         :cortex_a8_default
;;	 41-->    37 pc={(cc==0x0)?L43:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 41
;;   new head = 25
;;   new tail = 37

;;   ======================================================
;;   -- basic block 6 from 40 to 42 -- before reload
;;   ======================================================

;;	  0-->    41 r1=r133                           :cortex_a8_default
;;	  0-->    40 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	  1-->    42 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 40
;;   new tail = 42

;;   ======================================================
;;   -- basic block 7 from 45 to 48 -- before reload
;;   ======================================================

;;	  0-->    45 r147=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->    46 r148=[r147+0x58]                  :cortex_a8_load_store_1
;;	  5-->    47 cc=cmp(r148,0x0)                  :cortex_a8_default
;;	  7-->    48 pc={(cc!=0x0)?L55:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 45
;;   new tail = 48

;;   ======================================================
;;   -- basic block 8 from 50 to 54 -- before reload
;;   ======================================================

;;	  0-->    50 r149=`initrd_start'               :cortex_a8_load_store_1
;;	  1-->    51 r150=`initrd_end'                 :cortex_a8_load_store_1
;;	  3-->    52 r0=[r149]                         :cortex_a8_load_store_1
;;	  4-->    53 r1=[r150]                         :cortex_a8_load_store_1
;;	  5-->    54 call [`free_initrd_mem']          :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 50
;;   new tail = 54

;;   ======================================================
;;   -- basic block 9 from 57 to 62 -- before reload
;;   ======================================================

;;	  0-->    57 r151=`initrd_start'               :cortex_a8_load_store_1
;;	  0-->    58 r152=0x0                          :cortex_a8_default
;;	  1-->    60 r153=`initrd_end'                 :cortex_a8_load_store_1
;;	  3-->    59 [r151]=r152                       :cortex_a8_load_store_1
;;	  4-->    62 [r153]=r152                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 57
;;   new tail = 62

;;   ======================================================
;;   -- basic block 10 from 69 to 75 -- before reload
;;   ======================================================

;;	  0-->    69 r0=0x0                            :cortex_a8_default
;;	  0-->    75 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 69
;;   new tail = 75


;; Procedure interblock/speculative motions == 0/0 




populate_rootfs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,12u} r1={11d,4u} r2={7d} r3={7d} r11={1d,10u} r12={7d} r13={1d,16u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,10u} r26={1d,9u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r143={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} 
;;    total ref usage 822{740d,82u,0e} in 40{34 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 138
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 2 6 2 NOTE_INSN_DELETED)

(insn 6 10 7 2 init/initramfs.c:574 (set (reg/f:SI 138)
        (symbol_ref:SI ("__initramfs_size") [flags 0xc0] <var_decl 0x114d2180 __initramfs_size>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 init/initramfs.c:574 (set (reg:SI 0 r0)
        (symbol_ref:SI ("__initramfs_start") [flags 0xc0] <var_decl 0x114d2120 __initramfs_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__initramfs_start") [flags 0xc0] <var_decl 0x114d2120 __initramfs_start>)
        (nil)))

(insn 8 7 9 2 init/initramfs.c:574 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 138) [0 __initramfs_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("__initramfs_size") [flags 0xc0] <var_decl 0x114d2180 __initramfs_size>) [0 __initramfs_size+0 S4 A32])
            (nil))))

(call_insn 9 8 11 2 init/initramfs.c:574 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unpack_to_rootfs") [flags 0x3] <function_decl 0x114ad980 unpack_to_rootfs>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 9 12 2 init/initramfs.c:575 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 init/initramfs.c:575 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 13 12 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 15 13 16 3 init/initramfs.c:576 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a86f00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 16 15 17)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 17 16 18 4 149 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 init/initramfs.c:577 (set (reg/f:SI 139)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 init/initramfs.c:577 (set (reg:SI 140 [ initrd_start ])
        (mem/c/i:SI (reg/f:SI 139) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>) [0 initrd_start+0 S4 A32])
        (nil)))

(insn 21 20 22 4 init/initramfs.c:577 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ initrd_start ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ initrd_start ])
        (nil)))

(jump_insn 22 21 23 4 init/initramfs.c:577 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 143 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 143 145
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 23 22 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 23 35 5 NOTE_INSN_DELETED)

(note 35 31 25 5 NOTE_INSN_DELETED)

(insn 25 35 26 5 init/initramfs.c:601 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1153ef80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1153ef80>)
        (nil)))

(call_insn 26 25 29 5 init/initramfs.c:601 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a86380 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 26 28 5 init/initramfs.c:602 (set (reg/f:SI 143)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 28 29 30 5 init/initramfs.c:602 (set (reg:SI 134 [ initrd_start.956 ])
        (mem/c/i:SI (reg/f:SI 139) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>) [0 initrd_start+0 S4 A32])
            (nil))))

(insn 30 28 32 5 init/initramfs.c:602 (set (reg:SI 145 [ initrd_end ])
        (mem/c/i:SI (reg/f:SI 143) [0 initrd_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>) [0 initrd_end+0 S4 A32])
            (nil))))

(insn 32 30 33 5 init/initramfs.c:602 (set (reg:SI 0 r0)
        (reg:SI 134 [ initrd_start.956 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ initrd_start.956 ])
        (nil)))

(insn 33 32 34 5 init/initramfs.c:602 (set (reg:SI 1 r1)
        (minus:SI (reg:SI 145 [ initrd_end ])
            (reg:SI 0 r0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 145 [ initrd_end ])
        (nil)))

(call_insn 34 33 36 5 init/initramfs.c:602 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unpack_to_rootfs") [flags 0x3] <function_decl 0x114ad980 unpack_to_rootfs>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 36 34 37 5 init/initramfs.c:604 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 133 [ err.957 ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 37 36 38 5 init/initramfs.c:604 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 38 37 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 41 38 40 6 init/initramfs.c:605 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ err.957 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ err.957 ])
        (nil)))

(insn 40 41 42 6 init/initramfs.c:605 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1163ce00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1163ce00>)
        (nil)))

(call_insn 42 40 43 6 init/initramfs.c:605 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a86380 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 148
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 43 42 44 7 151 "" [1 uses])

(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 7 init/initramfs.c:497 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 init/initramfs.c:497 (set (reg:SI 148 [ do_retain_initrd ])
        (mem/c/i:SI (plus:SI (reg/f:SI 147)
                (const_int 88 [0x58])) [0 do_retain_initrd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 88 [0x58]))) [0 do_retain_initrd+0 S4 A32])
            (nil))))

(insn 47 46 48 7 init/initramfs.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ do_retain_initrd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ do_retain_initrd ])
        (nil)))

(jump_insn 48 47 49 7 init/initramfs.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [71.0%] 
;; Succ edge  8 [29.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 149 150
;; live  kill	 14 [lr]

;; Pred edge  7 [29.0%]  (fallthru)
(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 8 init/initramfs.c:517 (set (reg/f:SI 149)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 8 init/initramfs.c:517 (set (reg/f:SI 150)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 init/initramfs.c:517 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 149) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>) [0 initrd_start+0 S4 A32])
            (nil))))

(insn 53 52 54 8 init/initramfs.c:517 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 150) [0 initrd_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>) [0 initrd_end+0 S4 A32])
            (nil))))

(call_insn 54 53 55 8 init/initramfs.c:517 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_initrd_mem") [flags 0x41] <function_decl 0x114adb80 free_initrd_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 151 152 153
;; live  kill	

;; Pred edge  7 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 152 ("skip") [1 uses])

(note 56 55 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 9 init/initramfs.c:519 (set (reg/f:SI 151)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114d2360 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 58 57 60 9 init/initramfs.c:519 (set (reg:SI 152)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 60 58 59 9 init/initramfs.c:520 (set (reg/f:SI 153)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x114d23c0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 59 60 62 9 init/initramfs.c:519 (set (mem/c/i:SI (reg/f:SI 151) [0 initrd_start+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 62 59 63 9 init/initramfs.c:520 (set (mem/c/i:SI (reg/f:SI 153) [0 initrd_end+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_DEAD (reg:SI 152)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 63 62 64 10 150 "" [1 uses])

(note 64 63 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 69 64 75 10 init/initramfs.c:610 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 75 69 79 10 init/initramfs.c:610 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 79 75 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
