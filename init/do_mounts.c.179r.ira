
;; Function readonly (readonly)[0:2703] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 33(l0): point = 0
   Insn 27(l0): point = 2
   Insn 19(l0): point = 5
   Insn 18(l0): point = 7
   Insn 17(l0): point = 9
   Insn 20(l0): point = 11
   Insn 15(l0): point = 13
   Insn 56(l0): point = 16
   Insn 10(l0): point = 18
   Insn 8(l0): point = 21
   Insn 7(l0): point = 23
   Insn 6(l0): point = 25
 a0(r133): [16..18] [3..11]
 a1(r137): [6..13]
 a2(r140): [6..7]
 a3(r139): [8..9]
 a4(r136): [24..25]
Compressing live ranges: from 28 to 11 - 39%
Ranges after the compression:
 a0(r133): [7..8] [0..5]
 a1(r137): [1..6]
 a2(r140): [1..2]
 a3(r139): [3..4]
 a4(r136): [9..10]
+++Allocating 32 bytes for conflict table (uncompressed size 40)
;; a0(r133,l0) conflicts: a2(r140,l0) a1(r137,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r133,l0) a2(r140,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r140,l0) conflicts: a0(r133,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r139,l0) conflicts: a0(r133,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r136,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r140)<->a3(r139)@125:shuffle
  regions=1, blocks=6, points=11
    allocnos=5, copies=1, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r137 2r140 3r139 4r136
    modified regnos: 133 136 137 139 140
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a4(r136,l0)
      Pushing a3(r139,l0)
      Pushing a2(r140,l0)
      Pushing a1(r137,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r140,l0)  -- assign reg 2
      Popping a3(r139,l0)  -- assign reg 2
      Popping a4(r136,l0)  -- assign reg 3
Disposition:
    0:r133 l0     0    4:r136 l0     3    1:r137 l0     3    3:r139 l0     2
    2:r140 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 0, 136
insn=7, live_throughout: 13, 14, dead_or_set: 136
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 133
insn=56, live_throughout: 13, 14, 133, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 
insn=15, live_throughout: 13, 14, dead_or_set: 137
insn=20, live_throughout: 13, 14, 137, dead_or_set: 133
insn=17, live_throughout: 13, 14, 133, 137, dead_or_set: 139
insn=18, live_throughout: 13, 14, 133, 137, dead_or_set: 139, 140
insn=19, live_throughout: 13, 14, 133, dead_or_set: 137, 140
insn=21, live_throughout: 13, 14, 133, dead_or_set: 
insn=27, live_throughout: 13, 14, dead_or_set: 0, 133
insn=33, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 19 (nil))
changing reg in insn 20
changing reg in insn 10
changing reg in insn 27
changing reg in insn 6
changing reg in insn 7
changing reg in insn 15
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
Spilling for insn 19.

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
deleting insn with uid = 27.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


readonly

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,3u} r1={1d} r2={3d,2u} r3={3d,3u,2d} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 31{14d,15u,2e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:44 (set (reg:SI 3 r3 [136])
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/do_mounts.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:44 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 56 3 init/do_mounts.c:45 (set (reg:SI 0 r0 [orig:133 D.52645 ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 56 10 57 3 (set (pc)
        (label_ref 21)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 57 56 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 57 14 4 2 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 20 4 init/do_mounts.c:46 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 20 15 17 4 init/do_mounts.c:47 (set (reg:SI 0 r0 [orig:133 D.52645 ] [133])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 17 20 18 4 init/do_mounts.c:46 (set (reg:SI 2 r2 [orig:139 root_mountflags ] [139])
        (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
            (nil))))

(insn 18 17 19 4 init/do_mounts.c:46 (set (reg:SI 2 r2 [140])
        (ior:SI (reg:SI 2 r2 [orig:139 root_mountflags ] [139])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 19 18 21 4 init/do_mounts.c:46 (set (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
        (reg:SI 2 r2 [140])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 21 19 22 5 3 "" [1 uses])

(note 22 21 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 22 58 5 init/do_mounts.c:48 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 58 33 59 NOTE_INSN_DELETED)

(note 59 58 0 NOTE_INSN_DELETED)


;; Function readwrite (readwrite)[0:2704] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 33(l0): point = 0
   Insn 27(l0): point = 2
   Insn 19(l0): point = 5
   Insn 18(l0): point = 7
   Insn 17(l0): point = 9
   Insn 20(l0): point = 11
   Insn 15(l0): point = 13
   Insn 37(l0): point = 16
   Insn 10(l0): point = 18
   Insn 8(l0): point = 21
   Insn 7(l0): point = 23
   Insn 6(l0): point = 25
 a0(r133): [16..18] [3..11]
 a1(r137): [6..13]
 a2(r140): [6..7]
 a3(r139): [8..9]
 a4(r136): [24..25]
Compressing live ranges: from 28 to 11 - 39%
Ranges after the compression:
 a0(r133): [7..8] [0..5]
 a1(r137): [1..6]
 a2(r140): [1..2]
 a3(r139): [3..4]
 a4(r136): [9..10]
+++Allocating 32 bytes for conflict table (uncompressed size 40)
;; a0(r133,l0) conflicts: a2(r140,l0) a1(r137,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r133,l0) a2(r140,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r140,l0) conflicts: a0(r133,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r139,l0) conflicts: a0(r133,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r136,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r140)<->a3(r139)@125:shuffle
  regions=1, blocks=6, points=11
    allocnos=5, copies=1, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r137 2r140 3r139 4r136
    modified regnos: 133 136 137 139 140
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a4(r136,l0)
      Pushing a3(r139,l0)
      Pushing a2(r140,l0)
      Pushing a1(r137,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r140,l0)  -- assign reg 2
      Popping a3(r139,l0)  -- assign reg 2
      Popping a4(r136,l0)  -- assign reg 3
Disposition:
    0:r133 l0     0    4:r136 l0     3    1:r137 l0     3    3:r139 l0     2
    2:r140 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 0, 136
insn=7, live_throughout: 13, 14, dead_or_set: 136
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 133
insn=37, live_throughout: 13, 14, 133, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 
insn=15, live_throughout: 13, 14, dead_or_set: 137
insn=20, live_throughout: 13, 14, 137, dead_or_set: 133
insn=17, live_throughout: 13, 14, 133, 137, dead_or_set: 139
insn=18, live_throughout: 13, 14, 133, 137, dead_or_set: 139, 140
insn=19, live_throughout: 13, 14, 133, dead_or_set: 137, 140
insn=21, live_throughout: 13, 14, 133, dead_or_set: 
insn=27, live_throughout: 13, 14, dead_or_set: 0, 133
insn=33, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 19 (nil))
changing reg in insn 20
changing reg in insn 10
changing reg in insn 27
changing reg in insn 6
changing reg in insn 7
changing reg in insn 15
changing reg in insn 17
changing reg in insn 19
changing reg in insn 18
changing reg in insn 17
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
Spilling for insn 19.

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
deleting insn with uid = 27.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


readwrite

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,3u} r1={1d} r2={3d,2u} r3={3d,3u,2d} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 31{14d,15u,2e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:52 (set (reg:SI 3 r3 [136])
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/do_mounts.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 37 3 init/do_mounts.c:53 (set (reg:SI 0 r0 [orig:133 D.52654 ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 37 10 38 3 (set (pc)
        (label_ref 21)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 38 37 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 38 14 4 8 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 20 4 init/do_mounts.c:54 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 20 15 17 4 init/do_mounts.c:55 (set (reg:SI 0 r0 [orig:133 D.52654 ] [133])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 17 20 18 4 init/do_mounts.c:54 (set (reg:SI 2 r2 [orig:139 root_mountflags ] [139])
        (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
            (nil))))

(insn 18 17 19 4 init/do_mounts.c:54 (set (reg:SI 2 r2 [140])
        (and:SI (reg:SI 2 r2 [orig:139 root_mountflags ] [139])
            (const_int -2 [0xfffffffffffffffe]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 19 18 21 4 init/do_mounts.c:54 (set (mem/c/i:SI (reg/f:SI 3 r3 [137]) [0 root_mountflags+0 S4 A32])
        (reg:SI 2 r2 [140])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 21 19 22 5 9 "" [1 uses])

(note 22 21 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 22 39 5 init/do_mounts.c:56 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 33 40 NOTE_INSN_DELETED)

(note 40 39 0 NOTE_INSN_DELETED)


;; Function rootwait_setup (rootwait_setup)[0:2709] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 38.
verify found no changes in insn with uid = 38.
deleting insn with uid = 15.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

Pass 0 for finding allocno costs

    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 31(l0): point = 0
   Insn 25(l0): point = 2
   Insn 17(l0): point = 5
   Insn 38(l0): point = 7
   Insn 18(l0): point = 9
   Insn 16(l0): point = 11
   Insn 35(l0): point = 14
   Insn 10(l0): point = 16
   Insn 8(l0): point = 19
   Insn 7(l0): point = 21
   Insn 6(l0): point = 23
 a0(r133): [14..16] [3..9]
 a1(r137): [6..7]
 a2(r138): [6..11]
 a3(r136): [22..23]
Compressing live ranges: from 26 to 9 - 34%
Ranges after the compression:
 a0(r133): [5..6] [0..3]
 a1(r137): [1..2]
 a2(r138): [1..4]
 a3(r136): [7..8]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r133,l0) conflicts: a1(r137,l0) a2(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r133,l0) a2(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r138,l0) conflicts: a0(r133,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r136,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=6, points=9
    allocnos=4, copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r137 2r138 3r136
    modified regnos: 133 136 137 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a3(r136,l0)
      Pushing a1(r137,l0)
      Pushing a2(r138,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a2(r138,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 2
      Popping a3(r136,l0)  -- assign reg 3
Disposition:
    0:r133 l0     0    3:r136 l0     3    1:r137 l0     2    2:r138 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 0, 136
insn=7, live_throughout: 13, 14, dead_or_set: 136
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 133
insn=35, live_throughout: 13, 14, 133, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 
insn=16, live_throughout: 13, 14, dead_or_set: 138
insn=18, live_throughout: 13, 14, 138, dead_or_set: 133
insn=38, live_throughout: 13, 14, 133, 138, dead_or_set: 137
insn=17, live_throughout: 13, 14, 133, dead_or_set: 137, 138
insn=19, live_throughout: 13, 14, 133, dead_or_set: 
insn=25, live_throughout: 13, 14, dead_or_set: 0, 133
insn=31, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 16 (nil))
changing reg in insn 18
changing reg in insn 10
changing reg in insn 25
changing reg in insn 6
changing reg in insn 7
changing reg in insn 38
changing reg in insn 17
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
Spilling for insn 17.

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 root_wait+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 root_wait+0 S4 A32])
deleting insn with uid = 25.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


rootwait_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,3u} r1={1d} r2={2d,1u} r3={3d,3u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 27{13d,14u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:228 (set (reg:SI 3 r3 [136])
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 7 6 8 2 init/do_mounts.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 35 3 init/do_mounts.c:229 (set (reg:SI 0 r0 [orig:133 D.52778 ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 35 10 36 3 (set (pc)
        (label_ref 19)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 36 35 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 36 14 4 14 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 18 4 init/do_mounts.c:230 (set (reg:SI 3 r3 [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 18 16 38 4 init/do_mounts.c:231 (set (reg:SI 0 r0 [orig:133 D.52778 ] [133])
        (reg:SI 3 r3 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 38 18 17 4 init/do_mounts.c:230 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 17 38 19 4 init/do_mounts.c:230 (set (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 root_wait+0 S4 A32])
        (reg:SI 3 r3 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 19 17 20 5 15 "" [1 uses])

(note 20 19 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 20 37 5 init/do_mounts.c:232 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 31 39 NOTE_INSN_DELETED)

(note 39 37 0 NOTE_INSN_DELETED)


;; Function root_data_setup (root_data_setup)[0:2710] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 12(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
 a0(r135): [5..6]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r135): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135
    modified regnos: 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 2 regs less
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
Disposition:
    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 0, 13, 14, dead_or_set: 135
insn=7, live_throughout: 13, 14, dead_or_set: 0, 135
insn=12, live_throughout: 13, 14, dead_or_set: 0
insn=18, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 6
changing reg in insn 7
Spilling for insn 7.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                                                        (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                                                        (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


root_data_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 16{9d,7u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 6 2 NOTE_INSN_DELETED)

(insn 6 8 7 2 init/do_mounts.c:239 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 7 6 12 2 init/do_mounts.c:239 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 12 7 18 2 init/do_mounts.c:241 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 22 2 init/do_mounts.c:241 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 22 18 23 NOTE_INSN_DELETED)

(note 23 22 0 NOTE_INSN_DELETED)


;; Function fs_names_setup (fs_names_setup)[0:2711] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 12(l0): point = 2
   Insn 7(l0): point = 4
   Insn 6(l0): point = 6
 a0(r135): [5..6]
Compressing live ranges: from 9 to 2 - 22%
Ranges after the compression:
 a0(r135): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135
    modified regnos: 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 2 regs less
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
Disposition:
    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 0, 13, 14, dead_or_set: 135
insn=7, live_throughout: 13, 14, dead_or_set: 0, 135
insn=12, live_throughout: 13, 14, dead_or_set: 0
insn=18, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 6
changing reg in insn 7
Spilling for insn 7.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                                                        (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                                                        (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


fs_names_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 16{9d,7u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 6 2 NOTE_INSN_DELETED)

(insn 6 8 7 2 init/do_mounts.c:246 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 7 6 12 2 init/do_mounts.c:246 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 12 7 18 2 init/do_mounts.c:248 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 22 2 init/do_mounts.c:248 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 22 18 23 NOTE_INSN_DELETED)

(note 23 22 0 NOTE_INSN_DELETED)


;; Function load_ramdisk (load_ramdisk)[0:2702] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 11.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 24(l0): point = 0
   Insn 18(l0): point = 2
   Insn 13(l0): point = 4
   Insn 29(l0): point = 6
   Insn 12(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
 a0(r136): [5..6]
 a1(r137): [5..8]
Compressing live ranges: from 17 to 3 - 17%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r137): [0..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r137
    modified regnos: 136 137
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a1(r137,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 0
Disposition:
    0:r136 l0     3    1:r137 l0     0
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 1
insn=8, live_throughout: 0, 1, 13, dead_or_set: 2
insn=9, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=12, live_throughout: 13, 14, dead_or_set: 0, 137
insn=29, live_throughout: 13, 14, 137, dead_or_set: 136
insn=13, live_throughout: 13, 14, dead_or_set: 136, 137
insn=18, live_throughout: 13, 14, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 29 (nil))
changing reg in insn 29
changing reg in insn 13
changing reg in insn 12
changing reg in insn 13
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                                                        (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                                                        (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


load_ramdisk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{129d,13u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 14 2 NOTE_INSN_DELETED)

(note 14 10 7 2 NOTE_INSN_DELETED)

(insn 7 14 8 2 init/do_mounts.c:37 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:37 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 12 2 init/do_mounts.c:37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtol") [flags 0x41] <function_decl 0x10a77e80 simple_strtol>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 9 29 2 init/do_mounts.c:37 (set (reg:SI 0 r0 [137])
        (and:SI (reg:SI 0 r0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 12 13 2 init/do_mounts.c:37 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 13 29 18 2 init/do_mounts.c:37 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])
        (reg:SI 0 r0 [137])) 167 {*arm_movsi_insn} (nil))

(insn 18 13 24 2 init/do_mounts.c:39 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 24 18 28 2 init/do_mounts.c:39 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 28 24 30 NOTE_INSN_DELETED)

(note 30 28 0 NOTE_INSN_DELETED)


;; Function root_dev_setup (root_dev_setup)[0:2708] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 22(l0): point = 0
   Insn 16(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 9(l0): point = 8
   Insn 10(l0): point = 10
   Insn 2(l0): point = 12
 a0(r134): [9..12]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r134): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134
    modified regnos: 134
    border:
    Pressure: GENERAL_REGS=4
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 1
Disposition:
    0:r134 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 134
insn=10, live_throughout: 13, 134, dead_or_set: 2
insn=9, live_throughout: 2, 13, dead_or_set: 1, 134
insn=8, live_throughout: 1, 2, 13, dead_or_set: 0
insn=11, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=16, live_throughout: 13, 14, dead_or_set: 0
insn=22, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 9
deleting insn with uid = 9.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


root_dev_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={2d} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 138{128d,10u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(note 7 6 12 2 NOTE_INSN_DELETED)

(note 12 7 2 2 NOTE_INSN_DELETED)

(insn 2 12 10 2 init/do_mounts.c:219 (set (reg/v/f:SI 1 r1 [orig:134 line ] [134])
        (reg:SI 0 r0 [ line ])) 167 {*arm_movsi_insn} (nil))

(insn 10 2 8 2 init/do_mounts.c:220 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 8 10 11 2 init/do_mounts.c:220 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 11 8 16 2 init/do_mounts.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 11 22 2 init/do_mounts.c:222 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 22 16 26 2 init/do_mounts.c:222 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 22 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)


;; Function root_delay_setup (root_delay_setup)[0:2712] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 23(l0): point = 0
   Insn 17(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
 a0(r136): [5..6]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r136): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r136,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136
    modified regnos: 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
Disposition:
    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 1
insn=8, live_throughout: 0, 1, 13, dead_or_set: 2
insn=9, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=11, live_throughout: 0, 13, 14, dead_or_set: 136
insn=12, live_throughout: 13, 14, dead_or_set: 0, 136
insn=17, live_throughout: 13, 14, dead_or_set: 0
insn=23, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 11 (nil))
changing reg in insn 11
changing reg in insn 12
Spilling for insn 12.

Reloads for insn # 12
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                                                        (const_int 80 [0x50])) [0 root_delay+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                                                        (const_int 80 [0x50])) [0 root_delay+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


root_delay_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{128d,12u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 13 2 NOTE_INSN_DELETED)

(note 13 10 7 2 NOTE_INSN_DELETED)

(insn 7 13 8 2 init/do_mounts.c:253 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:253 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 11 2 init/do_mounts.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 9 12 2 init/do_mounts.c:253 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 12 11 17 2 init/do_mounts.c:253 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 12 23 2 init/do_mounts.c:255 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 23 17 27 2 init/do_mounts.c:255 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 23 28 NOTE_INSN_DELETED)

(note 28 27 0 NOTE_INSN_DELETED)


;; Function do_mount_root (do_mount_root)[0:2714] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 95.
verify found no changes in insn with uid = 95.
deleting insn with uid = 89.
scanning new insn with uid = 96.
verify found no changes in insn with uid = 96.
deleting insn with uid = 88.
scanning new insn with uid = 97.
verify found no changes in insn with uid = 97.
deleting insn with uid = 31.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a3 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r147,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a18(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r147,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a18(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 84(l0): point = 0
   Insn 78(l0): point = 2
   Insn 71(l0): point = 5
   Insn 68(l0): point = 7
   Insn 66(l0): point = 9
   Insn 69(l0): point = 11
   Insn 96(l0): point = 13
   Insn 95(l0): point = 15
   Insn 51(l0): point = 17
   Insn 41(l0): point = 19
   Insn 49(l0): point = 21
   Insn 40(l0): point = 23
   Insn 39(l0): point = 25
   Insn 38(l0): point = 27
   Insn 65(l0): point = 29
   Insn 37(l0): point = 31
   Insn 70(l0): point = 33
   Insn 32(l0): point = 35
   Insn 97(l0): point = 37
   Insn 64(l0): point = 39
   Insn 30(l0): point = 41
   Insn 29(l0): point = 43
   Insn 28(l0): point = 45
   Insn 27(l0): point = 47
   Insn 67(l0): point = 49
   Insn 26(l0): point = 51
   Insn 93(l0): point = 53
   Insn 92(l0): point = 55
   Insn 22(l0): point = 57
   Insn 21(l0): point = 59
   Insn 18(l0): point = 62
   Insn 17(l0): point = 64
   Insn 15(l0): point = 66
   Insn 12(l0): point = 68
   Insn 14(l0): point = 70
   Insn 13(l0): point = 72
   Insn 10(l0): point = 74
   Insn 4(l0): point = 76
   Insn 3(l0): point = 78
 a0(r136): [3..64]
 a1(r138): [8..19]
 a2(r171): [10..29]
 a3(r175): [12..15]
 a4(r174): [12..13]
 a5(r168): [18..21]
 a6(r160): [20..23]
 a7(r159): [22..25]
 a8(r158): [26..27]
 a9(r157): [28..31]
 a10(r172): [30..39]
 a11(r149): [32..51]
 a12(r139): [34..41]
 a13(r153): [36..37]
 a14(r152): [42..43]
 a15(r151): [44..45]
 a16(r150): [46..47]
 a17(r147): [52..55]
 a18(r143): [71..76]
 a19(r142): [73..78]
Compressing live ranges: from 81 to 39 - 48%
Ranges after the compression:
 a0(r136): [0..34]
 a1(r138): [1..7]
 a2(r171): [2..16]
 a3(r175): [3..5]
 a4(r174): [3..4]
 a5(r168): [6..9]
 a6(r160): [8..11]
 a7(r159): [10..12]
 a8(r158): [13..14]
 a9(r157): [15..18]
 a10(r172): [17..23]
 a11(r149): [19..31]
 a12(r139): [20..24]
 a13(r153): [21..22]
 a14(r152): [25..26]
 a15(r151): [27..28]
 a16(r150): [29..30]
 a17(r147): [32..33]
 a18(r143): [35..37]
 a19(r142): [36..38]
+++Allocating 160 bytes for conflict table (uncompressed size 160)
;; a0(r136,l0) conflicts: a1(r138,l0) a2(r171,l0) a4(r174,l0) a3(r175,l0) a5(r168,l0) a6(r160,l0) a7(r159,l0) a8(r158,l0) a9(r157,l0) a10(r172,l0) a11(r149,l0) a12(r139,l0) a13(r153,l0) a14(r152,l0) a15(r151,l0) a16(r150,l0) a17(r147,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r138,l0) conflicts: a0(r136,l0) a2(r171,l0) a4(r174,l0) a3(r175,l0) a5(r168,l0)
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3
;; a2(r171,l0) conflicts: a0(r136,l0) a1(r138,l0) a4(r174,l0) a3(r175,l0) a5(r168,l0) a6(r160,l0) a7(r159,l0) a8(r158,l0) a9(r157,l0)
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3
;; a3(r175,l0) conflicts: a0(r136,l0) a1(r138,l0) a2(r171,l0) a4(r174,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a4(r174,l0) conflicts: a0(r136,l0) a1(r138,l0) a2(r171,l0) a3(r175,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a5(r168,l0) conflicts: a0(r136,l0) a1(r138,l0) a2(r171,l0) a6(r160,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a6(r160,l0) conflicts: a0(r136,l0) a2(r171,l0) a5(r168,l0) a7(r159,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a7(r159,l0) conflicts: a0(r136,l0) a2(r171,l0) a6(r160,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a8(r158,l0) conflicts: a0(r136,l0) a2(r171,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a9(r157,l0) conflicts: a0(r136,l0) a2(r171,l0) a10(r172,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a10(r172,l0) conflicts: a0(r136,l0) a9(r157,l0) a11(r149,l0) a12(r139,l0) a13(r153,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a11(r149,l0) conflicts: a0(r136,l0) a10(r172,l0) a12(r139,l0) a13(r153,l0) a14(r152,l0) a15(r151,l0) a16(r150,l0)
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a12(r139,l0) conflicts: a0(r136,l0) a10(r172,l0) a11(r149,l0) a13(r153,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a13(r153,l0) conflicts: a0(r136,l0) a10(r172,l0) a11(r149,l0) a12(r139,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a14(r152,l0) conflicts: a0(r136,l0) a11(r149,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a15(r151,l0) conflicts: a0(r136,l0) a11(r149,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a16(r150,l0) conflicts: a0(r136,l0) a11(r149,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a17(r147,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r143,l0) conflicts: a19(r142,l0)
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3
;; a19(r142,l0) conflicts: a18(r143,l0)
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3

  cp0:a2(r171)<->a10(r172)@125:shuffle
  regions=1, blocks=5, points=39
    allocnos=20, copies=1, conflicts=3, ranges=20

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r136 1r138 2r171 3r175 4r174 5r168 6r160 7r159 8r158 9r157 10r172 11r149 12r139 13r153 14r152 15r151 16r150 17r147 18r143 19r142
    modified regnos: 136 138 139 142 143 147 149 150 151 152 153 157 158 159 160 168 171 172 174 175
    border:
    Pressure: GENERAL_REGS=7
    Reg 136 of GENERAL_REGS has 5 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 171 of GENERAL_REGS has 3 regs less
    Reg 175 of GENERAL_REGS has 2 regs less
    Reg 174 of GENERAL_REGS has 2 regs less
    Reg 168 of GENERAL_REGS has 2 regs less
    Reg 160 of GENERAL_REGS has 2 regs less
    Reg 159 of GENERAL_REGS has 2 regs less
    Reg 158 of GENERAL_REGS has 2 regs less
    Reg 157 of GENERAL_REGS has 2 regs less
    Reg 172 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
      Pushing a17(r147,l0)
      Pushing a16(r150,l0)
      Pushing a15(r151,l0)
      Pushing a14(r152,l0)
      Pushing a13(r153,l0)
      Pushing a12(r139,l0)
      Pushing a10(r172,l0)
      Pushing a9(r157,l0)
      Pushing a8(r158,l0)
      Pushing a6(r160,l0)
      Pushing a5(r168,l0)
      Pushing a4(r174,l0)
      Pushing a3(r175,l0)
      Pushing a11(r149,l0)
      Pushing a7(r159,l0)
      Pushing a19(r142,l0)
      Pushing a18(r143,l0)
      Pushing a2(r171,l0)
      Pushing a1(r138,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a1(r138,l0)  -- assign reg 1
      Popping a2(r171,l0)  -- assign reg 12
      Popping a18(r143,l0)  -- assign reg 12
      Popping a19(r142,l0)  -- assign reg 1
      Popping a7(r159,l0)  -- assign reg 2
      Popping a11(r149,l0)  -- assign reg 2
      Popping a3(r175,l0)  -- assign reg 2
      Popping a4(r174,l0)  -- assign reg 14
      Popping a5(r168,l0)  -- assign reg 2
      Popping a6(r160,l0)  -- assign reg 1
      Popping a8(r158,l0)  -- assign reg 2
      Popping a9(r157,l0)  -- assign reg 2
      Popping a10(r172,l0)  -- assign reg 12
      Popping a12(r139,l0)  -- assign reg 3
      Popping a13(r153,l0)  -- assign reg 1
      Popping a14(r152,l0)  -- assign reg 3
      Popping a15(r151,l0)  -- assign reg 3
      Popping a16(r150,l0)  -- assign reg 3
      Popping a17(r147,l0)  -- assign reg 3
Disposition:
    0:r136 l0     4    1:r138 l0     1   12:r139 l0     3   19:r142 l0     1
   18:r143 l0    12   17:r147 l0     3   11:r149 l0     2   16:r150 l0     3
   15:r151 l0     3   14:r152 l0     3   13:r153 l0     1    9:r157 l0     2
    8:r158 l0     2    7:r159 l0     2    6:r160 l0     1    5:r168 l0     2
    2:r171 l0    12   10:r172 l0    12    4:r174 l0    14    3:r175 l0     2
New iteration of spill/restore move
+++Costs: overall -6500, reg -6500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 2, 3, 13, dead_or_set: 1, 142
insn=4, live_throughout: 0, 3, 13, 142, dead_or_set: 2, 143
insn=10, live_throughout: 0, 13, 142, 143, dead_or_set: 3
insn=13, live_throughout: 0, 13, 143, dead_or_set: 2, 142
insn=14, live_throughout: 0, 2, 13, dead_or_set: 3, 143
insn=12, live_throughout: 0, 2, 3, 13, dead_or_set: 1
insn=15, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=17, live_throughout: 13, 14, dead_or_set: 0, 136
insn=18, live_throughout: 13, 14, 136, dead_or_set: 
insn=21, live_throughout: 13, 136, dead_or_set: 0
insn=22, live_throughout: 13, 136, dead_or_set: 0, 14
insn=92, live_throughout: 13, 136, dead_or_set: 147
insn=93, live_throughout: 13, 136, dead_or_set: 147
insn=26, live_throughout: 13, 136, dead_or_set: 147, 149
insn=67, live_throughout: 13, 136, 149, dead_or_set: 0
insn=27, live_throughout: 0, 13, 136, 149, dead_or_set: 150
insn=28, live_throughout: 0, 13, 136, 149, dead_or_set: 150, 151
insn=29, live_throughout: 0, 13, 136, 149, dead_or_set: 151, 152
insn=30, live_throughout: 0, 13, 136, 149, dead_or_set: 139, 152
insn=64, live_throughout: 0, 13, 136, 139, 149, dead_or_set: 172
insn=97, live_throughout: 0, 13, 136, 139, 149, 172, dead_or_set: 153
insn=32, live_throughout: 0, 13, 136, 139, 149, 172, dead_or_set: 153
insn=70, live_throughout: 0, 13, 136, 149, 172, dead_or_set: 3, 139
insn=37, live_throughout: 0, 3, 13, 136, 172, dead_or_set: 149, 157
insn=65, live_throughout: 0, 3, 13, 136, 157, dead_or_set: 171, 172
insn=38, live_throughout: 0, 3, 13, 136, 171, dead_or_set: 157, 158
insn=39, live_throughout: 0, 3, 13, 136, 171, dead_or_set: 158, 159
insn=40, live_throughout: 0, 3, 13, 136, 159, 171, dead_or_set: 160
insn=49, live_throughout: 0, 3, 13, 136, 160, 171, dead_or_set: 159, 168
insn=41, live_throughout: 0, 3, 13, 136, 168, 171, dead_or_set: 138, 160
insn=51, live_throughout: 0, 3, 13, 136, 138, 171, dead_or_set: 168
insn=95, live_throughout: 0, 3, 13, 24, 136, 138, 171, dead_or_set: 175
insn=96, live_throughout: 0, 3, 13, 24, 136, 138, 171, 175, dead_or_set: 174
insn=69, live_throughout: 0, 3, 13, 136, 138, 171, dead_or_set: 2, 174, 175
insn=66, live_throughout: 0, 2, 3, 13, 136, 138, dead_or_set: 171
insn=68, live_throughout: 0, 2, 3, 13, 136, dead_or_set: 1, 138
insn=71, live_throughout: 13, 136, dead_or_set: 0, 1, 2, 3, 14
insn=72, live_throughout: 13, 14, 136, dead_or_set: 
insn=78, live_throughout: 13, 14, dead_or_set: 0, 136
insn=84, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 150: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 96 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 95 (nil))
changing reg in insn 17
changing reg in insn 78
changing reg in insn 41
changing reg in insn 68
changing reg in insn 30
changing reg in insn 70
changing reg in insn 64
changing reg in insn 32
changing reg in insn 65
changing reg in insn 3
changing reg in insn 13
changing reg in insn 4
changing reg in insn 14
changing reg in insn 93
changing reg in insn 92
changing reg in insn 93
changing reg in insn 26
changing reg in insn 26
changing reg in insn 37
changing reg in insn 27
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 97
changing reg in insn 32
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 49
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 49
changing reg in insn 51
changing reg in insn 65
changing reg in insn 66
changing reg in insn 64
changing reg in insn 65
changing reg in insn 96
changing reg in insn 69
changing reg in insn 95
changing reg in insn 69
Spilling for insn 10.
Spilling for insn 92.
Using reg 2 for reload 0
Spilling for insn 32.
Spilling for insn 66.

Reloads for insn # 10
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 92
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 32
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 1 r1 [153]) [0 ROOT_DEV+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 1 r1 [153]) [0 ROOT_DEV+0 S4 A32])

Reloads for insn # 66
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 3.
deleting insn with uid = 68.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 71.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


do_mount_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,7u} r1={8d,5u} r2={13d,12u,1d} r3={12d,11u,1d} r4={1d,1u} r12={7d,3u} r13={1d,10u} r14={5d,2u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 444{389d,53u,2e} in 38{35 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 7 6 2 NOTE_INSN_DELETED)

(note 6 5 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 6 4 2 NOTE_INSN_DELETED)

(insn 4 16 10 2 init/do_mounts.c:289 (set (reg/v:SI 12 ip [orig:143 flags ] [143])
        (reg:SI 2 r2 [ flags ])) 167 {*arm_movsi_insn} (nil))

(insn 10 4 13 2 init/do_mounts.c:290 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 3 r3 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 13 10 14 2 init/do_mounts.c:290 (set (reg:SI 2 r2)
        (reg/v/f:SI 1 r1 [orig:142 fs ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 12 2 init/do_mounts.c:290 (set (reg:SI 3 r3)
        (reg/v:SI 12 ip [orig:143 flags ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 12 14 15 2 init/do_mounts.c:290 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
        (nil)))

(call_insn 15 12 17 2 init/do_mounts.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 17 15 18 2 init/do_mounts.c:291 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 4 r4 [orig:136 err ] [136])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 18 17 19 2 init/do_mounts.c:291 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 19 18 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 19 50 3 NOTE_INSN_DELETED)

(note 50 24 91 3 NOTE_INSN_DELETED)

(note 91 50 63 3 NOTE_INSN_DELETED)

(note 63 91 21 3 NOTE_INSN_DELETED)

(insn 21 63 22 3 init/do_mounts.c:294 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
        (nil)))

(call_insn 22 21 99 3 init/do_mounts.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chdir") [flags 0x41] <function_decl 0x12110280 sys_chdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 99 22 92 3 init/do_mounts.c:295 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 92 99 93 3 init/do_mounts.c:295 (set (reg:SI 3 r3 [147])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 93 92 26 3 init/do_mounts.c:295 (set (reg:SI 3 r3 [147])
        (and:SI (reg:SI 3 r3 [147])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 93 67 3 init/do_mounts.c:295 (set (reg/f:SI 2 r2 [orig:149 <variable>.task ] [149])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [147])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 67 26 27 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)
        (nil)))

(insn 27 67 28 3 init/do_mounts.c:295 (set (reg/f:SI 3 r3 [orig:150 <variable>.fs ] [150])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:149 <variable>.task ] [149])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:149 <variable>.task ] [149])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])
        (nil)))

(insn 28 27 29 3 init/do_mounts.c:295 (set (reg/f:SI 3 r3 [orig:151 <variable>.pwd.mnt ] [151])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:150 <variable>.fs ] [150])
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 init/do_mounts.c:295 (set (reg/f:SI 3 r3 [orig:152 <variable>.mnt_sb ] [152])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:151 <variable>.pwd.mnt ] [151])
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 64 3 init/do_mounts.c:295 (set (reg:SI 3 r3 [orig:139 ROOT_DEV.894 ] [139])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:152 <variable>.mnt_sb ] [152])
                (const_int 8 [0x8])) [0 <variable>.s_dev+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 64 30 97 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 12 ip [172])
        (and:SI (reg:SI 3 r3 [orig:139 ROOT_DEV.894 ] [139])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 97 64 32 3 init/do_mounts.c:295 (set (reg/f:SI 1 r1 [153])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 32 97 70 3 init/do_mounts.c:295 (set (mem/c/i:SI (reg/f:SI 1 r1 [153]) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 3 r3 [orig:139 ROOT_DEV.894 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 70 32 37 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 3 r3)
        (lshiftrt:SI (reg:SI 3 r3 [orig:139 ROOT_DEV.894 ] [139])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 37 70 65 3 init/do_mounts.c:296 (set (reg/f:SI 2 r2 [orig:157 <variable>.fs ] [157])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:149 <variable>.task ] [149])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 37 38 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 12 ip [171])
        (and:SI (reg:SI 12 ip [172])
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 3 r3 [orig:139 ROOT_DEV.894 ] [139])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 38 65 39 3 init/do_mounts.c:296 (set (reg/f:SI 2 r2 [orig:158 <variable>.pwd.mnt ] [158])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:157 <variable>.fs ] [157])
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 3 init/do_mounts.c:296 (set (reg/f:SI 2 r2 [orig:159 <variable>.mnt_sb ] [159])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:158 <variable>.pwd.mnt ] [158])
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 49 3 init/do_mounts.c:296 (set (reg/f:SI 1 r1 [orig:160 <variable>.s_type ] [160])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:159 <variable>.mnt_sb ] [159])
                (const_int 32 [0x20])) [0 <variable>.s_type+0 S4 A256])) 167 {*arm_movsi_insn} (nil))

(insn 49 40 41 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2 [orig:168 <variable>.s_flags ] [168])
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:159 <variable>.mnt_sb ] [159])
                (const_int 52 [0x34])) [0 <variable>.s_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 49 51 3 init/do_mounts.c:296 (set (reg/f:SI 1 r1 [orig:138 D.52856 ] [138])
        (mem/s/f/j:SI (reg/f:SI 1 r1 [orig:160 <variable>.s_type ] [160]) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 41 95 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:168 <variable>.s_flags ] [168])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 95 51 96 3 init/do_mounts.c:296 discrim 3 (set (reg/f:SI 2 r2 [175])
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x121b9920>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x121b9920>)
        (nil)))

(insn 96 95 69 3 init/do_mounts.c:296 discrim 3 (set (reg/f:SI 14 lr [174])
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1217b540>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1217b540>)
        (nil)))

(insn 69 96 66 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 2 r2)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 14 lr [174])
            (reg/f:SI 2 r2 [175]))) 240 {*movsicc_insn} (nil))

(insn 66 69 71 3 init/do_mounts.c:296 discrim 3 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [171])) 167 {*arm_movsi_insn} (nil))

(call_insn 71 66 72 3 init/do_mounts.c:296 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 72 71 73 4 40 "" [1 uses])

(note 73 72 78 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 78 73 84 4 init/do_mounts.c:302 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:136 err ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 84 78 94 4 init/do_mounts.c:302 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 94 84 98 NOTE_INSN_DELETED)

(note 98 94 0 NOTE_INSN_DELETED)


;; Function mount_block_root (mount_block_root)[0:2715] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 292.
verify found no changes in insn with uid = 292.
deleting insn with uid = 239.
scanning new insn with uid = 293.
verify found no changes in insn with uid = 293.
deleting insn with uid = 226.
scanning new insn with uid = 294.
verify found no changes in insn with uid = 294.
deleting insn with uid = 262.
scanning new insn with uid = 295.
verify found no changes in insn with uid = 295.
deleting insn with uid = 166.
scanning new insn with uid = 296.
verify found no changes in insn with uid = 296.
deleting insn with uid = 35.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 39 count 66 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 39 count 71 (  2.3)

Pass 0 for finding allocno costs

    a52 (r225,l2) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r225,l1) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r225,l0) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r223,l3) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r221,l5) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r221,l4) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r217,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r211,l6) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r210,l6) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r205,l5) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r196,l5) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r188,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r180,l3) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r180,l2) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r180,l1) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r180,l5) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r180,l4) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r179,l3) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r179,l2) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r179,l1) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r179,l5) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r179,l4) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r175,l3) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r175,l2) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r175,l1) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r175,l5) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r175,l4) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r174,l5) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r174,l4) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r173,l5) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r172,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r170,l3) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r168,l2) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r167,l6) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r166,l3) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r166,l2) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r164,l2) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r163,l2) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r162,l2) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r162,l1) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r161,l2) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r161,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a2(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r167,l6) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a20(r211,l6) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r210,l6) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r175,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r179,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a24(r180,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r221,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a26(r174,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r174,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r175,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r179,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r180,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r221,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r205,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r196,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r173,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a35(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a37(r175,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r179,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a39(r180,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r225,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r161,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r188,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r164,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a47(r166,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a48(r168,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a49(r175,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a50(r179,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a51(r180,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a52(r225,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a53(r161,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a54(r162,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a55(r163,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a56(r166,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a57(r175,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a58(r179,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a59(r180,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a60(r223,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a61(r170,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r225: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS

  a0(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a2(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r167,l6) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a20(r211,l6) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r210,l6) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r175,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r179,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a24(r180,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r221,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a26(r174,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r174,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r175,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r179,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r180,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r221,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r205,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r196,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r173,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a35(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a37(r175,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r179,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a39(r180,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r225,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r161,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r188,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r164,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a47(r166,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a48(r168,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a49(r175,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a50(r179,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a51(r180,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a52(r225,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a53(r161,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a54(r162,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a55(r163,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a56(r166,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a57(r175,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a58(r179,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a59(r180,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a60(r223,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a61(r170,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 242(l0): point = 0
   Insn 240(l0): point = 2
   Insn 292(l0): point = 4
   Insn 241(l0): point = 6
   Insn 235(l0): point = 9
   Insn 233(l0): point = 11
   Insn 234(l0): point = 13
   Insn 230(l0): point = 15
   Insn 228(l0): point = 17
   Insn 293(l0): point = 19
   Insn 229(l0): point = 21
   Insn 225(l0): point = 23
   Insn 227(l0): point = 25
   Insn 224(l0): point = 27
   Insn 289(l0): point = 30
   Insn 201(l0): point = 32
   Insn 200(l0): point = 34
   Insn 198(l0): point = 36
   Insn 197(l0): point = 38
   Insn 202(l0): point = 40
   Insn 196(l0): point = 42
   Insn 186(l0): point = 45
   Insn 184(l0): point = 47
   Insn 185(l0): point = 49
   Insn 181(l0): point = 51
   Insn 180(l0): point = 53
   Insn 179(l0): point = 55
   Insn 177(l0): point = 57
   Insn 174(l0): point = 59
   Insn 176(l0): point = 61
   Insn 175(l0): point = 63
   Insn 294(l0): point = 65
   Insn 170(l0): point = 67
   Insn 168(l0): point = 69
   Insn 295(l0): point = 71
   Insn 169(l0): point = 73
   Insn 167(l0): point = 75
   Insn 127(l0): point = 78
   Insn 125(l0): point = 80
   Insn 134(l0): point = 82
   Insn 275(l0): point = 85
   Insn 76(l0): point = 87
   Insn 78(l0): point = 89
   Insn 77(l0): point = 91
   Insn 111(l0): point = 93
   Insn 72(l0): point = 95
   Insn 273(l0): point = 98
   Insn 270(l0): point = 101
   Insn 56(l0): point = 103
   Insn 48(l0): point = 105
   Insn 49(l0): point = 107
   Insn 47(l0): point = 109
   Insn 44(l0): point = 112
   Insn 43(l0): point = 114
   Insn 42(l0): point = 116
   Insn 41(l0): point = 118
   Insn 39(l0): point = 120
   Insn 38(l0): point = 122
   Insn 36(l0): point = 124
   Insn 296(l0): point = 126
   Insn 37(l0): point = 128
   Insn 31(l0): point = 130
   Insn 30(l0): point = 132
   Insn 221(l6): point = 135
   Insn 220(l6): point = 137
   Insn 219(l6): point = 139
   Insn 215(l6): point = 142
   Insn 214(l6): point = 144
   Insn 211(l6): point = 146
   Insn 210(l6): point = 148
   Insn 209(l6): point = 150
   Insn 258(l6): point = 152
   Insn 208(l6): point = 154
   Insn 285(l4): point = 157
   Insn 151(l4): point = 159
   Insn 279(l4): point = 162
   Insn 260(l4): point = 164
   Insn 193(l5): point = 167
   Insn 192(l5): point = 169
   Insn 191(l5): point = 171
   Insn 287(l5): point = 174
   Insn 161(l5): point = 176
   Insn 160(l5): point = 178
   Insn 157(l5): point = 180
   Insn 156(l5): point = 182
   Insn 283(l5): point = 185
   Insn 146(l5): point = 188
   Insn 145(l5): point = 190
   Insn 144(l5): point = 193
   Insn 143(l5): point = 195
   Insn 142(l5): point = 198
   Insn 141(l5): point = 200
   Insn 140(l5): point = 202
   Insn 139(l5): point = 204
   Insn 138(l5): point = 206
   Insn 137(l5): point = 208
   Insn 136(l5): point = 210
   Insn 135(l5): point = 212
   Insn 122(l1): point = 215
   Insn 121(l1): point = 217
   Insn 117(l1): point = 220
   Insn 116(l1): point = 222
   Insn 113(l1): point = 225
   Insn 97(l1): point = 228
   Insn 277(l1): point = 231
   Insn 92(l1): point = 233
   Insn 90(l1): point = 236
   Insn 89(l1): point = 238
   Insn 88(l1): point = 240
   Insn 86(l1): point = 242
   Insn 85(l1): point = 244
   Insn 264(l1): point = 246
   Insn 83(l1): point = 248
   Insn 108(l2): point = 251
   Insn 105(l2): point = 253
   Insn 101(l2): point = 255
   Insn 107(l2): point = 257
   Insn 103(l2): point = 259
   Insn 104(l2): point = 261
   Insn 269(l2): point = 263
   Insn 99(l2): point = 265
   Insn 65(l3): point = 268
   Insn 64(l3): point = 270
   Insn 61(l3): point = 272
   Insn 58(l3): point = 275
   Insn 54(l3): point = 278
   Insn 53(l3): point = 280
 a0(r217): [3..4]
 a1(r175): [78..120] [41..44] [7..8]
 a2(r214): [14..25]
 a3(r213): [18..19]
 a4(r167): [30..40]
 a5(r198): [50..75]
 a6(r194): [64..65]
 a7(r197): [70..71]
 a8(r166): [98..107] [79..89]
 a9(r192): [79..80]
 a10(r221): [78..82]
 a11(r179): [78..132]
 a12(r180): [78..130]
 a13(r169): [110..116] [88..97]
 a14(r172): [85..91]
 a15(r225): [85..93]
 a16(r223): [101..103]
 a17(r182): [117..118]
 a18(r181): [125..126]
 a19(r167): [135..156]
 a20(r211): [138..139]
 a21(r210): [143..144]
 a22(r175): [157..166]
 a23(r179): [157..166]
 a24(r180): [157..166]
 a25(r221): [157..166]
 a26(r174): [162..164]
 a27(r174): [167..214]
 a28(r175): [167..214]
 a29(r179): [167..214]
 a30(r180): [167..214]
 a31(r221): [167..214]
 a32(r205): [170..171]
 a33(r196): [177..178]
 a34(r173): [191..202]
 a35(r166): [234..250] [228..230] [215..220]
 a36(r172): [236..250] [229..230] [215..222]
 a37(r175): [215..250]
 a38(r179): [215..250]
 a39(r180): [215..250]
 a40(r225): [215..250]
 a41(r162): [231..233] [221..227]
 a42(r164): [223..242]
 a43(r161): [226..227]
 a44(r168): [228..228]
 a45(r188): [239..240]
 a46(r164): [251..267]
 a47(r166): [262..267] [251..253]
 a48(r168): [251..267]
 a49(r175): [251..267]
 a50(r179): [251..267]
 a51(r180): [251..267]
 a52(r225): [251..267]
 a53(r161): [251..261]
 a54(r162): [251..263]
 a55(r163): [256..265]
 a56(r166): [268..282]
 a57(r175): [268..282]
 a58(r179): [268..282]
 a59(r180): [268..282]
 a60(r223): [268..282]
 a61(r170): [281..282] [268..272]
 Rebuilding regno allocno list for 211
 Rebuilding regno allocno list for 210
 Rebuilding regno allocno list for 205
 Rebuilding regno allocno list for 196
 Rebuilding regno allocno list for 188
 Rebuilding regno allocno list for 174
 Rebuilding regno allocno list for 173
 Rebuilding regno allocno list for 170
 Rebuilding regno allocno list for 168
 Rebuilding regno allocno list for 164
 Rebuilding regno allocno list for 163
 Rebuilding regno allocno list for 162
 Rebuilding regno allocno list for 161
Compressing live ranges: from 283 to 88 - 31%
Ranges after the compression:
 a0(r217): [0..1]
 a1(r175): [47..87] [18..36] [10..11] [2..3]
 a2(r214): [4..7]
 a3(r213): [5..6]
 a4(r167): [41..46] [8..9]
 a5(r198): [12..17]
 a6(r194): [13..14]
 a7(r197): [15..16]
 a8(r166): [80..87] [70..77] [65..67] [58..59] [28..31] [19..24]
 a9(r192): [19..20]
 a10(r221): [47..57] [18..21]
 a11(r179): [47..87] [18..40]
 a12(r180): [47..87] [18..39]
 a13(r169): [32..33] [23..27]
 a14(r172): [71..75] [66..67] [58..61] [22..25]
 a15(r225): [58..83] [22..26]
 a16(r223): [84..87] [29..30]
 a17(r182): [34..35]
 a18(r181): [37..38]
 a20(r211): [42..43]
 a21(r210): [44..45]
 a26(r174): [50..57] [48..49]
 a32(r205): [51..52]
 a33(r196): [53..54]
 a34(r173): [55..56]
 a41(r162): [76..81] [68..69] [60..64]
 a42(r164): [76..83] [62..74]
 a43(r161): [76..79] [63..64]
 a44(r168): [76..83] [65..65]
 a45(r188): [72..73]
 a55(r163): [78..82]
 a61(r170): [86..87] [84..85]
+++Allocating 248 bytes for conflict table (uncompressed size 496)
;; a0(r217,l0) conflicts:
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a1(r175,l0) conflicts: a10(r221,l0) a11(r179,l0) a12(r180,l0) a9(r192,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0) a13(r169,l0) a16(r223,l0) a17(r182,l0) a26(r174,l0) a32(r205,l0) a33(r196,l0) a34(r173,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0) a45(r188,l0) a55(r163,l0) a61(r170,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r214,l0) conflicts: a3(r213,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r213,l0) conflicts: a2(r214,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a4(r167,l0) conflicts: a20(r211,l0) a21(r210,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r198,l0) conflicts: a6(r194,l0) a7(r197,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r194,l0) conflicts: a5(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r197,l0) conflicts: a5(r198,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a8(r166,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a12(r180,l0) a9(r192,l0) a14(r172,l0) a15(r225,l0) a13(r169,l0) a16(r223,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0) a45(r188,l0) a55(r163,l0) a61(r170,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r192,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r221,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a9(r192,l0) a8(r166,l0) a26(r174,l0) a32(r205,l0) a33(r196,l0) a34(r173,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a11(r179,l0) conflicts: a1(r175,l0) a10(r221,l0) a12(r180,l0) a9(r192,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0) a13(r169,l0) a16(r223,l0) a17(r182,l0) a18(r181,l0) a26(r174,l0) a32(r205,l0) a33(r196,l0) a34(r173,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0) a45(r188,l0) a55(r163,l0) a61(r170,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a12(r180,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a9(r192,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0) a13(r169,l0) a16(r223,l0) a17(r182,l0) a18(r181,l0) a26(r174,l0) a32(r205,l0) a33(r196,l0) a34(r173,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0) a45(r188,l0) a55(r163,l0) a61(r170,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a13(r169,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a14(r172,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a15(r225,l0) a13(r169,l0) a41(r162,l0) a42(r164,l0) a45(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a15(r225,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a14(r172,l0) a13(r169,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0) a45(r188,l0) a55(r163,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a16(r223,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a61(r170,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r182,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a18(r181,l0) conflicts: a11(r179,l0) a12(r180,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a20(r211,l0) conflicts: a4(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r210,l0) conflicts: a4(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a26(r174,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a12(r180,l0) a32(r205,l0) a33(r196,l0) a34(r173,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a32(r205,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a12(r180,l0) a26(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a33(r196,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a12(r180,l0) a26(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a34(r173,l0) conflicts: a1(r175,l0) a10(r221,l0) a11(r179,l0) a12(r180,l0) a26(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a41(r162,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0) a55(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a42(r164,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0) a41(r162,l0) a43(r161,l0) a44(r168,l0) a45(r188,l0) a55(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a43(r161,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a15(r225,l0) a41(r162,l0) a42(r164,l0) a44(r168,l0) a55(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a44(r168,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a15(r225,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a55(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a45(r188,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a14(r172,l0) a15(r225,l0) a42(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a55(r163,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a15(r225,l0) a41(r162,l0) a42(r164,l0) a43(r161,l0) a44(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a61(r170,l0) conflicts: a1(r175,l0) a11(r179,l0) a12(r180,l0) a8(r166,l0) a16(r223,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r175)<->a4(r167)@1000:move
  cp1:a14(r172)<->a44(r168)@1000:move
  regions=7, blocks=31, points=88
    allocnos=62, copies=2, conflicts=6, ranges=57

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 30 29 28 27 26 24 22 25 23 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r217 1r175 2r214 3r213 4r167 5r198 6r194 7r197 8r166 9r192 10r221 11r179 12r180 13r169 14r172 15r225 16r223 17r182 18r181 20r211 21r210 26r174 32r205 33r196 34r173 41r162 42r164 43r161 44r168 45r188 55r163 61r170
    modified regnos: 161 162 163 164 166 167 168 169 170 172 173 174 175 179 180 181 182 188 192 194 196 197 198 205 210 211 213 214 217 221 223 225
    border:
    Pressure: GENERAL_REGS=10
    Reg 217 of GENERAL_REGS has 1 regs less
    Reg 175 of GENERAL_REGS has 5 regs less
    Reg 214 of GENERAL_REGS has 3 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 167 of GENERAL_REGS has 3 regs less
    Reg 198 of GENERAL_REGS has 4 regs less
    Reg 197 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 3 regs less
    Reg 221 of GENERAL_REGS has 5 regs less
    Reg 179 of GENERAL_REGS has 5 regs less
    Reg 180 of GENERAL_REGS has 5 regs less
    Reg 169 of GENERAL_REGS has 2 regs less
    Reg 172 of GENERAL_REGS has 3 regs less
    Reg 225 of GENERAL_REGS has 3 regs less
    Reg 182 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 5 regs less
      Pushing a45(r188,l0)
      Pushing a43(r161,l0)
      Pushing a42(r164,l0)
      Pushing a33(r196,l0)
      Pushing a32(r205,l0)
      Pushing a21(r210,l0)
      Pushing a20(r211,l0)
      Pushing a16(r223,l0)
      Pushing a9(r192,l0)
      Pushing a6(r194,l0)
      Pushing a61(r170,l0)
      Pushing a55(r163,l0)
      Pushing a44(r168,l0)
      Pushing a34(r173,l0)
      Pushing a41(r162,l0)
      Pushing a18(r181,l0)
      Pushing a17(r182,l0)
      Pushing a7(r197,l0)
      Pushing a3(r213,l0)
      Pushing a0(r217,l0)
      Pushing a13(r169,l0)
      Pushing a15(r225,l0)
      Pushing a2(r214,l0)
      Pushing a14(r172,l0)
      Pushing a4(r167,l0)
      Pushing a8(r166,l0)
      Pushing a5(r198,l0)
      Pushing a10(r221,l0)(potential spill: pri=2000, cost=20000)
      Pushing a11(r179,l0)
      Pushing a12(r180,l0)
      Pushing a26(r174,l0)
      Pushing a1(r175,l0)
      Popping a1(r175,l0)  -- assign reg 4
      Popping a26(r174,l0)  -- assign reg 5
      Popping a12(r180,l0)  -- assign reg 6
      Popping a11(r179,l0)  -- assign reg 7
      Popping a10(r221,l0)  -- assign reg 8
      Popping a5(r198,l0)  -- assign reg 4
      Popping a8(r166,l0)  -- assign reg 5
      Popping a4(r167,l0)  -- assign reg 4
      Popping a14(r172,l0)  -- assign reg 8
      Popping a2(r214,l0)  -- assign reg 4
      Popping a15(r225,l0)  -- assign reg 10
      Popping a13(r169,l0)  -- assign reg 9
      Popping a0(r217,l0)  -- assign reg 3
      Popping a3(r213,l0)  -- assign reg 3
      Popping a7(r197,l0)  -- assign reg 3
      Popping a17(r182,l0)  -- assign reg 3
      Popping a18(r181,l0)  -- assign reg 3
      Popping a41(r162,l0)  -- assign reg 3
      Popping a34(r173,l0)  -- assign reg 0
      Popping a44(r168,l0)  -- assign reg 8
      Popping a55(r163,l0)  -- assign reg 2
      Popping a61(r170,l0)  -- assign reg 3
      Popping a6(r194,l0)  -- assign reg 3
      Popping a9(r192,l0)  -- assign reg 3
      Popping a16(r223,l0)  -- assign reg 2
      Popping a20(r211,l0)  -- assign reg 3
      Popping a21(r210,l0)  -- assign reg 0
      Popping a32(r205,l0)  -- assign reg 3
      Popping a33(r196,l0)  -- assign reg 0
      Popping a42(r164,l0)  -- assign reg 0
      Popping a43(r161,l0)  -- assign reg 1
      Popping a45(r188,l0)  -- assign reg 3
Disposition:
   43:r161 l0     1   41:r162 l0     3   55:r163 l0     2   42:r164 l0     0
    8:r166 l0     5    4:r167 l0     4   44:r168 l0     8   13:r169 l0     9
   61:r170 l0     3   14:r172 l0     8   34:r173 l0     0   26:r174 l0     5
    1:r175 l0     4   11:r179 l0     7   12:r180 l0     6   18:r181 l0     3
   17:r182 l0     3   45:r188 l0     3    9:r192 l0     3    6:r194 l0     3
   33:r196 l0     0    7:r197 l0     3    5:r198 l0     4   32:r205 l0     3
   21:r210 l0     0   20:r211 l0     3    3:r213 l0     3    2:r214 l0     4
    0:r217 l0     3   10:r221 l0     8   16:r223 l0     2   15:r225 l0    10
New iteration of spill/restore move
+++Costs: overall -8500, reg -8500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=30, live_throughout: 1, 13, dead_or_set: 0, 179
insn=31, live_throughout: 13, 179, dead_or_set: 1, 180
insn=37, live_throughout: 13, 179, 180, dead_or_set: 1
insn=296, live_throughout: 1, 13, 179, 180, dead_or_set: 181
insn=36, live_throughout: 1, 13, 179, 180, dead_or_set: 0, 181
insn=38, live_throughout: 13, 179, 180, dead_or_set: 0, 1, 14
insn=39, live_throughout: 0, 13, 179, 180, dead_or_set: 175
insn=41, live_throughout: 0, 13, 175, 179, 180, dead_or_set: 182
insn=42, live_throughout: 0, 13, 175, 179, 180, dead_or_set: 169, 182
insn=43, live_throughout: 0, 13, 169, 175, 179, 180, dead_or_set: 
insn=44, live_throughout: 0, 13, 169, 175, 179, 180, dead_or_set: 
insn=47, live_throughout: 0, 13, 175, 179, 180, dead_or_set: 1, 169
insn=49, live_throughout: 0, 1, 13, 175, 179, 180, dead_or_set: 166
insn=48, live_throughout: 13, 166, 175, 179, 180, dead_or_set: 0, 1, 14
insn=56, live_throughout: 13, 166, 175, 179, 180, dead_or_set: 223
insn=270, live_throughout: 13, 166, 175, 179, 180, 223, dead_or_set: 
insn=63, live_throughout: 13, 166, 170, 175, 179, 180, 223, dead_or_set: 
insn=53, live_throughout: 13, 166, 175, 179, 180, 223, dead_or_set: 170
insn=54, live_throughout: 13, 166, 175, 179, 180, 223, dead_or_set: 
insn=58, live_throughout: 13, 166, 175, 179, 180, 223, dead_or_set: 
insn=268, live_throughout: 13, 166, 175, 179, 180, 223, dead_or_set: 
insn=61, live_throughout: 13, 175, 179, 180, 223, dead_or_set: 166, 170
insn=64, live_throughout: 13, 166, 170, 175, 179, 180, 223, dead_or_set: 
insn=65, live_throughout: 13, 166, 170, 175, 179, 180, 223, dead_or_set: 
insn=273, live_throughout: 13, 166, 175, 179, 180, dead_or_set: 
insn=69, live_throughout: 0, 13, 169, 175, 179, 180, dead_or_set: 
insn=72, live_throughout: 13, 169, 175, 179, 180, dead_or_set: 0, 14
insn=111, live_throughout: 0, 13, 169, 175, 179, 180, dead_or_set: 225
insn=77, live_throughout: 0, 13, 169, 175, 179, 180, 225, dead_or_set: 172
insn=78, live_throughout: 0, 13, 169, 172, 175, 179, 180, 225, dead_or_set: 166
insn=76, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 0, 169
insn=275, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=120, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=83, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 0
insn=264, live_throughout: 0, 13, 166, 172, 175, 179, 180, 225, dead_or_set: 1
insn=85, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 0, 1, 14
insn=86, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 0, 164
insn=88, live_throughout: 13, 164, 166, 172, 175, 179, 180, 225, dead_or_set: 188
insn=89, live_throughout: 13, 164, 166, 172, 175, 179, 180, 225, dead_or_set: 188
insn=90, live_throughout: 13, 164, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=92, live_throughout: 13, 164, 175, 179, 180, 225, dead_or_set: 162, 166
insn=277, live_throughout: 13, 162, 164, 175, 179, 180, 225, dead_or_set: 
insn=95, live_throughout: 13, 164, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=97, live_throughout: 13, 164, 166, 175, 179, 180, 225, dead_or_set: 168, 172
insn=106, live_throughout: 13, 164, 166, 168, 175, 179, 180, 225, dead_or_set: 
insn=99, live_throughout: 13, 164, 166, 168, 175, 179, 180, 225, dead_or_set: 163
insn=269, live_throughout: 13, 163, 164, 166, 168, 175, 179, 180, 225, dead_or_set: 162
insn=104, live_throughout: 13, 162, 163, 164, 168, 175, 179, 180, 225, dead_or_set: 161, 166
insn=103, live_throughout: 13, 161, 162, 163, 164, 175, 179, 180, 225, dead_or_set: 168
insn=107, live_throughout: 13, 161, 162, 163, 164, 168, 175, 179, 180, 225, dead_or_set: 
insn=101, live_throughout: 13, 24, 161, 164, 168, 175, 179, 180, 225, dead_or_set: 162, 163
insn=105, live_throughout: 13, 24, 161, 162, 164, 168, 175, 179, 180, 225, dead_or_set: 166
insn=108, live_throughout: 13, 161, 162, 164, 166, 168, 175, 179, 180, 225, dead_or_set: 
insn=113, live_throughout: 13, 162, 164, 175, 179, 180, 225, dead_or_set: 161
insn=114, live_throughout: 13, 162, 164, 175, 179, 180, 225, dead_or_set: 
insn=116, live_throughout: 13, 162, 175, 179, 180, 225, dead_or_set: 164, 172
insn=117, live_throughout: 13, 172, 175, 179, 180, 225, dead_or_set: 162, 166
insn=118, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=121, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=122, live_throughout: 13, 166, 172, 175, 179, 180, 225, dead_or_set: 
insn=123, live_throughout: 13, 166, 175, 179, 180, dead_or_set: 
insn=134, live_throughout: 13, 166, 175, 179, 180, dead_or_set: 221
insn=125, live_throughout: 13, 166, 175, 179, 180, 221, dead_or_set: 192
insn=127, live_throughout: 13, 175, 179, 180, 221, dead_or_set: 166, 192
insn=128, live_throughout: 13, 175, 179, 180, 221, dead_or_set: 
insn=260, live_throughout: 13, 175, 179, 180, 221, dead_or_set: 174
insn=279, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=190, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=135, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 0
insn=136, live_throughout: 0, 13, 174, 175, 179, 180, 221, dead_or_set: 1
insn=137, live_throughout: 0, 1, 13, 174, 175, 179, 180, 221, dead_or_set: 2
insn=138, live_throughout: 0, 1, 2, 13, 174, 175, 179, 180, 221, dead_or_set: 3
insn=139, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 0, 1, 2, 3, 14
insn=140, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 0, 173
insn=141, live_throughout: 13, 173, 174, 175, 179, 180, 221, dead_or_set: 
insn=142, live_throughout: 13, 173, 174, 175, 179, 180, 221, dead_or_set: 
insn=143, live_throughout: 13, 173, 174, 175, 179, 180, 221, dead_or_set: 
insn=144, live_throughout: 13, 173, 174, 175, 179, 180, 221, dead_or_set: 
insn=145, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 173
insn=146, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=283, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=149, live_throughout: 13, 175, 179, 180, 221, dead_or_set: 
insn=151, live_throughout: 13, 175, 179, 221, dead_or_set: 180
insn=285, live_throughout: 13, 175, 179, 180, 221, dead_or_set: 
insn=154, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=156, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 0
insn=157, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 0, 14
insn=160, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 0, 196
insn=161, live_throughout: 13, 175, 179, 180, 221, dead_or_set: 174, 196
insn=287, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=281, live_throughout: 13, dead_or_set: 
insn=167, live_throughout: 13, dead_or_set: 198
insn=169, live_throughout: 13, 198, dead_or_set: 1
insn=295, live_throughout: 1, 13, 198, dead_or_set: 197
insn=168, live_throughout: 1, 13, 198, dead_or_set: 0, 197
insn=170, live_throughout: 13, 198, dead_or_set: 0, 1, 14
insn=294, live_throughout: 13, 198, dead_or_set: 194
insn=175, live_throughout: 13, 198, dead_or_set: 1, 194
insn=176, live_throughout: 1, 13, 198, dead_or_set: 2
insn=174, live_throughout: 1, 2, 13, 198, dead_or_set: 0
insn=177, live_throughout: 13, 198, dead_or_set: 0, 1, 2, 14
insn=179, live_throughout: 13, 198, dead_or_set: 0
insn=180, live_throughout: 13, 198, dead_or_set: 0, 14
insn=181, live_throughout: 13, 198, dead_or_set: 14
insn=185, live_throughout: 13, dead_or_set: 1, 198
insn=184, live_throughout: 1, 13, dead_or_set: 0
insn=186, live_throughout: 13, dead_or_set: 0, 1, 14
insn=188, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=191, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 205
insn=192, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 205
insn=193, live_throughout: 13, 174, 175, 179, 180, 221, dead_or_set: 
insn=196, live_throughout: 13, 175, dead_or_set: 0
insn=202, live_throughout: 0, 13, dead_or_set: 167, 175
insn=197, live_throughout: 13, 167, dead_or_set: 0, 14
insn=198, live_throughout: 13, 167, dead_or_set: 14
insn=200, live_throughout: 13, 167, dead_or_set: 0
insn=201, live_throughout: 13, 167, dead_or_set: 0, 14
insn=289, live_throughout: 13, 167, dead_or_set: 
insn=218, live_throughout: 13, 167, dead_or_set: 
insn=208, live_throughout: 13, 167, dead_or_set: 1
insn=258, live_throughout: 1, 13, 167, dead_or_set: 0
insn=209, live_throughout: 13, 167, dead_or_set: 0, 1, 14
insn=210, live_throughout: 13, 167, dead_or_set: 0
insn=211, live_throughout: 13, 167, dead_or_set: 0, 14
insn=214, live_throughout: 13, 167, dead_or_set: 0, 210
insn=215, live_throughout: 13, dead_or_set: 167, 210
insn=216, live_throughout: 13, 167, dead_or_set: 
insn=219, live_throughout: 13, 167, dead_or_set: 211
insn=220, live_throughout: 13, 167, dead_or_set: 211
insn=221, live_throughout: 13, 167, dead_or_set: 
insn=224, live_throughout: 13, dead_or_set: 0
insn=227, live_throughout: 0, 13, dead_or_set: 214
insn=225, live_throughout: 13, 214, dead_or_set: 0, 14
insn=229, live_throughout: 13, 214, dead_or_set: 1
insn=293, live_throughout: 1, 13, 214, dead_or_set: 213
insn=228, live_throughout: 1, 13, 214, dead_or_set: 0, 213
insn=230, live_throughout: 13, 214, dead_or_set: 0, 1, 14
insn=234, live_throughout: 13, dead_or_set: 1, 214
insn=233, live_throughout: 1, 13, dead_or_set: 0
insn=235, live_throughout: 13, dead_or_set: 0, 1, 14
insn=237, live_throughout: 13, 175, dead_or_set: 
insn=241, live_throughout: 13, dead_or_set: 1, 175
insn=292, live_throughout: 1, 13, dead_or_set: 217
insn=240, live_throughout: 1, 13, dead_or_set: 0, 217
insn=242, live_throughout: 13, dead_or_set: 0, 1, 14
init_insns for 181: (insn_list:REG_DEP_TRUE 296 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 125 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 294 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 295 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 167 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 293 (nil))
init_insns for 214: (insn_list:REG_DEP_TRUE 227 (nil))
init_insns for 217: (insn_list:REG_DEP_TRUE 292 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 134 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 225: (insn_list:REG_DEP_TRUE 111 (nil))
changing reg in insn 104
changing reg in insn 113
changing reg in insn 269
changing reg in insn 101
changing reg in insn 92
changing reg in insn 101
changing reg in insn 117
changing reg in insn 105
changing reg in insn 99
changing reg in insn 107
changing reg in insn 86
changing reg in insn 116
changing reg in insn 61
changing reg in insn 117
changing reg in insn 105
changing reg in insn 78
changing reg in insn 49
changing reg in insn 269
changing reg in insn 61
changing reg in insn 58
changing reg in insn 127
changing reg in insn 104
changing reg in insn 92
changing reg in insn 215
changing reg in insn 202
changing reg in insn 219
changing reg in insn 215
changing reg in insn 210
changing reg in insn 208
changing reg in insn 103
changing reg in insn 97
changing reg in insn 103
changing reg in insn 99
changing reg in insn 42
changing reg in insn 111
changing reg in insn 47
changing reg in insn 43
changing reg in insn 61
changing reg in insn 64
changing reg in insn 53
changing reg in insn 116
changing reg in insn 77
changing reg in insn 83
changing reg in insn 88
changing reg in insn 121
changing reg in insn 97
changing reg in insn 140
changing reg in insn 145
changing reg in insn 143
changing reg in insn 141
changing reg in insn 260
changing reg in insn 161
changing reg in insn 191
changing reg in insn 161
changing reg in insn 156
changing reg in insn 136
changing reg in insn 39
changing reg in insn 76
changing reg in insn 260
changing reg in insn 241
changing reg in insn 202
changing reg in insn 78
changing reg in insn 77
changing reg in insn 49
changing reg in insn 30
changing reg in insn 135
changing reg in insn 151
changing reg in insn 31
changing reg in insn 151
changing reg in insn 137
changing reg in insn 296
changing reg in insn 36
changing reg in insn 41
changing reg in insn 42
changing reg in insn 88
changing reg in insn 89
changing reg in insn 125
changing reg in insn 294
changing reg in insn 175
changing reg in insn 160
changing reg in insn 161
changing reg in insn 295
changing reg in insn 168
changing reg in insn 167
changing reg in insn 185
changing reg in insn 176
changing reg in insn 169
changing reg in insn 191
changing reg in insn 192
changing reg in insn 214
changing reg in insn 215
changing reg in insn 219
changing reg in insn 220
changing reg in insn 293
changing reg in insn 228
changing reg in insn 227
changing reg in insn 234
changing reg in insn 229
changing reg in insn 292
changing reg in insn 240
changing reg in insn 134
changing reg in insn 138
changing reg in insn 56
changing reg in insn 111
Spilling for insn 58.
Spilling for insn 76.
Spilling for insn 101.
Spilling for insn 113.
Spilling for insn 127.

Reloads for insn # 58
Reload 0: reload_out (QI) = (mem:QI (plus:SI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
                                                        (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:SI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
                                                        (const_int -1 [0xffffffffffffffff])) [0 S1 A8])

Reloads for insn # 76
Reload 0: reload_out (QI) = (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])
                                                        (reg:SI 0 r0)) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])
                                                        (reg:SI 0 r0)) [0 S1 A8])

Reloads for insn # 101
Reload 0: reload_out (QI) = (mem:QI (post_inc:SI (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (post_inc:SI (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])) [0 S1 A8])

Reloads for insn # 113
Reload 0: reload_out (QI) = (mem:QI (reg/v/f:SI 1 r1 [orig:161 fs_names.1173 ] [161]) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (reg/v/f:SI 1 r1 [orig:161 fs_names.1173 ] [161]) [0 S1 A8])

Reloads for insn # 127
Reload 0: reload_out (QI) = (mem:QI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166]) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166]) [0 S1 A8])
deleting insn with uid = 86.
deleting insn with uid = 97.
deleting insn with uid = 140.
deleting insn with uid = 202.


try_optimize_cfg iteration 1

Forwarding edge 6->7 to 16 failed.
Edge 9->11 redirected to 12
Deleting block 11.
deleting insn with uid = 95.
deleting insn with uid = 96.
deleting block 11
Forwarding edge 20->21 to 23 failed.


try_optimize_cfg iteration 2

Forwarding edge 6->7 to 16 failed.
Forwarding edge 20->21 to 23 failed.


try_optimize_cfg iteration 1

Forwarding edge 6->7 to 16 failed.
Forwarding edge 20->21 to 23 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 157.
verify found no changes in insn with uid = 170.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 197.
verify found no changes in insn with uid = 198.
verify found no changes in insn with uid = 201.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 225.
verify found no changes in insn with uid = 230.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 242.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 38 count 63 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 30 n_edges 38 count 68 (  2.3)


mount_block_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={39d,29u} r1={33d,13u} r2={25d,5u} r3={36d,16u} r4={4d,10u} r5={7d,10u} r6={2d,2u} r7={1d,1u} r8={4d,6u} r9={1d,4u} r10={1d,1u} r12={21d} r13={1d,56u,7d} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={31d,11u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} 
;;    total ref usage 2599{2427d,165u,7e} in 123{103 regular + 20 call} insns.
(note 29 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 29 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 32 33 30 2 NOTE_INSN_FUNCTION_BEG)

(insn 30 32 31 2 init/do_mounts.c:305 (set (reg/v/f:SI 7 r7 [orig:179 name ] [179])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 37 2 init/do_mounts.c:305 (set (reg/v:SI 6 r6 [orig:180 flags ] [180])
        (reg:SI 1 r1 [ flags ])) 167 {*arm_movsi_insn} (nil))

(insn 37 31 296 2 init/do_mounts.c:306 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 296 37 36 2 init/do_mounts.c:306 (set (reg/f:SI 3 r3 [181])
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)
        (nil)))

(insn 36 296 38 2 init/do_mounts.c:306 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 3 r3 [181]) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>) [0 names_cachep+0 S4 A32])
        (nil)))

(call_insn 38 36 39 2 init/do_mounts.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x11479e80 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 38 41 2 init/do_mounts.c:306 (set (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 41 39 42 2 init/do_mounts.c:265 (set (reg/f:SI 3 r3 [182])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 42 41 43 2 init/do_mounts.c:265 (set (reg/f:SI 9 r9 [orig:169 root_fs_names.889 ] [169])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [182])
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 8 [0x8]))) [0 root_fs_names+0 S4 A32])
        (nil)))

(insn 43 42 44 2 init/do_mounts.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 9 r9 [orig:169 root_fs_names.889 ] [169])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 2 init/do_mounts.c:265 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  8 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
(note 45 44 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 49 3 init/do_mounts.c:266 (set (reg:SI 1 r1)
        (reg/f:SI 9 r9 [orig:169 root_fs_names.889 ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 49 47 48 3 init/do_mounts.c:263 (set (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
        (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])) 167 {*arm_movsi_insn} (nil))

(call_insn 48 49 56 3 init/do_mounts.c:266 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 56 48 270 3 init/do_mounts.c:269 (set (reg:SI 2 r2 [223])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(jump_insn 270 56 271 3 (set (pc)
        (label_ref 268)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 271 270 63)

;; Start of basic block ( 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [91.0%] 
(code_label 63 271 52 4 50 "" [1 uses])

(note 52 63 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 init/do_mounts.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:170 D.53045 ] [170])
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 4 init/do_mounts.c:268 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 268)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%]  (dfs_back)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 55 54 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 58 55 268 5 init/do_mounts.c:269 (set (mem:QI (plus:SI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 2 r2 [223])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [72.0%]  (dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 268 58 267 6 70 "" [2 uses])

(note 267 268 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 267 64 6 init/do_mounts.c:267 discrim 1 (set (reg:SI 3 r3 [orig:170 D.53045 ] [170])
        (zero_extend:SI (mem:QI (post_inc:SI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_INC (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
        (nil)))

(insn 64 61 65 6 init/do_mounts.c:267 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:170 D.53045 ] [170])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 272 6 init/do_mounts.c:267 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 6 -> ( 4 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [91.0%] 
;; Succ edge  7 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [9.0%]  (fallthru,loop_exit)
(note 272 65 273 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 273 272 274 7 (set (pc)
        (label_ref 123)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 274 273 69)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 8 [r8] 10 [sl]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%] 
(code_label 69 274 70 8 48 "" [1 uses])

(note 70 69 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 73 70 72 8 NOTE_INSN_DELETED)

(call_insn 72 73 111 8 init/do_mounts.c:272 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_filesystem_list") [flags 0x41] <function_decl 0x1118fb80 get_filesystem_list>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 111 72 77 8 init/do_mounts.c:282 (set (reg:SI 10 sl [225])
        (reg/f:SI 9 r9 [orig:169 root_fs_names.889 ] [169])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 77 111 78 8 init/do_mounts.c:276 (set (reg/v/f:SI 8 r8 [orig:172 p ] [172])
        (plus:SI (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 78 77 76 8 init/do_mounts.c:263 (set (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
        (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])) 167 {*arm_movsi_insn} (nil))

(insn 76 78 275 8 init/do_mounts.c:275 (set (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])
                (reg:SI 0 r0)) [0 S1 A8])
        (reg:QI 9 r9 [orig:169 root_fs_names.889 ] [169])) 178 {*arm_movqi_insn} (nil))

(jump_insn 275 76 276 8 (set (pc)
        (label_ref 118)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 276 275 120)

;; Start of basic block ( 15) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  15 [91.0%] 
(code_label 120 276 81 9 56 "" [1 uses])

(note 81 120 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 82 81 83 9 NOTE_INSN_DELETED)

(insn 83 82 264 9 init/do_mounts.c:277 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 8 r8 [orig:172 p ] [172])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 264 83 85 9 init/do_mounts.c:277 (set (reg:SI 1 r1)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 264 88 9 init/do_mounts.c:277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 88 85 89 9 init/do_mounts.c:278 (set (reg:SI 3 r3 [188])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 8 r8 [orig:172 p ] [172])
                    (const_int 1 [0x1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 89 88 90 9 init/do_mounts.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [188])
            (const_int 9 [0x9]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 9 init/do_mounts.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 106)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  10 [72.0%]  (fallthru)
;; Succ edge  12 [28.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  9 [72.0%]  (fallthru)
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 277 10 init/do_mounts.c:278 (set (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])
        (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])) 167 {*arm_movsi_insn} (nil))

(jump_insn 277 92 278 10 (set (pc)
        (label_ref 114)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 278 277 106)

;; Start of basic block ( 9 12) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  9 [28.0%] 
;; Pred edge  12 [86.0%]  (dfs_back)
(code_label 106 278 98 12 55 "" [2 uses])

(note 98 106 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 269 12 init/do_mounts.c:280 discrim 1 (set (reg:SI 2 r2 [orig:163 temp.1171 ] [163])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 8 r8 [orig:168 ivtmp.1163 ] [168])
                    (const_int 2 [0x2])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 269 99 104 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])
        (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 104 269 103 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 1 r1 [orig:161 fs_names.1173 ] [161])
        (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 103 104 107 12 init/do_mounts.c:280 discrim 1 (set (reg:SI 8 r8 [orig:168 ivtmp.1163 ] [168])
        (plus:SI (reg:SI 8 r8 [orig:168 ivtmp.1163 ] [168])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 107 103 101 12 init/do_mounts.c:280 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:163 temp.1171 ] [163])
            (const_int 10 [0xa]))) 219 {*arm_cmpsi_insn} (nil))

(insn 101 107 105 12 init/do_mounts.c:280 discrim 1 (set (mem:QI (post_inc:SI (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])) [0 S1 A8])
        (reg:QI 2 r2 [orig:163 temp.1171 ] [163])) 178 {*arm_movqi_insn} (expr_list:REG_INC (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])
        (nil)))

(insn 105 101 108 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
        (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])) 167 {*arm_movsi_insn} (nil))

(jump_insn 108 105 109 12 init/do_mounts.c:280 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 106)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 12 -> ( 12 13)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  12 [86.0%]  (dfs_back)
;; Succ edge  13 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 1 [r1] 10 [sl] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [14.0%]  (fallthru,loop_exit)
(note 109 108 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 113 109 114 13 init/do_mounts.c:282 (set (mem:QI (reg/v/f:SI 1 r1 [orig:161 fs_names.1173 ] [161]) [0 S1 A8])
        (reg:QI 10 sl [225])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 10) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 8 [r8]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 5 [r5] 8 [r8]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 114 113 115 14 54 "" [1 uses])

(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 14 init/do_mounts.c:282 (set (reg/v/f:SI 8 r8 [orig:172 p ] [172])
        (reg/v/f:SI 0 r0 [orig:164 p.1170 ] [164])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 118 14 init/do_mounts.c:282 (set (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166])
        (reg/v/f:SI 3 r3 [orig:162 fs_names.1172 ] [162])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 8) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 118 117 119 15 52 "" [1 uses])

(note 119 118 121 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 121 119 122 15 init/do_mounts.c:276 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 8 r8 [orig:172 p ] [172])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 15 init/do_mounts.c:276 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 15 -> ( 9 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  9 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15 7) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 8 [r8]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 8 [r8]
;; live  kill	

;; Pred edge  15 [9.0%]  (fallthru,loop_exit)
;; Pred edge  7 [100.0%] 
(code_label 123 122 124 16 51 "" [1 uses])

(note 124 123 134 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 134 124 125 16 init/do_mounts.c:318 (set (reg/f:SI 8 r8 [221])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 125 134 127 16 init/do_mounts.c:285 (set (reg:SI 3 r3 [192])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 127 125 128 16 init/do_mounts.c:285 (set (mem:QI (reg/v/f:SI 5 r5 [orig:166 fs_names.1168 ] [166]) [0 S1 A8])
        (reg:QI 3 r3 [192])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 22) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (dfs_back)
(code_label 128 127 129 17 57 ("retry") [1 uses])

(note 129 128 260 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 260 129 279 17 init/do_mounts.c:317 (set (reg/v/f:SI 5 r5 [orig:174 p ] [174])
        (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])) 167 {*arm_movsi_insn} (nil))

(jump_insn 279 260 280 17 init/do_mounts.c:317 (set (pc)
        (label_ref 188)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 280 279 190)

;; Start of basic block ( 25) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  25 [100.0%] 
(code_label 190 280 133 18 63 "" [1 uses])

(note 133 190 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 135 133 136 18 init/do_mounts.c:318 (set (reg:SI 0 r0)
        (reg/v/f:SI 7 r7 [orig:179 name ] [179])) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 18 init/do_mounts.c:318 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:174 p ] [174])) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 18 init/do_mounts.c:318 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:180 flags ] [180])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 18 init/do_mounts.c:318 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 8 r8 [221])
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 root_mount_data+0 S4 A32])
        (nil)))

(call_insn 139 138 141 18 init/do_mounts.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 141 139 142 18 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:173 err ] [173])
            (const_int -13 [0xfffffffffffffff3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 142 141 248 18 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 18 -> ( 22 19)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  22 [29.0%]  (loop_exit)
;; Succ edge  19 [71.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [71.0%]  (fallthru)
(note 248 142 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 248 144 19 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:173 err ] [173])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 249 19 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 19 -> ( 30 20)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  30 [50.0%]  (loop_exit)
;; Succ edge  20 [50.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 249 144 145 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 145 249 146 20 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:173 err ] [173])
            (const_int -22 [0xffffffffffffffea]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 146 145 282 20 init/do_mounts.c:319 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 281)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 20 -> ( 21 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  21 [29.0%]  (fallthru)
;; Succ edge  24 [71.0%]  (loop_exit)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  20 [29.0%]  (fallthru)
(note 282 146 283 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(jump_insn 283 282 284 21 (set (pc)
        (label_ref 154)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  23 [100.0%] 

(barrier 284 283 149)

;; Start of basic block ( 18) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  18 [29.0%]  (loop_exit)
(code_label 149 284 150 22 61 "" [1 uses])

(note 150 149 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 285 22 init/do_mounts.c:323 (set (reg/v:SI 6 r6 [orig:180 flags ] [180])
        (ior:SI (reg/v:SI 6 r6 [orig:180 flags ] [180])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 285 151 286 22 init/do_mounts.c:324 (set (pc)
        (label_ref 128)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 17)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  17 [100.0%]  (dfs_back)

(barrier 286 285 154)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%] 
(code_label 154 286 155 23 60 "" [1 uses])

(note 155 154 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 158 155 156 23 NOTE_INSN_DELETED)

(insn 156 158 157 23 init/do_mounts.c:317 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:174 p ] [174])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 157 156 160 23 init/do_mounts.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 160 157 161 23 init/do_mounts.c:317 (set (reg:SI 0 r0 [196])
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 161 160 287 23 init/do_mounts.c:317 (set (reg/v/f:SI 5 r5 [orig:174 p ] [174])
        (plus:SI (reg/v/f:SI 5 r5 [orig:174 p ] [174])
            (reg:SI 0 r0 [196]))) 4 {*arm_addsi3} (nil))

(jump_insn 287 161 288 23 (set (pc)
        (label_ref 188)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  25 [100.0%]  (dfs_back)

(barrier 288 287 281)

;; Start of basic block ( 20) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  20 [71.0%]  (loop_exit)
(code_label 281 288 165 24 71 "" [1 uses])

(note 165 281 167 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 167 165 169 24 init/do_mounts.c:334 (set (reg/f:SI 4 r4 [198])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 169 167 295 24 init/do_mounts.c:334 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 295 169 168 24 init/do_mounts.c:334 (set (reg/f:SI 3 r3 [197])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 168 295 170 24 init/do_mounts.c:334 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 3 r3 [197]) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
        (nil)))

(call_insn 170 168 294 24 init/do_mounts.c:334 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 294 170 175 24 init/do_mounts.c:336 (set (reg/f:SI 3 r3 [194])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 175 294 176 24 init/do_mounts.c:336 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [194])
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 84 [0x54]))) [0 root_device_name+0 S4 A32])
        (nil)))

(insn 176 175 174 24 init/do_mounts.c:336 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 174 176 177 24 init/do_mounts.c:336 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)
        (nil)))

(call_insn 177 174 179 24 init/do_mounts.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 179 177 180 24 init/do_mounts.c:338 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)
        (nil)))

(call_insn 180 179 181 24 init/do_mounts.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 181 180 185 24 init/do_mounts.c:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 185 181 184 24 init/do_mounts.c:345 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 184 185 186 24 init/do_mounts.c:345 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
        (nil)))

(call_insn 186 184 187 24 init/do_mounts.c:345 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 24 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 187 186 188)

;; Start of basic block ( 17 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  17 [100.0%] 
;; Pred edge  23 [100.0%]  (dfs_back)
(code_label 188 187 189 25 58 "" [2 uses])

(note 189 188 191 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 25 init/do_mounts.c:317 discrim 1 (set (reg:SI 3 r3 [205])
        (zero_extend:SI (mem:QI (reg/v/f:SI 5 r5 [orig:174 p ] [174]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 192 191 193 25 init/do_mounts.c:317 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [205])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 193 192 194 25 init/do_mounts.c:317 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 25 -> ( 18 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  18 [100.0%] 
;; Succ edge  26 [0.0%]  (fallthru,loop_exit)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  25 [0.0%]  (fallthru,loop_exit)
(note 194 193 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 196 194 197 26 init/do_mounts.c:348 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)
        (nil)))

(call_insn 197 196 198 26 init/do_mounts.c:348 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 198 197 200 26 init/do_mounts.c:349 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 200 198 201 26 init/do_mounts.c:350 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)
        (nil)))

(call_insn 201 200 289 26 init/do_mounts.c:350 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 289 201 290 26 init/do_mounts.c:351 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 28)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  28 [100.0%] 

(barrier 290 289 218)

;; Start of basic block ( 28) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  28 [0.0%] 
(code_label 218 290 205 27 65 "" [1 uses])

(note 205 218 212 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 212 205 208 27 NOTE_INSN_DELETED)

(insn 208 212 258 27 init/do_mounts.c:352 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:167 p.1164 ] [167])) 167 {*arm_movsi_insn} (nil))

(insn 258 208 209 27 init/do_mounts.c:352 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)) 167 {*arm_movsi_insn} (nil))

(call_insn 209 258 210 27 init/do_mounts.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 210 209 211 27 init/do_mounts.c:351 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:167 p.1164 ] [167])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 211 210 214 27 init/do_mounts.c:351 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 214 211 215 27 init/do_mounts.c:351 discrim 2 (set (reg:SI 0 r0 [210])
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 215 214 216 27 init/do_mounts.c:351 discrim 2 (set (reg/v/f:SI 4 r4 [orig:167 p.1164 ] [167])
        (plus:SI (reg/v/f:SI 4 r4 [orig:167 p.1164 ] [167])
            (reg:SI 0 r0 [210]))) 4 {*arm_addsi3} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  28 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru,dfs_back)
;; Pred edge  26 [100.0%] 
(code_label 216 215 217 28 64 "" [1 uses])

(note 217 216 219 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 219 217 220 28 init/do_mounts.c:351 discrim 1 (set (reg:SI 3 r3 [211])
        (zero_extend:SI (mem:QI (reg/v/f:SI 4 r4 [orig:167 p.1164 ] [167]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 220 219 221 28 init/do_mounts.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [211])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 221 220 222 28 init/do_mounts.c:351 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 28 -> ( 27 29)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  27 [0.0%] 
;; Succ edge  29 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  28 [100.0%]  (fallthru,loop_exit)
(note 222 221 224 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 224 222 227 29 init/do_mounts.c:353 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)
        (nil)))

(insn 227 224 225 29 init/do_mounts.c:355 (set (reg/f:SI 4 r4 [214])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn 225 227 229 29 init/do_mounts.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 229 225 293 29 init/do_mounts.c:355 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 293 229 228 29 init/do_mounts.c:355 (set (reg/f:SI 3 r3 [213])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 228 293 230 29 init/do_mounts.c:355 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 3 r3 [213]) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
        (nil)))

(call_insn 230 228 234 29 init/do_mounts.c:355 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 234 230 233 29 init/do_mounts.c:357 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 233 234 235 29 init/do_mounts.c:357 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
        (nil)))

(call_insn 235 233 236 29 init/do_mounts.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 236 235 237)

;; Start of basic block ( 19) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  19 [50.0%]  (loop_exit)
(code_label 237 236 238 30 62 ("out") [1 uses])

(note 238 237 241 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 241 238 292 30 init/do_mounts.c:359 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:175 fs_names ] [175])) 167 {*arm_movsi_insn} (nil))

(insn 292 241 240 30 init/do_mounts.c:359 (set (reg/f:SI 3 r3 [217])
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)
        (nil)))

(insn 240 292 242 30 init/do_mounts.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 3 r3 [217]) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>) [0 names_cachep+0 S4 A32])
        (nil)))

(call_insn 242 240 291 30 init/do_mounts.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_free") [flags 0x41] <function_decl 0x11460b00 kmem_cache_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 30 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 291 242 297 NOTE_INSN_DELETED)

(note 297 291 0 NOTE_INSN_DELETED)


;; Function mount_root (mount_root)[0:2717] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 17 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)
scanning new insn with uid = 101.
verify found no changes in insn with uid = 101.
deleting insn with uid = 78.
scanning new insn with uid = 102.
verify found no changes in insn with uid = 102.
deleting insn with uid = 57.
scanning new insn with uid = 103.
verify found no changes in insn with uid = 103.
deleting insn with uid = 52.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 17 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)

Pass 0 for finding allocno costs

    a18 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 81(l0): point = 1
   Insn 80(l0): point = 3
   Insn 101(l0): point = 5
   Insn 79(l0): point = 7
   Insn 76(l0): point = 9
   Insn 75(l0): point = 11
   Insn 69(l0): point = 13
   Insn 97(l0): point = 15
   Insn 66(l0): point = 17
   Insn 73(l0): point = 19
   Insn 68(l0): point = 21
   Insn 74(l0): point = 23
   Insn 96(l0): point = 25
   Insn 61(l0): point = 27
   Insn 58(l0): point = 29
   Insn 102(l0): point = 31
   Insn 60(l0): point = 33
   Insn 54(l0): point = 36
   Insn 103(l0): point = 38
   Insn 53(l0): point = 40
   Insn 51(l0): point = 42
   Insn 50(l0): point = 44
   Insn 37(l0): point = 47
   Insn 21(l0): point = 49
   Insn 20(l0): point = 51
   Insn 24(l0): point = 53
   Insn 18(l0): point = 56
   Insn 17(l0): point = 58
   Insn 15(l0): point = 60
   Insn 14(l0): point = 62
   Insn 13(l0): point = 64
   Insn 9(l0): point = 67
   Insn 8(l0): point = 69
   Insn 6(l0): point = 71
   Insn 5(l0): point = 73
   Insn 94(l1): point = 76
   Insn 42(l1): point = 78
   Insn 41(l1): point = 80
   Insn 40(l1): point = 82
   Insn 35(l1): point = 85
   Insn 43(l1): point = 87
   Insn 34(l1): point = 89
   Insn 32(l1): point = 92
   Insn 39(l1): point = 94
   Insn 31(l1): point = 96
   Insn 29(l1): point = 98
   Insn 25(l1): point = 100
   Insn 28(l1): point = 102
   Insn 27(l1): point = 104
   Insn 92(l1): point = 106
 a0(r165): [4..5]
 a1(r160): [12..13]
 a2(r161): [12..25]
 a3(r159): [14..21]
 a4(r157): [14..17]
 a5(r135): [16..29]
 a6(r152): [30..31]
 a7(r150): [37..38]
 a8(r151): [37..40]
 a9(r168): [47..47]
 a10(r137): [47..49]
 a11(r138): [47..51]
 a12(r166): [47..53]
 a13(r142): [70..71]
 a14(r140): [72..73]
 a15(r137): [81..108] [76..78]
 a16(r138): [76..108]
 a17(r166): [76..108]
 a18(r168): [76..108]
 a19(r133): [79..80]
 Rebuilding regno allocno list for 133
Compressing live ranges: from 109 to 29 - 26%
Ranges after the compression:
 a0(r165): [0..1]
 a1(r160): [2..3]
 a2(r161): [2..8]
 a3(r159): [4..7]
 a4(r157): [4..6]
 a5(r135): [5..9]
 a6(r152): [10..11]
 a7(r150): [12..13]
 a8(r151): [12..14]
 a9(r168): [23..28] [15..15]
 a10(r137): [27..28] [23..24] [15..16]
 a11(r138): [23..28] [15..17]
 a12(r166): [23..28] [15..18]
 a13(r142): [19..20]
 a14(r140): [21..22]
 a19(r133): [25..26]
+++Allocating 112 bytes for conflict table (uncompressed size 160)
;; a0(r165,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a1(r160,l0) conflicts: a2(r161,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a2(r161,l0) conflicts: a1(r160,l0) a4(r157,l0) a3(r159,l0) a5(r135,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a3(r159,l0) conflicts: a2(r161,l0) a4(r157,l0) a5(r135,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a4(r157,l0) conflicts: a2(r161,l0) a3(r159,l0) a5(r135,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a5(r135,l0) conflicts: a2(r161,l0) a4(r157,l0) a3(r159,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a6(r152,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a7(r150,l0) conflicts: a8(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r151,l0) conflicts: a7(r150,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r168,l0) conflicts: a10(r137,l0) a11(r138,l0) a12(r166,l0) a19(r133,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a10(r137,l0) conflicts: a9(r168,l0) a11(r138,l0) a12(r166,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a11(r138,l0) conflicts: a9(r168,l0) a10(r137,l0) a12(r166,l0) a19(r133,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a12(r166,l0) conflicts: a9(r168,l0) a10(r137,l0) a11(r138,l0) a19(r133,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a13(r142,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r140,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r133,l0) conflicts: a9(r168,l0) a11(r138,l0) a12(r166,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r160)<->a3(r159)@125:shuffle
  cp1:a1(r160)<->a4(r157)@125:shuffle
  cp2:a10(r137)<->a19(r133)@250:shuffle
  regions=2, blocks=11, points=29
    allocnos=20, copies=3, conflicts=3, ranges=21

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r165 1r160 2r161 3r159 4r157 5r135 6r152 7r150 8r151 9r168 10r137 11r138 12r166 13r142 14r140 19r133
    modified regnos: 133 135 137 138 140 142 150 151 152 157 159 160 161 165 166 168
    border:
    Pressure: GENERAL_REGS=9
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 2 regs less
    Reg 161 of GENERAL_REGS has 2 regs less
    Reg 159 of GENERAL_REGS has 2 regs less
    Reg 157 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 5 regs less
    Reg 137 of GENERAL_REGS has 5 regs less
    Reg 138 of GENERAL_REGS has 5 regs less
    Reg 166 of GENERAL_REGS has 5 regs less
      Pushing a19(r133,l0)
      Pushing a14(r140,l0)
      Pushing a13(r142,l0)
      Pushing a8(r151,l0)
      Pushing a7(r150,l0)
      Pushing a6(r152,l0)
      Pushing a0(r165,l0)
      Pushing a4(r157,l0)
      Pushing a3(r159,l0)
      Pushing a1(r160,l0)
      Pushing a2(r161,l0)
      Pushing a5(r135,l0)
      Pushing a12(r166,l0)
      Pushing a9(r168,l0)
      Pushing a11(r138,l0)
      Pushing a10(r137,l0)
      Popping a10(r137,l0)  -- assign reg 4
      Popping a11(r138,l0)  -- assign reg 5
      Popping a9(r168,l0)  -- assign reg 6
      Popping a12(r166,l0)  -- assign reg 7
      Popping a5(r135,l0)  -- assign reg 4
      Popping a2(r161,l0)  -- assign reg 3
      Popping a1(r160,l0)  -- assign reg 2
      Popping a3(r159,l0)  -- assign reg 2
      Popping a4(r157,l0)  -- assign reg 12
      Popping a0(r165,l0)  -- assign reg 3
      Popping a6(r152,l0)  -- assign reg 3
      Popping a7(r150,l0)  -- assign reg 3
      Popping a8(r151,l0)  -- assign reg 2
      Popping a13(r142,l0)  -- assign reg 3
      Popping a14(r140,l0)  -- assign reg 3
      Popping a19(r133,l0)  -- assign reg 4
Disposition:
   19:r133 l0     4    5:r135 l0     4   10:r137 l0     4   11:r138 l0     5
   14:r140 l0     3   13:r142 l0     3    7:r150 l0     3    8:r151 l0     2
    6:r152 l0     3    4:r157 l0    12    3:r159 l0     2    1:r160 l0     2
    2:r161 l0     3    0:r165 l0     3   12:r166 l0     7    9:r168 l0     6
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 140
insn=6, live_throughout: 13, dead_or_set: 140, 142
insn=8, live_throughout: 13, dead_or_set: 142
insn=9, live_throughout: 13, dead_or_set: 
insn=13, live_throughout: 13, dead_or_set: 0
insn=14, live_throughout: 0, 13, dead_or_set: 1
insn=15, live_throughout: 13, dead_or_set: 0, 1, 14
insn=17, live_throughout: 13, dead_or_set: 0
insn=18, live_throughout: 13, dead_or_set: 
insn=24, live_throughout: 13, dead_or_set: 166
insn=20, live_throughout: 13, 166, dead_or_set: 138
insn=21, live_throughout: 13, 138, 166, dead_or_set: 137
insn=37, live_throughout: 13, 137, 138, 166, dead_or_set: 168
insn=44, live_throughout: 13, 137, 138, 166, 168, dead_or_set: 
insn=92, live_throughout: 13, 137, 138, 166, 168, dead_or_set: 1
insn=27, live_throughout: 1, 13, 137, 138, 166, 168, dead_or_set: 2
insn=28, live_throughout: 1, 2, 13, 137, 138, 166, 168, dead_or_set: 3
insn=25, live_throughout: 1, 2, 3, 13, 137, 138, 166, 168, dead_or_set: 0
insn=29, live_throughout: 13, 137, 138, 166, 168, dead_or_set: 0, 1, 2, 3, 14
insn=31, live_throughout: 13, 14, 137, 138, 166, 168, dead_or_set: 0
insn=39, live_throughout: 13, 14, 24, 137, 138, 166, 168, dead_or_set: 0
insn=32, live_throughout: 0, 13, 14, 137, 138, 166, 168, dead_or_set: 
insn=34, live_throughout: 0, 13, 137, 138, 166, 168, dead_or_set: 
insn=43, live_throughout: 0, 13, 24, 137, 166, 168, dead_or_set: 138
insn=35, live_throughout: 0, 13, 137, 138, 166, 168, dead_or_set: 
insn=40, live_throughout: 13, 137, 138, 166, 168, dead_or_set: 0, 14
insn=41, live_throughout: 13, 138, 166, 168, dead_or_set: 133, 137
insn=42, live_throughout: 13, 138, 166, 168, dead_or_set: 133, 137
insn=94, live_throughout: 13, 137, 138, 166, 168, dead_or_set: 
insn=47, live_throughout: 13, dead_or_set: 
insn=50, live_throughout: 13, dead_or_set: 0
insn=51, live_throughout: 13, dead_or_set: 0, 14
insn=53, live_throughout: 13, dead_or_set: 151
insn=103, live_throughout: 13, 151, dead_or_set: 150
insn=54, live_throughout: 13, dead_or_set: 150, 151
insn=55, live_throughout: 13, dead_or_set: 
insn=60, live_throughout: 13, dead_or_set: 0
insn=102, live_throughout: 0, 13, dead_or_set: 152
insn=58, live_throughout: 0, 13, dead_or_set: 135, 152
insn=61, live_throughout: 13, 135, dead_or_set: 0, 14
insn=96, live_throughout: 13, 135, dead_or_set: 161
insn=74, live_throughout: 13, 135, 161, dead_or_set: 1
insn=68, live_throughout: 1, 13, 135, 161, dead_or_set: 159
insn=73, live_throughout: 1, 13, 135, 159, 161, dead_or_set: 0
insn=66, live_throughout: 0, 1, 13, 135, 159, 161, dead_or_set: 157
insn=97, live_throughout: 0, 1, 13, 157, 159, dead_or_set: 135, 161
insn=69, live_throughout: 0, 1, 13, 161, dead_or_set: 157, 159, 160
insn=75, live_throughout: 0, 1, 13, dead_or_set: 2, 160, 161
insn=76, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=79, live_throughout: 13, dead_or_set: 0
insn=101, live_throughout: 0, 13, dead_or_set: 165
insn=80, live_throughout: 0, 13, dead_or_set: 1, 165
insn=81, live_throughout: 13, dead_or_set: 0, 1, 14
insn=87, live_throughout: 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 103 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 53 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 102 (nil))
init_insns for 165: (insn_list:REG_DEP_TRUE 101 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 37 (nil))
changing reg in insn 41
changing reg in insn 42
changing reg in insn 58
changing reg in insn 97
changing reg in insn 68
changing reg in insn 66
changing reg in insn 42
changing reg in insn 21
changing reg in insn 39
changing reg in insn 41
changing reg in insn 43
changing reg in insn 20
changing reg in insn 43
changing reg in insn 34
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 103
changing reg in insn 54
changing reg in insn 53
changing reg in insn 54
changing reg in insn 102
changing reg in insn 58
changing reg in insn 66
changing reg in insn 69
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 75
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 75
changing reg in insn 101
changing reg in insn 80
changing reg in insn 24
changing reg in insn 27
changing reg in insn 37
changing reg in insn 39
Spilling for insn 8.
Spilling for insn 54.

Reloads for insn # 8
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 54
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [150]) [0 ROOT_DEV+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [150]) [0 ROOT_DEV+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 81.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 17 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)


mount_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={12d,4u} r2={13d,5u} r3={17d,8u} r4={4d,6u} r5={2d,2u} r6={1d,1u} r7={1d,1u} r12={9d,1u} r13={1d,21u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,4u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 928{865d,63u,0e} in 50{43 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 2 5 2 NOTE_INSN_DELETED)

(insn 5 7 6 2 init/do_mounts.c:435 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 6 5 8 2 init/do_mounts.c:435 (set (reg:SI 3 r3 [orig:142 ROOT_DEV ] [142])
        (mem/c/i:SI (reg/f:SI 3 r3 [140]) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
        (nil)))

(insn 8 6 9 2 init/do_mounts.c:435 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (lshiftrt:SI (reg:SI 3 r3 [orig:142 ROOT_DEV ] [142])
                        (const_int 20 [0x14]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 119 {*shiftsi3_compare0_scratch} (nil))

(jump_insn 9 8 10 2 init/do_mounts.c:435 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 9)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 10 12 3 NOTE_INSN_DELETED)

(note 12 11 16 3 NOTE_INSN_DELETED)

(note 16 12 13 3 NOTE_INSN_DELETED)

(insn 13 16 14 3 init/do_mounts.c:374 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 3 init/do_mounts.c:374 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 17 3 init/do_mounts.c:374 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("nfs_root_data") [flags 0x41] <function_decl 0x11f60f00 nfs_root_data>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 15 18 3 init/do_mounts.c:375 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 3 init/do_mounts.c:375 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  8 [100.0%] 
;; Succ edge  4 [0.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  3 [0.0%]  (fallthru)
(note 19 18 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 19 20 4 init/do_mounts.c:385 (set (reg/f:SI 7 r7 [166])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 20 24 21 4 init/do_mounts.c:375 (set (reg/v:SI 5 r5 [orig:138 try ] [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 21 20 37 4 init/do_mounts.c:375 (set (reg/v:SI 4 r4 [orig:137 timeout ] [137])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))

(insn 37 21 44 4 include/linux/delay.h:52 (set (reg:SI 6 r6 [168])
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1000 [0x3e8])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 7) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (dfs_back)
(code_label 44 37 22 5 81 "" [1 uses])

(note 22 44 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 22 92 5 NOTE_INSN_DELETED)

(insn 92 30 27 5 init/do_mounts.c:385 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) 167 {*arm_movsi_insn} (nil))

(insn 27 92 28 5 init/do_mounts.c:385 (set (reg:SI 2 r2)
        (mem/c/i:SI (reg/f:SI 7 r7 [166]) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 28 27 25 5 init/do_mounts.c:385 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (reg/f:SI 13 sp) [0 root_data+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 25 28 29 5 init/do_mounts.c:385 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 root_dev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 25 31 5 init/do_mounts.c:385 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 31 29 39 5 init/do_mounts.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 39 31 32 5 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (mult:SI (reg:SI 6 r6 [168])
            (reg/v:SI 4 r4 [orig:137 timeout ] [137]))) 32 {*arm_mulsi3_v6} (nil))

(jump_insn 32 39 33 5 init/do_mounts.c:387 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [4.5%]  (loop_exit)
;; Succ edge  6 [95.5%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [95.5%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 43 6 init/do_mounts.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:138 try ] [138])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(insn 43 34 35 6 init/do_mounts.c:384 (set (reg/v:SI 5 r5 [orig:138 try ] [138])
        (plus:SI (reg/v:SI 5 r5 [orig:138 try ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 35 43 36 6 init/do_mounts.c:389 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1667 [0x683])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [16.7%]  (loop_exit)
;; Succ edge  7 [83.3%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  6 [83.3%]  (fallthru)
(note 36 35 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 38 36 40 7 NOTE_INSN_DELETED)

(call_insn 40 38 41 7 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 7 init/do_mounts.c:394 (set (reg/v:SI 4 r4 [orig:133 timeout.1213 ] [133])
        (ashift:SI (reg/v:SI 4 r4 [orig:137 timeout ] [137])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 42 41 94 7 init/do_mounts.c:394 (parallel [
            (set (reg/v:SI 4 r4 [orig:137 timeout ] [137])
                (umin:SI (reg/v:SI 4 r4 [orig:133 timeout.1213 ] [133])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(jump_insn 94 42 95 7 (set (pc)
        (label_ref 44)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (dfs_back)

(barrier 95 94 47)

;; Start of basic block ( 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [16.7%]  (loop_exit)
(code_label 47 95 48 8 79 "" [2 uses])

(note 48 47 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 48 51 8 init/do_mounts.c:439 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)
        (nil)))

(call_insn 51 50 53 8 init/do_mounts.c:439 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 53 51 103 8 init/do_mounts.c:440 (set (reg:SI 2 r2 [151])
        (const_int 2097152 [0x200000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2097152 [0x200000])
        (nil)))

(insn 103 53 54 8 init/do_mounts.c:440 (set (reg/f:SI 3 r3 [150])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 54 103 55 8 init/do_mounts.c:440 (set (mem/c/i:SI (reg/f:SI 3 r3 [150]) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 2 r2 [151])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2097152 [0x200000])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 78 "" [1 uses])

(note 56 55 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 62 56 63 9 NOTE_INSN_DELETED)

(note 63 62 67 9 NOTE_INSN_DELETED)

(note 67 63 71 9 NOTE_INSN_DELETED)

(note 71 67 72 9 NOTE_INSN_DELETED)

(note 72 71 60 9 NOTE_INSN_DELETED)

(insn 60 72 102 9 init/do_mounts.h:18 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 102 60 58 9 init/do_mounts.c:456 (set (reg/f:SI 3 r3 [152])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 58 102 61 9 init/do_mounts.c:456 (set (reg:SI 4 r4 [orig:135 ROOT_DEV.1211 ] [135])
        (mem/c/i:SI (reg/f:SI 3 r3 [152]) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
        (nil)))

(call_insn 61 58 96 9 init/do_mounts.h:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x12103280 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 96 61 74 9 init/do_mounts.h:19 (set (reg:SI 3 r3 [161])
        (const_int 1048320 [0xfff00])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1048320 [0xfff00])
        (nil)))

(insn 74 96 68 9 init/do_mounts.h:19 (set (reg:SI 1 r1)
        (const_int 24960 [0x6180])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 24960 [0x6180])
        (nil)))

(insn 68 74 73 9 init/do_mounts.h:19 (set (reg:SI 2 r2 [159])
        (and:SI (reg:SI 4 r4 [orig:135 ROOT_DEV.1211 ] [135])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 73 68 66 9 init/do_mounts.h:19 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 66 73 97 9 init/do_mounts.h:19 (set (reg:SI 12 ip [157])
        (lshiftrt:SI (reg:SI 4 r4 [orig:135 ROOT_DEV.1211 ] [135])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 97 66 69 9 init/do_mounts.h:19 (set (reg:SI 3 r3 [161])
        (and:SI (reg:SI 4 r4 [orig:135 ROOT_DEV.1211 ] [135])
            (reg:SI 3 r3 [161]))) 67 {*arm_andsi3_insn} (nil))

(insn 69 97 75 9 init/do_mounts.h:19 (set (reg:SI 2 r2 [160])
        (ior:SI (ashift:SI (reg:SI 12 ip [157])
                (const_int 8 [0x8]))
            (reg:SI 2 r2 [159]))) 270 {*arith_shiftsi} (nil))

(insn 75 69 76 9 init/do_mounts.h:19 (set (reg:SI 2 r2)
        (ior:SI (ashift:SI (reg:SI 3 r3 [161])
                (const_int 12 [0xc]))
            (reg:SI 2 r2 [160]))) 270 {*arith_shiftsi} (nil))

(call_insn 76 75 79 9 init/do_mounts.h:19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x12103100 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 79 76 101 9 init/do_mounts.c:457 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 101 79 80 9 init/do_mounts.c:457 (set (reg/f:SI 3 r3 [165])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 80 101 81 9 init/do_mounts.c:457 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 3 r3 [165]) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
        (nil)))

(call_insn 81 80 87 9 init/do_mounts.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 5) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  5 [4.5%]  (loop_exit)
(code_label 87 81 90 10 82 "" [1 uses])

(note 90 87 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 100 90 104 NOTE_INSN_DELETED)

(note 104 100 0 NOTE_INSN_DELETED)


;; Function name_to_dev_t (name_to_dev_t)[0:2707]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 85 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 94 (  2.1)
scanning new insn with uid = 358.
verify found no changes in insn with uid = 358.
deleting insn with uid = 263.
scanning new insn with uid = 359.
verify found no changes in insn with uid = 359.
deleting insn with uid = 246.
scanning new insn with uid = 360.
rescanning insn with uid = 360.
deleting insn with uid = 360.
deleting insn with uid = 245.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 85 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 94 (  2.1)

Pass 0 for finding allocno costs

    a46 (r237,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r237,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r236,l2) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r236,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r235,l2) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r235,l0) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r234,l3) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r234,l0) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r233,l3) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r233,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r230,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r227,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r226,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r224,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r217,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r216,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r215,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r208,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r206,l2) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r205,l2) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r201,l1) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r200,l1) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r173,l3) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r171,l3) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r149,l2) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r147,l2) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r145,l3) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r143,l3) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r138,l2) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r134,l3) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:130000
  a1(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r230,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r226,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a10(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a19(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a21(r236,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a26(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a27(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a31(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a35(r233,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a37(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r235,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r236,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a43(r206,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r205,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r149,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r237,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a48(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a49(r201,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r200,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a51(r134,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a52(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a53(r233,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a54(r234,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a55(r173,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a56(r171,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a57(r145,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r237: preferred GENERAL_REGS, alternative NO_REGS
    r236: preferred GENERAL_REGS, alternative NO_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:130000
  a1(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r230,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r226,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a10(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a19(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a21(r236,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a26(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a27(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a31(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a35(r233,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a37(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r235,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r236,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a43(r206,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r205,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r149,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r237,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a48(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a49(r201,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r200,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a51(r134,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a52(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a53(r233,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a54(r234,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a55(r173,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a56(r171,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a57(r145,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 314(l0): point = 0
   Insn 308(l0): point = 2
   Insn 301(l0): point = 5
   Insn 352(l0): point = 8
   Insn 296(l0): point = 10
   Insn 291(l0): point = 12
   Insn 355(l0): point = 14
   Insn 290(l0): point = 16
   Insn 294(l0): point = 18
   Insn 287(l0): point = 20
   Insn 354(l0): point = 22
   Insn 350(l0): point = 25
   Insn 282(l0): point = 27
   Insn 281(l0): point = 29
   Insn 280(l0): point = 31
   Insn 279(l0): point = 33
   Insn 277(l0): point = 35
   Insn 273(l0): point = 38
   Insn 272(l0): point = 40
   Insn 271(l0): point = 42
   Insn 268(l0): point = 45
   Insn 267(l0): point = 47
   Insn 265(l0): point = 49
   Insn 358(l0): point = 51
   Insn 264(l0): point = 53
   Insn 261(l0): point = 56
   Insn 260(l0): point = 58
   Insn 259(l0): point = 60
   Insn 257(l0): point = 62
   Insn 255(l0): point = 65
   Insn 254(l0): point = 67
   Insn 252(l0): point = 69
   Insn 248(l0): point = 71
   Insn 360(l0): point = 73
   Insn 359(l0): point = 75
   Insn 251(l0): point = 77
   Insn 250(l0): point = 79
   Insn 243(l0): point = 81
   Insn 242(l0): point = 83
   Insn 241(l0): point = 85
   Insn 240(l0): point = 87
   Insn 239(l0): point = 89
   Insn 237(l0): point = 92
   Insn 236(l0): point = 94
   Insn 234(l0): point = 97
   Insn 233(l0): point = 99
   Insn 232(l0): point = 101
   Insn 230(l0): point = 104
   Insn 229(l0): point = 106
   Insn 228(l0): point = 108
   Insn 214(l0): point = 111
   Insn 220(l0): point = 113
   Insn 345(l0): point = 116
   Insn 205(l0): point = 119
   Insn 204(l0): point = 121
   Insn 202(l0): point = 123
   Insn 200(l0): point = 125
   Insn 201(l0): point = 127
   Insn 199(l0): point = 129
   Insn 341(l0): point = 132
   Insn 183(l0): point = 134
   Insn 176(l0): point = 136
   Insn 174(l0): point = 138
   Insn 172(l0): point = 140
   Insn 173(l0): point = 142
   Insn 171(l0): point = 144
   Insn 169(l0): point = 147
   Insn 168(l0): point = 149
   Insn 165(l0): point = 151
   Insn 164(l0): point = 153
   Insn 339(l0): point = 156
   Insn 159(l0): point = 158
   Insn 157(l0): point = 161
   Insn 156(l0): point = 163
   Insn 153(l0): point = 165
   Insn 152(l0): point = 167
   Insn 151(l0): point = 169
   Insn 337(l0): point = 172
   Insn 145(l0): point = 174
   Insn 143(l0): point = 177
   Insn 142(l0): point = 179
   Insn 139(l0): point = 181
   Insn 137(l0): point = 183
   Insn 138(l0): point = 185
   Insn 135(l0): point = 187
   Insn 335(l0): point = 190
   Insn 129(l0): point = 193
   Insn 128(l0): point = 195
   Insn 127(l0): point = 197
   Insn 126(l0): point = 199
   Insn 125(l0): point = 201
   Insn 124(l0): point = 203
   Insn 123(l0): point = 205
   Insn 122(l0): point = 207
   Insn 121(l0): point = 209
   Insn 331(l0): point = 212
   Insn 114(l0): point = 215
   Insn 113(l0): point = 217
   Insn 112(l0): point = 219
   Insn 111(l0): point = 221
   Insn 109(l0): point = 224
   Insn 108(l0): point = 226
   Insn 106(l0): point = 228
   Insn 104(l0): point = 230
   Insn 103(l0): point = 232
   Insn 101(l0): point = 235
   Insn 100(l0): point = 237
   Insn 98(l0): point = 239
   Insn 97(l0): point = 241
   Insn 96(l0): point = 243
   Insn 95(l0): point = 245
   Insn 94(l0): point = 247
   Insn 89(l0): point = 250
   Insn 88(l0): point = 252
   Insn 85(l0): point = 254
   Insn 84(l0): point = 256
   Insn 83(l0): point = 258
   Insn 82(l0): point = 260
   Insn 328(l0): point = 263
   Insn 76(l0): point = 265
   Insn 74(l0): point = 267
   Insn 72(l0): point = 270
   Insn 71(l0): point = 272
   Insn 69(l0): point = 274
   Insn 68(l0): point = 276
   Insn 67(l0): point = 278
   Insn 66(l0): point = 280
   Insn 65(l0): point = 282
   Insn 45(l0): point = 285
   Insn 35(l0): point = 287
   Insn 25(l0): point = 289
   Insn 23(l0): point = 292
   Insn 22(l0): point = 294
   Insn 19(l0): point = 296
   Insn 18(l0): point = 298
   Insn 17(l0): point = 300
   Insn 15(l0): point = 303
   Insn 14(l0): point = 305
   Insn 11(l0): point = 307
   Insn 3(l0): point = 309
   Insn 10(l0): point = 311
   Insn 9(l0): point = 313
   Insn 225(l2): point = 316
   Insn 224(l2): point = 318
   Insn 222(l2): point = 320
   Insn 221(l2): point = 322
   Insn 216(l2): point = 325
   Insn 218(l2): point = 327
   Insn 215(l2): point = 329
   Insn 213(l2): point = 331
   Insn 348(l2): point = 334
   Insn 210(l2): point = 336
   Insn 197(l1): point = 339
   Insn 196(l1): point = 341
   Insn 194(l1): point = 343
   Insn 193(l1): point = 345
   Insn 190(l1): point = 348
   Insn 189(l1): point = 350
   Insn 188(l1): point = 352
   Insn 185(l1): point = 355
   Insn 181(l1): point = 358
   Insn 180(l1): point = 360
   Insn 60(l3): point = 363
   Insn 59(l3): point = 365
   Insn 54(l3): point = 368
   Insn 49(l3): point = 371
   Insn 48(l3): point = 373
   Insn 44(l3): point = 376
   Insn 57(l3): point = 378
   Insn 41(l3): point = 380
   Insn 39(l3): point = 382
   Insn 43(l3): point = 384
   Insn 46(l3): point = 386
   Insn 33(l3): point = 388
   Insn 42(l3): point = 390
   Insn 32(l3): point = 392
   Insn 30(l3): point = 394
   Insn 29(l3): point = 396
   Insn 28(l3): point = 398
 a0(r147): [263..267] [212..228] [172..174] [156..158] [92..121] [36..67] [25..27] [8..10] [3..5]
 a1(r227): [11..12]
 a2(r230): [11..18]
 a3(r226): [13..16]
 a4(r224): [13..22]
 a5(r223): [15..20]
 a6(r153): [193..201] [17..24]
 a7(r148): [32..81]
 a8(r208): [34..108]
 a9(r136): [36..62]
 a10(r219): [41..42]
 a11(r217): [48..49]
 a12(r216): [50..53]
 a13(r215): [50..51]
 a14(r214): [59..60]
 a15(r209): [72..73]
 a16(r210): [72..75]
 a17(r138): [90..110]
 a18(r137): [95..101]
 a19(r235): [111..111]
 a20(r202): [112..129]
 a21(r236): [111..113]
 a22(r139): [128..131]
 a23(r237): [132..134]
 a24(r196): [137..144]
 a25(r141): [177..187] [161..171] [143..155]
 a26(r161): [301..309] [235..262] [210..211] [188..189]
 a27(r190): [196..197]
 a28(r189): [198..199]
 a29(r186): [218..219]
 a30(r154): [218..230]
 a31(r187): [220..221]
 a32(r155): [227..232]
 a33(r142): [268..272]
 a34(r234): [285..285]
 a35(r233): [285..287]
 a36(r143): [285..289]
 a37(r163): [290..305]
 a38(r134): [285..300]
 a39(r147): [316..338]
 a40(r235): [316..338]
 a41(r236): [316..338]
 a42(r138): [316..331]
 a43(r206): [319..320]
 a44(r205): [321..322]
 a45(r149): [337..338] [316..327]
 a46(r237): [339..362]
 a47(r139): [361..362] [339..343]
 a48(r140): [356..362] [339..345]
 a49(r201): [349..350]
 a50(r200): [351..352]
 a51(r134): [363..400]
 a52(r143): [363..400]
 a53(r233): [363..400]
 a54(r234): [363..400]
 a55(r173): [374..386]
 a56(r171): [381..382]
 a57(r145): [383..394]
 Rebuilding regno allocno list for 206
 Rebuilding regno allocno list for 205
 Rebuilding regno allocno list for 201
 Rebuilding regno allocno list for 200
 Rebuilding regno allocno list for 173
 Rebuilding regno allocno list for 171
 Rebuilding regno allocno list for 149
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 140
Compressing live ranges: from 401 to 121 - 30%
Ranges after the compression:
 a0(r147): [94..102] [82..83] [71..77] [57..58] [53..54] [35..43] [18..29] [14..15] [2..3] [0..1]
 a1(r227): [4..5]
 a2(r230): [4..10]
 a3(r226): [6..8]
 a4(r224): [6..12]
 a5(r223): [7..11]
 a6(r153): [63..68] [9..13]
 a7(r148): [16..33]
 a8(r208): [17..38]
 a9(r136): [18..28]
 a10(r219): [19..20]
 a11(r217): [21..22]
 a12(r216): [23..25]
 a13(r215): [23..24]
 a14(r214): [26..27]
 a15(r209): [30..31]
 a16(r210): [30..32]
 a17(r138): [94..100] [34..39]
 a18(r137): [36..37]
 a19(r235): [94..102] [40..40]
 a20(r202): [41..45]
 a21(r236): [94..102] [40..42]
 a22(r139): [111..112] [103..104] [44..46]
 a23(r237): [103..112] [47..48]
 a24(r196): [49..51]
 a25(r141): [59..60] [55..56] [50..52]
 a26(r161): [91..93] [80..81] [69..70] [61..62]
 a27(r190): [64..65]
 a28(r189): [66..67]
 a29(r186): [72..73]
 a30(r154): [72..78]
 a31(r187): [74..75]
 a32(r155): [76..79]
 a33(r142): [84..85]
 a34(r234): [113..120] [86..86]
 a35(r233): [113..120] [86..87]
 a36(r143): [113..120] [86..88]
 a37(r163): [89..92]
 a38(r134): [113..120] [86..90]
 a43(r206): [95..96]
 a44(r205): [97..98]
 a45(r149): [101..102] [94..99]
 a48(r140): [110..112] [103..105]
 a49(r201): [106..107]
 a50(r200): [108..109]
 a55(r173): [114..118]
 a56(r171): [115..116]
 a57(r145): [117..119]
+++Allocating 384 bytes for conflict table (uncompressed size 464)
;; a0(r147,l0) conflicts: a7(r148,l0) a8(r208,l0) a9(r136,l0) a10(r219,l0) a11(r217,l0) a13(r215,l0) a12(r216,l0) a14(r214,l0) a17(r138,l0) a18(r137,l0) a19(r235,l0) a21(r236,l0) a20(r202,l0) a29(r186,l0) a30(r154,l0) a31(r187,l0) a32(r155,l0) a45(r149,l0) a43(r206,l0) a44(r205,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r227,l0) conflicts: a2(r230,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r230,l0) conflicts: a1(r227,l0) a3(r226,l0) a4(r224,l0) a5(r223,l0) a6(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r226,l0) conflicts: a2(r230,l0) a4(r224,l0) a5(r223,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r224,l0) conflicts: a2(r230,l0) a3(r226,l0) a5(r223,l0) a6(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r223,l0) conflicts: a2(r230,l0) a3(r226,l0) a4(r224,l0) a6(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r153,l0) conflicts: a2(r230,l0) a4(r224,l0) a5(r223,l0) a27(r190,l0) a28(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r148,l0) conflicts: a0(r147,l0) a8(r208,l0) a9(r136,l0) a10(r219,l0) a11(r217,l0) a13(r215,l0) a12(r216,l0) a14(r214,l0) a15(r209,l0) a16(r210,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r208,l0) conflicts: a0(r147,l0) a7(r148,l0) a9(r136,l0) a10(r219,l0) a11(r217,l0) a13(r215,l0) a12(r216,l0) a14(r214,l0) a15(r209,l0) a16(r210,l0) a17(r138,l0) a18(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a9(r136,l0) conflicts: a0(r147,l0) a7(r148,l0) a8(r208,l0) a10(r219,l0) a11(r217,l0) a13(r215,l0) a12(r216,l0) a14(r214,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r219,l0) conflicts: a0(r147,l0) a7(r148,l0) a8(r208,l0) a9(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r217,l0) conflicts: a0(r147,l0) a7(r148,l0) a8(r208,l0) a9(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r216,l0) conflicts: a0(r147,l0) a7(r148,l0) a8(r208,l0) a9(r136,l0) a13(r215,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r215,l0) conflicts: a0(r147,l0) a7(r148,l0) a8(r208,l0) a9(r136,l0) a12(r216,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r214,l0) conflicts: a0(r147,l0) a7(r148,l0) a8(r208,l0) a9(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r209,l0) conflicts: a7(r148,l0) a8(r208,l0) a16(r210,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a16(r210,l0) conflicts: a7(r148,l0) a8(r208,l0) a15(r209,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a17(r138,l0) conflicts: a0(r147,l0) a8(r208,l0) a18(r137,l0) a19(r235,l0) a21(r236,l0) a45(r149,l0) a43(r206,l0) a44(r205,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r137,l0) conflicts: a0(r147,l0) a8(r208,l0) a17(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r235,l0) conflicts: a0(r147,l0) a17(r138,l0) a21(r236,l0) a45(r149,l0) a43(r206,l0) a44(r205,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r202,l0) conflicts: a0(r147,l0) a21(r236,l0) a22(r139,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a21(r236,l0) conflicts: a0(r147,l0) a17(r138,l0) a19(r235,l0) a20(r202,l0) a45(r149,l0) a43(r206,l0) a44(r205,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r139,l0) conflicts: a20(r202,l0) a23(r237,l0) a48(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a23(r237,l0) conflicts: a22(r139,l0) a48(r140,l0) a49(r201,l0) a50(r200,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a24(r196,l0) conflicts: a25(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a25(r141,l0) conflicts: a24(r196,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a26(r161,l0) conflicts: a37(r163,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a27(r190,l0) conflicts: a6(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r189,l0) conflicts: a6(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a29(r186,l0) conflicts: a0(r147,l0) a30(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r154,l0) conflicts: a0(r147,l0) a29(r186,l0) a31(r187,l0) a32(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r187,l0) conflicts: a0(r147,l0) a30(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a32(r155,l0) conflicts: a0(r147,l0) a30(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a33(r142,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a34(r234,l0) conflicts: a35(r233,l0) a36(r143,l0) a38(r134,l0) a55(r173,l0) a56(r171,l0) a57(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a35(r233,l0) conflicts: a34(r234,l0) a36(r143,l0) a38(r134,l0) a55(r173,l0) a56(r171,l0) a57(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a36(r143,l0) conflicts: a34(r234,l0) a35(r233,l0) a38(r134,l0) a55(r173,l0) a56(r171,l0) a57(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a37(r163,l0) conflicts: a26(r161,l0) a38(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a38(r134,l0) conflicts: a34(r234,l0) a35(r233,l0) a36(r143,l0) a37(r163,l0) a55(r173,l0) a56(r171,l0) a57(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a43(r206,l0) conflicts: a0(r147,l0) a17(r138,l0) a19(r235,l0) a21(r236,l0) a45(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a44(r205,l0) conflicts: a0(r147,l0) a17(r138,l0) a19(r235,l0) a21(r236,l0) a45(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a45(r149,l0) conflicts: a0(r147,l0) a17(r138,l0) a19(r235,l0) a21(r236,l0) a43(r206,l0) a44(r205,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a48(r140,l0) conflicts: a22(r139,l0) a23(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a49(r201,l0) conflicts: a23(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a50(r200,l0) conflicts: a23(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a55(r173,l0) conflicts: a34(r234,l0) a35(r233,l0) a36(r143,l0) a38(r134,l0) a56(r171,l0) a57(r145,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a56(r171,l0) conflicts: a34(r234,l0) a35(r233,l0) a36(r143,l0) a38(r134,l0) a55(r173,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a57(r145,l0) conflicts: a34(r234,l0) a35(r233,l0) a36(r143,l0) a38(r134,l0) a55(r173,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a3(r226)<->a6(r153)@125:shuffle
  cp1:a1(r227)<->a4(r224)@125:shuffle
  cp2:a1(r227)<->a3(r226)@125:shuffle
  cp3:a0(r147)<->a1(r227)@125:shuffle
  cp4:a0(r147)<->a2(r230)@125:shuffle
  cp5:a19(r235)<->a20(r202)@1000:move
  cp6:a49(r201)<->a50(r200)@125:shuffle
  cp7:a25(r141)<->a26(r161)@125:shuffle
  cp8:a29(r186)<->a31(r187)@125:shuffle
  cp9:a56(r171)<->a57(r145)@125:shuffle
  cp10:a36(r143)<->a37(r163)@1000:move
  cp11:a26(r161)<->a38(r134)@125:shuffle
  regions=4, blocks=45, points=121
    allocnos=58, copies=12, conflicts=8, ranges=75

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 44 43 42 41 40 39 38 37 36 35 34 31 33 32 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r147 1r227 2r230 3r226 4r224 5r223 6r153 7r148 8r208 9r136 10r219 11r217 12r216 13r215 14r214 15r209 16r210 17r138 18r137 19r235 20r202 21r236 22r139 23r237 24r196 25r141 26r161 27r190 28r189 29r186 30r154 31r187 32r155 33r142 34r234 35r233 36r143 37r163 38r134 43r206 44r205 45r149 48r140 49r201 50r200 55r173 56r171 57r145
    modified regnos: 134 136 137 138 139 140 141 142 143 145 147 148 149 153 154 155 161 163 171 173 186 187 189 190 196 200 201 202 205 206 208 209 210 214 215 216 217 219 223 224 226 227 230 233 234 235 236 237
    border:
    Pressure: GENERAL_REGS=7
    Reg 147 of GENERAL_REGS has 2 regs less
    Reg 227 of GENERAL_REGS has 1 regs less
    Reg 230 of GENERAL_REGS has 1 regs less
    Reg 226 of GENERAL_REGS has 1 regs less
    Reg 224 of GENERAL_REGS has 1 regs less
    Reg 223 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 3 regs less
    Reg 208 of GENERAL_REGS has 4 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 217 of GENERAL_REGS has 1 regs less
    Reg 216 of GENERAL_REGS has 1 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 209 of GENERAL_REGS has 2 regs less
    Reg 210 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 235 of GENERAL_REGS has 1 regs less
    Reg 202 of GENERAL_REGS has 3 regs less
    Reg 236 of GENERAL_REGS has 1 regs less
    Reg 196 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 161 of GENERAL_REGS has 5 regs less
    Reg 190 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 187 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 234 of GENERAL_REGS has 2 regs less
    Reg 233 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 163 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 206 of GENERAL_REGS has 1 regs less
    Reg 205 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 173 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
      Pushing a56(r171,l0)
      Pushing a50(r200,l0)
      Pushing a49(r201,l0)
      Pushing a23(r237,l0)
      Pushing a48(r140,l0)
      Pushing a22(r139,l0)
      Pushing a55(r173,l0)
      Pushing a45(r149,l0)
      Pushing a44(r205,l0)
      Pushing a43(r206,l0)
      Pushing a31(r187,l0)
      Pushing a29(r186,l0)
      Pushing a28(r189,l0)
      Pushing a27(r190,l0)
      Pushing a21(r236,l0)
      Pushing a19(r235,l0)
      Pushing a14(r214,l0)
      Pushing a13(r215,l0)
      Pushing a12(r216,l0)
      Pushing a11(r217,l0)
      Pushing a10(r219,l0)
      Pushing a5(r223,l0)
      Pushing a3(r226,l0)
      Pushing a2(r230,l0)
      Pushing a1(r227,l0)
      Pushing a32(r155,l0)
      Pushing a30(r154,l0)
      Pushing a18(r137,l0)
      Pushing a6(r153,l0)
      Pushing a4(r224,l0)
      Pushing a9(r136,l0)
      Pushing a17(r138,l0)
      Pushing a57(r145,l0)
      Pushing a37(r163,l0)
      Pushing a35(r233,l0)
      Pushing a34(r234,l0)
      Pushing a33(r142,l0)
      Pushing a16(r210,l0)
      Pushing a15(r209,l0)
      Pushing a36(r143,l0)
      Pushing a38(r134,l0)
      Pushing a0(r147,l0)
      Pushing a24(r196,l0)
      Pushing a20(r202,l0)
      Pushing a7(r148,l0)
      Pushing a25(r141,l0)
      Pushing a8(r208,l0)
      Pushing a26(r161,l0)
      Popping a26(r161,l0)  -- assign reg 4
      Popping a8(r208,l0)  -- assign reg 4
      Popping a25(r141,l0)  -- assign reg 4
      Popping a7(r148,l0)  -- assign reg 5
      Popping a20(r202,l0)  -- assign reg 4
      Popping a24(r196,l0)  -- assign reg 5
      Popping a0(r147,l0)  -- assign reg 6
      Popping a38(r134,l0)  -- assign reg 4
      Popping a36(r143,l0)  -- assign reg 5
      Popping a15(r209,l0)  -- assign reg 3
      Popping a16(r210,l0)  -- assign reg 2
      Popping a33(r142,l0)  -- assign reg 3
      Popping a34(r234,l0)  -- assign reg 6
      Popping a35(r233,l0)  -- assign reg 7
      Popping a37(r163,l0)  -- assign reg 5
      Popping a57(r145,l0)  -- assign reg 8
      Popping a17(r138,l0)  -- assign reg 0
      Popping a9(r136,l0)  -- assign reg 3
      Popping a4(r224,l0)  -- assign reg 3
      Popping a6(r153,l0)  -- assign reg 0
      Popping a18(r137,l0)  -- assign reg 3
      Popping a30(r154,l0)  -- assign reg 3
      Popping a32(r155,l0)  -- assign reg 2
      Popping a1(r227,l0)  -- assign reg 3
      Popping a2(r230,l0)  -- assign reg 6
      Popping a3(r226,l0)  -- assign reg 0
      Popping a5(r223,l0)  -- assign reg 2
      Popping a10(r219,l0)  -- assign reg 2
      Popping a11(r217,l0)  -- assign reg 2
      Popping a12(r216,l0)  -- assign reg 2
      Popping a13(r215,l0)  -- assign reg 1
      Popping a14(r214,l0)  -- assign reg 2
      Popping a19(r235,l0)  -- assign reg 4
      Popping a21(r236,l0)  -- assign reg 3
      Popping a27(r190,l0)  -- assign reg 3
      Popping a28(r189,l0)  -- assign reg 3
      Popping a29(r186,l0)  -- assign reg 2
      Popping a31(r187,l0)  -- assign reg 2
      Popping a43(r206,l0)  -- assign reg 2
      Popping a44(r205,l0)  -- assign reg 2
      Popping a45(r149,l0)  -- assign reg 1
      Popping a55(r173,l0)  -- assign reg 3
      Popping a22(r139,l0)  -- assign reg 1
      Popping a48(r140,l0)  -- assign reg 3
      Popping a23(r237,l0)  -- assign reg 2
      Popping a49(r201,l0)  -- assign reg 3
      Popping a50(r200,l0)  -- assign reg 3
      Popping a56(r171,l0)  -- assign reg 0
Disposition:
   38:r134 l0     4    9:r136 l0     3   18:r137 l0     3   17:r138 l0     0
   22:r139 l0     1   48:r140 l0     3   25:r141 l0     4   33:r142 l0     3
   36:r143 l0     5   57:r145 l0     8    0:r147 l0     6    7:r148 l0     5
   45:r149 l0     1    6:r153 l0     0   30:r154 l0     3   32:r155 l0     2
   26:r161 l0     4   37:r163 l0     5   56:r171 l0     0   55:r173 l0     3
   29:r186 l0     2   31:r187 l0     2   28:r189 l0     3   27:r190 l0     3
   24:r196 l0     5   50:r200 l0     3   49:r201 l0     3   20:r202 l0     4
   44:r205 l0     2   43:r206 l0     2    8:r208 l0     4   15:r209 l0     3
   16:r210 l0     2   14:r214 l0     2   13:r215 l0     1   12:r216 l0     2
   11:r217 l0     2   10:r219 l0     2    5:r223 l0     2    4:r224 l0     3
    3:r226 l0     0    1:r227 l0     3    2:r230 l0     6   35:r233 l0     7
   34:r234 l0     6   19:r235 l0     4   21:r236 l0     3   23:r237 l0     2
New iteration of spill/restore move
+++Costs: overall -12250, reg -12250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 0, 13, dead_or_set: 1
insn=10, live_throughout: 0, 1, 13, dead_or_set: 2
insn=3, live_throughout: 0, 1, 2, 13, dead_or_set: 161
insn=11, live_throughout: 13, 161, dead_or_set: 0, 1, 2, 14
insn=14, live_throughout: 13, 161, dead_or_set: 0, 163
insn=15, live_throughout: 13, 161, 163, dead_or_set: 
insn=17, live_throughout: 13, 163, dead_or_set: 134, 161
insn=18, live_throughout: 13, 134, 163, dead_or_set: 0
insn=19, live_throughout: 13, 134, 163, dead_or_set: 0, 14
insn=22, live_throughout: 13, 14, 134, 163, dead_or_set: 0
insn=23, live_throughout: 13, 14, 134, 163, dead_or_set: 
insn=25, live_throughout: 13, 134, dead_or_set: 143, 163
insn=35, live_throughout: 13, 134, 143, dead_or_set: 233
insn=45, live_throughout: 13, 134, 143, 233, dead_or_set: 234
insn=58, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 
insn=28, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 0
insn=29, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 0, 14
insn=30, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 0, 145
insn=32, live_throughout: 13, 134, 143, 145, 233, 234, dead_or_set: 0
insn=42, live_throughout: 0, 13, 143, 145, 233, 234, dead_or_set: 134
insn=33, live_throughout: 13, 134, 143, 145, 233, 234, dead_or_set: 0, 14
insn=46, live_throughout: 0, 13, 134, 143, 145, 233, 234, dead_or_set: 173
insn=43, live_throughout: 0, 13, 134, 143, 145, 173, 233, 234, dead_or_set: 
insn=39, live_throughout: 13, 24, 134, 143, 173, 233, 234, dead_or_set: 0, 145, 171
insn=41, live_throughout: 13, 24, 134, 143, 173, 233, 234, dead_or_set: 171
insn=57, live_throughout: 13, 24, 134, 173, 233, 234, dead_or_set: 143
insn=44, live_throughout: 13, 134, 143, 173, 233, 234, dead_or_set: 
insn=48, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 173
insn=49, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 
insn=52, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 
insn=54, live_throughout: 13, 143, 233, 234, dead_or_set: 134
insn=55, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 
insn=59, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 
insn=60, live_throughout: 13, 134, 143, 233, 234, dead_or_set: 
insn=65, live_throughout: 13, dead_or_set: 0
insn=66, live_throughout: 0, 13, dead_or_set: 1
insn=67, live_throughout: 0, 1, 13, dead_or_set: 2
insn=68, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=69, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=71, live_throughout: 0, 13, 14, dead_or_set: 142
insn=72, live_throughout: 0, 13, 14, 142, dead_or_set: 
insn=74, live_throughout: 0, 13, dead_or_set: 142, 147
insn=76, live_throughout: 13, 147, dead_or_set: 0, 14
insn=328, live_throughout: 13, 14, 147, dead_or_set: 
insn=79, live_throughout: 13, 161, dead_or_set: 
insn=82, live_throughout: 13, 161, dead_or_set: 0
insn=83, live_throughout: 0, 13, 161, dead_or_set: 1
insn=84, live_throughout: 0, 1, 13, 161, dead_or_set: 2
insn=85, live_throughout: 13, 161, dead_or_set: 0, 1, 2, 14
insn=88, live_throughout: 13, 161, dead_or_set: 0
insn=89, live_throughout: 13, 161, dead_or_set: 
insn=94, live_throughout: 13, 161, dead_or_set: 0
insn=95, live_throughout: 0, 13, 161, dead_or_set: 1
insn=96, live_throughout: 0, 1, 13, 161, dead_or_set: 2
insn=97, live_throughout: 0, 1, 2, 13, 161, dead_or_set: 3
insn=98, live_throughout: 13, 161, dead_or_set: 0, 1, 2, 3, 14
insn=100, live_throughout: 13, 14, 161, dead_or_set: 0
insn=101, live_throughout: 13, 14, 161, dead_or_set: 
insn=103, live_throughout: 13, 14, dead_or_set: 155
insn=104, live_throughout: 13, 14, 155, dead_or_set: 154
insn=106, live_throughout: 13, 14, 154, 155, dead_or_set: 147
insn=108, live_throughout: 13, 14, 147, 154, dead_or_set: 155
insn=109, live_throughout: 13, 14, 147, 154, dead_or_set: 
insn=111, live_throughout: 13, 14, 147, 154, dead_or_set: 187
insn=112, live_throughout: 13, 14, 147, 154, dead_or_set: 186, 187
insn=113, live_throughout: 13, 14, 147, dead_or_set: 154, 186
insn=114, live_throughout: 13, 14, 147, dead_or_set: 
insn=331, live_throughout: 13, 14, 147, dead_or_set: 
insn=118, live_throughout: 13, 161, dead_or_set: 
insn=121, live_throughout: 13, dead_or_set: 0, 161
insn=122, live_throughout: 0, 13, dead_or_set: 1
insn=123, live_throughout: 0, 1, 13, dead_or_set: 2
insn=124, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=125, live_throughout: 13, 14, dead_or_set: 0, 153
insn=126, live_throughout: 13, 14, 153, dead_or_set: 189
insn=127, live_throughout: 13, 14, 153, dead_or_set: 189, 190
insn=128, live_throughout: 13, 14, 153, dead_or_set: 190
insn=129, live_throughout: 13, 14, 153, dead_or_set: 
insn=335, live_throughout: 13, 14, dead_or_set: 
insn=133, live_throughout: 13, 161, dead_or_set: 
insn=135, live_throughout: 13, dead_or_set: 141, 161
insn=138, live_throughout: 13, 141, dead_or_set: 1
insn=137, live_throughout: 1, 13, 141, dead_or_set: 0
insn=139, live_throughout: 13, 141, dead_or_set: 0, 1, 14
insn=142, live_throughout: 13, 14, 141, dead_or_set: 0
insn=143, live_throughout: 13, 14, 141, dead_or_set: 
insn=145, live_throughout: 13, 14, dead_or_set: 147
insn=337, live_throughout: 13, 14, 147, dead_or_set: 
insn=148, live_throughout: 13, 141, dead_or_set: 
insn=151, live_throughout: 13, 141, dead_or_set: 0
insn=152, live_throughout: 0, 13, 141, dead_or_set: 1
insn=153, live_throughout: 13, 141, dead_or_set: 0, 1, 14
insn=156, live_throughout: 13, 14, 141, dead_or_set: 0
insn=157, live_throughout: 13, 14, 141, dead_or_set: 
insn=159, live_throughout: 13, 14, dead_or_set: 147
insn=339, live_throughout: 13, 14, 147, dead_or_set: 
insn=162, live_throughout: 13, 141, dead_or_set: 
insn=164, live_throughout: 13, 141, dead_or_set: 0
insn=165, live_throughout: 13, 141, dead_or_set: 0, 14
insn=168, live_throughout: 13, 14, 141, dead_or_set: 0
insn=169, live_throughout: 13, 14, 141, dead_or_set: 
insn=171, live_throughout: 13, 141, dead_or_set: 196
insn=173, live_throughout: 13, 196, dead_or_set: 1, 141
insn=172, live_throughout: 1, 13, 196, dead_or_set: 0
insn=174, live_throughout: 13, 196, dead_or_set: 0, 1, 14
insn=176, live_throughout: 13, dead_or_set: 196
insn=183, live_throughout: 13, dead_or_set: 237
insn=341, live_throughout: 13, 237, dead_or_set: 
insn=195, live_throughout: 13, 139, 140, 237, dead_or_set: 
insn=180, live_throughout: 13, 140, 237, dead_or_set: 139
insn=181, live_throughout: 13, 140, 237, dead_or_set: 
insn=185, live_throughout: 13, 237, dead_or_set: 140
insn=186, live_throughout: 13, 237, dead_or_set: 
insn=188, live_throughout: 13, 237, dead_or_set: 200
insn=189, live_throughout: 13, 237, dead_or_set: 200, 201
insn=190, live_throughout: 13, 237, dead_or_set: 201
insn=191, live_throughout: 13, 237, dead_or_set: 
insn=193, live_throughout: 13, 237, dead_or_set: 140
insn=194, live_throughout: 13, 140, 237, dead_or_set: 139
insn=196, live_throughout: 13, 139, 140, 237, dead_or_set: 
insn=197, live_throughout: 13, 139, 140, 237, dead_or_set: 
insn=199, live_throughout: 13, 139, dead_or_set: 202
insn=201, live_throughout: 13, 202, dead_or_set: 1, 139
insn=200, live_throughout: 1, 13, 202, dead_or_set: 0
insn=202, live_throughout: 13, 202, dead_or_set: 0, 1, 14
insn=204, live_throughout: 13, 14, 202, dead_or_set: 0, 147
insn=205, live_throughout: 13, 14, 147, 202, dead_or_set: 
insn=345, live_throughout: 13, 14, 147, 202, dead_or_set: 
insn=219, live_throughout: 13, 14, 147, 149, 235, 236, dead_or_set: 
insn=210, live_throughout: 13, 14, 147, 235, 236, dead_or_set: 149
insn=348, live_throughout: 13, 14, 147, 235, 236, dead_or_set: 
insn=344, live_throughout: 13, 14, 147, 202, dead_or_set: 
insn=220, live_throughout: 13, 14, 147, 202, dead_or_set: 236
insn=214, live_throughout: 13, 14, 147, 236, dead_or_set: 202, 235
insn=347, live_throughout: 13, 14, 147, 235, 236, dead_or_set: 
insn=213, live_throughout: 13, 14, 147, 235, 236, dead_or_set: 138
insn=215, live_throughout: 13, 14, 138, 147, 235, 236, dead_or_set: 
insn=218, live_throughout: 13, 14, 24, 138, 147, 235, 236, dead_or_set: 149
insn=216, live_throughout: 13, 14, 138, 147, 149, 235, 236, dead_or_set: 
insn=221, live_throughout: 13, 14, 138, 147, 149, 235, 236, dead_or_set: 205
insn=222, live_throughout: 13, 14, 138, 147, 149, 235, 236, dead_or_set: 205, 206
insn=224, live_throughout: 13, 14, 138, 147, 149, 235, 236, dead_or_set: 206
insn=225, live_throughout: 13, 14, 138, 147, 149, 235, 236, dead_or_set: 
insn=226, live_throughout: 13, 14, 138, 147, dead_or_set: 
insn=228, live_throughout: 13, 14, 138, 147, dead_or_set: 208
insn=229, live_throughout: 13, 14, 138, 147, 208, dead_or_set: 
insn=230, live_throughout: 13, 14, 138, 147, 208, dead_or_set: 
insn=232, live_throughout: 13, 14, 138, 147, 208, dead_or_set: 137
insn=233, live_throughout: 13, 14, 137, 138, 147, 208, dead_or_set: 
insn=234, live_throughout: 13, 14, 137, 138, 147, 208, dead_or_set: 
insn=236, live_throughout: 13, 14, 138, 147, 208, dead_or_set: 137
insn=237, live_throughout: 13, 14, 138, 147, 208, dead_or_set: 
insn=239, live_throughout: 13, 208, dead_or_set: 0, 138
insn=240, live_throughout: 0, 13, 208, dead_or_set: 1
insn=241, live_throughout: 0, 1, 13, 208, dead_or_set: 2
insn=242, live_throughout: 13, 208, dead_or_set: 0, 1, 2, 14
insn=243, live_throughout: 13, 208, dead_or_set: 0, 148
insn=250, live_throughout: 13, 148, 208, dead_or_set: 0
insn=251, live_throughout: 0, 13, 148, 208, dead_or_set: 1
insn=359, live_throughout: 0, 1, 13, 148, 208, dead_or_set: 210
insn=360, live_throughout: 0, 1, 13, 148, 208, 210, dead_or_set: 209
insn=248, live_throughout: 0, 1, 13, 148, 208, dead_or_set: 209, 210
insn=252, live_throughout: 13, 148, 208, dead_or_set: 0, 1, 14
insn=254, live_throughout: 13, 14, 148, 208, dead_or_set: 0, 147
insn=255, live_throughout: 13, 14, 147, 148, 208, dead_or_set: 
insn=257, live_throughout: 13, 14, 147, 148, 208, dead_or_set: 136
insn=259, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 214
insn=260, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 214
insn=261, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 
insn=264, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 216
insn=358, live_throughout: 13, 14, 136, 147, 148, 208, 216, dead_or_set: 215
insn=265, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 215, 216, 217
insn=267, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 217
insn=268, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 
insn=271, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 219
insn=272, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 219
insn=273, live_throughout: 13, 14, 136, 147, 148, 208, dead_or_set: 
insn=277, live_throughout: 13, 148, 208, dead_or_set: 136, 147
insn=279, live_throughout: 13, 148, dead_or_set: 0, 208
insn=280, live_throughout: 0, 13, dead_or_set: 1, 148
insn=281, live_throughout: 13, dead_or_set: 0, 1, 14
insn=282, live_throughout: 13, 14, dead_or_set: 0, 147
insn=350, live_throughout: 13, 14, 147, dead_or_set: 
insn=333, live_throughout: 13, 14, 153, dead_or_set: 
insn=354, live_throughout: 13, 14, 153, dead_or_set: 224
insn=287, live_throughout: 13, 14, 153, 224, dead_or_set: 223
insn=294, live_throughout: 13, 14, 153, 223, 224, dead_or_set: 230
insn=290, live_throughout: 13, 14, 223, 224, 230, dead_or_set: 153, 226
insn=355, live_throughout: 13, 14, 226, 230, dead_or_set: 223, 224
insn=291, live_throughout: 13, 14, 230, dead_or_set: 224, 226, 227
insn=296, live_throughout: 13, 14, dead_or_set: 147, 227, 230
insn=352, live_throughout: 13, 14, 147, dead_or_set: 
insn=299, live_throughout: 13, 14, dead_or_set: 
insn=301, live_throughout: 13, 14, dead_or_set: 147
insn=302, live_throughout: 13, 14, 147, dead_or_set: 
insn=308, live_throughout: 13, 14, dead_or_set: 0, 147
insn=314, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 155: (insn_list:REG_DEP_TRUE 103 (nil))
init_insns for 189: (insn_list:REG_DEP_TRUE 126 (nil))
init_insns for 196: (insn_list:REG_DEP_TRUE 171 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 188 (nil))
init_insns for 201: (insn_list:REG_DEP_TRUE 190 (nil))
init_insns for 202: (insn_list:REG_DEP_TRUE 199 (nil))
init_insns for 208: (insn_list:REG_DEP_TRUE 228 (nil))
init_insns for 209: (insn_list:REG_DEP_TRUE 360 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 359 (nil))
init_insns for 215: (insn_list:REG_DEP_TRUE 358 (nil))
init_insns for 233: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 234: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 235: (insn_list:REG_DEP_TRUE 214 (nil))
init_insns for 236: (insn_list:REG_DEP_TRUE 220 (nil))
init_insns for 237: (insn_list:REG_DEP_TRUE 183 (nil))
changing reg in insn 54
changing reg in insn 42
changing reg in insn 17
changing reg in insn 32
changing reg in insn 28
changing reg in insn 54
changing reg in insn 42
changing reg in insn 18
changing reg in insn 257
changing reg in insn 277
changing reg in insn 271
changing reg in insn 264
changing reg in insn 260
changing reg in insn 232
changing reg in insn 236
changing reg in insn 233
changing reg in insn 213
changing reg in insn 221
changing reg in insn 215
changing reg in insn 239
changing reg in insn 232
changing reg in insn 229
changing reg in insn 218
changing reg in insn 194
changing reg in insn 201
changing reg in insn 196
changing reg in insn 180
changing reg in insn 193
changing reg in insn 185
changing reg in insn 194
changing reg in insn 135
changing reg in insn 173
changing reg in insn 164
changing reg in insn 151
changing reg in insn 137
changing reg in insn 71
changing reg in insn 74
changing reg in insn 25
changing reg in insn 57
changing reg in insn 46
changing reg in insn 41
changing reg in insn 59
changing reg in insn 57
changing reg in insn 43
changing reg in insn 46
changing reg in insn 30
changing reg in insn 39
changing reg in insn 296
changing reg in insn 254
changing reg in insn 204
changing reg in insn 106
changing reg in insn 301
changing reg in insn 282
changing reg in insn 159
changing reg in insn 145
changing reg in insn 74
changing reg in insn 108
changing reg in insn 308
changing reg in insn 111
changing reg in insn 112
changing reg in insn 243
changing reg in insn 280
changing reg in insn 251
changing reg in insn 218
changing reg in insn 210
changing reg in insn 125
changing reg in insn 294
changing reg in insn 290
changing reg in insn 287
changing reg in insn 104
changing reg in insn 106
changing reg in insn 113
changing reg in insn 103
changing reg in insn 108
changing reg in insn 106
changing reg in insn 3
changing reg in insn 135
changing reg in insn 121
changing reg in insn 94
changing reg in insn 82
changing reg in insn 17
changing reg in insn 14
changing reg in insn 25
changing reg in insn 39
changing reg in insn 46
changing reg in insn 48
changing reg in insn 112
changing reg in insn 113
changing reg in insn 111
changing reg in insn 112
changing reg in insn 126
changing reg in insn 127
changing reg in insn 127
changing reg in insn 128
changing reg in insn 171
changing reg in insn 176
changing reg in insn 172
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 199
changing reg in insn 214
changing reg in insn 200
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 222
changing reg in insn 224
changing reg in insn 228
changing reg in insn 279
changing reg in insn 259
changing reg in insn 250
changing reg in insn 229
changing reg in insn 360
changing reg in insn 248
changing reg in insn 359
changing reg in insn 259
changing reg in insn 260
changing reg in insn 358
changing reg in insn 265
changing reg in insn 264
changing reg in insn 265
changing reg in insn 265
changing reg in insn 265
changing reg in insn 267
changing reg in insn 271
changing reg in insn 272
changing reg in insn 287
changing reg in insn 355
changing reg in insn 355
changing reg in insn 354
changing reg in insn 355
changing reg in insn 291
changing reg in insn 290
changing reg in insn 291
changing reg in insn 291
changing reg in insn 296
changing reg in insn 294
changing reg in insn 296
changing reg in insn 35
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 214
changing reg in insn 215
changing reg in insn 220
changing reg in insn 222
changing reg in insn 183
Spilling for insn 41.
Spilling for insn 176.
Spilling for insn 185.
Spilling for insn 190.
Spilling for insn 210.
Spilling for insn 248.
Spilling for insn 277.

Reloads for insn # 41
Reload 0: reload_out (QI) = (mem:QI (plus:SI (reg/f:SI 7 r7 [233])
                                                        (reg/v:SI 5 r5 [orig:143 i ] [143])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:SI (reg/f:SI 7 r7 [233])
                                                        (reg/v:SI 5 r5 [orig:143 i ] [143])) [0 S1 A8])

Reloads for insn # 176
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 60 [0x3c])) [0 p+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 60 [0x3c])) [0 p+0 S4 A32])

Reloads for insn # 185
Reload 0: reload_out (QI) = (mem:QI (reg/f:SI 3 r3 [orig:140 p.1247 ] [140]) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (reg/f:SI 3 r3 [orig:140 p.1247 ] [140]) [0 S1 A8])

Reloads for insn # 190
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 60 [0x3c])) [0 p+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 60 [0x3c])) [0 p+0 S4 A32])

Reloads for insn # 210
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 60 [0x3c])) [0 p+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 60 [0x3c])) [0 p+0 S4 A32])

Reloads for insn # 248
Reload 0: reload_out (QI) = (mem:QI (reg/f:SI 3 r3 [orig:209 p ] [209]) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (reg/f:SI 3 r3 [orig:209 p ] [209]) [0 S1 A8])

Reloads for insn # 277
Reload 0: reload_out (QI) = (mem:QI (plus:SI (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
                                                        (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:QI (plus:SI (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
                                                        (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
deleting insn with uid = 25.
deleting insn with uid = 125.
deleting insn with uid = 201.
deleting insn with uid = 214.
deleting insn with uid = 239.


try_optimize_cfg iteration 1

deleting insn with uid = 52.
Deleted label in block 7.
Forwarding edge 14->15 to 44 failed.
Forwarding edge 16->17 to 43 failed.
Forwarding edge 28->29 to 31 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 76.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 124.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 165.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 202.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 252.
verify found no changes in insn with uid = 281.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 85 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 94 (  2.1)


name_to_dev_t

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={36d,48u} r1={32d,16u} r2={36d,19u,2d} r3={35d,23u} r4={7d,20u} r5={4d,9u,1d} r6={11d,6u,1d} r7={1d,1u} r8={1d,1u} r12={18d} r13={1d,80u,8d} r14={18d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={43d,26u} r25={5d} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} 
;;    total ref usage 2380{2113d,250u,17e} in 174{157 regular + 17 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 4 9 2 NOTE_INSN_DELETED)

(insn 9 12 10 2 init/do_mounts.c:144 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)
        (nil)))

(insn 10 9 3 2 init/do_mounts.c:144 (set (reg:SI 2 r2)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(insn 3 10 11 2 init/do_mounts.c:137 (set (reg/v/f:SI 4 r4 [orig:161 name ] [161])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 11 3 14 2 init/do_mounts.c:144 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 14 11 15 2 init/do_mounts.c:144 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 5 r5 [163])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 15 14 16 2 init/do_mounts.c:144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 11)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 20 16 17 3 NOTE_INSN_DELETED)

(insn 17 20 18 3 init/do_mounts.c:145 (set (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])
        (plus:SI (reg/v/f:SI 4 r4 [orig:161 name ] [161])
            (const_int 9 [0x9]))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 3 init/do_mounts.c:146 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 19 18 22 3 init/do_mounts.c:146 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 22 19 23 3 init/do_mounts.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 36 [0x24]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 3 init/do_mounts.c:146 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 3 -> ( 43 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  43 [62.2%] 
;; Succ edge  4 [37.8%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  3 [37.8%]  (fallthru)
(note 24 23 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 24 45 4 include/linux/genhd.h:210 (set (reg/f:SI 7 r7 [233])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 36 [0x24]))
        (nil)))

(insn 45 35 58 4 include/linux/genhd.h:213 (set (reg:SI 6 r6 [234])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 8) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  8 [93.8%]  (dfs_back)
(code_label 58 45 26 5 90 "" [1 uses])

(note 26 58 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 26 31 5 NOTE_INSN_DELETED)

(note 31 27 34 5 NOTE_INSN_DELETED)

(note 34 31 36 5 NOTE_INSN_DELETED)

(note 36 34 28 5 NOTE_INSN_DELETED)

(insn 28 36 29 5 include/linux/genhd.h:210 (set (reg:SI 0 r0)
        (zero_extend:SI (mem:QI (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(call_insn 29 28 30 5 include/linux/genhd.h:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 32 5 include/linux/genhd.h:210 (set (reg:SI 8 r8 [orig:145 D.53098 ] [145])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 32 30 42 5 include/linux/genhd.h:211 (set (reg:SI 0 r0)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])
                    (const_int 1 [0x1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 42 32 33 5 include/linux/genhd.h:212 (set (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])
        (plus:SI (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(call_insn 33 42 46 5 include/linux/genhd.h:211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 46 33 43 5 include/linux/genhd.h:213 (set (reg:SI 3 r3 [173])
        (ashift:SI (reg:SI 6 r6 [234])
            (reg/v:SI 5 r5 [orig:143 i ] [143]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg/v:SI 5 r5 [orig:143 i ] [143]))
        (nil)))

(insn 43 46 39 5 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:143 i ] [143])
            (const_int 9 [0x9]))) 219 {*arm_cmpsi_insn} (nil))

(insn 39 43 41 5 include/linux/genhd.h:210 (set (reg:SI 0 r0 [171])
        (ior:SI (ashift:SI (reg:SI 8 r8 [orig:145 D.53098 ] [145])
                (const_int 4 [0x4]))
            (reg:SI 0 r0))) 270 {*arith_shiftsi} (nil))

(insn 41 39 57 5 include/linux/genhd.h:210 (set (mem:QI (plus:SI (reg/f:SI 7 r7 [233])
                (reg/v:SI 5 r5 [orig:143 i ] [143])) [0 S1 A8])
        (reg:QI 0 r0 [171])) 178 {*arm_movqi_insn} (nil))

(insn 57 41 44 5 include/linux/genhd.h:209 (set (reg/v:SI 5 r5 [orig:143 i ] [143])
        (plus:SI (reg/v:SI 5 r5 [orig:143 i ] [143])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 44 57 316 5 include/linux/genhd.h:213 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 316 44 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 47 316 48 6 NOTE_INSN_DELETED)

(insn 48 47 49 6 include/linux/genhd.h:213 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [173])
                        (const_int 680 [0x2a8]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 49 48 53 6 include/linux/genhd.h:213 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 53 49 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 include/linux/genhd.h:218 (set (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])
        (plus:SI (reg/v/f:SI 4 r4 [orig:134 name.1256 ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [50.0%] 
(code_label 55 54 56 8 88 "" [2 uses])

(note 56 55 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 60 8 include/linux/genhd.h:209 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:143 i ] [143])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 60 59 61 8 include/linux/genhd.h:209 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
        (nil)))
;; End of basic block 8 -> ( 5 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [93.8%]  (dfs_back)
;; Succ edge  9 [6.2%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [6.2%]  (fallthru,loop_exit)
(note 61 60 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 63 61 70 9 NOTE_INSN_DELETED)

(note 70 63 65 9 NOTE_INSN_DELETED)

(insn 65 70 66 9 init/do_mounts.c:105 (set (reg:SI 0 r0)
        (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)
        (nil)))

(insn 66 65 67 9 init/do_mounts.c:105 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 9 init/do_mounts.c:105 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 68 67 69 9 init/do_mounts.c:105 (set (reg:SI 3 r3)
        (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)
        (nil)))

(call_insn 69 68 71 9 init/do_mounts.c:105 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("class_find_device") [flags 0x41] <function_decl 0x11201980 class_find_device>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 71 69 72 9 init/do_mounts.c:106 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 3 r3 [orig:142 dev ] [142])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 72 71 73 9 init/do_mounts.c:106 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 9 -> ( 43 10)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp]


;; Succ edge  43 [30.2%] 
;; Succ edge  10 [69.8%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  9 [69.8%]  (fallthru)
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 10 init/do_mounts.c:109 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:142 dev ] [142])
                (const_int 308 [0x134])) [0 <variable>.devt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 76 74 328 10 init/do_mounts.c:110 (parallel [
            (call (mem:SI (symbol_ref:SI ("put_device") [flags 0x41] <function_decl 0x11229c80 put_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 328 76 329 10 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 329 328 79)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
(code_label 79 329 80 11 86 "" [1 uses])

(note 80 79 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 86 80 82 11 NOTE_INSN_DELETED)

(insn 82 86 83 11 init/do_mounts.c:155 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:161 name ] [161])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 11 init/do_mounts.c:155 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
        (nil)))

(insn 84 83 85 11 init/do_mounts.c:155 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 88 11 init/do_mounts.c:155 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 88 85 89 11 init/do_mounts.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 89 88 90 11 init/do_mounts.c:155 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  18 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 90 89 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 92 90 93 12 NOTE_INSN_DELETED)

(note 93 92 99 12 NOTE_INSN_DELETED)

(note 99 93 94 12 NOTE_INSN_DELETED)

(insn 94 99 95 12 init/do_mounts.c:158 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:161 name ] [161])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 12 init/do_mounts.c:158 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)
        (nil)))

(insn 96 95 97 12 init/do_mounts.c:158 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 97 96 98 12 init/do_mounts.c:158 (set (reg:SI 3 r3)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 52 [0x34]))) 4 {*arm_addsi3} (nil))

(call_insn 98 97 100 12 init/do_mounts.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sscanf") [flags 0x41] <function_decl 0x5115e880 sscanf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 100 98 101 12 init/do_mounts.c:158 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 101 100 102 12 init/do_mounts.c:158 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5123 [0x1403])
        (nil)))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  13 [48.8%]  (fallthru)
;; Succ edge  16 [51.2%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  12 [48.8%]  (fallthru)
(note 102 101 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 105 102 107 13 NOTE_INSN_DELETED)

(note 107 105 103 13 NOTE_INSN_DELETED)

(insn 103 107 104 13 init/do_mounts.c:159 (set (reg:SI 2 r2 [orig:155 maj.879 ] [155])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 maj+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 maj+0 S4 A64])
        (nil)))

(insn 104 103 106 13 init/do_mounts.c:159 (set (reg:SI 3 r3 [orig:154 min.880 ] [154])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 min+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 106 104 108 13 init/do_mounts.c:159 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (ior:SI (ashift:SI (reg:SI 2 r2 [orig:155 maj.879 ] [155])
                (const_int 20 [0x14]))
            (reg:SI 3 r3 [orig:154 min.880 ] [154]))) 270 {*arith_shiftsi} (nil))

(insn 108 106 109 13 init/do_mounts.c:160 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg/v:SI 6 r6 [orig:147 res ] [147])
                (const_int 20 [0x14]))
            (reg:SI 2 r2 [orig:155 maj.879 ] [155]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(jump_insn 109 108 110 13 init/do_mounts.c:160 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 13 -> ( 43 14)
;; lr  out 	 3 [r3] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 6 [r6] 13 [sp]


;; Succ edge  43 [62.2%] 
;; Succ edge  14 [37.8%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  13 [37.8%]  (fallthru)
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 14 init/do_mounts.c:160 discrim 1 (set (reg:SI 2 r2 [187])
        (and:SI (reg/v:SI 6 r6 [orig:147 res ] [147])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 112 111 113 14 init/do_mounts.c:160 discrim 1 (set (reg:SI 2 r2 [186])
        (and:SI (reg:SI 2 r2 [187])
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 6 r6 [orig:147 res ] [147])
            (const_int 1048575 [0xfffff]))
        (nil)))

(insn 113 112 114 14 init/do_mounts.c:160 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:154 min.880 ] [154])
            (reg:SI 2 r2 [186]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 114 113 330 14 init/do_mounts.c:160 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 14 -> ( 43 15)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  43 [62.2%] 
;; Succ edge  15 [37.8%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  14 [37.8%]  (fallthru)
(note 330 114 331 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn 331 330 332 15 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 332 331 118)

;; Start of basic block ( 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [51.2%] 
(code_label 118 332 119 16 93 "" [1 uses])

(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 120 119 121 16 NOTE_INSN_DELETED)

(insn 121 120 122 16 init/do_mounts.c:163 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:161 name ] [161])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 16 init/do_mounts.c:163 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 123 122 124 16 init/do_mounts.c:163 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 124 123 126 16 init/do_mounts.c:163 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 126 124 127 16 init/do_mounts.c:164 (set (reg/f:SI 3 r3 [orig:189 p ] [189])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])
        (nil)))

(insn 127 126 128 16 init/do_mounts.c:164 (set (reg:SI 3 r3 [190])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:189 p ] [189]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 128 127 129 16 init/do_mounts.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [190])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 129 128 334 16 init/do_mounts.c:164 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 333)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 16 -> ( 17 42)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  17 [39.0%]  (fallthru)
;; Succ edge  42 [61.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [39.0%]  (fallthru)
(note 334 129 335 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 335 334 336 17 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 43)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  43 [100.0%] 

(barrier 336 335 133)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [71.0%] 
(code_label 133 336 134 18 92 "" [1 uses])

(note 134 133 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 140 134 135 18 NOTE_INSN_DELETED)

(insn 135 140 138 18 init/do_mounts.c:170 (set (reg/v/f:SI 4 r4 [orig:141 name.1246 ] [141])
        (plus:SI (reg/v/f:SI 4 r4 [orig:161 name ] [161])
            (const_int 5 [0x5]))) 4 {*arm_addsi3} (nil))

(insn 138 135 137 18 init/do_mounts.c:172 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)
        (nil)))

(insn 137 138 139 18 init/do_mounts.c:172 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:141 name.1246 ] [141])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 139 137 142 18 init/do_mounts.c:172 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 142 139 143 18 init/do_mounts.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 143 142 144 18 init/do_mounts.c:172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 148)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 337 19 init/do_mounts.c:171 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 337 145 338 19 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 338 337 148)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%] 
(code_label 148 338 149 20 95 "" [1 uses])

(note 149 148 154 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 154 149 151 20 NOTE_INSN_DELETED)

(insn 151 154 152 20 init/do_mounts.c:175 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:141 name.1246 ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 20 init/do_mounts.c:175 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)
        (nil)))

(call_insn/i 153 152 156 20 init/do_mounts.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 156 153 157 20 init/do_mounts.c:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 20 init/do_mounts.c:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 158 157 159 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 339 21 init/do_mounts.c:174 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (const_int 1048576 [0x100000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 339 159 340 21 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 340 339 162)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  20 [50.0%] 
(code_label 162 340 163 22 96 "" [1 uses])

(note 163 162 166 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 166 163 164 22 NOTE_INSN_DELETED)

(insn 164 166 165 22 init/do_mounts.c:178 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:141 name.1246 ] [141])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 165 164 168 22 init/do_mounts.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 168 165 169 22 init/do_mounts.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 170 22 init/do_mounts.c:178 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 22 -> ( 43 23)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  43 [61.0%] 
;; Succ edge  23 [39.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  22 [39.0%]  (fallthru)
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 173 23 init/do_mounts.c:180 (set (reg/f:SI 5 r5 [196])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))
        (nil)))

(insn 173 171 172 23 init/do_mounts.c:180 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:141 name.1246 ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 172 173 174 23 init/do_mounts.c:180 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [196])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(call_insn 174 172 176 23 init/do_mounts.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 176 174 183 23 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])
        (reg/f:SI 5 r5 [196])) 167 {*arm_movsi_insn} (nil))

(insn 183 176 341 23 init/do_mounts.c:183 (set (reg:SI 2 r2 [237])
        (const_int 33 [0x21])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 33 [0x21])
        (nil)))

(jump_insn 341 183 342 23 init/do_mounts.c:181 (set (pc)
        (label_ref 191)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 27)
;; lr  out 	 2 [r2] 13 [sp]
;; live  out 	 2 [r2] 13 [sp]


;; Succ edge  27 [100.0%] 

(barrier 342 341 195)

;; Start of basic block ( 27) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [91.0%] 
(code_label 195 342 179 24 99 "" [1 uses])

(note 179 195 180 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 24 init/do_mounts.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:139 temp.1248 ] [139])
            (const_int 47 [0x2f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 181 180 182 24 init/do_mounts.c:182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 13 [sp]


;; Succ edge  25 [28.0%]  (fallthru)
;; Succ edge  26 [72.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  24 [28.0%]  (fallthru)
(note 182 181 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 185 182 186 25 init/do_mounts.c:183 (set (mem:QI (reg/f:SI 3 r3 [orig:140 p.1247 ] [140]) [0 S1 A8])
        (reg:QI 2 r2 [237])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 33 [0x21])
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 2 [r2] 13 [sp]
;; live  out 	 2 [r2] 13 [sp]


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  24 [72.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 186 185 187 26 98 "" [1 uses])

(note 187 186 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 26 init/do_mounts.c:181 (set (reg/f:SI 3 r3 [orig:200 p ] [200])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])
        (nil)))

(insn 189 188 190 26 init/do_mounts.c:181 (set (reg/f:SI 3 r3 [201])
        (plus:SI (reg/f:SI 3 r3 [orig:200 p ] [200])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (nil)))

(insn 190 189 191 26 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])
        (reg/f:SI 3 r3 [201])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 2 [r2] 13 [sp]
;; live  out 	 2 [r2] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 26 23) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
;; Pred edge  23 [100.0%] 
(code_label 191 190 192 27 97 "" [1 uses])

(note 192 191 193 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 27 init/do_mounts.c:181 discrim 1 (set (reg/f:SI 3 r3 [orig:140 p.1247 ] [140])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 194 193 196 27 init/do_mounts.c:181 discrim 1 (set (reg:SI 1 r1 [orig:139 temp.1248 ] [139])
        (zero_extend:SI (mem:QI (reg/f:SI 3 r3 [orig:140 p.1247 ] [140]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 196 194 197 27 init/do_mounts.c:181 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:139 temp.1248 ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 197 196 198 27 init/do_mounts.c:181 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 27 -> ( 24 28)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]


;; Succ edge  24 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 198 197 203 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 203 198 199 28 NOTE_INSN_DELETED)

(insn 199 203 200 28 init/do_mounts.c:184 (set (reg/f:SI 4 r4 [202])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))
        (nil)))

(insn 200 199 202 28 init/do_mounts.c:184 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [202])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(call_insn 202 200 204 28 init/do_mounts.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 204 202 205 28 init/do_mounts.c:185 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 6 r6 [orig:147 res ] [147])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 205 204 343 28 init/do_mounts.c:185 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 28 -> ( 44 29)
;; lr  out 	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  44 [50.0%] 
;; Succ edge  29 [50.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 343 205 345 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(jump_insn 345 343 346 29 (set (pc)
        (label_ref 344)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 31)
;; lr  out 	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  31 [100.0%] 

(barrier 346 345 219)

;; Start of basic block ( 33) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  33 [95.5%] 
(code_label 219 346 209 30 102 "" [1 uses])

(note 209 219 210 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 348 30 init/do_mounts.c:193 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])
        (reg/f:SI 1 r1 [orig:149 p.885 ] [149])) 167 {*arm_movsi_insn} (nil))

(jump_insn 348 210 349 30 (set (pc)
        (label_ref 347)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  32 [100.0%]  (dfs_back)

(barrier 349 348 344)

;; Start of basic block ( 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  29 [100.0%] 
(code_label 344 349 212 31 106 "" [1 uses])

(note 212 344 220 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 220 212 347 31 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 3 r3 [236])
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (dfs_back)
(code_label 347 220 320 32 107 "" [1 uses])

(note 320 347 213 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 213 320 215 32 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 0 r0 [orig:138 p.1250 ] [138])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 215 213 218 32 init/do_mounts.c:192 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:138 p.1250 ] [138])
            (reg/f:SI 4 r4 [235]))) 219 {*arm_cmpsi_insn} (nil))

(insn 218 215 216 32 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 1 r1 [orig:149 p.885 ] [149])
        (plus:SI (reg/f:SI 0 r0 [orig:138 p.1250 ] [138])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 216 218 217 32 init/do_mounts.c:192 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  33 [95.5%]  (fallthru)
;; Succ edge  34 [4.5%]  (loop_exit)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  32 [95.5%]  (fallthru)
(note 217 216 223 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 223 217 221 33 NOTE_INSN_DELETED)

(insn 221 223 222 33 init/do_mounts.c:192 discrim 2 (set (reg:SI 2 r2 [205])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 0 r0 [orig:138 p.1250 ] [138])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 222 221 224 33 init/do_mounts.c:192 discrim 2 (set (reg:SI 2 r2 [206])
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 3 r3 [236])
                    (reg:SI 2 r2 [205])) [0 _ctype S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg:SI 2 r2 [205])
                    (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) [0 _ctype S1 A8]))
        (nil)))

(insn 224 222 225 33 init/do_mounts.c:192 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [206])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 225 224 226 33 init/do_mounts.c:192 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 33 -> ( 30 34)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  30 [95.5%] 
;; Succ edge  34 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  32 [4.5%]  (loop_exit)
;; Pred edge  33 [4.5%]  (fallthru,loop_exit)
(code_label 226 225 227 34 101 "" [1 uses])

(note 227 226 228 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 34 init/do_mounts.c:194 (set (reg/f:SI 4 r4 [208])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))
        (nil)))

(insn 229 228 230 34 init/do_mounts.c:194 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:138 p.1250 ] [138])
            (reg/f:SI 4 r4 [208]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 231 34 init/do_mounts.c:194 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 34 -> ( 44 35)
;; lr  out 	 0 [r0] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  44 [10.1%] 
;; Succ edge  35 [89.9%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  34 [89.9%]  (fallthru)
(note 231 230 232 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 233 35 init/do_mounts.c:194 discrim 1 (set (reg:SI 3 r3 [orig:137 temp.1251 ] [137])
        (zero_extend:SI (mem:QI (reg/f:SI 0 r0 [orig:138 p.1250 ] [138]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 233 232 234 35 init/do_mounts.c:194 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 temp.1251 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 235 35 init/do_mounts.c:194 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 35 -> ( 44 36)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  44 [39.0%] 
;; Succ edge  36 [61.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [61.0%]  (fallthru)
(note 235 234 236 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 36 init/do_mounts.c:194 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 temp.1251 ] [137])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 237 236 238 36 init/do_mounts.c:194 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3784 [0xec8])
        (nil)))
;; End of basic block 36 -> ( 44 37)
;; lr  out 	 0 [r0] 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  44 [37.8%] 
;; Succ edge  37 [62.2%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  36 [62.2%]  (fallthru)
(note 238 237 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note 253 238 240 37 NOTE_INSN_DELETED)

(insn 240 253 241 37 init/do_mounts.c:198 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 241 240 242 37 init/do_mounts.c:198 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn 242 241 243 37 init/do_mounts.c:198 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 243 242 250 37 init/do_mounts.c:198 (set (reg:SI 5 r5 [orig:148 D.52751 ] [148])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 250 243 251 37 init/do_mounts.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [208])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 251 250 359 37 init/do_mounts.c:200 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:148 D.52751 ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 359 251 360 37 init/do_mounts.c:199 (set (reg:SI 2 r2 [210])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 360 359 248 37 init/do_mounts.c:199 (set (reg/f:SI 3 r3 [orig:209 p ] [209])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])
        (nil)))

(insn 248 360 252 37 init/do_mounts.c:199 (set (mem:QI (reg/f:SI 3 r3 [orig:209 p ] [209]) [0 S1 A8])
        (reg:QI 2 r2 [210])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 252 248 254 37 init/do_mounts.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 254 252 255 37 init/do_mounts.c:201 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 6 r6 [orig:147 res ] [147])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 255 254 256 37 init/do_mounts.c:201 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 37 -> ( 44 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  44 [50.0%] 
;; Succ edge  38 [50.0%]  (fallthru)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  37 [50.0%]  (fallthru)
(note 256 255 257 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 259 38 init/do_mounts.c:205 (set (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 259 257 260 38 init/do_mounts.c:205 (set (reg/f:SI 2 r2 [214])
        (plus:SI (reg/f:SI 4 r4 [208])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 260 259 261 38 init/do_mounts.c:205 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
            (reg/f:SI 2 r2 [214]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 261 260 262 38 init/do_mounts.c:205 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 38 -> ( 44 39)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  44 [39.0%] 
;; Succ edge  39 [61.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  38 [61.0%]  (fallthru)
(note 262 261 266 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 266 262 264 39 NOTE_INSN_DELETED)

(insn 264 266 358 39 init/do_mounts.c:205 discrim 1 (set (reg:SI 2 r2 [216])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 358 264 265 39 init/do_mounts.c:205 discrim 1 (set (reg/f:SI 1 r1 [215])
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)
        (nil)))

(insn 265 358 267 39 init/do_mounts.c:205 discrim 1 (set (reg:SI 2 r2 [217])
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 1 r1 [215])
                    (reg:SI 2 r2 [216])) [0 _ctype S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg:SI 2 r2 [216])
                    (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) [0 _ctype S1 A8]))
        (nil)))

(insn 267 265 268 39 init/do_mounts.c:205 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [217])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 268 267 269 39 init/do_mounts.c:205 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 39 -> ( 44 40)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  44 [39.0%] 
;; Succ edge  40 [61.0%]  (fallthru)

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  39 [61.0%]  (fallthru)
(note 269 268 271 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 271 269 272 40 init/do_mounts.c:205 discrim 2 (set (reg:SI 2 r2 [219])
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 272 271 273 40 init/do_mounts.c:205 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [219])
            (const_int 112 [0x70]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 273 272 274 40 init/do_mounts.c:205 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
        (nil)))
;; End of basic block 40 -> ( 44 41)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  44 [80.1%] 
;; Succ edge  41 [19.9%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  40 [19.9%]  (fallthru)
(note 274 273 277 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 277 274 279 41 init/do_mounts.c:207 (set (mem:QI (plus:SI (reg/f:SI 3 r3 [orig:136 p.1253 ] [136])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (reg:QI 6 r6 [orig:147 res ] [147])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 279 277 280 41 init/do_mounts.c:208 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [208])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 280 279 281 41 init/do_mounts.c:208 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:148 D.52751 ] [148])) 167 {*arm_movsi_insn} (nil))

(call_insn 281 280 282 41 init/do_mounts.c:208 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 282 281 350 41 init/do_mounts.c:208 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(jump_insn 350 282 351 41 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 351 350 333)

;; Start of basic block ( 16) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 6 [r6]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 6 [r6]
;; live  kill	

;; Pred edge  16 [61.0%] 
(code_label 333 351 286 42 105 "" [1 uses])

(note 286 333 293 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 293 286 295 42 NOTE_INSN_DELETED)

(note 295 293 354 42 NOTE_INSN_DELETED)

(insn 354 295 287 42 include/linux/kdev_t.h:52 (set (reg:SI 3 r3 [224])
        (const_int 1048320 [0xfff00])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1048320 [0xfff00])
        (nil)))

(insn 287 354 294 42 include/linux/kdev_t.h:52 (set (reg:SI 2 r2 [223])
        (lshiftrt:SI (reg:SI 0 r0 [orig:153 D.52725 ] [153])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 294 287 290 42 include/linux/kdev_t.h:52 (set (reg:SI 6 r6 [230])
        (zero_extract:SI (reg:SI 0 r0 [orig:153 D.52725 ] [153])
            (const_int 12 [0xc])
            (const_int 8 [0x8]))) 124 {extzv_t2} (nil))

(insn 290 294 355 42 include/linux/kdev_t.h:52 (set (reg:SI 0 r0 [226])
        (and:SI (reg:SI 0 r0 [orig:153 D.52725 ] [153])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 355 290 291 42 include/linux/kdev_t.h:52 (set (reg:SI 3 r3 [224])
        (and:SI (reg:SI 2 r2 [223])
            (reg:SI 3 r3 [224]))) 67 {*arm_andsi3_insn} (nil))

(insn 291 355 296 42 include/linux/kdev_t.h:52 (set (reg:SI 3 r3 [227])
        (ior:SI (reg:SI 3 r3 [224])
            (reg:SI 0 r0 [226]))) 89 {*arm_iorsi3} (nil))

(insn 296 291 352 42 include/linux/kdev_t.h:52 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (ior:SI (ashift:SI (reg:SI 6 r6 [230])
                (const_int 20 [0x14]))
            (reg:SI 3 r3 [227]))) 270 {*arith_shiftsi} (nil))

(jump_insn 352 296 353 42 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%] 

(barrier 353 352 299)

;; Start of basic block ( 9 13 3 14 22 17) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  9 [30.2%] 
;; Pred edge  13 [62.2%] 
;; Pred edge  3 [62.2%] 
;; Pred edge  14 [62.2%] 
;; Pred edge  22 [61.0%] 
;; Pred edge  17 [100.0%] 
(code_label 299 353 300 43 87 "" [6 uses])

(note 300 299 301 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 43 init/do_mounts.c:213 (set (reg/v:SI 6 r6 [orig:147 res ] [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 44)
;; lr  out 	 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 13 [sp]


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 43 41 19 28 37 21 36 10 15 40 39 38 34 35 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  28 [50.0%] 
;; Pred edge  37 [50.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  36 [37.8%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  40 [80.1%] 
;; Pred edge  39 [39.0%] 
;; Pred edge  38 [39.0%] 
;; Pred edge  34 [10.1%] 
;; Pred edge  35 [39.0%] 
;; Pred edge  42 [100.0%] 
(code_label 302 301 303 44 91 "" [14 uses])

(note 303 302 308 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 308 303 314 44 init/do_mounts.c:216 (set (reg/i:SI 0 r0)
        (reg/v:SI 6 r6 [orig:147 res ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 314 308 357 44 init/do_mounts.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 44 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 357 314 361 NOTE_INSN_DELETED)

(note 361 357 0 NOTE_INSN_DELETED)


;; Function prepare_namespace (prepare_namespace)[0:2718] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 26 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 39 (    2)
scanning new insn with uid = 168.
verify found no changes in insn with uid = 168.
deleting insn with uid = 72.
scanning new insn with uid = 169.
verify found no changes in insn with uid = 169.
deleting insn with uid = 59.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 26 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 39 (    2)

Pass 0 for finding allocno costs

    a17 (r187,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a7(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a11(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r187,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r187: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a7(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a11(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r187,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 152(l0): point = 0
   Insn 151(l0): point = 2
   Insn 149(l0): point = 4
   Insn 144(l0): point = 6
   Insn 148(l0): point = 8
   Insn 146(l0): point = 10
   Insn 147(l0): point = 12
   Insn 145(l0): point = 14
   Insn 143(l0): point = 16
   Insn 138(l0): point = 19
   Insn 135(l0): point = 22
   Insn 166(l0): point = 25
   Insn 130(l0): point = 27
   Insn 111(l0): point = 29
   Insn 109(l0): point = 31
   Insn 110(l0): point = 33
   Insn 104(l0): point = 36
   Insn 103(l0): point = 38
   Insn 102(l0): point = 40
   Insn 101(l0): point = 42
   Insn 99(l0): point = 45
   Insn 98(l0): point = 47
   Insn 97(l0): point = 49
   Insn 96(l0): point = 51
   Insn 94(l0): point = 54
   Insn 93(l0): point = 56
   Insn 91(l0): point = 58
   Insn 88(l0): point = 61
   Insn 87(l0): point = 63
   Insn 84(l0): point = 66
   Insn 83(l0): point = 68
   Insn 80(l0): point = 70
   Insn 77(l0): point = 72
   Insn 73(l0): point = 74
   Insn 168(l0): point = 76
   Insn 78(l0): point = 78
   Insn 79(l0): point = 80
   Insn 75(l0): point = 82
   Insn 70(l0): point = 84
   Insn 69(l0): point = 86
   Insn 164(l0): point = 89
   Insn 62(l0): point = 91
   Insn 61(l0): point = 93
   Insn 169(l0): point = 95
   Insn 60(l0): point = 97
   Insn 54(l0): point = 100
   Insn 53(l0): point = 102
   Insn 50(l0): point = 104
   Insn 49(l0): point = 106
   Insn 48(l0): point = 108
   Insn 47(l0): point = 110
   Insn 42(l0): point = 113
   Insn 41(l0): point = 115
   Insn 38(l0): point = 117
   Insn 31(l0): point = 119
   Insn 37(l0): point = 121
   Insn 35(l0): point = 123
   Insn 36(l0): point = 125
   Insn 30(l0): point = 127
   Insn 26(l0): point = 130
   Insn 25(l0): point = 132
   Insn 24(l0): point = 134
   Insn 22(l0): point = 136
   Insn 23(l0): point = 138
   Insn 19(l0): point = 141
   Insn 18(l0): point = 143
   Insn 16(l0): point = 145
   Insn 15(l0): point = 147
   Insn 13(l0): point = 149
   Insn 11(l0): point = 151
   Insn 12(l0): point = 153
   Insn 8(l0): point = 156
   Insn 7(l0): point = 158
   Insn 6(l0): point = 160
   Insn 5(l0): point = 162
   Insn 133(l1): point = 165
   Insn 131(l1): point = 167
   Insn 132(l1): point = 169
   Insn 129(l1): point = 171
   Insn 128(l1): point = 173
   Insn 123(l1): point = 176
   Insn 161(l1): point = 178
   Insn 122(l1): point = 180
   Insn 119(l1): point = 182
   Insn 116(l1): point = 185
   Insn 163(l1): point = 187
 a0(r184): [7..16]
 a1(r187): [25..27]
 a2(r172): [28..51]
 a3(r174): [34..42]
 a4(r175): [39..40]
 a5(r173): [48..49]
 a6(r148): [100..138] [62..88]
 a7(r171): [62..63]
 a8(r140): [64..82]
 a9(r166): [75..76]
 a10(r152): [100..127] [87..88]
 a11(r163): [94..95]
 a12(r149): [133..134]
 a13(r146): [144..147]
 a14(r147): [144..145]
 a15(r142): [148..162]
 a16(r141): [154..160]
 a17(r187): [165..189]
 a18(r133): [168..171]
 Rebuilding regno allocno list for 133
Compressing live ranges: from 190 to 38 - 20%
Ranges after the compression:
 a0(r184): [0..1]
 a1(r187): [34..37] [2..3]
 a2(r172): [4..11]
 a3(r174): [5..8]
 a4(r175): [6..7]
 a5(r173): [9..10]
 a6(r148): [22..26] [12..19]
 a7(r171): [12..13]
 a8(r140): [14..17]
 a9(r166): [15..16]
 a10(r152): [22..23] [18..19]
 a11(r163): [20..21]
 a12(r149): [24..25]
 a13(r146): [27..29]
 a14(r147): [27..28]
 a15(r142): [30..33]
 a16(r141): [31..32]
 a18(r133): [35..36]
+++Allocating 136 bytes for conflict table (uncompressed size 152)
;; a0(r184,l0) conflicts:
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r187,l0) conflicts: a18(r133,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r172,l0) conflicts: a3(r174,l0) a4(r175,l0) a5(r173,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r174,l0) conflicts: a2(r172,l0) a4(r175,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r175,l0) conflicts: a2(r172,l0) a3(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r173,l0) conflicts: a2(r172,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r148,l0) conflicts: a7(r171,l0) a8(r140,l0) a9(r166,l0) a10(r152,l0) a12(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r171,l0) conflicts: a6(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r140,l0) conflicts: a6(r148,l0) a9(r166,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a9(r166,l0) conflicts: a6(r148,l0) a8(r140,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a10(r152,l0) conflicts: a6(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a11(r163,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a12(r149,l0) conflicts: a6(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r146,l0) conflicts: a14(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r147,l0) conflicts: a13(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a15(r142,l0) conflicts: a16(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a16(r141,l0) conflicts: a15(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r133,l0) conflicts: a1(r187,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r187)<->a2(r172)@1000:move
  cp1:a7(r171)<->a8(r140)@125:shuffle
  regions=2, blocks=20, points=38
    allocnos=19, copies=2, conflicts=10, ranges=21

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r184 1r187 2r172 3r174 4r175 5r173 6r148 7r171 8r140 9r166 10r152 11r163 12r149 13r146 14r147 15r142 16r141 18r133
    modified regnos: 133 140 141 142 146 147 148 149 152 163 166 171 172 173 174 175 184 187
    border:
    Pressure: GENERAL_REGS=6
    Reg 184 of GENERAL_REGS has 4 regs less
    Reg 187 of GENERAL_REGS has 2 regs less
    Reg 172 of GENERAL_REGS has 3 regs less
    Reg 148 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 166 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 4 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
      Pushing a14(r147,l0)
      Pushing a13(r146,l0)
      Pushing a12(r149,l0)
      Pushing a7(r171,l0)
      Pushing a5(r173,l0)
      Pushing a4(r175,l0)
      Pushing a18(r133,l0)
      Pushing a16(r141,l0)
      Pushing a3(r174,l0)
      Pushing a11(r163,l0)
      Pushing a1(r187,l0)
      Pushing a9(r166,l0)
      Pushing a15(r142,l0)
      Pushing a2(r172,l0)
      Pushing a8(r140,l0)
      Pushing a0(r184,l0)
      Pushing a10(r152,l0)
      Pushing a6(r148,l0)
      Popping a6(r148,l0)  -- assign reg 4
      Popping a10(r152,l0)  -- assign reg 5
      Popping a0(r184,l0)  -- assign reg 12
      Popping a8(r140,l0)  -- assign reg 5
      Popping a2(r172,l0)  -- assign reg 4
      Popping a15(r142,l0)  -- assign reg 4
      Popping a9(r166,l0)  -- assign reg 3
      Popping a1(r187,l0)  -- assign reg 4
      Popping a11(r163,l0)  -- assign reg 3
      Popping a3(r174,l0)  -- assign reg 1
      Popping a16(r141,l0)  -- assign reg 1
      Popping a18(r133,l0)  -- assign reg 0
      Popping a4(r175,l0)  -- assign reg 3
      Popping a5(r173,l0)  -- assign reg 3
      Popping a7(r171,l0)  -- assign reg 5
      Popping a12(r149,l0)  -- assign reg 3
      Popping a13(r146,l0)  -- assign reg 3
      Popping a14(r147,l0)  -- assign reg 0
Disposition:
   18:r133 l0     0    8:r140 l0     5   16:r141 l0     1   15:r142 l0     4
   13:r146 l0     3   14:r147 l0     0    6:r148 l0     4   12:r149 l0     3
   10:r152 l0     5   11:r163 l0     3    9:r166 l0     3    7:r171 l0     5
    2:r172 l0     4    5:r173 l0     3    3:r174 l0     1    4:r175 l0     3
    0:r184 l0    12    1:r187 l0     4
New iteration of spill/restore move
+++Costs: overall -8500, reg -8500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 142
insn=6, live_throughout: 13, 142, dead_or_set: 141
insn=7, live_throughout: 13, 141, 142, dead_or_set: 
insn=8, live_throughout: 13, 141, 142, dead_or_set: 
insn=12, live_throughout: 13, 142, dead_or_set: 1, 141
insn=11, live_throughout: 1, 13, 142, dead_or_set: 0
insn=13, live_throughout: 13, 142, dead_or_set: 0, 1, 14
insn=15, live_throughout: 13, dead_or_set: 142, 146
insn=16, live_throughout: 13, 146, dead_or_set: 147
insn=18, live_throughout: 13, dead_or_set: 0, 146, 147
insn=19, live_throughout: 13, dead_or_set: 0, 14
insn=20, live_throughout: 13, dead_or_set: 
insn=23, live_throughout: 13, dead_or_set: 148
insn=22, live_throughout: 13, 148, dead_or_set: 14
insn=24, live_throughout: 13, 148, dead_or_set: 149
insn=25, live_throughout: 13, 148, dead_or_set: 149
insn=26, live_throughout: 13, 148, dead_or_set: 
insn=30, live_throughout: 13, 148, dead_or_set: 152
insn=36, live_throughout: 13, 148, 152, dead_or_set: 1
insn=35, live_throughout: 1, 13, 148, 152, dead_or_set: 0
insn=37, live_throughout: 0, 1, 13, 148, 152, dead_or_set: 2
insn=31, live_throughout: 0, 1, 2, 13, 148, 152, dead_or_set: 
insn=38, live_throughout: 13, 148, 152, dead_or_set: 0, 1, 2, 14
insn=41, live_throughout: 13, 148, 152, dead_or_set: 0
insn=42, live_throughout: 13, 148, 152, dead_or_set: 
insn=47, live_throughout: 13, 148, 152, dead_or_set: 0
insn=48, live_throughout: 0, 13, 148, 152, dead_or_set: 1
insn=49, live_throughout: 0, 1, 13, 148, 152, dead_or_set: 2
insn=50, live_throughout: 13, 148, 152, dead_or_set: 0, 1, 2, 14
insn=53, live_throughout: 13, 148, 152, dead_or_set: 0
insn=54, live_throughout: 13, 148, 152, dead_or_set: 
insn=55, live_throughout: 13, dead_or_set: 
insn=60, live_throughout: 13, dead_or_set: 0
insn=169, live_throughout: 0, 13, dead_or_set: 163
insn=61, live_throughout: 0, 13, dead_or_set: 1, 163
insn=62, live_throughout: 13, dead_or_set: 0, 1, 14
insn=164, live_throughout: 13, dead_or_set: 
insn=65, live_throughout: 13, 148, 152, dead_or_set: 
insn=69, live_throughout: 13, 148, dead_or_set: 0, 152
insn=70, live_throughout: 13, 148, dead_or_set: 0, 14
insn=75, live_throughout: 0, 13, 148, dead_or_set: 140
insn=79, live_throughout: 0, 13, 140, 148, dead_or_set: 2
insn=78, live_throughout: 0, 2, 13, 140, 148, dead_or_set: 1
insn=168, live_throughout: 0, 1, 2, 13, 140, 148, dead_or_set: 166
insn=73, live_throughout: 1, 2, 13, 140, 148, dead_or_set: 0, 166
insn=77, live_throughout: 1, 2, 13, 140, 148, dead_or_set: 0
insn=80, live_throughout: 13, 140, 148, dead_or_set: 0, 1, 2, 14
insn=83, live_throughout: 13, 140, 148, dead_or_set: 0
insn=84, live_throughout: 13, 140, 148, dead_or_set: 
insn=87, live_throughout: 13, 148, dead_or_set: 140, 171
insn=88, live_throughout: 13, dead_or_set: 148, 171
insn=89, live_throughout: 13, dead_or_set: 
insn=91, live_throughout: 13, dead_or_set: 0, 14
insn=93, live_throughout: 13, dead_or_set: 0
insn=94, live_throughout: 13, dead_or_set: 
insn=96, live_throughout: 13, dead_or_set: 172
insn=97, live_throughout: 13, 172, dead_or_set: 173
insn=98, live_throughout: 13, 172, dead_or_set: 173
insn=99, live_throughout: 13, 172, dead_or_set: 
insn=101, live_throughout: 13, 172, dead_or_set: 174
insn=102, live_throughout: 13, 172, 174, dead_or_set: 175
insn=103, live_throughout: 13, 172, 174, dead_or_set: 175
insn=104, live_throughout: 13, 172, 174, dead_or_set: 
insn=110, live_throughout: 13, 172, dead_or_set: 1, 174
insn=109, live_throughout: 1, 13, 172, dead_or_set: 0
insn=111, live_throughout: 13, 172, dead_or_set: 0, 1, 14
insn=130, live_throughout: 13, dead_or_set: 172, 187
insn=166, live_throughout: 13, 187, dead_or_set: 
insn=121, live_throughout: 13, 187, dead_or_set: 
insn=163, live_throughout: 13, 187, dead_or_set: 0
insn=116, live_throughout: 13, 187, dead_or_set: 0, 14
insn=117, live_throughout: 13, 187, dead_or_set: 
insn=119, live_throughout: 13, 187, dead_or_set: 0, 14
insn=122, live_throughout: 13, 187, dead_or_set: 0
insn=161, live_throughout: 13, 24, 187, dead_or_set: 0
insn=123, live_throughout: 0, 13, 187, dead_or_set: 
insn=128, live_throughout: 13, 187, dead_or_set: 0, 14
insn=129, live_throughout: 13, 187, dead_or_set: 0, 133
insn=132, live_throughout: 13, 133, 187, dead_or_set: 
insn=131, live_throughout: 13, 24, 187, dead_or_set: 133
insn=133, live_throughout: 13, 187, dead_or_set: 
insn=135, live_throughout: 13, dead_or_set: 14
insn=136, live_throughout: 13, dead_or_set: 
insn=138, live_throughout: 13, dead_or_set: 14
insn=139, live_throughout: 13, dead_or_set: 
insn=143, live_throughout: 13, dead_or_set: 184
insn=145, live_throughout: 13, 184, dead_or_set: 0
insn=147, live_throughout: 0, 13, 184, dead_or_set: 2
insn=146, live_throughout: 0, 2, 13, 184, dead_or_set: 1
insn=148, live_throughout: 0, 1, 2, 13, 184, dead_or_set: 3
insn=144, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 184
insn=149, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=151, live_throughout: 13, 14, dead_or_set: 0
insn=152, live_throughout: 13, 14, dead_or_set: 0
init_insns for 133: (insn_list:REG_DEP_TRUE 131 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 169 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 168 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 88 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 96 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 101 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 102 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 143 (nil))
init_insns for 187: (insn_list:REG_DEP_TRUE 130 (nil))
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 75
changing reg in insn 87
changing reg in insn 77
changing reg in insn 6
changing reg in insn 12
changing reg in insn 7
changing reg in insn 5
changing reg in insn 15
changing reg in insn 6
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 18
changing reg in insn 23
changing reg in insn 30
changing reg in insn 88
changing reg in insn 75
changing reg in insn 31
changing reg in insn 24
changing reg in insn 87
changing reg in insn 24
changing reg in insn 25
changing reg in insn 30
changing reg in insn 69
changing reg in insn 47
changing reg in insn 35
changing reg in insn 31
changing reg in insn 169
changing reg in insn 61
changing reg in insn 168
changing reg in insn 73
changing reg in insn 87
changing reg in insn 88
changing reg in insn 96
changing reg in insn 130
changing reg in insn 97
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 101
changing reg in insn 110
changing reg in insn 102
changing reg in insn 102
changing reg in insn 102
changing reg in insn 103
changing reg in insn 143
changing reg in insn 147
changing reg in insn 144
changing reg in insn 130
changing reg in insn 131
changing reg in insn 129
Spilling for insn 31.
Spilling for insn 73.
Spilling for insn 88.
Spilling for insn 131.
Spilling for insn 144.

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                                                        (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                                                        (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])

Reloads for insn # 73
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [166]) [0 ROOT_DEV+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [166]) [0 ROOT_DEV+0 S4 A32])

Reloads for insn # 88
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                                                        (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                                                        (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])

Reloads for insn # 131
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 4 r4 [187]) [0 ROOT_DEV+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 4 r4 [187]) [0 ROOT_DEV+0 S4 A32])

Reloads for insn # 144
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 12.
deleting insn with uid = 130.
deleting insn with uid = 129.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 80.
verify found no changes in insn with uid = 91.
verify found no changes in insn with uid = 111.
verify found no changes in insn with uid = 116.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 149.
verify found no changes in insn with uid = 152.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 27 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 29 count 39 (    2)


prepare_namespace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,21u} r1={26d,10u,1d} r2={22d,4u} r3={25d,7u} r4={3d,9u,2d} r5={3d,7u} r12={19d,2u} r13={1d,37u} r14={17d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={27d,10u} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} 
;;    total ref usage 2155{2044d,108u,3e} in 83{66 regular + 17 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/do_mounts.c:468 (set (reg/f:SI 4 r4 [142])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 6 5 7 2 init/do_mounts.c:468 (set (reg:SI 1 r1 [orig:141 root_delay.909 ] [141])
        (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [142])
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50]))) [0 root_delay+0 S4 A32])
        (nil)))

(insn 7 6 8 2 init/do_mounts.c:468 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:141 root_delay.909 ] [141])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:468 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 9 11 3 NOTE_INSN_DELETED)

(insn 11 17 13 3 init/do_mounts.c:469 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)
        (nil)))

(call_insn 13 11 15 3 init/do_mounts.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 3 include/linux/delay.h:52 (set (reg:SI 3 r3 [orig:146 root_delay ] [146])
        (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [142])
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50]))) [0 root_delay+0 S4 A32])
        (nil)))

(insn 16 15 18 3 include/linux/delay.h:52 (set (reg:SI 0 r0 [147])
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1000 [0x3e8])
        (nil)))

(insn 18 16 19 3 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (mult:SI (reg:SI 0 r0 [147])
            (reg:SI 3 r3 [orig:146 root_delay ] [146]))) 32 {*arm_mulsi3_v6} (nil))

(call_insn 19 18 20 3 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 113 "" [1 uses])

(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 22 4 init/do_mounts.c:485 (set (reg/f:SI 4 r4 [148])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 22 23 24 4 init/do_mounts.c:481 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_device_probe") [flags 0x41] <function_decl 0x11201180 wait_for_device_probe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 24 22 25 4 init/do_mounts.c:485 (set (reg:SI 3 r3 [orig:149 saved_root_name ] [149])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 4 r4 [148])
                    (const_int 16 [0x10])) [0 saved_root_name+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 16 [0x10]))) [0 saved_root_name+0 S1 A32]))
        (nil)))

(insn 25 24 26 4 init/do_mounts.c:485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:149 saved_root_name ] [149])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 4 init/do_mounts.c:485 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
(note 27 26 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 39 27 30 5 NOTE_INSN_DELETED)

(insn 30 39 36 5 init/do_mounts.c:486 (set (reg/f:SI 5 r5 [152])
        (plus:SI (reg/f:SI 4 r4 [148])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 36 30 35 5 init/do_mounts.c:487 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)
        (nil)))

(insn 35 36 37 5 init/do_mounts.c:487 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 37 35 31 5 init/do_mounts.c:487 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 31 37 38 5 init/do_mounts.c:486 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg/f:SI 5 r5 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn/i 38 31 41 5 init/do_mounts.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 41 38 42 5 init/do_mounts.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 5 init/do_mounts.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [0.0%] 
;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
(note 43 42 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 43 47 6 NOTE_INSN_DELETED)

(insn 47 51 48 6 init/do_mounts.c:488 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 48 47 49 6 init/do_mounts.c:488 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)
        (nil)))

(insn 49 48 50 6 init/do_mounts.c:488 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 50 49 53 6 init/do_mounts.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 53 50 54 6 init/do_mounts.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 6 init/do_mounts.c:487 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4285 [0x10bd])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [57.1%]  (fallthru)
;; Succ edge  8 [42.9%] 

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%] 
;; Pred edge  6 [57.1%]  (fallthru)
(code_label 55 54 56 7 115 "" [1 uses])

(note 56 55 60 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 60 56 169 7 init/do_mounts.c:489 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 169 60 61 7 init/do_mounts.c:489 (set (reg/f:SI 3 r3 [163])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 61 169 62 7 init/do_mounts.c:489 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 3 r3 [163]) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
        (nil)))

(call_insn 62 61 164 7 init/do_mounts.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 164 62 165 7 init/do_mounts.c:490 (set (pc)
        (label_ref 139)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 19)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  19 [100.0%] 

(barrier 165 164 65)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [42.9%] 
(code_label 65 165 66 8 116 "" [1 uses])

(note 66 65 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 71 66 81 8 NOTE_INSN_DELETED)

(note 81 71 69 8 NOTE_INSN_DELETED)

(insn 69 81 70 8 init/do_mounts.c:492 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 70 69 75 8 init/do_mounts.c:492 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 75 70 79 8 init/do_mounts.c:493 (set (reg/f:SI 5 r5 [orig:140 root_device_name.910 ] [140])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 84 [0x54]))) [0 root_device_name+0 S4 A32])
        (nil)))

(insn 79 75 78 8 init/do_mounts.c:493 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 78 79 168 8 init/do_mounts.c:493 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
        (nil)))

(insn 168 78 73 8 init/do_mounts.c:492 (set (reg/f:SI 3 r3 [166])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 73 168 77 8 init/do_mounts.c:492 (set (mem/c/i:SI (reg/f:SI 3 r3 [166]) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 77 73 80 8 init/do_mounts.c:493 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [orig:140 root_device_name.910 ] [140])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 80 77 83 8 init/do_mounts.c:493 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 83 80 84 8 init/do_mounts.c:493 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 85 8 init/do_mounts.c:493 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 85 84 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 87 85 88 9 init/do_mounts.c:494 (set (reg/f:SI 5 r5 [171])
        (plus:SI (reg/f:SI 5 r5 [orig:140 root_device_name.910 ] [140])
            (const_int 5 [0x5]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (nil)))

(insn 88 87 89 9 init/do_mounts.c:494 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [148])
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg/f:SI 5 r5 [171])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%] 
;; Pred edge  8 [50.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 89 88 90 10 114 "" [2 uses])

(note 90 89 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 92 90 91 10 NOTE_INSN_DELETED)

(call_insn 91 92 93 10 init/do_mounts.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("initrd_load") [flags 0x41] <function_decl 0x1212ce00 initrd_load>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 93 91 94 10 init/do_mounts.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 94 93 95 10 init/do_mounts.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 10 -> ( 19 11)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  19 [100.0%] 
;; Succ edge  11 [0.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  10 [0.0%]  (fallthru)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 11 init/do_mounts.c:501 (set (reg/f:SI 4 r4 [172])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 97 96 98 11 init/do_mounts.c:501 (set (reg:SI 3 r3 [orig:173 ROOT_DEV ] [173])
        (mem/c/i:SI (reg/f:SI 4 r4 [172]) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 4 r4 [172]) [0 ROOT_DEV+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
            (nil))))

(insn 98 97 99 11 init/do_mounts.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:173 ROOT_DEV ] [173])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 11 init/do_mounts.c:501 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 12 init/do_mounts.c:501 discrim 1 (set (reg/f:SI 1 r1 [174])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 102 101 103 12 init/do_mounts.c:501 discrim 1 (set (reg:SI 3 r3 [orig:175 root_wait ] [175])
        (mem/c/i:SI (reg/f:SI 1 r1 [174]) [0 root_wait+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 1 r1 [174]) [0 root_wait+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 root_wait+0 S4 A32])
            (nil))))

(insn 103 102 104 12 init/do_mounts.c:501 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:175 root_wait ] [175])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 12 init/do_mounts.c:501 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 12 -> ( 13 18)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 105 104 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 110 105 109 13 init/do_mounts.c:502 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 1 r1 [174])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 109 110 111 13 init/do_mounts.c:502 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)
        (nil)))

(call_insn 111 109 166 13 init/do_mounts.c:502 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 166 111 167 13 init/do_mounts.c:504 (set (pc)
        (label_ref 117)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 167 166 121)

;; Start of basic block ( 15 16) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%] 
;; Pred edge  16 [91.0%] 
(code_label 121 167 114 14 120 "" [2 uses])

(note 114 121 163 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 163 114 116 14 init/do_mounts.c:506 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn 116 163 117 14 init/do_mounts.c:506 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  13 [100.0%] 
(code_label 117 116 118 15 119 "" [1 uses])

(note 118 117 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 120 118 119 15 NOTE_INSN_DELETED)

(call_insn 119 120 122 15 init/do_mounts.c:504 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("driver_probe_done") [flags 0x41] <function_decl 0x11201100 driver_probe_done>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 122 119 161 15 init/do_mounts.c:504 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 161 122 123 15 init/do_mounts.c:505 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (nil))

(jump_insn 123 161 124 15 init/do_mounts.c:504 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 15 -> ( 14 16)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  14 [29.0%] 
;; Succ edge  16 [71.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  15 [71.0%]  (fallthru)
(note 124 123 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 128 124 132 16 init/do_mounts.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 132 128 131 16 init/do_mounts.c:504 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 ROOT_DEV.916 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 131 132 133 16 init/do_mounts.c:504 discrim 2 (set (mem/c/i:SI (reg/f:SI 4 r4 [187]) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 0 r0 [orig:133 ROOT_DEV.916 ] [133])) 167 {*arm_movsi_insn} (nil))

(jump_insn 133 131 134 16 init/do_mounts.c:504 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 16 -> ( 14 17)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  14 [91.0%] 
;; Succ edge  17 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  16 [9.0%]  (fallthru,loop_exit)
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(call_insn 135 134 136 17 init/do_mounts.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x115d7000 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 11 12 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 136 135 137 18 118 "" [2 uses])

(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 138 137 139 18 init/do_mounts.c:515 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_root") [flags 0x3] <function_decl 0x1212c980 mount_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 10 18 7) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 139 138 140 19 117 "" [2 uses])

(note 140 139 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 140 145 19 init/do_mounts.c:518 (set (reg:SI 12 ip [184])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 145 143 147 19 init/do_mounts.c:518 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
        (nil)))

(insn 147 145 146 19 init/do_mounts.c:518 (set (reg:SI 2 r2)
        (reg:SI 12 ip [184])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 146 147 148 19 init/do_mounts.c:518 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)
        (nil)))

(insn 148 146 144 19 init/do_mounts.c:518 (set (reg:SI 3 r3)
        (const_int 8192 [0x2000])) 167 {*arm_movsi_insn} (nil))

(insn 144 148 149 19 init/do_mounts.c:518 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [184])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 149 144 151 19 init/do_mounts.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 149 152 19 init/do_mounts.c:519 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
        (nil)))

(call_insn/j 152 151 153 19 init/do_mounts.c:519 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chroot") [flags 0x41] <function_decl 0x12103080 sys_chroot>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 19 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 153 152 170)

(note 170 153 0 NOTE_INSN_DELETED)


;; Function match_dev_by_uuid (match_dev_by_uuid)[0:2705]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 37(l0): point = 0
   Insn 31(l0): point = 2
   Insn 23(l0): point = 5
   Insn 19(l0): point = 7
   Insn 18(l0): point = 9
   Insn 17(l0): point = 11
   Insn 16(l0): point = 13
   Insn 41(l0): point = 16
   Insn 11(l0): point = 18
   Insn 9(l0): point = 21
   Insn 8(l0): point = 23
   Insn 3(l0): point = 25
   Insn 7(l0): point = 27
 a0(r133): [16..18] [3..5]
 a1(r135): [19..27] [12..15]
 a2(r138): [21..25] [14..15]
Compressing live ranges: from 30 to 11 - 36%
Ranges after the compression:
 a0(r133): [5..6] [0..1]
 a1(r135): [7..10] [2..4]
 a2(r138): [8..9] [3..4]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r135,l0) conflicts: a2(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r138,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r133)<->a1(r135)@1000:move
  regions=1, blocks=6, points=11
    allocnos=3, copies=1, conflicts=2, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r135 2r138
    modified regnos: 133 135 138
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a2(r138,l0)
      Pushing a0(r133,l0)
      Pushing a1(r135,l0)
      Popping a1(r135,l0)  -- assign reg 3
      Popping a0(r133,l0)  -- assign reg 0
      Popping a2(r138,l0)  -- assign reg 1
Disposition:
    0:r133 l0     0    1:r135 l0     3    2:r138 l0     1
New iteration of spill/restore move
+++Costs: overall -8250, reg -8250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 1, 13, 14, dead_or_set: 0, 135
insn=3, live_throughout: 13, 14, 135, dead_or_set: 1, 138
insn=8, live_throughout: 13, 14, 135, 138, dead_or_set: 
insn=9, live_throughout: 13, 14, 135, 138, dead_or_set: 
insn=11, live_throughout: 13, 14, dead_or_set: 133, 135
insn=41, live_throughout: 13, 14, 133, dead_or_set: 
insn=14, live_throughout: 13, 135, 138, dead_or_set: 
insn=16, live_throughout: 13, 135, dead_or_set: 0, 138
insn=17, live_throughout: 0, 13, dead_or_set: 1, 135
insn=18, live_throughout: 0, 1, 13, dead_or_set: 2
insn=19, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=23, live_throughout: 13, 14, dead_or_set: 0, 133
insn=25, live_throughout: 13, 14, 133, dead_or_set: 
insn=31, live_throughout: 13, 14, dead_or_set: 0, 133
insn=37, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 23
changing reg in insn 11
changing reg in insn 31
changing reg in insn 7
changing reg in insn 11
changing reg in insn 17
changing reg in insn 8
changing reg in insn 3
changing reg in insn 16
deleting insn with uid = 3.
deleting insn with uid = 31.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


match_dev_by_uuid

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={3d,2u} r2={3d,1u} r3={3d,3u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 151{132d,19u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 4 2 NOTE_INSN_DELETED)

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 init/do_mounts.c:74 (set (reg/f:SI 3 r3 [orig:135 D.52671 ] [135])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 372 [0x174])) [0 <variable>.info+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:135 D.52671 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 init/do_mounts.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [15.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 41 3 init/do_mounts.c:82 (set (reg:SI 0 r0 [orig:133 D.52676 ] [133])
        (reg/f:SI 3 r3 [orig:135 D.52671 ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 41 11 42 3 (set (pc)
        (label_ref 25)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 42 41 14)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [85.0%] 
(code_label 14 42 15 4 125 "" [1 uses])

(note 15 14 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 20 15 22 4 NOTE_INSN_DELETED)

(note 22 20 16 4 NOTE_INSN_DELETED)

(insn 16 22 17 4 init/do_mounts.c:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 1 r1 [orig:138 data ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 4 init/do_mounts.c:77 (set (reg:SI 1 r1)
        (reg/f:SI 3 r3 [orig:135 D.52671 ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 init/do_mounts.c:77 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 19 18 23 4 init/do_mounts.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 23 19 25 4 init/do_mounts.c:80 (parallel [
            (set (reg:SI 0 r0 [orig:133 D.52676 ] [133])
                (eq:SI (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 25 23 26 5 126 "" [1 uses])

(note 26 25 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 37 26 43 5 init/do_mounts.c:83 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 43 37 44 NOTE_INSN_DELETED)

(note 44 43 0 NOTE_INSN_DELETED)

