
;; Function lpj_setup (lpj_setup)[0:370] (unlikely executed)



lpj_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{129d,16u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 13 2 NOTE_INSN_DELETED)

(note 13 10 7 2 NOTE_INSN_DELETED)

(insn:TI 7 13 29 2 init/calibrate.c:18 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn/f:TI 29 7 30 2 init/calibrate.c:17 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 30 29 8 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 8 30 9 2 init/calibrate.c:18 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn:TI 9 8 11 2 init/calibrate.c:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a71000 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 9 12 2 init/calibrate.c:18 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 12 11 17 2 init/calibrate.c:18 (set (mem/c/i:SI (reg/f:SI 3 r3 [136]) [0 preset_lpj+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [136])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 17 12 23 2 init/calibrate.c:20 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 23 17 31 2 init/calibrate.c:20 (use (reg/i:SI 0 r0)) -1 (nil))

(note 31 23 32 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 32 31 33 2 init/calibrate.c:20 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 33 32 27)

(note 27 33 28 NOTE_INSN_DELETED)

(note 28 27 0 NOTE_INSN_DELETED)


;; Function calibrate_delay (calibrate_delay)[0:373] (unlikely executed)



calibrate_delay

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={18d,12u} r1={16d,9u} r2={20d,13u} r3={26d,21u} r4={9d,22u,1d} r5={8d,14u} r6={3d,6u} r7={7d,9u} r8={3d,6u} r9={3d,6u} r10={2d,4u,2d} r11={3d,4u} r12={8d} r13={2d,38u} r14={9d,2u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={22d,17u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1225{1039d,183u,3e} in 118{110 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 270 2 NOTE_INSN_DELETED)

(insn/f:TI 270 6 271 2 init/calibrate.c:250 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 10 sl)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -48 [0xffffffffffffffd0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 0 r0))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 1 r1))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 2 r2))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 20 [0x14])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 24 [0x18])) [0 S4 A32])
                                    (reg:SI 7 r7))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 28 [0x1c])) [0 S4 A32])
                                    (reg:SI 8 r8))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 32 [0x20])) [0 S4 A32])
                                    (reg:SI 9 r9))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 36 [0x24])) [0 S4 A32])
                                    (reg:SI 10 sl))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 40 [0x28])) [0 S4 A32])
                                    (reg:SI 11 fp))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 44 [0x2c])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 271 270 268 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 268 271 257 2 init/calibrate.c:253 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn:TI 257 268 264 2 init/calibrate.c:253 (set (reg:SI 3 r3 [156])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 264 257 258 2 init/calibrate.c:255 (set (reg/f:SI 1 r1 [159])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)
        (nil)))

(insn:TI 258 264 9 2 init/calibrate.c:253 (set (reg:SI 3 r3 [156])
        (and:SI (reg:SI 3 r3 [156])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 258 10 2 init/calibrate.c:255 (set (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn:TI 10 9 8 2 init/calibrate.c:255 (set (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2785931)) -1 (nil))

(insn:TI 8 10 222 2 init/calibrate.c:253 (set (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [156])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [156])
        (nil)))

(insn:TI 222 8 12 2 (set (reg/f:SI 3 r3 [213])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 12 222 13 2 init/calibrate.c:255 (set (reg:SI 1 r1 [orig:155 D.6774 ] [155])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [159])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn:TI 13 12 14 2 init/calibrate.c:255 (set (reg:SI 4 r4 [160])
        (mem:SI (plus:SI (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
                (reg:SI 1 r1 [orig:155 D.6774 ] [155])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:155 D.6774 ] [155])
            (nil))))

(insn:TI 14 13 15 2 init/calibrate.c:255 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [160])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 15 14 16 2 init/calibrate.c:255 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 21 16 22 3 init/calibrate.c:257 (set (reg:SI 3 r3 [orig:163 printed ] [163])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [213])
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 printed+0 S1 A8]))
        (nil)))

(insn:TI 22 21 26 3 init/calibrate.c:257 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:163 printed ] [163])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:163 printed ] [163])
        (nil)))

(insn:TI 26 22 23 3 init/calibrate.c:258 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0)
            (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10a205a0>))) 2345 {neon_vornv2di+78} (nil))

(jump_insn 23 26 286 3 init/calibrate.c:257 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 157)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 24 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%] 
;; Succ edge  4 [0.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [0.0%]  (fallthru)
(note 286 23 287 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 287 286 288 4 (set (pc)
        (label_ref 277)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 288 287 30)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 30 288 31 5 6 "" [1 uses])

(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 33 31 225 5 init/calibrate.c:260 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (mem/c/i:SI (reg/f:SI 3 r3 [213]) [0 preset_lpj+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 preset_lpj+0 S4 A32])
        (nil)))

(insn:TI 225 33 34 5 (set (reg:SI 2 r2 [orig:214 printed ] [214])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [213])
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 printed+0 S1 A8]))
        (nil)))

(insn:TI 34 225 35 5 init/calibrate.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 35 34 36 5 init/calibrate.c:260 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 39 36 40 6 init/calibrate.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:214 printed ] [214])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:214 printed ] [214])
        (nil)))

(jump_insn:TI 40 39 41 6 init/calibrate.c:262 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  24 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  6 [0.0%]  (fallthru)
(note 41 40 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 43 41 277 7 init/calibrate.c:263 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10c46690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10c46690>)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 10 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  4 [100.0%] 
(code_label 277 43 275 8 24 "" [2 uses])

(note 275 277 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 44 275 289 8 init/calibrate.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 289 44 290 8 (set (pc)
        (label_ref 157)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 290 289 47)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 47 290 48 9 8 "" [1 uses])

(note 48 47 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 51 48 52 9 init/calibrate.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:214 printed ] [214])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:214 printed ] [214])
        (nil)))

(jump_insn:TI 52 51 53 9 init/calibrate.c:265 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 0 [r0] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)
;; Succ edge  12 [0.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
(note 53 52 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 55 53 56 10 init/calibrate.c:265 discrim 1 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [213])
                (const_int 8 [0x8])) [0 lpj_fine+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [213])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 lpj_fine+0 S4 A32])
            (nil))))

(insn:TI 56 55 60 10 init/calibrate.c:265 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 60 56 57 10 init/calibrate.c:267 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0)
            (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10c5f0e0>))) 2345 {neon_vornv2di+78} (nil))

(jump_insn 57 60 65 10 init/calibrate.c:265 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 277)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 10 -> ( 11 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 (fallthru)
(note 65 57 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 67 65 68 11 init/calibrate.c:275 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c51380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c51380>)
        (nil)))

(call_insn:TI 68 67 69 11 init/calibrate.c:275 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 10 [sl] 13 [sp]
;; live  out 	 10 [sl] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  9 [0.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 69 68 70 12 9 "" [1 uses])

(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 71 70 74 12 init/calibrate.c:192 (set (reg/f:SI 3 r3 [174])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn:TI 74 71 72 12 init/calibrate.c:193 discrim 1 (set (reg/f:SI 2 r2 [224])
        (reg/f:SI 3 r3 [174])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn:TI 72 74 76 12 init/calibrate.c:192 (set (reg/v:SI 3 r3 [orig:143 ticks ] [143])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [174]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 10 [sl] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  13 [86.0%]  (dfs_back)
(code_label 76 72 73 13 11 "" [1 uses])

(note 73 76 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 75 73 245 13 init/calibrate.c:193 discrim 1 (set (reg:SI 1 r1 [orig:139 jiffies.131 ] [139])
        (mem/v/c/i:SI (reg/f:SI 2 r2 [224]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn:TI 245 75 77 13 init/calibrate.c:193 discrim 1 (set (reg/f:SI 9 r9 [175])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn:TI 77 245 78 13 init/calibrate.c:193 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:143 ticks ] [143])
            (reg:SI 1 r1 [orig:139 jiffies.131 ] [139]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:139 jiffies.131 ] [139])
        (nil)))

(jump_insn:TI 78 77 79 13 init/calibrate.c:193 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 13 -> ( 13 14)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [86.0%]  (dfs_back)
;; Succ edge  14 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 11 [fp]
;; live  in  	 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 11 [fp]
;; live  kill	

;; Pred edge  13 [14.0%]  (fallthru,loop_exit)
(note 79 78 82 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 82 79 81 14 init/calibrate.c:187 (set (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 81 82 83 14 init/calibrate.c:196 (set (reg/v:SI 11 fp [orig:138 ticks.199 ] [138])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [175]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn:TI 83 81 84 14 init/calibrate.c:187 (set (reg/v:SI 4 r4 [orig:147 band ] [147])
        (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 84 83 87 14 init/calibrate.c:187 (set (reg/v:SI 7 r7 [orig:146 trials ] [146])
        (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 87 84 102 14 init/calibrate.c:198 (set (reg:SI 8 r8 [221])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  15 [86.0%]  (dfs_back)
(code_label 102 87 85 15 13 "" [1 uses])

(note 85 102 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 88 85 86 15 NOTE_INSN_DELETED)

(insn:TI 86 88 89 15 init/calibrate.c:198 (set (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
        (plus:SI (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 89 86 92 15 init/calibrate.c:198 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (ashift:SI (reg:SI 8 r8 [221])
                (reg/v:SI 4 r4 [orig:147 band ] [147]))
            (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(insn:TI 92 89 243 15 init/calibrate.c:199 (cond_exec (eq (reg:CC_SWP 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:147 band ] [147])
            (plus:SI (reg/v:SI 4 r4 [orig:147 band ] [147])
                (const_int 1 [0x1])))) 2268 {neon_vornv2di+1} (nil))

(insn 243 92 99 15 init/calibrate.c:200 (cond_exec (eq (reg:CC_SWP 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (nil)))

(insn:TI 99 243 96 15 init/calibrate.c:203 (set (reg/v:SI 7 r7 [orig:146 trials ] [146])
        (plus:SI (reg/v:SI 7 r7 [orig:146 trials ] [146])
            (reg/v:SI 4 r4 [orig:147 band ] [147]))) 4 {*arm_addsi3} (nil))

(insn:TI 96 99 97 15 init/calibrate.c:202 (set (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
        (ashift:SI (reg/v:SI 4 r4 [orig:147 band ] [147])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 97 96 98 15 init/calibrate.c:202 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:144 loopadd ] [144])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 98 97 101 15 init/calibrate.c:202 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 101 98 103 15 init/calibrate.c:204 (set (reg:SI 3 r3 [orig:140 jiffies.133 ] [140])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [223]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn:TI 103 101 104 15 init/calibrate.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 11 fp [orig:138 ticks.199 ] [138])
            (reg:SI 3 r3 [orig:140 jiffies.133 ] [140]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:140 jiffies.133 ] [140])
        (nil)))

(jump_insn:TI 104 103 105 15 init/calibrate.c:204 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 15 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [86.0%]  (dfs_back)
;; Succ edge  16 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 8 [r8] 9 [r9]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  15 [14.0%]  (fallthru,loop_exit)
(note 105 104 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 106 105 117 16 init/calibrate.c:211 (set (reg:SI 7 r7 [180])
        (minus:SI (reg/v:SI 7 r7 [orig:146 trials ] [146])
            (reg/v:SI 4 r4 [orig:147 band ] [147]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:147 band ] [147])
        (nil)))

(insn 117 106 107 16 init/calibrate.c:224 (set (reg/f:SI 8 r8 [218])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn:TI 107 117 233 16 init/calibrate.c:211 (set (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])
        (ashift:SI (reg:SI 7 r7 [180])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 233 107 108 16 init/calibrate.c:225 discrim 1 (set (reg/f:SI 9 r9 [219])
        (reg/f:SI 8 r8 [218])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 23) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 11 [fp]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 11 [fp]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
(code_label 108 233 109 17 14 ("recalibrate") [1 uses])

(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 110 109 111 17 init/calibrate.c:221 (set (reg/v:SI 11 fp [orig:145 chop_limit ] [145])
        (lshiftrt:SI (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 111 110 112 17 init/calibrate.c:215 (set (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
        (reg/v:SI 6 r6 [orig:144 loopadd ] [144])) 167 {*arm_movsi_insn} (nil))

(insn:TI 112 111 291 17 init/calibrate.c:214 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])) 167 {*arm_movsi_insn} (nil))

(jump_insn 291 112 292 17 (set (pc)
        (label_ref 139)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 292 291 141)

;; Start of basic block ( 21) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  21 [91.0%] 
(code_label 141 292 115 18 18 "" [1 uses])

(note 115 141 118 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 118 115 116 18 init/calibrate.c:224 (set (reg/v:SI 3 r3 [orig:135 ticks.203 ] [135])
        (mem/v/c/i:SI (reg/f:SI 8 r8 [218]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 116 118 122 18 init/calibrate.c:223 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (plus:SI (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136]))) 4 {*arm_addsi3} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  19 [86.0%]  (dfs_back)
(code_label 122 116 119 19 16 "" [1 uses])

(note 119 122 121 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 121 119 123 19 init/calibrate.c:225 discrim 1 (set (reg:SI 2 r2 [orig:141 jiffies.135 ] [141])
        (mem/v/c/i:SI (reg/f:SI 8 r8 [218]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn:TI 123 121 124 19 init/calibrate.c:225 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:135 ticks.203 ] [135])
            (reg:SI 2 r2 [orig:141 jiffies.135 ] [141]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:141 jiffies.135 ] [141])
        (nil)))

(jump_insn:TI 124 123 125 19 init/calibrate.c:225 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 19 -> ( 19 20)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [86.0%]  (dfs_back)
;; Succ edge  20 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  19 [14.0%]  (fallthru,loop_exit)
(note 125 124 127 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 127 125 128 20 init/calibrate.c:227 (set (reg/v:SI 3 r3 [orig:134 ticks.204 ] [134])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [219]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 128 127 266 20 init/calibrate.c:228 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(insn:TI 266 128 129 20 init/calibrate.c:228 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(call_insn 129 266 131 20 init/calibrate.c:228 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn:TI 131 129 267 20 init/calibrate.c:229 (set (reg:SI 2 r2 [orig:142 jiffies.137 ] [142])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [219]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn:TI 267 131 132 20 init/calibrate.c:229 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 132 267 135 20 init/calibrate.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 jiffies.137 ] [142])
            (reg/v:SI 3 r3 [orig:134 ticks.204 ] [134]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 ticks.204 ] [134])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 jiffies.137 ] [142])
            (nil))))

(insn:TI 135 132 138 20 init/calibrate.c:230 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (minus:SI (reg/v:SI 4 r4 [orig:154 lpj ] [154])
                (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])))) 2270 {neon_vornv2di+3} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 138 135 139 20 init/calibrate.c:231 (set (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 20 17) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru,dfs_back)
;; Pred edge  17 [100.0%] 
(code_label 139 138 140 21 15 "" [1 uses])

(note 140 139 142 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 142 140 143 21 init/calibrate.c:222 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
            (reg/v:SI 11 fp [orig:145 chop_limit ] [145]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 143 142 144 21 init/calibrate.c:222 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 21 -> ( 18 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [91.0%] 
;; Succ edge  22 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  21 [9.0%]  (fallthru,loop_exit)
(note 144 143 146 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 146 144 148 22 NOTE_INSN_DELETED)

(note 148 146 147 22 NOTE_INSN_DELETED)

(insn:TI 147 148 149 22 init/calibrate.c:238 (set (reg:SI 5 r5 [186])
        (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
                (const_int 2 [0x2]))
            (reg/v:SI 4 r4 [orig:154 lpj ] [154]))) 270 {*arith_shiftsi} (nil))

(insn 149 147 150 22 init/calibrate.c:238 (set (reg:SI 7 r7 [188])
        (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
                (const_int 2 [0x2]))
            (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137]))) 270 {*arith_shiftsi} (nil))

(insn:TI 150 149 151 22 init/calibrate.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [186])
            (reg:SI 7 r7 [188]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 151 150 152 22 init/calibrate.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 900 [0x384])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [91.0%]  (fallthru)
;; Succ edge  24 [9.0%]  (loop_exit)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  22 [91.0%]  (fallthru)
(note 152 151 153 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 153 152 154 23 init/calibrate.c:240 (set (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
        (ashift:SI (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 154 153 293 23 init/calibrate.c:240 (set (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (nil)))

(jump_insn:TI 293 154 294 23 (set (pc)
        (label_ref 108)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 17)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 294 293 157)

;; Start of basic block ( 6 22 3 8) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%] 
;; Pred edge  22 [9.0%]  (loop_exit)
;; Pred edge  3 [100.0%] 
;; Pred edge  8 [100.0%] 
(code_label 157 294 158 24 7 "" [4 uses])

(note 158 157 263 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 263 158 159 24 init/calibrate.c:278 (set (reg/f:SI 2 r2 [190])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)
        (nil)))

(insn:TI 159 263 160 24 init/calibrate.c:278 (set (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn:TI 160 159 162 24 init/calibrate.c:278 (set (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2788871)) -1 (nil))

(insn:TI 162 160 163 24 init/calibrate.c:278 (set (reg:SI 2 r2 [191])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [190])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn:TI 163 162 262 24 init/calibrate.c:278 (set (mem:SI (plus:SI (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
                (reg:SI 2 r2 [191])) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
        (expr_list:REG_DEAD (reg:SI 2 r2 [191])
            (nil))))

(insn:TI 262 163 165 24 init/calibrate.c:279 (set (reg/f:SI 3 r3 [192])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 165 262 166 24 init/calibrate.c:279 (set (reg:SI 3 r3 [orig:193 printed ] [193])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [192])
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 printed+0 S1 A8]))
        (nil)))

(insn:TI 166 165 167 24 init/calibrate.c:279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:193 printed ] [193])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:193 printed ] [193])
        (nil)))

(jump_insn:TI 167 166 168 24 init/calibrate.c:279 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  25 [0.0%]  (fallthru)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  24 [0.0%]  (fallthru)
(note 168 167 171 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:TI 171 168 170 25 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (nil))

(insn 170 171 172 25 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 172 170 175 25 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 175 172 173 25 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 173 175 174 25 init/calibrate.c:280 (set (reg:SI 5 r5 [198])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 4 r4 [orig:154 lpj ] [154])
                (const_int 5000 [0x1388]))
            (nil))))

(insn 174 173 176 25 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 176 174 179 25 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 179 176 180 25 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 180 179 182 25 init/calibrate.c:280 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 182 180 185 25 init/calibrate.c:280 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10c67600>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10c67600>)
        (nil)))

(insn:TI 185 182 181 25 init/calibrate.c:280 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(insn:TI 181 185 183 25 init/calibrate.c:280 (set (reg:SI 2 r2 [orig:208+4 ] [208])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 183 181 186 25 init/calibrate.c:280 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [198])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 186 183 187 25 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 25 -> ( 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  24 [100.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 187 186 188 26 19 "" [1 uses])

(note 188 187 189 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:TI 189 188 260 26 init/calibrate.c:284 (set (reg/f:SI 3 r3 [209])
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10b96180 loops_per_jiffy>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10b96180 loops_per_jiffy>)
        (nil)))

(insn 260 189 190 26 init/calibrate.c:285 (set (reg:SI 2 r2 [211])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn:TI 190 260 261 26 init/calibrate.c:284 (set (mem/c/i:SI (reg/f:SI 3 r3 [209]) [0 loops_per_jiffy+0 S4 A32])
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [209])
        (nil)))

(insn:TI 261 190 194 26 init/calibrate.c:285 (set (reg/f:SI 3 r3 [210])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn:TI 194 261 272 26 init/calibrate.c:285 (set (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [210])
                (const_int 4 [0x4])) [0 printed+0 S1 A8])
        (reg:QI 2 r2 [211])) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [210])
        (expr_list:REG_DEAD (reg:QI 2 r2 [211])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(note 272 194 273 26 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 273 272 274 26 init/calibrate.c:286 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 26 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 274 273 259)

(note 259 274 265 NOTE_INSN_DELETED)

(note 265 259 0 NOTE_INSN_DELETED)

