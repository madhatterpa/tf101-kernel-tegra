
;; Function lpj_setup (lpj_setup)[0:370] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 23(l0): point = 0
   Insn 17(l0): point = 2
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 9(l0): point = 8
   Insn 8(l0): point = 10
   Insn 7(l0): point = 12
 a0(r136): [5..6]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r136): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r136,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136
    modified regnos: 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 3
Disposition:
    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 1
insn=8, live_throughout: 0, 1, 13, dead_or_set: 2
insn=9, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=11, live_throughout: 0, 13, 14, dead_or_set: 136
insn=12, live_throughout: 13, 14, dead_or_set: 0, 136
insn=17, live_throughout: 13, 14, dead_or_set: 0
insn=23, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 11 (nil))
changing reg in insn 11
changing reg in insn 12
Spilling for insn 12.

Reloads for insn # 12
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [136]) [0 preset_lpj+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [136]) [0 preset_lpj+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


lpj_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{128d,12u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 13 2 NOTE_INSN_DELETED)

(note 13 10 7 2 NOTE_INSN_DELETED)

(insn 7 13 8 2 init/calibrate.c:18 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/calibrate.c:18 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 11 2 init/calibrate.c:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a71000 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 9 12 2 init/calibrate.c:18 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 12 11 17 2 init/calibrate.c:18 (set (mem/c/i:SI (reg/f:SI 3 r3 [136]) [0 preset_lpj+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 12 23 2 init/calibrate.c:20 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 23 17 27 2 init/calibrate.c:20 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 23 28 NOTE_INSN_DELETED)

(note 28 27 0 NOTE_INSN_DELETED)


;; Function calibrate_delay (calibrate_delay)[0:373] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 260.
verify found no changes in insn with uid = 260.
deleting insn with uid = 192.
scanning new insn with uid = 261.
verify found no changes in insn with uid = 261.
deleting insn with uid = 191.
scanning new insn with uid = 262.
verify found no changes in insn with uid = 262.
deleting insn with uid = 164.
scanning new insn with uid = 263.
verify found no changes in insn with uid = 263.
deleting insn with uid = 161.
scanning new insn with uid = 264.
verify found no changes in insn with uid = 264.
deleting insn with uid = 11.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 44 count 66 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 44 count 66 (  2.1)

Pass 0 for finding allocno costs

    a77 (r224,l1) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r224,l0) best GENERAL_REGS, cover GENERAL_REGS
    a72 (r223,l2) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    a71 (r221,l2) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    a64 (r219,l5) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r219,l4) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r219,l3) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a63 (r218,l5) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r218,l4) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r218,l3) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r218,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r211,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r208,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r188,l3) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r186,l3) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a78 (r175,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a62 (r154,l5) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r154,l4) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r154,l3) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a76 (r153,l1) best GENERAL_REGS, cover GENERAL_REGS
    a70 (r153,l2) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r153,l5) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r153,l4) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r153,l3) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a69 (r148,l2) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a68 (r147,l2) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a67 (r146,l2) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r145,l5) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r145,l4) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r145,l3) best GENERAL_REGS, cover GENERAL_REGS
    a73 (r144,l2) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r144,l5) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r144,l4) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r144,l3) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a75 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r142,l4) best GENERAL_REGS, cover GENERAL_REGS
    a65 (r141,l5) best GENERAL_REGS, cover GENERAL_REGS
    a74 (r140,l2) best GENERAL_REGS, cover GENERAL_REGS
    a79 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a66 (r138,l2) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r137,l5) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r137,l4) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r137,l3) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r136,l5) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r136,l4) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r136,l3) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r135,l5) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r135,l4) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r134,l4) best GENERAL_REGS, cover GENERAL_REGS

  a0(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a4(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a10(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a19(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a21(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a26(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a29(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a31(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r156,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a35(r137,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a36(r144,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a37(r153,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r218,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a39(r219,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r154,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a41(r188,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r186,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r136,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r145,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r136,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a46(r137,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a47(r144,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a48(r145,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a49(r153,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a50(r154,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a51(r218,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a52(r219,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a53(r134,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r142,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r135,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a56(r135,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a57(r136,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a58(r137,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a59(r144,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a60(r145,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a61(r153,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a62(r154,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a63(r218,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a64(r219,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a65(r141,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a66(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a67(r146,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a68(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a69(r148,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a70(r153,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a71(r221,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a72(r223,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a73(r144,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a74(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a75(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a76(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a77(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a78(r175,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a79(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r224: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a4(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a10(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a19(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a21(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a26(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a29(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a31(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r156,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a35(r137,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a36(r144,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a37(r153,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r218,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a39(r219,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r154,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a41(r188,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r186,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r136,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r145,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r136,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a46(r137,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a47(r144,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a48(r145,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a49(r153,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a50(r154,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a51(r218,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a52(r219,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a53(r134,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r142,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r135,l4) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a56(r135,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a57(r136,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a58(r137,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a59(r144,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a60(r145,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a61(r153,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a62(r154,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a63(r218,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a64(r219,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a65(r141,l5) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a66(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a67(r146,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a68(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a69(r148,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a70(r153,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a71(r221,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a72(r223,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a73(r144,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a74(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a75(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a76(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a77(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a78(r175,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a79(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 194(l0): point = 0
   Insn 261(l0): point = 2
   Insn 260(l0): point = 4
   Insn 190(l0): point = 6
   Insn 189(l0): point = 8
   Insn 186(l0): point = 11
   Insn 185(l0): point = 13
   Insn 182(l0): point = 15
   Insn 183(l0): point = 17
   Insn 184(l0): point = 19
   Insn 181(l0): point = 21
   Insn 180(l0): point = 23
   Insn 179(l0): point = 25
   Insn 176(l0): point = 27
   Insn 175(l0): point = 29
   Insn 174(l0): point = 31
   Insn 173(l0): point = 33
   Insn 172(l0): point = 35
   Insn 170(l0): point = 37
   Insn 171(l0): point = 39
   Insn 167(l0): point = 42
   Insn 166(l0): point = 44
   Insn 165(l0): point = 46
   Insn 262(l0): point = 48
   Insn 163(l0): point = 50
   Insn 160(l0): point = 52
   Insn 162(l0): point = 54
   Insn 263(l0): point = 56
   Insn 159(l0): point = 58
   Insn 233(l0): point = 61
   Insn 107(l0): point = 63
   Insn 117(l0): point = 65
   Insn 106(l0): point = 67
   Insn 87(l0): point = 70
   Insn 84(l0): point = 72
   Insn 83(l0): point = 74
   Insn 100(l0): point = 76
   Insn 81(l0): point = 78
   Insn 82(l0): point = 80
   Insn 72(l0): point = 83
   Insn 74(l0): point = 85
   Insn 71(l0): point = 87
   Insn 68(l0): point = 90
   Insn 67(l0): point = 92
   Insn 250(l0): point = 95
   Insn 61(l0): point = 97
   Insn 60(l0): point = 99
   Insn 57(l0): point = 102
   Insn 56(l0): point = 104
   Insn 55(l0): point = 106
   Insn 52(l0): point = 109
   Insn 51(l0): point = 111
   Insn 248(l0): point = 114
   Insn 44(l0): point = 116
   Insn 43(l0): point = 118
   Insn 40(l0): point = 121
   Insn 39(l0): point = 123
   Insn 35(l0): point = 126
   Insn 34(l0): point = 128
   Insn 225(l0): point = 130
   Insn 33(l0): point = 132
   Insn 246(l0): point = 135
   Insn 27(l0): point = 137
   Insn 26(l0): point = 139
   Insn 23(l0): point = 142
   Insn 22(l0): point = 144
   Insn 19(l0): point = 146
   Insn 21(l0): point = 148
   Insn 15(l0): point = 151
   Insn 14(l0): point = 153
   Insn 13(l0): point = 155
   Insn 12(l0): point = 157
   Insn 264(l0): point = 159
   Insn 222(l0): point = 161
   Insn 8(l0): point = 163
   Insn 10(l0): point = 165
   Insn 9(l0): point = 167
   Insn 258(l0): point = 169
   Insn 257(l0): point = 171
   Insn 254(l3): point = 174
   Insn 154(l3): point = 176
   Insn 153(l3): point = 178
   Insn 151(l3): point = 181
   Insn 150(l3): point = 183
   Insn 149(l3): point = 185
   Insn 147(l3): point = 187
   Insn 252(l3): point = 190
   Insn 112(l3): point = 192
   Insn 111(l3): point = 194
   Insn 110(l3): point = 196
   Insn 143(l4): point = 199
   Insn 142(l4): point = 201
   Insn 138(l4): point = 204
   Insn 135(l4): point = 207
   Insn 133(l4): point = 210
   Insn 132(l4): point = 212
   Insn 131(l4): point = 214
   Insn 129(l4): point = 216
   Insn 127(l4): point = 218
   Insn 128(l4): point = 220
   Insn 116(l4): point = 223
   Insn 118(l4): point = 225
   Insn 124(l5): point = 228
   Insn 123(l5): point = 230
   Insn 121(l5): point = 232
   Insn 104(l2): point = 235
   Insn 103(l2): point = 237
   Insn 101(l2): point = 239
   Insn 98(l2): point = 241
   Insn 97(l2): point = 243
   Insn 96(l2): point = 245
   Insn 99(l2): point = 247
   Insn 243(l2): point = 250
   Insn 92(l2): point = 252
   Insn 90(l2): point = 255
   Insn 89(l2): point = 257
   Insn 86(l2): point = 259
   Insn 78(l1): point = 262
   Insn 77(l1): point = 264
   Insn 245(l1): point = 266
   Insn 75(l1): point = 268
 a0(r210): [1..2]
 a1(r211): [1..4]
 a2(r209): [7..8]
 a3(r154): [135..146] [114..132] [95..106] [7..60]
 a4(r198): [18..33]
 a5(r208): [20..21]
 a6(r193): [45..46]
 a7(r192): [47..48]
 a8(r191): [51..54]
 a9(r150): [51..58]
 a10(r190): [55..56]
 a11(r153): [55..163]
 a12(r219): [61..61]
 a13(r218): [61..65]
 a14(r137): [61..63]
 a15(r180): [64..67]
 a16(r147): [68..74]
 a17(r146): [68..72]
 a18(r144): [61..69]
 a19(r221): [70..70]
 a20(r148): [70..80]
 a21(r223): [70..76]
 a22(r175): [77..82]
 a23(r138): [70..78]
 a24(r143): [83..83]
 a25(r174): [84..87]
 a26(r224): [83..85]
 a27(r213): [149..161] [126..134] [107..113]
 a28(r214): [124..130] [112..113]
 a29(r163): [145..148]
 a30(r160): [147..155]
 a31(r155): [156..157]
 a32(r152): [156..167]
 a33(r159): [158..159]
 a34(r156): [164..171]
 a35(r137): [186..198] [174..176]
 a36(r144): [174..198]
 a37(r153): [174..198]
 a38(r218): [174..198]
 a39(r219): [174..198]
 a40(r154): [177..192]
 a41(r188): [184..185]
 a42(r186): [184..187]
 a43(r136): [188..194]
 a44(r145): [190..196]
 a45(r136): [199..227]
 a46(r137): [199..227]
 a47(r144): [199..227]
 a48(r145): [199..227]
 a49(r153): [199..227]
 a50(r154): [199..227]
 a51(r218): [199..227]
 a52(r219): [199..227]
 a53(r134): [213..218]
 a54(r142): [213..214]
 a55(r135): [223..225]
 a56(r135): [228..234]
 a57(r136): [228..234]
 a58(r137): [228..234]
 a59(r144): [228..234]
 a60(r145): [228..234]
 a61(r153): [228..234]
 a62(r154): [228..234]
 a63(r218): [228..234]
 a64(r219): [228..234]
 a65(r141): [231..232]
 a66(r138): [235..261]
 a67(r146): [235..261]
 a68(r147): [235..261]
 a69(r148): [255..261] [235..250]
 a70(r153): [235..261]
 a71(r221): [235..261]
 a72(r223): [235..261]
 a73(r144): [235..245]
 a74(r140): [238..239]
 a75(r143): [262..270]
 a76(r153): [262..270]
 a77(r224): [262..270]
 a78(r175): [262..266]
 a79(r139): [265..268]
 Rebuilding regno allocno list for 188
 Rebuilding regno allocno list for 186
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 142
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 140
 Rebuilding regno allocno list for 139
 Rebuilding regno allocno list for 136
 Rebuilding regno allocno list for 135
 Rebuilding regno allocno list for 134
Compressing live ranges: from 271 to 99 - 36%
Ranges after the compression:
 a0(r210): [0..1]
 a1(r211): [0..2]
 a2(r209): [3..4]
 a3(r154): [77..86] [67..74] [49..51] [43..47] [38..39] [3..18]
 a4(r198): [5..8]
 a5(r208): [6..7]
 a6(r193): [9..10]
 a7(r192): [11..12]
 a8(r191): [13..14]
 a9(r150): [13..17]
 a10(r190): [15..16]
 a11(r153): [65..98] [15..61]
 a12(r219): [65..86] [19..19]
 a13(r218): [65..86] [19..22]
 a14(r137): [70..86] [65..66] [19..20]
 a15(r180): [21..23]
 a16(r147): [87..93] [24..28]
 a17(r146): [87..93] [24..27]
 a18(r144): [65..90] [19..25]
 a19(r221): [87..93] [26..26]
 a20(r148): [92..93] [87..91] [26..32]
 a21(r223): [87..93] [26..29]
 a22(r175): [94..96] [30..33]
 a23(r138): [87..93] [26..31]
 a24(r143): [94..98] [34..34]
 a25(r174): [35..37]
 a26(r224): [94..98] [34..36]
 a27(r213): [54..60] [45..48] [40..42]
 a28(r214): [44..46] [41..42]
 a29(r163): [50..53]
 a30(r160): [52..55]
 a31(r155): [56..57]
 a32(r152): [56..63]
 a33(r159): [58..59]
 a34(r156): [62..64]
 a41(r188): [68..69]
 a42(r186): [68..71]
 a43(r136): [77..86] [72..75]
 a44(r145): [77..86] [73..76]
 a53(r134): [78..80]
 a54(r142): [78..79]
 a55(r135): [83..86] [81..82]
 a65(r141): [84..85]
 a74(r140): [88..89]
 a79(r139): [95..97]
+++Allocating 360 bytes for conflict table (uncompressed size 1280)
;; a0(r210,l0) conflicts: a1(r211,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r211,l0) conflicts: a0(r210,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r209,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r154,l0) conflicts: a2(r209,l0) a4(r198,l0) a5(r208,l0) a6(r193,l0) a7(r192,l0) a8(r191,l0) a9(r150,l0) a10(r190,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a27(r213,l0) a28(r214,l0) a29(r163,l0) a41(r188,l0) a42(r186,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r198,l0) conflicts: a3(r154,l0) a5(r208,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r208,l0) conflicts: a3(r154,l0) a4(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r193,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r192,l0) conflicts: a3(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r191,l0) conflicts: a3(r154,l0) a9(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r150,l0) conflicts: a3(r154,l0) a8(r191,l0) a10(r190,l0) a11(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r190,l0) conflicts: a3(r154,l0) a9(r150,l0) a11(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r153,l0) conflicts: a3(r154,l0) a9(r150,l0) a10(r190,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a15(r180,l0) a16(r147,l0) a17(r146,l0) a19(r221,l0) a20(r148,l0) a21(r223,l0) a23(r138,l0) a22(r175,l0) a24(r143,l0) a26(r224,l0) a25(r174,l0) a27(r213,l0) a28(r214,l0) a29(r163,l0) a30(r160,l0) a31(r155,l0) a32(r152,l0) a33(r159,l0) a41(r188,l0) a42(r186,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0) a74(r140,l0) a79(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a12(r219,l0) conflicts: a3(r154,l0) a11(r153,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a41(r188,l0) a42(r186,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a13(r218,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a14(r137,l0) a18(r144,l0) a15(r180,l0) a41(r188,l0) a42(r186,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a14(r137,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a18(r144,l0) a42(r186,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a15(r180,l0) conflicts: a11(r153,l0) a13(r218,l0) a18(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r147,l0) conflicts: a11(r153,l0) a18(r144,l0) a17(r146,l0) a19(r221,l0) a20(r148,l0) a21(r223,l0) a23(r138,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a17(r146,l0) conflicts: a11(r153,l0) a18(r144,l0) a16(r147,l0) a19(r221,l0) a20(r148,l0) a21(r223,l0) a23(r138,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a18(r144,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a15(r180,l0) a16(r147,l0) a17(r146,l0) a19(r221,l0) a20(r148,l0) a21(r223,l0) a23(r138,l0) a41(r188,l0) a42(r186,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a19(r221,l0) conflicts: a11(r153,l0) a18(r144,l0) a16(r147,l0) a17(r146,l0) a20(r148,l0) a21(r223,l0) a23(r138,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a20(r148,l0) conflicts: a11(r153,l0) a18(r144,l0) a16(r147,l0) a17(r146,l0) a19(r221,l0) a21(r223,l0) a23(r138,l0) a22(r175,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a21(r223,l0) conflicts: a11(r153,l0) a18(r144,l0) a16(r147,l0) a17(r146,l0) a19(r221,l0) a20(r148,l0) a23(r138,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a22(r175,l0) conflicts: a11(r153,l0) a20(r148,l0) a23(r138,l0) a24(r143,l0) a26(r224,l0) a79(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a23(r138,l0) conflicts: a11(r153,l0) a18(r144,l0) a16(r147,l0) a17(r146,l0) a19(r221,l0) a20(r148,l0) a21(r223,l0) a22(r175,l0) a74(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a24(r143,l0) conflicts: a11(r153,l0) a22(r175,l0) a26(r224,l0) a79(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r174,l0) conflicts: a11(r153,l0) a26(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a26(r224,l0) conflicts: a11(r153,l0) a22(r175,l0) a24(r143,l0) a25(r174,l0) a79(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r213,l0) conflicts: a3(r154,l0) a11(r153,l0) a28(r214,l0) a30(r160,l0) a31(r155,l0) a32(r152,l0) a33(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r214,l0) conflicts: a3(r154,l0) a11(r153,l0) a27(r213,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a29(r163,l0) conflicts: a3(r154,l0) a11(r153,l0) a30(r160,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r160,l0) conflicts: a11(r153,l0) a27(r213,l0) a29(r163,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r155,l0) conflicts: a11(r153,l0) a27(r213,l0) a32(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a32(r152,l0) conflicts: a11(r153,l0) a27(r213,l0) a31(r155,l0) a33(r159,l0) a34(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a33(r159,l0) conflicts: a11(r153,l0) a27(r213,l0) a32(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a34(r156,l0) conflicts: a32(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a41(r188,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a18(r144,l0) a42(r186,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a42(r186,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a41(r188,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a43(r136,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a44(r145,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a44(r145,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a43(r136,l0) a54(r142,l0) a53(r134,l0) a55(r135,l0) a65(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a53(r134,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a43(r136,l0) a44(r145,l0) a54(r142,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a54(r142,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a43(r136,l0) a44(r145,l0) a53(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a55(r135,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a43(r136,l0) a44(r145,l0) a65(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a65(r141,l0) conflicts: a3(r154,l0) a11(r153,l0) a12(r219,l0) a13(r218,l0) a14(r137,l0) a18(r144,l0) a43(r136,l0) a44(r145,l0) a55(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a74(r140,l0) conflicts: a11(r153,l0) a18(r144,l0) a16(r147,l0) a17(r146,l0) a19(r221,l0) a20(r148,l0) a21(r223,l0) a23(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a79(r139,l0) conflicts: a11(r153,l0) a22(r175,l0) a24(r143,l0) a26(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a42(r186)<->a43(r136)@125:shuffle
  cp1:a14(r137)<->a41(r188)@125:shuffle
  cp2:a15(r180)<->a17(r146)@125:shuffle
  cp3:a15(r180)<->a16(r147)@125:shuffle
  cp4:a14(r137)<->a15(r180)@125:shuffle
  cp5:a21(r223)<->a22(r175)@1000:move
  cp6:a3(r154)<->a30(r160)@1000:move
  regions=6, blocks=31, points=99
    allocnos=80, copies=7, conflicts=6, ranges=72

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r210 1r211 2r209 3r154 4r198 5r208 6r193 7r192 8r191 9r150 10r190 11r153 12r219 13r218 14r137 15r180 16r147 17r146 18r144 19r221 20r148 21r223 22r175 23r138 24r143 25r174 26r224 27r213 28r214 29r163 30r160 31r155 32r152 33r159 34r156 41r188 42r186 43r136 44r145 53r134 54r142 55r135 65r141 74r140 79r139
    modified regnos: 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 150 152 153 154 155 156 159 160 163 174 175 180 186 188 190 191 192 193 198 208 209 210 211 213 214 218 219 221 223 224
    border:
    Pressure: GENERAL_REGS=11
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 211 of GENERAL_REGS has 1 regs less
    Reg 209 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 5 regs less
    Reg 198 of GENERAL_REGS has 4 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 192 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 190 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 2 regs less
    Reg 219 of GENERAL_REGS has 2 regs less
    Reg 218 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 2 regs less
    Reg 146 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 221 of GENERAL_REGS has 2 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 223 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a79(r139,l0)
      Pushing a65(r141,l0)
      Pushing a55(r135,l0)
      Pushing a26(r224,l0)
      Pushing a24(r143,l0)
      Pushing a5(r208,l0)
      Pushing a25(r174,l0)
      Pushing a22(r175,l0)
      Pushing a74(r140,l0)
      Pushing a54(r142,l0)
      Pushing a42(r186,l0)
      Pushing a41(r188,l0)
      Pushing a33(r159,l0)
      Pushing a31(r155,l0)
      Pushing a29(r163,l0)
      Pushing a15(r180,l0)
      Pushing a10(r190,l0)
      Pushing a8(r191,l0)
      Pushing a7(r192,l0)
      Pushing a6(r193,l0)
      Pushing a2(r209,l0)
      Pushing a1(r211,l0)
      Pushing a0(r210,l0)
      Pushing a30(r160,l0)
      Pushing a28(r214,l0)
      Pushing a34(r156,l0)
      Pushing a32(r152,l0)
      Pushing a9(r150,l0)
      Pushing a27(r213,l0)
      Pushing a53(r134,l0)
      Pushing a44(r145,l0)
      Pushing a23(r138,l0)
      Pushing a21(r223,l0)
      Pushing a19(r221,l0)
      Pushing a12(r219,l0)
      Pushing a11(r153,l0)
      Pushing a17(r146,l0)
      Pushing a13(r218,l0)
      Pushing a14(r137,l0)
      Pushing a18(r144,l0)
      Pushing a43(r136,l0)
      Pushing a20(r148,l0)
      Pushing a16(r147,l0)
      Pushing a4(r198,l0)
      Pushing a3(r154,l0)
      Popping a3(r154,l0)  -- assign reg 4
      Popping a4(r198,l0)  -- assign reg 5
      Popping a16(r147,l0)  -- assign reg 4
      Popping a20(r148,l0)  -- assign reg 5
      Popping a43(r136,l0)  -- assign reg 5
      Popping a18(r144,l0)  -- assign reg 6
      Popping a14(r137,l0)  -- assign reg 7
      Popping a13(r218,l0)  -- assign reg 8
      Popping a17(r146,l0)  -- assign reg 7
      Popping a11(r153,l0)  -- assign reg 10
      Popping a12(r219,l0)  -- assign reg 9
      Popping a19(r221,l0)  -- assign reg 8
      Popping a21(r223,l0)  -- assign reg 9
      Popping a23(r138,l0)  -- assign reg 11
      Popping a44(r145,l0)  -- assign reg 11
      Popping a53(r134,l0)  -- assign reg 3
      Popping a27(r213,l0)  -- assign reg 3
      Popping a9(r150,l0)  -- assign reg 3
      Popping a32(r152,l0)  -- assign reg 2
      Popping a34(r156,l0)  -- assign reg 3
      Popping a28(r214,l0)  -- assign reg 2
      Popping a30(r160,l0)  -- assign reg 4
      Popping a0(r210,l0)  -- assign reg 3
      Popping a1(r211,l0)  -- assign reg 2
      Popping a2(r209,l0)  -- assign reg 3
      Popping a6(r193,l0)  -- assign reg 3
      Popping a7(r192,l0)  -- assign reg 3
      Popping a8(r191,l0)  -- assign reg 2
      Popping a10(r190,l0)  -- assign reg 2
      Popping a15(r180,l0)  -- assign reg 7
      Popping a29(r163,l0)  -- assign reg 3
      Popping a31(r155,l0)  -- assign reg 1
      Popping a33(r159,l0)  -- assign reg 1
      Popping a41(r188,l0)  -- assign reg 7
      Popping a42(r186,l0)  -- assign reg 5
      Popping a54(r142,l0)  -- assign reg 2
      Popping a74(r140,l0)  -- assign reg 3
      Popping a22(r175,l0)  -- assign reg 9
      Popping a25(r174,l0)  -- assign reg 3
      Popping a5(r208,l0)  -- assign reg 2
      Popping a24(r143,l0)  -- assign reg 3
      Popping a26(r224,l0)  -- assign reg 2
      Popping a55(r135,l0)  -- assign reg 3
      Popping a65(r141,l0)  -- assign reg 2
      Popping a79(r139,l0)  -- assign reg 1
Disposition:
   53:r134 l0     3   55:r135 l0     3   43:r136 l0     5   14:r137 l0     7
   23:r138 l0    11   79:r139 l0     1   74:r140 l0     3   65:r141 l0     2
   54:r142 l0     2   24:r143 l0     3   18:r144 l0     6   44:r145 l0    11
   17:r146 l0     7   16:r147 l0     4   20:r148 l0     5    9:r150 l0     3
   32:r152 l0     2   11:r153 l0    10    3:r154 l0     4   31:r155 l0     1
   34:r156 l0     3   33:r159 l0     1   30:r160 l0     4   29:r163 l0     3
   25:r174 l0     3   22:r175 l0     9   15:r180 l0     7   42:r186 l0     5
   41:r188 l0     7   10:r190 l0     2    8:r191 l0     2    7:r192 l0     3
    6:r193 l0     3    4:r198 l0     5    5:r208 l0     2    2:r209 l0     3
    0:r210 l0     3    1:r211 l0     2   27:r213 l0     3   28:r214 l0     2
   13:r218 l0     8   12:r219 l0     9   19:r221 l0     8   21:r223 l0     9
   26:r224 l0     2
New iteration of spill/restore move
+++Costs: overall 18000, reg 18000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=257, live_throughout: 13, 14, dead_or_set: 156
insn=258, live_throughout: 13, 14, dead_or_set: 156
insn=9, live_throughout: 13, 14, 156, dead_or_set: 152
insn=10, live_throughout: 13, 14, 156, dead_or_set: 152
insn=8, live_throughout: 13, 14, 152, dead_or_set: 153, 156
insn=222, live_throughout: 13, 14, 152, 153, dead_or_set: 213
insn=264, live_throughout: 13, 14, 152, 153, 213, dead_or_set: 159
insn=12, live_throughout: 13, 14, 152, 153, 213, dead_or_set: 155, 159
insn=13, live_throughout: 13, 14, 153, 213, dead_or_set: 152, 155, 160
insn=14, live_throughout: 13, 14, 153, 160, 213, dead_or_set: 
insn=15, live_throughout: 13, 14, 153, 160, 213, dead_or_set: 
insn=21, live_throughout: 13, 14, 153, 160, dead_or_set: 163, 213
insn=19, live_throughout: 13, 14, 153, 163, dead_or_set: 154, 160
insn=22, live_throughout: 13, 14, 153, 154, dead_or_set: 163
insn=23, live_throughout: 13, 14, 153, 154, dead_or_set: 
insn=26, live_throughout: 13, 153, 154, dead_or_set: 0
insn=27, live_throughout: 13, 153, 154, dead_or_set: 0, 14
insn=246, live_throughout: 13, 14, 153, 154, dead_or_set: 
insn=30, live_throughout: 13, 14, 153, 213, dead_or_set: 
insn=33, live_throughout: 13, 14, 153, 213, dead_or_set: 154
insn=225, live_throughout: 13, 14, 153, 154, 213, dead_or_set: 214
insn=34, live_throughout: 13, 14, 153, 154, 213, 214, dead_or_set: 
insn=35, live_throughout: 13, 14, 153, 154, 213, 214, dead_or_set: 
insn=39, live_throughout: 13, 14, 153, 154, dead_or_set: 214
insn=40, live_throughout: 13, 14, 153, 154, dead_or_set: 
insn=43, live_throughout: 13, 153, 154, dead_or_set: 0
insn=44, live_throughout: 13, 153, 154, dead_or_set: 0, 14
insn=248, live_throughout: 13, 14, 153, 154, dead_or_set: 
insn=47, live_throughout: 13, 153, 213, 214, dead_or_set: 
insn=51, live_throughout: 13, 153, 213, dead_or_set: 214
insn=52, live_throughout: 13, 153, 213, dead_or_set: 
insn=55, live_throughout: 13, 153, dead_or_set: 154, 213
insn=56, live_throughout: 13, 153, 154, dead_or_set: 
insn=57, live_throughout: 13, 153, 154, dead_or_set: 
insn=60, live_throughout: 13, 153, 154, dead_or_set: 0
insn=61, live_throughout: 13, 153, 154, dead_or_set: 0, 14
insn=250, live_throughout: 13, 14, 153, 154, dead_or_set: 
insn=64, live_throughout: 13, 153, dead_or_set: 
insn=67, live_throughout: 13, 153, dead_or_set: 0
insn=68, live_throughout: 13, 153, dead_or_set: 0, 14
insn=69, live_throughout: 13, 153, dead_or_set: 
insn=71, live_throughout: 13, 153, dead_or_set: 174
insn=74, live_throughout: 13, 153, 174, dead_or_set: 224
insn=72, live_throughout: 13, 153, 224, dead_or_set: 143, 174
insn=76, live_throughout: 13, 143, 153, 224, dead_or_set: 
insn=75, live_throughout: 13, 143, 153, 224, dead_or_set: 139
insn=245, live_throughout: 13, 139, 143, 153, 224, dead_or_set: 175
insn=77, live_throughout: 13, 143, 153, 175, 224, dead_or_set: 139
insn=78, live_throughout: 13, 143, 153, 175, 224, dead_or_set: 
insn=82, live_throughout: 13, 153, 175, dead_or_set: 148
insn=81, live_throughout: 13, 148, 153, 175, dead_or_set: 138
insn=100, live_throughout: 13, 138, 148, 153, dead_or_set: 175, 223
insn=83, live_throughout: 13, 138, 148, 153, 223, dead_or_set: 147
insn=84, live_throughout: 13, 138, 147, 148, 153, 223, dead_or_set: 146
insn=87, live_throughout: 13, 138, 146, 147, 148, 153, 223, dead_or_set: 221
insn=102, live_throughout: 13, 138, 146, 147, 148, 153, 221, 223, dead_or_set: 
insn=86, live_throughout: 13, 138, 146, 147, 153, 221, 223, dead_or_set: 148
insn=89, live_throughout: 13, 138, 146, 147, 148, 153, 221, 223, dead_or_set: 
insn=90, live_throughout: 13, 138, 146, 147, 148, 153, 221, 223, dead_or_set: 
insn=92, live_throughout: 13, 138, 146, 153, 221, 223, dead_or_set: 147
insn=243, live_throughout: 13, 138, 146, 147, 153, 221, 223, dead_or_set: 148
insn=94, live_throughout: 13, 138, 146, 147, 148, 153, 221, 223, dead_or_set: 
insn=99, live_throughout: 13, 138, 147, 148, 153, 221, 223, dead_or_set: 146
insn=96, live_throughout: 13, 138, 146, 147, 148, 153, 221, 223, dead_or_set: 144
insn=97, live_throughout: 13, 138, 144, 146, 147, 148, 153, 221, 223, dead_or_set: 0
insn=98, live_throughout: 13, 138, 144, 146, 147, 148, 153, 221, 223, dead_or_set: 0, 14
insn=101, live_throughout: 13, 14, 138, 144, 146, 147, 148, 153, 221, 223, dead_or_set: 140
insn=103, live_throughout: 13, 14, 138, 144, 146, 147, 148, 153, 221, 223, dead_or_set: 140
insn=104, live_throughout: 13, 14, 138, 144, 146, 147, 148, 153, 221, 223, dead_or_set: 
insn=106, live_throughout: 13, 14, 144, 153, dead_or_set: 146, 147, 180
insn=117, live_throughout: 13, 14, 144, 153, 180, dead_or_set: 218
insn=107, live_throughout: 13, 14, 144, 153, 218, dead_or_set: 137, 180
insn=233, live_throughout: 13, 14, 137, 144, 153, 218, dead_or_set: 219
insn=108, live_throughout: 13, 14, 137, 144, 153, 218, 219, dead_or_set: 
insn=110, live_throughout: 13, 14, 137, 144, 153, 218, 219, dead_or_set: 145
insn=111, live_throughout: 13, 14, 137, 144, 145, 153, 218, 219, dead_or_set: 136
insn=112, live_throughout: 13, 14, 136, 137, 144, 145, 153, 218, 219, dead_or_set: 154
insn=252, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=141, live_throughout: 13, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=118, live_throughout: 13, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 135
insn=116, live_throughout: 13, 135, 136, 137, 144, 145, 153, 218, 219, dead_or_set: 154
insn=122, live_throughout: 13, 135, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=121, live_throughout: 13, 135, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 141
insn=123, live_throughout: 13, 135, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 141
insn=124, live_throughout: 13, 135, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=128, live_throughout: 13, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 0
insn=127, live_throughout: 0, 13, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 134
insn=129, live_throughout: 13, 134, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 0, 14
insn=131, live_throughout: 13, 14, 134, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 142
insn=132, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 134, 142
insn=133, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=135, live_throughout: 13, 14, 136, 137, 144, 145, 153, 218, 219, dead_or_set: 154
insn=136, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=138, live_throughout: 13, 14, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 136
insn=139, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=142, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=143, live_throughout: 13, 14, 136, 137, 144, 145, 153, 154, 218, 219, dead_or_set: 
insn=147, live_throughout: 13, 14, 137, 144, 153, 154, 218, 219, dead_or_set: 136, 186
insn=149, live_throughout: 13, 14, 144, 153, 154, 186, 218, 219, dead_or_set: 137, 188
insn=150, live_throughout: 13, 14, 144, 153, 154, 218, 219, dead_or_set: 186, 188
insn=151, live_throughout: 13, 14, 144, 153, 154, 218, 219, dead_or_set: 
insn=153, live_throughout: 13, 14, 153, 154, 218, 219, dead_or_set: 144
insn=154, live_throughout: 13, 14, 144, 153, 218, 219, dead_or_set: 137, 154
insn=254, live_throughout: 13, 14, 137, 144, 153, 218, 219, dead_or_set: 
insn=157, live_throughout: 13, 14, 153, 154, dead_or_set: 
insn=159, live_throughout: 13, 14, 153, 154, dead_or_set: 150
insn=263, live_throughout: 13, 14, 150, 153, 154, dead_or_set: 190
insn=162, live_throughout: 13, 14, 150, 154, dead_or_set: 153, 190, 191
insn=160, live_throughout: 13, 14, 154, 191, dead_or_set: 150
insn=163, live_throughout: 13, 14, 154, dead_or_set: 150, 191
insn=262, live_throughout: 13, 14, 154, dead_or_set: 192
insn=165, live_throughout: 13, 14, 154, dead_or_set: 192, 193
insn=166, live_throughout: 13, 14, 154, dead_or_set: 193
insn=167, live_throughout: 13, 14, 154, dead_or_set: 
insn=171, live_throughout: 13, 154, dead_or_set: 1
insn=170, live_throughout: 1, 13, 154, dead_or_set: 0
insn=172, live_throughout: 13, 154, dead_or_set: 0, 1, 14
insn=173, live_throughout: 13, 154, dead_or_set: 0, 198
insn=174, live_throughout: 13, 154, 198, dead_or_set: 0
insn=175, live_throughout: 0, 13, 154, 198, dead_or_set: 1
insn=176, live_throughout: 13, 154, 198, dead_or_set: 0, 1, 14
insn=179, live_throughout: 0, 13, 154, 198, dead_or_set: 1
insn=180, live_throughout: 13, 154, 198, dead_or_set: 0, 1, 14
insn=181, live_throughout: 13, 154, 198, dead_or_set: 1, 208
insn=184, live_throughout: 13, 154, 198, dead_or_set: 2, 208
insn=183, live_throughout: 2, 13, 154, dead_or_set: 1, 198
insn=182, live_throughout: 1, 2, 13, 154, dead_or_set: 0
insn=185, live_throughout: 0, 1, 2, 13, 154, dead_or_set: 3
insn=186, live_throughout: 13, 154, dead_or_set: 0, 1, 2, 3, 14
insn=187, live_throughout: 13, 14, 154, dead_or_set: 
insn=189, live_throughout: 13, 14, 154, dead_or_set: 209
insn=190, live_throughout: 13, 14, dead_or_set: 154, 209
insn=260, live_throughout: 13, 14, dead_or_set: 211
insn=261, live_throughout: 13, 14, 211, dead_or_set: 210
insn=194, live_throughout: 13, 14, dead_or_set: 210, 211
init_insns for 159: (insn_list:REG_DEP_TRUE 264 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 71 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 245 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 263 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 262 (nil))
init_insns for 209: (insn_list:REG_DEP_TRUE 189 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 261 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 260 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 222 (nil))
init_insns for 218: (insn_list:REG_DEP_TRUE 117 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 233 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 87 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 100 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 74 (nil))
changing reg in insn 127
changing reg in insn 132
changing reg in insn 118
changing reg in insn 123
changing reg in insn 138
changing reg in insn 111
changing reg in insn 147
changing reg in insn 142
changing reg in insn 138
changing reg in insn 135
changing reg in insn 116
changing reg in insn 154
changing reg in insn 107
changing reg in insn 149
changing reg in insn 112
changing reg in insn 110
changing reg in insn 81
changing reg in insn 103
changing reg in insn 75
changing reg in insn 77
changing reg in insn 101
changing reg in insn 103
changing reg in insn 121
changing reg in insn 123
changing reg in insn 131
changing reg in insn 132
changing reg in insn 72
changing reg in insn 77
changing reg in insn 153
changing reg in insn 96
changing reg in insn 149
changing reg in insn 153
changing reg in insn 111
changing reg in insn 97
changing reg in insn 110
changing reg in insn 142
changing reg in insn 84
changing reg in insn 99
changing reg in insn 106
changing reg in insn 99
changing reg in insn 83
changing reg in insn 92
changing reg in insn 89
changing reg in insn 106
changing reg in insn 99
changing reg in insn 96
changing reg in insn 92
changing reg in insn 243
changing reg in insn 86
changing reg in insn 82
changing reg in insn 89
changing reg in insn 84
changing reg in insn 83
changing reg in insn 86
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 163
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 8
changing reg in insn 162
changing reg in insn 12
changing reg in insn 162
changing reg in insn 12
changing reg in insn 55
changing reg in insn 33
changing reg in insn 19
changing reg in insn 135
changing reg in insn 116
changing reg in insn 112
changing reg in insn 147
changing reg in insn 190
changing reg in insn 185
changing reg in insn 174
changing reg in insn 170
changing reg in insn 163
changing reg in insn 154
changing reg in insn 135
changing reg in insn 128
changing reg in insn 116
changing reg in insn 56
changing reg in insn 34
changing reg in insn 173
changing reg in insn 12
changing reg in insn 13
changing reg in insn 258
changing reg in insn 257
changing reg in insn 258
changing reg in insn 8
changing reg in insn 264
changing reg in insn 12
changing reg in insn 13
changing reg in insn 19
changing reg in insn 14
changing reg in insn 21
changing reg in insn 22
changing reg in insn 71
changing reg in insn 74
changing reg in insn 72
changing reg in insn 245
changing reg in insn 100
changing reg in insn 81
changing reg in insn 106
changing reg in insn 107
changing reg in insn 147
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 263
changing reg in insn 162
changing reg in insn 162
changing reg in insn 163
changing reg in insn 262
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 173
changing reg in insn 183
changing reg in insn 181
changing reg in insn 184
changing reg in insn 189
changing reg in insn 190
changing reg in insn 261
changing reg in insn 194
changing reg in insn 260
changing reg in insn 222
changing reg in insn 55
changing reg in insn 225
changing reg in insn 33
changing reg in insn 21
changing reg in insn 225
changing reg in insn 51
changing reg in insn 39
changing reg in insn 117
changing reg in insn 233
changing reg in insn 121
changing reg in insn 118
changing reg in insn 233
changing reg in insn 131
changing reg in insn 127
changing reg in insn 87
changing reg in insn 89
changing reg in insn 100
changing reg in insn 101
changing reg in insn 74
changing reg in insn 75
3 uses a new slot
3 uses a slot from prev iteration
3 uses a slot from prev iteration
Spilling for insn 257.
Using reg 2 for reload 0
Spilling for insn 266.
Spilling for insn 163.
Spilling for insn 190.
Spilling for insn 194.

Reloads for insn # 257
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 266
Reload 0: reload_out (SI) = (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 163
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
                                                        (reg:SI 2 r2 [191])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
                                                        (reg:SI 2 r2 [191])) [0 S4 A32])

Reloads for insn # 190
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [209]) [0 loops_per_jiffy+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [209]) [0 loops_per_jiffy+0 S4 A32])

Reloads for insn # 194
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [210])
                                                        (const_int 4 [0x4])) [0 printed+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [210])
                                                        (const_int 4 [0x4])) [0 printed+0 S1 A8])
deleting insn with uid = 19.
deleting insn with uid = 100.
deleting insn with uid = 184.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 129.
verify found no changes in insn with uid = 172.
verify found no changes in insn with uid = 176.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 186.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 44 count 66 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 44 count 66 (  2.1)


calibrate_delay

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,11u} r1={18d,8u} r2={22d,12u} r3={28d,21u} r4={8d,18u,1d} r5={7d,11u} r6={2d,4u} r7={6d,7u} r8={2d,4u} r9={2d,4u} r10={1d,2u,2d} r11={2d,2u} r12={11d} r13={1d,43u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={24d,14u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1430{1265d,162u,3e} in 121{111 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 10 [sl] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 268 2 NOTE_INSN_DELETED)

(insn 268 6 257 2 init/calibrate.c:253 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 257 268 258 2 init/calibrate.c:253 (set (reg:SI 3 r3 [156])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 258 257 9 2 init/calibrate.c:253 (set (reg:SI 3 r3 [156])
        (and:SI (reg:SI 3 r3 [156])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 258 10 2 init/calibrate.c:255 (set (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 10 9 8 2 init/calibrate.c:255 (set (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2785931)) -1 (nil))

(insn 8 10 222 2 init/calibrate.c:253 (set (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [156])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 222 8 264 2 (set (reg/f:SI 3 r3 [213])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 264 222 12 2 init/calibrate.c:255 (set (reg/f:SI 1 r1 [159])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)
        (nil)))

(insn 12 264 13 2 init/calibrate.c:255 (set (reg:SI 1 r1 [orig:155 D.6774 ] [155])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [159])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 13 12 14 2 init/calibrate.c:255 (set (reg:SI 4 r4 [160])
        (mem:SI (plus:SI (reg/v:SI 2 r2 [orig:152 __ptr ] [152])
                (reg:SI 1 r1 [orig:155 D.6774 ] [155])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 init/calibrate.c:255 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [160])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 init/calibrate.c:255 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 3 [r3] 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 16 22 3 init/calibrate.c:257 (set (reg:SI 3 r3 [orig:163 printed ] [163])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [213])
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 printed+0 S1 A8]))
        (nil)))

(insn 22 21 23 3 init/calibrate.c:257 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:163 printed ] [163])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 3 init/calibrate.c:257 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 28)
;; lr  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  28 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 24 23 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 4 init/calibrate.c:258 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10a205a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10a205a0>)
        (nil)))

(call_insn 27 26 246 4 init/calibrate.c:258 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 246 27 247 4 (set (pc)
        (label_ref 157)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 28)
;; lr  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 10 [sl] 13 [sp]


;; Succ edge  28 [100.0%] 

(barrier 247 246 30)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 4 [r4] 24 [cc]
;; live  in  	 3 [r3] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 30 247 31 5 6 "" [1 uses])

(note 31 30 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 31 225 5 init/calibrate.c:260 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (mem/c/i:SI (reg/f:SI 3 r3 [213]) [0 preset_lpj+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 preset_lpj+0 S4 A32])
        (nil)))

(insn 225 33 34 5 (set (reg:SI 2 r2 [orig:214 printed ] [214])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [213])
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 printed+0 S1 A8]))
        (nil)))

(insn 34 225 35 5 init/calibrate.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 5 init/calibrate.c:260 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 36 40 6 init/calibrate.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:214 printed ] [214])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 6 init/calibrate.c:262 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 6 -> ( 7 28)
;; lr  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  28 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [0.0%]  (fallthru)
(note 41 40 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 41 44 7 init/calibrate.c:263 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10c46690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10c46690>)
        (nil)))

(call_insn 44 43 248 7 init/calibrate.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 248 44 249 7 (set (pc)
        (label_ref 157)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 28)
;; lr  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 10 [sl] 13 [sp]


;; Succ edge  28 [100.0%] 

(barrier 249 248 47)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 47 249 48 8 8 "" [1 uses])

(note 48 47 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 48 52 8 init/calibrate.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:214 printed ] [214])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 53 8 init/calibrate.c:265 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 3 [r3] 10 [sl] 13 [sp]
;; live  out 	 3 [r3] 10 [sl] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)
;; Succ edge  12 [0.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 3 [r3] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
(note 53 52 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 55 53 56 9 init/calibrate.c:265 discrim 1 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [213])
                (const_int 8 [0x8])) [0 lpj_fine+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 lpj_fine+0 S4 A32])
        (nil)))

(insn 56 55 57 9 init/calibrate.c:265 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 9 init/calibrate.c:265 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 4 [r4] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)
;; Succ edge  11

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
(note 58 57 60 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 60 58 61 10 init/calibrate.c:267 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10c5f0e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10c5f0e0>)
        (nil)))

(call_insn 61 60 250 10 init/calibrate.c:267 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 250 61 251 10 init/calibrate.c:265 discrim 2 (set (pc)
        (label_ref 157)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 28)
;; lr  out 	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 10 [sl] 13 [sp]


;; Succ edge  28 [100.0%] 

(barrier 251 250 64)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  9
(code_label 64 251 65 11 10 "" [1 uses])

(note 65 64 67 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 68 11 init/calibrate.c:275 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c51380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c51380>)
        (nil)))

(call_insn 68 67 69 11 init/calibrate.c:275 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 10 [sl] 13 [sp]
;; live  out 	 10 [sl] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 8 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  8 [0.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 69 68 70 12 9 "" [1 uses])

(note 70 69 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 74 12 init/calibrate.c:192 (set (reg/f:SI 3 r3 [174])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn 74 71 72 12 init/calibrate.c:193 discrim 1 (set (reg/f:SI 2 r2 [224])
        (reg/f:SI 3 r3 [174])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn 72 74 76 12 init/calibrate.c:192 (set (reg/v:SI 3 r3 [orig:143 ticks ] [143])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [174]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 10 [sl] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  13 [86.0%]  (dfs_back)
(code_label 76 72 73 13 11 "" [1 uses])

(note 73 76 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 75 73 245 13 init/calibrate.c:193 discrim 1 (set (reg:SI 1 r1 [orig:139 jiffies.131 ] [139])
        (mem/v/c/i:SI (reg/f:SI 2 r2 [224]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 245 75 77 13 init/calibrate.c:193 discrim 1 (set (reg/f:SI 9 r9 [175])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn 77 245 78 13 init/calibrate.c:193 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:143 ticks ] [143])
            (reg:SI 1 r1 [orig:139 jiffies.131 ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 79 13 init/calibrate.c:193 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 13 -> ( 13 14)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [86.0%]  (dfs_back)
;; Succ edge  14 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 11 [fp]
;; live  in  	 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 11 [fp]
;; live  kill	

;; Pred edge  13 [14.0%]  (fallthru,loop_exit)
(note 79 78 82 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 82 79 81 14 init/calibrate.c:187 (set (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 81 82 83 14 init/calibrate.c:196 (set (reg/v:SI 11 fp [orig:138 ticks.199 ] [138])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [175]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 83 81 84 14 init/calibrate.c:187 (set (reg/v:SI 4 r4 [orig:147 band ] [147])
        (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 84 83 87 14 init/calibrate.c:187 (set (reg/v:SI 7 r7 [orig:146 trials ] [146])
        (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 87 84 102 14 init/calibrate.c:198 (set (reg:SI 8 r8 [221])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 17) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  17 [86.0%]  (dfs_back)
(code_label 102 87 85 15 13 "" [1 uses])

(note 85 102 88 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 88 85 86 15 NOTE_INSN_DELETED)

(insn 86 88 89 15 init/calibrate.c:198 (set (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
        (plus:SI (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 89 86 90 15 init/calibrate.c:198 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (ashift:SI (reg:SI 8 r8 [221])
                (reg/v:SI 4 r4 [orig:147 band ] [147]))
            (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(jump_insn 90 89 91 15 init/calibrate.c:198 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [28.0%]  (fallthru)
;; Succ edge  17 [72.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  15 [28.0%]  (fallthru)
(note 91 90 92 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 243 16 init/calibrate.c:199 (set (reg/v:SI 4 r4 [orig:147 band ] [147])
        (plus:SI (reg/v:SI 4 r4 [orig:147 band ] [147])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 243 92 94 16 init/calibrate.c:200 (set (reg/v:SI 5 r5 [orig:148 trial_in_band ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 9 [r9] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  15 [72.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 94 243 95 17 12 "" [1 uses])

(note 95 94 99 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 99 95 96 17 init/calibrate.c:203 (set (reg/v:SI 7 r7 [orig:146 trials ] [146])
        (plus:SI (reg/v:SI 7 r7 [orig:146 trials ] [146])
            (reg/v:SI 4 r4 [orig:147 band ] [147]))) 4 {*arm_addsi3} (nil))

(insn 96 99 97 17 init/calibrate.c:202 (set (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
        (ashift:SI (reg/v:SI 4 r4 [orig:147 band ] [147])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 97 96 98 17 init/calibrate.c:202 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:144 loopadd ] [144])) 167 {*arm_movsi_insn} (nil))

(call_insn 98 97 101 17 init/calibrate.c:202 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 101 98 103 17 init/calibrate.c:204 (set (reg:SI 3 r3 [orig:140 jiffies.133 ] [140])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [223]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 103 101 104 17 init/calibrate.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 11 fp [orig:138 ticks.199 ] [138])
            (reg:SI 3 r3 [orig:140 jiffies.133 ] [140]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 17 init/calibrate.c:204 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 17 -> ( 15 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [86.0%]  (dfs_back)
;; Succ edge  18 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 8 [r8] 9 [r9]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  17 [14.0%]  (fallthru,loop_exit)
(note 105 104 106 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 117 18 init/calibrate.c:211 (set (reg:SI 7 r7 [180])
        (minus:SI (reg/v:SI 7 r7 [orig:146 trials ] [146])
            (reg/v:SI 4 r4 [orig:147 band ] [147]))) 28 {*arm_subsi3_insn} (nil))

(insn 117 106 107 18 init/calibrate.c:224 (set (reg/f:SI 8 r8 [218])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn 107 117 233 18 init/calibrate.c:211 (set (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])
        (ashift:SI (reg:SI 7 r7 [180])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 233 107 108 18 init/calibrate.c:225 discrim 1 (set (reg/f:SI 9 r9 [219])
        (reg/f:SI 8 r8 [218])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))
;; End of basic block 18 -> ( 19)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18 27) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 11 [fp]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 11 [fp]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%]  (dfs_back)
(code_label 108 233 109 19 14 ("recalibrate") [1 uses])

(note 109 108 110 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 19 init/calibrate.c:221 (set (reg/v:SI 11 fp [orig:145 chop_limit ] [145])
        (lshiftrt:SI (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 111 110 112 19 init/calibrate.c:215 (set (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
        (reg/v:SI 6 r6 [orig:144 loopadd ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 112 111 252 19 init/calibrate.c:214 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])) 167 {*arm_movsi_insn} (nil))

(jump_insn 252 112 253 19 (set (pc)
        (label_ref 139)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 253 252 141)

;; Start of basic block ( 25) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  25 [91.0%] 
(code_label 141 253 115 20 18 "" [1 uses])

(note 115 141 118 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 118 115 116 20 init/calibrate.c:224 (set (reg/v:SI 3 r3 [orig:135 ticks.203 ] [135])
        (mem/v/c/i:SI (reg/f:SI 8 r8 [218]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 116 118 122 20 init/calibrate.c:223 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (plus:SI (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136]))) 4 {*arm_addsi3} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 21) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  21 [86.0%]  (dfs_back)
(code_label 122 116 119 21 16 "" [1 uses])

(note 119 122 121 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 121 119 123 21 init/calibrate.c:225 discrim 1 (set (reg:SI 2 r2 [orig:141 jiffies.135 ] [141])
        (mem/v/c/i:SI (reg/f:SI 8 r8 [218]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 123 121 124 21 init/calibrate.c:225 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:135 ticks.203 ] [135])
            (reg:SI 2 r2 [orig:141 jiffies.135 ] [141]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 21 init/calibrate.c:225 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 21 -> ( 21 22)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [86.0%]  (dfs_back)
;; Succ edge  22 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  21 [14.0%]  (fallthru,loop_exit)
(note 125 124 128 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 128 125 127 22 init/calibrate.c:228 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 127 128 266 22 init/calibrate.c:227 (set (reg/v:SI 3 r3 [orig:134 ticks.204 ] [134])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [219]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 266 127 129 22 init/calibrate.c:228 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (nil))

(call_insn 129 266 131 22 init/calibrate.c:228 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 131 129 267 22 init/calibrate.c:229 (set (reg:SI 2 r2 [orig:142 jiffies.137 ] [142])
        (mem/v/c/i:SI (reg/f:SI 9 r9 [219]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 267 131 132 22 init/calibrate.c:229 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 132 267 133 22 init/calibrate.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 jiffies.137 ] [142])
            (reg/v:SI 3 r3 [orig:134 ticks.204 ] [134]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 133 132 134 22 init/calibrate.c:229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [72.0%]  (fallthru)
;; Succ edge  24 [28.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  22 [72.0%]  (fallthru)
(note 134 133 135 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 23 init/calibrate.c:230 (set (reg/v:SI 4 r4 [orig:154 lpj ] [154])
        (minus:SI (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  22 [28.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 136 135 137 24 17 "" [1 uses])

(note 137 136 138 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 139 24 init/calibrate.c:231 (set (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 24 19) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru,dfs_back)
;; Pred edge  19 [100.0%] 
(code_label 139 138 140 25 15 "" [1 uses])

(note 140 139 142 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 142 140 143 25 init/calibrate.c:222 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
            (reg/v:SI 11 fp [orig:145 chop_limit ] [145]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 143 142 144 25 init/calibrate.c:222 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 25 -> ( 20 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [91.0%] 
;; Succ edge  26 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  25 [9.0%]  (fallthru,loop_exit)
(note 144 143 146 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 146 144 148 26 NOTE_INSN_DELETED)

(note 148 146 147 26 NOTE_INSN_DELETED)

(insn 147 148 149 26 init/calibrate.c:238 (set (reg:SI 5 r5 [186])
        (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:136 loopadd.202 ] [136])
                (const_int 2 [0x2]))
            (reg/v:SI 4 r4 [orig:154 lpj ] [154]))) 270 {*arith_shiftsi} (nil))

(insn 149 147 150 26 init/calibrate.c:238 (set (reg:SI 7 r7 [188])
        (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
                (const_int 2 [0x2]))
            (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137]))) 270 {*arith_shiftsi} (nil))

(insn 150 149 151 26 init/calibrate.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [186])
            (reg:SI 7 r7 [188]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 26 init/calibrate.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [91.0%]  (fallthru)
;; Succ edge  28 [9.0%]  (loop_exit)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  26 [91.0%]  (fallthru)
(note 152 151 153 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 27 init/calibrate.c:240 (set (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
        (ashift:SI (reg/v:SI 6 r6 [orig:144 loopadd ] [144])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 154 153 254 27 init/calibrate.c:240 (set (reg/v:SI 7 r7 [orig:137 lpj.201 ] [137])
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(jump_insn 254 154 255 27 (set (pc)
        (label_ref 108)) 242 {*arm_jump} (nil))
;; End of basic block 27 -> ( 19)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  19 [100.0%]  (dfs_back)

(barrier 255 254 157)

;; Start of basic block ( 3 4 7 6 26 10) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  26 [9.0%]  (loop_exit)
;; Pred edge  10 [100.0%] 
(code_label 157 255 158 28 7 "" [6 uses])

(note 158 157 159 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 263 28 init/calibrate.c:278 (set (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 263 159 162 28 init/calibrate.c:278 (set (reg/f:SI 2 r2 [190])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)
        (nil)))

(insn 162 263 160 28 init/calibrate.c:278 (set (reg:SI 2 r2 [191])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [190])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:153 this_cpu ] [153])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 160 162 163 28 init/calibrate.c:278 (set (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2788871)) -1 (nil))

(insn 163 160 262 28 init/calibrate.c:278 (set (mem:SI (plus:SI (reg/v:SI 3 r3 [orig:150 __ptr ] [150])
                (reg:SI 2 r2 [191])) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 262 163 165 28 init/calibrate.c:279 (set (reg/f:SI 3 r3 [192])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 165 262 166 28 init/calibrate.c:279 (set (reg:SI 3 r3 [orig:193 printed ] [193])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [192])
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 printed+0 S1 A8]))
        (nil)))

(insn 166 165 167 28 init/calibrate.c:279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:193 printed ] [193])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 167 166 168 28 init/calibrate.c:279 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  29 [0.0%]  (fallthru)
;; Succ edge  30 [100.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  28 [0.0%]  (fallthru)
(note 168 167 171 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 171 168 170 29 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (nil))

(insn 170 171 172 29 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 172 170 173 29 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 173 172 174 29 init/calibrate.c:280 (set (reg:SI 5 r5 [198])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 4 r4 [orig:154 lpj ] [154])
            (const_int 5000 [0x1388]))
        (nil)))

(insn 174 173 175 29 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 29 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 176 175 179 29 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 179 176 180 29 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 180 179 181 29 init/calibrate.c:280 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 181 180 183 29 init/calibrate.c:280 (set (reg:SI 2 r2 [orig:208+4 ] [208])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 183 181 182 29 init/calibrate.c:280 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [198])) 167 {*arm_movsi_insn} (nil))

(insn 182 183 185 29 init/calibrate.c:280 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10c67600>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10c67600>)
        (nil)))

(insn 185 182 186 29 init/calibrate.c:280 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(call_insn 186 185 187 29 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 29 -> ( 30)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 187 186 188 30 19 "" [1 uses])

(note 188 187 189 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 30 init/calibrate.c:284 (set (reg/f:SI 3 r3 [209])
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10b96180 loops_per_jiffy>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10b96180 loops_per_jiffy>)
        (nil)))

(insn 190 189 260 30 init/calibrate.c:284 (set (mem/c/i:SI (reg/f:SI 3 r3 [209]) [0 loops_per_jiffy+0 S4 A32])
        (reg/v:SI 4 r4 [orig:154 lpj ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 260 190 261 30 init/calibrate.c:285 (set (reg:SI 2 r2 [211])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 261 260 194 30 init/calibrate.c:285 (set (reg/f:SI 3 r3 [210])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 194 261 259 30 init/calibrate.c:285 (set (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [210])
                (const_int 4 [0x4])) [0 printed+0 S1 A8])
        (reg:QI 2 r2 [211])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 30 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 259 194 265 NOTE_INSN_DELETED)

(note 265 259 0 NOTE_INSN_DELETED)

