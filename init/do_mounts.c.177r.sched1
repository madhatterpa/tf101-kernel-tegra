
;; Function readonly (readonly)[0:2703] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 8 -- before reload
;;   ======================================================

;;	  0-->     6 r136=zxn([r0])                    :cortex_a8_load_store_1
;;	  2-->     7 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  4-->     8 pc={(cc==0x0)?L13:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 56 -- before reload
;;   ======================================================

;;	  0-->    10 r133=0x0                          :cortex_a8_default
;;	  0-->    56 pc=L21                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 56

;;   ======================================================
;;   -- basic block 4 from 15 to 20 -- before reload
;;   ======================================================

;;	  0-->    15 r137=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    20 r133=0x1                          :cortex_a8_default
;;	  3-->    17 r139=[r137]                       :cortex_a8_load_store_1
;;	  5-->    18 r140=r139|0x1                     :cortex_a8_default
;;	  5-->    19 [r137]=r140                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 5
;;   new head = 15
;;   new tail = 20

;;   ======================================================
;;   -- basic block 5 from 27 to 33 -- before reload
;;   ======================================================

;;	  0-->    27 r0=r133                           :cortex_a8_default
;;	  0-->    33 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 27
;;   new tail = 33


;; Procedure interblock/speculative motions == 0/0 




readonly

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r136={1d,1u} r137={1d,2u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 48{18d,30u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:44 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(insn 7 6 8 2 init/do_mounts.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(jump_insn 8 7 9 2 init/do_mounts.c:44 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 56 3 init/do_mounts.c:45 (set (reg:SI 133 [ D.52645 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 56 10 57 3 (set (pc)
        (label_ref 21)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%] 

(barrier 57 56 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 139 140
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 57 14 4 2 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 20 4 init/do_mounts.c:46 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 20 15 17 4 init/do_mounts.c:47 (set (reg:SI 133 [ D.52645 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 17 20 18 4 init/do_mounts.c:46 (set (reg:SI 139 [ root_mountflags ])
        (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 18 17 19 4 init/do_mounts.c:46 (set (reg:SI 140)
        (ior:SI (reg:SI 139 [ root_mountflags ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 139 [ root_mountflags ])
        (nil)))

(insn 19 18 21 4 init/do_mounts.c:46 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 21 19 22 5 3 "" [1 uses])

(note 22 21 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 22 33 5 init/do_mounts.c:48 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52645 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.52645 ])
        (nil)))

(insn 33 27 58 5 init/do_mounts.c:48 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 58 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function readwrite (readwrite)[0:2704] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 8 -- before reload
;;   ======================================================

;;	  0-->     6 r136=zxn([r0])                    :cortex_a8_load_store_1
;;	  2-->     7 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  4-->     8 pc={(cc==0x0)?L13:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 37 -- before reload
;;   ======================================================

;;	  0-->    10 r133=0x0                          :cortex_a8_default
;;	  0-->    37 pc=L21                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 37

;;   ======================================================
;;   -- basic block 4 from 15 to 20 -- before reload
;;   ======================================================

;;	  0-->    15 r137=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    20 r133=0x1                          :cortex_a8_default
;;	  3-->    17 r139=[r137]                       :cortex_a8_load_store_1
;;	  5-->    18 r140=r139&0xfffffffffffffffe      :cortex_a8_default
;;	  5-->    19 [r137]=r140                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 5
;;   new head = 15
;;   new tail = 20

;;   ======================================================
;;   -- basic block 5 from 27 to 33 -- before reload
;;   ======================================================

;;	  0-->    27 r0=r133                           :cortex_a8_default
;;	  0-->    33 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 27
;;   new tail = 33


;; Procedure interblock/speculative motions == 0/0 




readwrite

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r136={1d,1u} r137={1d,2u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 48{18d,30u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:52 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(insn 7 6 8 2 init/do_mounts.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(jump_insn 8 7 9 2 init/do_mounts.c:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 37 3 init/do_mounts.c:53 (set (reg:SI 133 [ D.52654 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 37 10 38 3 (set (pc)
        (label_ref 21)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%] 

(barrier 38 37 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 139 140
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 38 14 4 8 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 20 4 init/do_mounts.c:54 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 20 15 17 4 init/do_mounts.c:55 (set (reg:SI 133 [ D.52654 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 17 20 18 4 init/do_mounts.c:54 (set (reg:SI 139 [ root_mountflags ])
        (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 18 17 19 4 init/do_mounts.c:54 (set (reg:SI 140)
        (and:SI (reg:SI 139 [ root_mountflags ])
            (const_int -2 [0xfffffffffffffffe]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139 [ root_mountflags ])
        (nil)))

(insn 19 18 21 4 init/do_mounts.c:54 (set (mem/c/i:SI (reg/f:SI 137) [0 root_mountflags+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 21 19 22 5 9 "" [1 uses])

(note 22 21 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 22 33 5 init/do_mounts.c:56 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52654 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.52654 ])
        (nil)))

(insn 33 27 39 5 init/do_mounts.c:56 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 33 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function rootwait_setup (rootwait_setup)[0:2709] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 8 -- before reload
;;   ======================================================

;;	  0-->     6 r136=zxn([r0])                    :cortex_a8_load_store_1
;;	  2-->     7 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  4-->     8 pc={(cc==0x0)?L13:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 35 -- before reload
;;   ======================================================

;;	  0-->    10 r133=0x0                          :cortex_a8_default
;;	  0-->    35 pc=L19                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 35

;;   ======================================================
;;   -- basic block 4 from 15 to 18 -- before reload
;;   ======================================================

;;	  0-->    16 r138=0x1                          :cortex_a8_default
;;	  0-->    15 r137=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  1-->    18 r133=r138                         :cortex_a8_default
;;	  3-->    17 [r137]=r138                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 15
;;   new tail = 18

;;   ======================================================
;;   -- basic block 5 from 25 to 31 -- before reload
;;   ======================================================

;;	  0-->    25 r0=r133                           :cortex_a8_default
;;	  0-->    31 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 25
;;   new tail = 31


;; Procedure interblock/speculative motions == 0/0 




rootwait_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r136={1d,1u} r137={1d,1u} r138={1d,2u} 
;;    total ref usage 46{17d,29u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/do_mounts.c:228 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg:SI 0 r0 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(insn 7 6 8 2 init/do_mounts.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(jump_insn 8 7 9 2 init/do_mounts.c:228 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 35 3 init/do_mounts.c:229 (set (reg:SI 133 [ D.52778 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 35 10 36 3 (set (pc)
        (label_ref 19)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%] 

(barrier 36 35 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 137 138
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 13 36 14 4 14 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 15 4 init/do_mounts.c:230 (set (reg:SI 138)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 16 18 4 init/do_mounts.c:230 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 18 15 17 4 init/do_mounts.c:231 (set (reg:SI 133 [ D.52778 ])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 17 18 19 4 init/do_mounts.c:230 (set (mem/c/i:SI (reg/f:SI 137) [0 root_wait+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 19 17 20 5 15 "" [1 uses])

(note 20 19 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 20 31 5 init/do_mounts.c:232 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52778 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.52778 ])
        (nil)))

(insn 31 25 37 5 init/do_mounts.c:232 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 31 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function root_data_setup (root_data_setup)[0:2710] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 18 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  3-->     7 [r135+0x4]=r0                     :cortex_a8_load_store_1
;;	  3-->    12 r0=0x1                            :cortex_a8_default
;;	  4-->    18 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 18


;; Procedure interblock/speculative motions == 0/0 




root_data_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} 
;;    total ref usage 24{12d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 6 2 NOTE_INSN_DELETED)

(insn 6 8 7 2 init/do_mounts.c:239 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 12 2 init/do_mounts.c:239 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
            (nil))))

(insn 12 7 18 2 init/do_mounts.c:241 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 22 2 init/do_mounts.c:241 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 22 18 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function fs_names_setup (fs_names_setup)[0:2711] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 18 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  3-->     7 [r135+0x8]=r0                     :cortex_a8_load_store_1
;;	  3-->    12 r0=0x1                            :cortex_a8_default
;;	  4-->    18 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 18


;; Procedure interblock/speculative motions == 0/0 




fs_names_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} 
;;    total ref usage 24{12d,12u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 6 2 NOTE_INSN_DELETED)

(insn 6 8 7 2 init/do_mounts.c:246 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 12 2 init/do_mounts.c:246 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
            (nil))))

(insn 12 7 18 2 init/do_mounts.c:248 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 22 2 init/do_mounts.c:248 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 22 18 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function load_ramdisk (load_ramdisk)[0:2702] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 24 -- before reload
;;   ======================================================

;;	  0-->     7 r1=0x0                            :cortex_a8_default
;;	  1-->     8 r2=r1                             :cortex_a8_default
;;	  2-->     9 r0=call [`simple_strtol']         :cortex_a8_issue_branch
;;	  2-->    11 r136=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	 34-->    12 r137=r0&0x3                       :cortex_a8_default
;;	 34-->    13 [r136+0xc]=r137                   :cortex_a8_load_store_1
;;	 35-->    18 r0=0x1                            :cortex_a8_default
;;	 35-->    24 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 35
;;   new head = 7
;;   new tail = 24


;; Procedure interblock/speculative motions == 0/0 




load_ramdisk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 150{132d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136 137
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 14 2 NOTE_INSN_DELETED)

(note 14 10 7 2 NOTE_INSN_DELETED)

(insn 7 14 8 2 init/do_mounts.c:37 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:37 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 11 2 init/do_mounts.c:37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtol") [flags 0x41] <function_decl 0x10a77e80 simple_strtol>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 9 12 2 init/do_mounts.c:37 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 init/do_mounts.c:37 (set (reg:SI 137)
        (and:SI (reg:SI 0 r0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 12 18 2 init/do_mounts.c:37 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 12 [0xc])) [0 rd_doload+0 S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 136)
            (nil))))

(insn 18 13 24 2 init/do_mounts.c:39 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 24 18 28 2 init/do_mounts.c:39 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 28 24 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function root_dev_setup (root_dev_setup)[0:2708] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 22 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->    10 r2=0x40                           :cortex_a8_default
;;	  1-->     9 r1=r134                           :cortex_a8_default
;;	  1-->     8 r0=const(`*.LANCHOR1'+0x10)       :cortex_a8_load_store_1
;;	  2-->    11 r0=call [`strlcpy']               :cortex_a8_issue_branch
;;	  2-->    16 r0=0x1                            :cortex_a8_default
;;	  3-->    22 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2
;;   new tail = 22


;; Procedure interblock/speculative motions == 0/0 




root_dev_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} 
;;    total ref usage 148{132d,16u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(note 7 6 12 2 NOTE_INSN_DELETED)

(note 12 7 2 2 NOTE_INSN_DELETED)

(insn 2 12 10 2 init/do_mounts.c:219 (set (reg/v/f:SI 134 [ line ])
        (reg:SI 0 r0 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ line ])
        (nil)))

(insn 10 2 9 2 init/do_mounts.c:220 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 9 10 8 2 init/do_mounts.c:220 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ line ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ line ])
        (nil)))

(insn 8 9 11 2 init/do_mounts.c:220 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 11 8 16 2 init/do_mounts.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 11 22 2 init/do_mounts.c:222 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 22 16 26 2 init/do_mounts.c:222 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 22 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function root_delay_setup (root_delay_setup)[0:2712] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 23 -- before reload
;;   ======================================================

;;	  0-->     7 r1=0x0                            :cortex_a8_default
;;	  1-->     8 r2=r1                             :cortex_a8_default
;;	  2-->     9 r0=call [`simple_strtoul']        :cortex_a8_issue_branch
;;	  2-->    11 r136=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	 34-->    12 [r136+0x50]=r0                    :cortex_a8_load_store_1
;;	 34-->    17 r0=0x1                            :cortex_a8_default
;;	 35-->    23 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 35
;;   new head = 7
;;   new tail = 23


;; Procedure interblock/speculative motions == 0/0 




root_delay_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r136={1d,1u} 
;;    total ref usage 148{131d,17u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 13 2 NOTE_INSN_DELETED)

(note 13 10 7 2 NOTE_INSN_DELETED)

(insn 7 13 8 2 init/do_mounts.c:253 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 init/do_mounts.c:253 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 9 8 11 2 init/do_mounts.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 9 12 2 init/do_mounts.c:253 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 17 2 init/do_mounts.c:253 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 17 12 23 2 init/do_mounts.c:255 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 23 17 27 2 init/do_mounts.c:255 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_mount_root (do_mount_root)[0:2714] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)


do_mount_root

Dataflow summary:
def_info->table_size = 397, use_info->table_size = 72
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,7u} r1={6d,3u} r2={6d,3u} r3={6d,3u} r11={1d,4u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={1d,1u} r138={1d,1u} r139={1d,3u,1d} r142={1d,1u} r143={1d,1u} r147={2d,2u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r168={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r175={1d,1u} 
;;    total ref usage 459{393d,65u,1e} in 39{36 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d18(2){ }d24(3){ }d25(11){ }d29(12){ }d30(13){ }d34(14){ }d67(25){ }d68(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 142 143
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 136 142 143
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 147 149 150 151 152 153 157 158 159 160 168 171 172 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 138 139 147 149 150 151 152 153 157 158 159 160 168 171 172 174 175
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(0){ }u68(11){ }u69(13){ }u70(14){ }u71(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 71 to worklist
  Adding insn 66 to worklist
  Adding insn 32 to worklist
  Adding insn 22 to worklist
  Adding insn 84 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 78 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 21 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 3 to 18 -- before reload
;;   ======================================================

;;	  0-->     3 r142=r1                           :cortex_a8_default
;;	  0-->     4 r143=r2                           :cortex_a8_default
;;	  1-->    10 [sp]=r3                           :cortex_a8_load_store_1
;;	  1-->    13 r2=r142                           :cortex_a8_default
;;	  2-->    14 r3=r143                           :cortex_a8_default
;;	  2-->    12 r1=`*.LC0'                        :cortex_a8_load_store_1
;;	  3-->    15 r0=call [`sys_mount']             :cortex_a8_issue_branch
;;	 35-->    17 {cc=cmp(r0,0x0);r136=r0;}         :cortex_a8_default
;;	 37-->    18 pc={(cc!=0x0)?L72:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 37
;;   new head = 3
;;   new tail = 18

;;   ======================================================
;;   -- basic block 3 from 21 to 71 -- before reload
;;   ======================================================

;;	  0-->    21 r0=`*.LC0'                        :cortex_a8_load_store_1
;;	  1-->    22 r0=call [`sys_chdir']             :cortex_a8_issue_branch
;;	  1-->    92 r147=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  2-->    93 r147=r147&0xffffffffffffffc0      :cortex_a8_default
;;	  2-->    31 r153=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  3-->    88 r174=`*.LC2'                      :cortex_a8_load_store_1
;;	  4-->    26 r149=[r147+0xc]                   :cortex_a8_load_store_1
;;	  5-->    89 r175=`*.LC1'                      :cortex_a8_load_store_1
;;	  6-->    67 r0=`*.LC3'                        :cortex_a8_load_store_1
;;	  7-->    27 r150=[r149+0x39c]                 :cortex_a8_load_store_1
;;	 10-->    28 r151=[r150+0x20]                  :cortex_a8_load_store_1
;;	 13-->    29 r152=[r151+0x14]                  :cortex_a8_load_store_1
;;	 16-->    30 r139=[r152+0x8]                   :cortex_a8_load_store_1
;;	 18-->    64 r172=r139&0xffffff                :cortex_a8_default
;;	 19-->    32 [r153]=r139                       :cortex_a8_load_store_1
;;	 19-->    70 r3=r139 0>>0x14                   :cortex_a8_default
;;	 20-->    37 r157=[r149+0x39c]                 :cortex_a8_load_store_1
;;	 20-->    65 r171=r172&0xffffffffff0fffff      :cortex_a8_default
;;	 23-->    38 r158=[r157+0x20]                  :cortex_a8_load_store_1
;;	 26-->    39 r159=[r158+0x14]                  :cortex_a8_load_store_1
;;	 29-->    40 r160=[r159+0x20]                  :cortex_a8_load_store_1
;;	 30-->    49 r168=[r159+0x34]                  :cortex_a8_load_store_1
;;	 32-->    41 r138=[r160]                       :cortex_a8_load_store_1
;;	 32-->    51 cc=cmp(zxt(r168,0x1,0x0),0x0)     :cortex_a8_default
;;	 33-->    69 r2={(cc!=0x0)?r174:r175}          :cortex_a8_default
;;	 33-->    66 [sp]=r171                         :cortex_a8_load_store_1
;;	 34-->    68 r1=r138                           :cortex_a8_default
;;	 35-->    71 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 21
;;   new tail = 71

;;   ======================================================
;;   -- basic block 4 from 78 to 84 -- before reload
;;   ======================================================

;;	  0-->    78 r0=r136                           :cortex_a8_default
;;	  0-->    84 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 78
;;   new tail = 84


;; Procedure interblock/speculative motions == 0/0 




do_mount_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,7u} r1={6d,3u} r2={6d,3u} r3={6d,3u} r11={1d,4u} r12={4d} r13={1d,10u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={1d,1u} r138={1d,1u} r139={1d,3u,1d} r142={1d,1u} r143={1d,1u} r147={2d,2u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,2u} r160={1d,1u} r168={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r175={1d,1u} 
;;    total ref usage 459{393d,65u,1e} in 39{36 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 142 143
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 136 142 143
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 7 6 2 NOTE_INSN_DELETED)

(note 6 5 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 6 3 2 NOTE_INSN_DELETED)

(insn 3 16 4 2 init/do_mounts.c:289 (set (reg/v/f:SI 142 [ fs ])
        (reg:SI 1 r1 [ fs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fs ])
        (nil)))

(insn 4 3 10 2 init/do_mounts.c:289 (set (reg/v:SI 143 [ flags ])
        (reg:SI 2 r2 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ flags ])
        (nil)))

(insn 10 4 13 2 init/do_mounts.c:290 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 3 r3 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ data ])
        (nil)))

(insn 13 10 14 2 init/do_mounts.c:290 (set (reg:SI 2 r2)
        (reg/v/f:SI 142 [ fs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ fs ])
        (nil)))

(insn 14 13 12 2 init/do_mounts.c:290 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ flags ])
        (nil)))

(insn 12 14 15 2 init/do_mounts.c:290 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
        (nil)))

(call_insn 15 12 17 2 init/do_mounts.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 17 15 18 2 init/do_mounts.c:291 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 136 [ err ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 18 17 19 2 init/do_mounts.c:291 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 147 149 150 151 152 153 157 158 159 160 168 171 172 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 138 139 147 149 150 151 152 153 157 158 159 160 168 171 172 174 175
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 19 18 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 19 50 3 NOTE_INSN_DELETED)

(note 50 24 91 3 NOTE_INSN_DELETED)

(note 91 50 63 3 NOTE_INSN_DELETED)

(note 63 91 21 3 NOTE_INSN_DELETED)

(insn 21 63 22 3 init/do_mounts.c:294 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x121b28c0>)
        (nil)))

(call_insn 22 21 92 3 init/do_mounts.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chdir") [flags 0x41] <function_decl 0x12110280 sys_chdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 92 22 93 3 init/do_mounts.c:295 (set (reg:SI 147)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 93 92 31 3 init/do_mounts.c:295 (set (reg:SI 147)
        (and:SI (reg:SI 147)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 31 93 88 3 init/do_mounts.c:295 (set (reg/f:SI 153)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 88 31 26 3 init/do_mounts.c:296 discrim 2 (set (reg/f:SI 174)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1217b540>)) 167 {*arm_movsi_insn} (nil))

(insn 26 88 89 3 init/do_mounts.c:295 (set (reg/f:SI 149 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 89 26 67 3 init/do_mounts.c:296 discrim 2 (set (reg/f:SI 175)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x121b9920>)) 167 {*arm_movsi_insn} (nil))

(insn 67 89 27 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10bf1ea0>)
        (nil)))

(insn 27 67 28 3 init/do_mounts.c:295 (set (reg/f:SI 150 [ <variable>.fs ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ <variable>.task ])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 init/do_mounts.c:295 (set (reg/f:SI 151 [ <variable>.pwd.mnt ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 150 [ <variable>.fs ])
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150 [ <variable>.fs ])
        (nil)))

(insn 29 28 30 3 init/do_mounts.c:295 (set (reg/f:SI 152 [ <variable>.mnt_sb ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 151 [ <variable>.pwd.mnt ])
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ <variable>.pwd.mnt ])
        (nil)))

(insn 30 29 64 3 init/do_mounts.c:295 (set (reg:SI 139 [ ROOT_DEV.894 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 152 [ <variable>.mnt_sb ])
                (const_int 8 [0x8])) [0 <variable>.s_dev+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152 [ <variable>.mnt_sb ])
        (nil)))

(insn 64 30 32 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 172)
        (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 32 64 70 3 init/do_mounts.c:295 (set (mem/c/i:SI (reg/f:SI 153) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 139 [ ROOT_DEV.894 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (nil)))

(insn 70 32 37 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 3 r3)
        (lshiftrt:SI (reg:SI 139 [ ROOT_DEV.894 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139 [ ROOT_DEV.894 ])
        (nil)))

(insn 37 70 65 3 init/do_mounts.c:296 (set (reg/f:SI 157 [ <variable>.fs ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ <variable>.task ])
                (const_int 924 [0x39c])) [0 <variable>.fs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ <variable>.task ])
        (nil)))

(insn 65 37 38 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 171)
        (and:SI (reg:SI 172)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ ROOT_DEV.894 ])
                (const_int 1048575 [0xfffff]))
            (nil))))

(insn 38 65 39 3 init/do_mounts.c:296 (set (reg/f:SI 158 [ <variable>.pwd.mnt ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 157 [ <variable>.fs ])
                (const_int 32 [0x20])) [0 <variable>.pwd.mnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157 [ <variable>.fs ])
        (nil)))

(insn 39 38 40 3 init/do_mounts.c:296 (set (reg/f:SI 159 [ <variable>.mnt_sb ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 158 [ <variable>.pwd.mnt ])
                (const_int 20 [0x14])) [0 <variable>.mnt_sb+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 158 [ <variable>.pwd.mnt ])
        (nil)))

(insn 40 39 49 3 init/do_mounts.c:296 (set (reg/f:SI 160 [ <variable>.s_type ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 159 [ <variable>.mnt_sb ])
                (const_int 32 [0x20])) [0 <variable>.s_type+0 S4 A256])) 167 {*arm_movsi_insn} (nil))

(insn 49 40 41 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168 [ <variable>.s_flags ])
        (mem/s/j:SI (plus:SI (reg/f:SI 159 [ <variable>.mnt_sb ])
                (const_int 52 [0x34])) [0 <variable>.s_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 159 [ <variable>.mnt_sb ])
        (nil)))

(insn 41 49 51 3 init/do_mounts.c:296 (set (reg/f:SI 138 [ D.52856 ])
        (mem/s/f/j:SI (reg/f:SI 160 [ <variable>.s_type ]) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 160 [ <variable>.s_type ])
        (nil)))

(insn 51 41 69 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 168 [ <variable>.s_flags ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 168 [ <variable>.s_flags ])
        (nil)))

(insn 69 51 66 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 2 r2)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 174)
            (reg/f:SI 175))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_DEAD (reg/f:SI 174)
            (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
                (nil)))))

(insn 66 69 68 3 init/do_mounts.c:296 discrim 3 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 68 66 71 3 init/do_mounts.c:296 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 138 [ D.52856 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ D.52856 ])
        (nil)))

(call_insn 71 68 72 3 init/do_mounts.c:296 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 72 71 73 4 40 "" [1 uses])

(note 73 72 78 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 78 73 84 4 init/do_mounts.c:302 (set (reg/i:SI 0 r0)
        (reg/v:SI 136 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ err ])
        (nil)))

(insn 84 78 94 4 init/do_mounts.c:302 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 94 84 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function mount_block_root (mount_block_root)[0:2715] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 30 to 44 -- before reload
;;   ======================================================

;;	  0-->    35 r181=`names_cachep'               :cortex_a8_load_store_1
;;	  0-->    30 r179=r0                           :cortex_a8_default
;;	  1-->    31 r180=r1                           :cortex_a8_default
;;	  1-->    37 r1=0xd0                           :cortex_a8_default
;;	  3-->    36 r0=[r181]                         :cortex_a8_load_store_1
;;	  4-->    38 r0=call [`kmem_cache_alloc']      :cortex_a8_issue_branch
;;	  4-->    39 r175=r0                           :cortex_a8_default
;;	  5-->    41 r182=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  8-->    42 r169=[r182+0x8]                   :cortex_a8_load_store_1
;;	 10-->    43 cc=cmp(r169,0x0)                  :cortex_a8_default
;;	 12-->    44 pc={(cc==0x0)?L69:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 12
;;   new head = 30
;;   new tail = 44

;;   ======================================================
;;   -- basic block 3 from 47 to 270 -- before reload
;;   ======================================================

;;	  0-->    47 r1=r169                           :cortex_a8_default
;;	  0-->    49 r166=r175                         :cortex_a8_default
;;	  1-->    48 r0=call [`strcpy']                :cortex_a8_issue_branch
;;	  1-->    56 r223=0x0                          :cortex_a8_default
;;	  2-->   270 pc=L268                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 47
;;   new tail = 270

;;   ======================================================
;;   -- basic block 4 from 53 to 54 -- before reload
;;   ======================================================

;;	  0-->    53 cc=cmp(r170,0x2c)                 :cortex_a8_default
;;	  2-->    54 pc={(cc!=0x0)?L268:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 53
;;   new tail = 54

;;   ======================================================
;;   -- basic block 5 from 58 to 58 -- before reload
;;   ======================================================

;;	  0-->    58 [r166-0x1]=r223#0                 :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 58
;;   new tail = 58

;;   ======================================================
;;   -- basic block 6 from 61 to 65 -- before reload
;;   ======================================================

;;	  0-->    61 r170=zxn([r166++])                :cortex_a8_load_store_1
;;	  2-->    64 cc=cmp(r170,0x0)                  :cortex_a8_default
;;	  4-->    65 pc={(cc!=0x0)?L63:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 61
;;   new tail = 65

;;   ======================================================
;;   -- basic block 7 from 273 to 273 -- before reload
;;   ======================================================

;;	  0-->   273 pc=L123                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 273
;;   new tail = 273

;;   ======================================================
;;   -- basic block 8 from 72 to 275 -- before reload
;;   ======================================================

;;	  0-->    72 r0=call [`get_filesystem_list']   :cortex_a8_issue_branch
;;	  0-->   111 r225=r169                         :cortex_a8_default
;;	  1-->    77 r172=r175-0x1                     :cortex_a8_default
;;	  1-->    78 r166=r175                         :cortex_a8_default
;;	 32-->    76 [r175+r0]=r169#0                  :cortex_a8_load_store_1
;;	 32-->   275 pc=L118                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 32
;;   new head = 72
;;   new tail = 275

;;   ======================================================
;;   -- basic block 9 from 83 to 90 -- before reload
;;   ======================================================

;;	  0-->    83 r0=r172+0x1                       :cortex_a8_default
;;	  0-->   264 r1=0xa                            :cortex_a8_default
;;	  1-->    85 r0=call [`strchr']                :cortex_a8_issue_branch
;;	  1-->    86 r164=r0                           :cortex_a8_default
;;	  2-->    88 r188=zxn([r172+0x1])              :cortex_a8_load_store_1
;;	  4-->    89 cc=cmp(r188,0x9)                  :cortex_a8_default
;;	  6-->    90 pc={(cc==0x0)?L95:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 83
;;   new tail = 90

;;   ======================================================
;;   -- basic block 10 from 92 to 277 -- before reload
;;   ======================================================

;;	  0-->    92 r162=r166                         :cortex_a8_default
;;	  0-->   277 pc=L114                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 92
;;   new tail = 277

;;   ======================================================
;;   -- basic block 11 from 97 to 97 -- before reload
;;   ======================================================

;;	  0-->    97 r168=r172                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 97
;;   new tail = 97

;;   ======================================================
;;   -- basic block 12 from 99 to 108 -- before reload
;;   ======================================================

;;	  0-->    99 r163=zxn([r168+0x2])              :cortex_a8_load_store_1
;;	  0-->   269 r162=r166                         :cortex_a8_default
;;	  1-->   104 r161=r166                         :cortex_a8_default
;;	  1-->   103 r168=r168+0x1                     :cortex_a8_default
;;	  2-->   107 cc=cmp(r163,0xa)                  :cortex_a8_default
;;	  3-->   101 [r162++]=r163#0                   :cortex_a8_load_store_1
;;	  3-->   105 r166=r162                         :cortex_a8_default
;;	  4-->   108 pc={(cc!=0x0)?L106:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 99
;;   new tail = 108

;;   ======================================================
;;   -- basic block 13 from 113 to 113 -- before reload
;;   ======================================================

;;	  0-->   113 [r161]=r225#0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 113
;;   new tail = 113

;;   ======================================================
;;   -- basic block 14 from 116 to 117 -- before reload
;;   ======================================================

;;	  0-->   116 r172=r164                         :cortex_a8_default
;;	  0-->   117 r166=r162                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 116
;;   new tail = 117

;;   ======================================================
;;   -- basic block 15 from 121 to 122 -- before reload
;;   ======================================================

;;	  0-->   121 cc=cmp(r172,0x0)                  :cortex_a8_default
;;	  2-->   122 pc={(cc!=0x0)?L120:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 121
;;   new tail = 122

;;   ======================================================
;;   -- basic block 16 from 125 to 134 -- before reload
;;   ======================================================

;;	  0-->   134 r221=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->   125 r192=0x0                          :cortex_a8_default
;;	  1-->   127 [r166]=r192#0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 125
;;   new tail = 134

;;   ======================================================
;;   -- basic block 17 from 260 to 279 -- before reload
;;   ======================================================

;;	  0-->   260 r174=r175                         :cortex_a8_default
;;	  0-->   279 pc=L188                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 260
;;   new tail = 279

;;   ======================================================
;;   -- basic block 18 from 262 to 142 -- before reload
;;   ======================================================

;;	  0-->   135 r0=r179                           :cortex_a8_default
;;	  0-->   136 r1=r174                           :cortex_a8_default
;;	  1-->   137 r2=r180                           :cortex_a8_default
;;	  1-->   138 r3=[r221+0x4]                     :cortex_a8_load_store_1
;;	  2-->   139 r0=call [`do_mount_root']         :cortex_a8_issue_branch
;;	  2-->   140 r173=r0                           :cortex_a8_default
;;	  3-->   141 cc=cmp(r173,0xfffffffffffffff3)   :cortex_a8_default
;;	  3-->   262 r194=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  5-->   142 pc={(cc==0x0)?L149:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 262
;;   new tail = 142

;;   ======================================================
;;   -- basic block 19 from 143 to 144 -- before reload
;;   ======================================================

;;	  0-->   143 cc=cmp(r173,0x0)                  :cortex_a8_default
;;	  2-->   144 pc={(cc==0x0)?L237:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 143
;;   new tail = 144

;;   ======================================================
;;   -- basic block 20 from 145 to 146 -- before reload
;;   ======================================================

;;	  0-->   145 cc=cmp(r173,0xffffffffffffffea)   :cortex_a8_default
;;	  2-->   146 pc={(cc!=0x0)?L281:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 145
;;   new tail = 146

;;   ======================================================
;;   -- basic block 21 from 283 to 283 -- before reload
;;   ======================================================

;;	  0-->   283 pc=L154                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 283
;;   new tail = 283

;;   ======================================================
;;   -- basic block 22 from 151 to 285 -- before reload
;;   ======================================================

;;	  0-->   151 r180=r180|0x1                     :cortex_a8_default
;;	  0-->   285 pc=L128                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 151
;;   new tail = 285

;;   ======================================================
;;   -- basic block 23 from 156 to 287 -- before reload
;;   ======================================================

;;	  0-->   156 r0=r174                           :cortex_a8_default
;;	  1-->   157 r0=call [`strlen']                :cortex_a8_issue_branch
;;	 33-->   160 r196=r0+0x1                       :cortex_a8_default
;;	 34-->   161 r174=r174+r196                    :cortex_a8_default
;;	 34-->   287 pc=L188                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 34
;;   new head = 156
;;   new tail = 287

;;   ======================================================
;;   -- basic block 24 from 166 to 186 -- before reload
;;   ======================================================

;;	  0-->   166 r197=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  0-->   167 r198=sfp-0x20                     :cortex_a8_default
;;	  1-->   169 r1=r198                           :cortex_a8_default
;;	  3-->   168 r0=[r197]                         :cortex_a8_load_store_1
;;	  4-->   170 r0=call [`__bdevname']            :cortex_a8_issue_branch
;;	  4-->   175 r1=[r194+0x54]                    :cortex_a8_load_store_1
;;	  5-->   176 r2=r198                           :cortex_a8_default
;;	  5-->   174 r0=`*.LC4'                        :cortex_a8_load_store_1
;;	  6-->   177 r0=call [`printk']                :cortex_a8_issue_branch
;;	  6-->   179 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	  7-->   180 r0=call [`printk']                :cortex_a8_issue_branch
;;	  8-->   181 call [`printk_all_partitions']    :cortex_a8_issue_branch
;;	  8-->   185 r1=r198                           :cortex_a8_default
;;	  9-->   184 r0=`*.LC6'                        :cortex_a8_load_store_1
;;	 10-->   186 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 166
;;   new tail = 186

;;   ======================================================
;;   -- basic block 25 from 191 to 193 -- before reload
;;   ======================================================

;;	  0-->   191 r205=zxn([r174])                  :cortex_a8_load_store_1
;;	  2-->   192 cc=cmp(r205,0x0)                  :cortex_a8_default
;;	  4-->   193 pc={(cc!=0x0)?L190:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 191
;;   new tail = 193

;;   ======================================================
;;   -- basic block 26 from 196 to 289 -- before reload
;;   ======================================================

;;	  0-->   196 r0=`*.LC7'                        :cortex_a8_load_store_1
;;	  0-->   202 r167=r175                         :cortex_a8_default
;;	  1-->   197 r0=call [`printk']                :cortex_a8_issue_branch
;;	  2-->   198 call [`printk_all_partitions']    :cortex_a8_issue_branch
;;	  2-->   200 r0=`*.LC8'                        :cortex_a8_load_store_1
;;	  3-->   201 r0=call [`printk']                :cortex_a8_issue_branch
;;	  3-->   289 pc=L216                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 196
;;   new tail = 289

;;   ======================================================
;;   -- basic block 27 from 258 to 215 -- before reload
;;   ======================================================

;;	  0-->   208 r1=r167                           :cortex_a8_default
;;	  0-->   258 r0=`*.LC9'                        :cortex_a8_load_store_1
;;	  1-->   209 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   210 r0=r167                           :cortex_a8_default
;;	  2-->   211 r0=call [`strlen']                :cortex_a8_issue_branch
;;	 34-->   214 r210=r0+0x1                       :cortex_a8_default
;;	 35-->   215 r167=r167+r210                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 35
;;   new head = 258
;;   new tail = 215

;;   ======================================================
;;   -- basic block 28 from 219 to 221 -- before reload
;;   ======================================================

;;	  0-->   219 r211=zxn([r167])                  :cortex_a8_load_store_1
;;	  2-->   220 cc=cmp(r211,0x0)                  :cortex_a8_default
;;	  4-->   221 pc={(cc!=0x0)?L218:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 219
;;   new tail = 221

;;   ======================================================
;;   -- basic block 29 from 224 to 235 -- before reload
;;   ======================================================

;;	  0-->   224 r0=`*.LC10'                       :cortex_a8_load_store_1
;;	  0-->   227 r214=sfp-0x20                     :cortex_a8_default
;;	  1-->   225 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   226 r213=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  2-->   229 r1=r214                           :cortex_a8_default
;;	  4-->   228 r0=[r213]                         :cortex_a8_load_store_1
;;	  5-->   230 r0=call [`__bdevname']            :cortex_a8_issue_branch
;;	  5-->   234 r1=r214                           :cortex_a8_default
;;	  6-->   233 r0=`*.LC6'                        :cortex_a8_load_store_1
;;	  7-->   235 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 224
;;   new tail = 235

;;   ======================================================
;;   -- basic block 30 from 239 to 242 -- before reload
;;   ======================================================

;;	  0-->   239 r217=`names_cachep'               :cortex_a8_load_store_1
;;	  0-->   241 r1=r175                           :cortex_a8_default
;;	  3-->   240 r0=[r217]                         :cortex_a8_load_store_1
;;	  4-->   242 call [`kmem_cache_free']          :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 239
;;   new tail = 242


;; Procedure interblock/speculative motions == 0/0 




mount_block_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={37d,25u} r1={32d,12u} r2={23d,2u} r3={22d,1u} r11={1d,30u} r12={21d} r13={1d,50u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={31d,11u} r25={1d,32u,5d} r26={1d,29u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r161={1d,1u} r162={3d,3u} r163={1d,2u} r164={1d,1u} r166={5d,6u} r167={2d,4u} r168={2d,2u} r169={1d,4u} r170={1d,2u} r172={2d,4u} r173={1d,3u} r174={2d,4u} r175={1d,7u} r179={1d,1u} r180={2d,2u} r181={1d,1u} r182={1d,1u} r188={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,3u} r205={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,1u} r214={1d,2u} r217={1d,1u} r221={1d,1u} r223={1d,1u} r225={1d,1u} 
;;    total ref usage 2698{2434d,259u,5e} in 127{107 regular + 20 call} insns.
(note 29 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 175 179 180 181 182
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 169 175 179 180 181 182
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 29 32 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 32 33 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 30 2 init/do_mounts.c:306 (set (reg/f:SI 181)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) 167 {*arm_movsi_insn} (nil))

(insn 30 35 31 2 init/do_mounts.c:305 (set (reg/v/f:SI 179 [ name ])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ name ])
        (nil)))

(insn 31 30 37 2 init/do_mounts.c:305 (set (reg/v:SI 180 [ flags ])
        (reg:SI 1 r1 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ flags ])
        (nil)))

(insn 37 31 36 2 init/do_mounts.c:306 (set (reg:SI 1 r1)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 36 37 38 2 init/do_mounts.c:306 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 181) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 181)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>) [0 names_cachep+0 S4 A32])
            (nil))))

(call_insn 38 36 39 2 init/do_mounts.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x11479e80 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 38 41 2 init/do_mounts.c:306 (set (reg/v/f:SI 175 [ fs_names ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 41 39 42 2 init/do_mounts.c:265 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 2 init/do_mounts.c:265 (set (reg/f:SI 169 [ root_fs_names.889 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 8 [0x8])) [0 root_fs_names+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 8 [0x8]))) [0 root_fs_names+0 S4 A32])
            (nil))))

(insn 43 42 44 2 init/do_mounts.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 169 [ root_fs_names.889 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 2 init/do_mounts.c:265 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  8 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 223
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; live  gen 	 0 [r0] 1 [r1] 166 223
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
(note 45 44 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 49 3 init/do_mounts.c:266 (set (reg:SI 1 r1)
        (reg/f:SI 169 [ root_fs_names.889 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169 [ root_fs_names.889 ])
        (nil)))

(insn 49 47 48 3 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))

(call_insn 48 49 56 3 init/do_mounts.c:266 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 56 48 270 3 init/do_mounts.c:269 (set (reg:SI 223)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 270 56 271 3 (set (pc)
        (label_ref 268)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223


;; Succ edge  6 [100.0%] 

(barrier 271 270 63)

;; Start of basic block ( 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180 223
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180 223
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [91.0%] 
(code_label 63 271 52 4 50 "" [1 uses])

(note 52 63 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 init/do_mounts.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170 [ D.53045 ])
        (nil)))

(jump_insn 54 53 55 4 init/do_mounts.c:268 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 268)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%]  (dfs_back)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 223
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; live  gen 	
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 55 54 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 58 55 268 5 init/do_mounts.c:269 (set (mem:QI (plus:SI (reg/v/f:SI 166 [ fs_names.1168 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (subreg:QI (reg:SI 223) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc] 166 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180 223
;; live  gen 	 24 [cc] 166 170
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [72.0%]  (dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 268 58 267 6 70 "" [2 uses])

(note 267 268 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 267 64 6 init/do_mounts.c:267 discrim 1 (set (reg:SI 170 [ D.53045 ])
        (zero_extend:SI (mem:QI (post_inc:SI (reg/v/f:SI 166 [ fs_names.1168 ])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_INC (reg/v/f:SI 166 [ fs_names.1168 ])
        (nil)))

(insn 64 61 65 6 init/do_mounts.c:267 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ D.53045 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 272 6 init/do_mounts.c:267 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 6 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180 223
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 170 175 179 180 223


;; Succ edge  4 [91.0%] 
;; Succ edge  7 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  gen 	
;; live  kill	

;; Pred edge  6 [9.0%]  (fallthru,loop_exit)
(note 272 65 273 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 273 272 274 7 (set (pc)
        (label_ref 123)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180


;; Succ edge  16 [100.0%] 

(barrier 274 273 69)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 172 225
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 175 179 180
;; live  gen 	 0 [r0] 166 172 225
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%] 
(code_label 69 274 70 8 48 "" [1 uses])

(note 70 69 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 73 70 72 8 NOTE_INSN_DELETED)

(call_insn 72 73 111 8 init/do_mounts.c:272 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_filesystem_list") [flags 0x41] <function_decl 0x1118fb80 get_filesystem_list>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 111 72 77 8 init/do_mounts.c:282 (set (reg:SI 225)
        (reg/f:SI 169 [ root_fs_names.889 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 169 [ root_fs_names.889 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 77 111 78 8 init/do_mounts.c:276 (set (reg/v/f:SI 172 [ p ])
        (plus:SI (reg/v/f:SI 175 [ fs_names ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 78 77 76 8 init/do_mounts.c:263 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))

(insn 76 78 275 8 init/do_mounts.c:275 (set (mem:QI (plus:SI (reg/v/f:SI 175 [ fs_names ])
                (reg:SI 0 r0)) [0 S1 A8])
        (subreg:QI (reg/f:SI 169 [ root_fs_names.889 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 275 76 276 8 (set (pc)
        (label_ref 118)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225


;; Succ edge  15 [100.0%] 

(barrier 276 275 120)

;; Start of basic block ( 15) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 164 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 164 188
;; live  kill	 14 [lr]

;; Pred edge  15 [91.0%] 
(code_label 120 276 81 9 56 "" [1 uses])

(note 81 120 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 82 81 83 9 NOTE_INSN_DELETED)

(insn 83 82 264 9 init/do_mounts.c:277 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 172 [ p ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 264 83 85 9 init/do_mounts.c:277 (set (reg:SI 1 r1)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 264 86 9 init/do_mounts.c:277 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 85 88 9 init/do_mounts.c:277 (set (reg/v/f:SI 164 [ p.1170 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 88 86 89 9 init/do_mounts.c:278 (set (reg:SI 188)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 172 [ p ])
                    (const_int 1 [0x1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 89 88 90 9 init/do_mounts.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 9 [0x9]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(jump_insn 90 89 91 9 init/do_mounts.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180 225


;; Succ edge  10 [72.0%]  (fallthru)
;; Succ edge  11 [28.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 175 179 180 225
;; live  gen 	 162
;; live  kill	

;; Pred edge  9 [72.0%]  (fallthru)
(note 91 90 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 277 10 init/do_mounts.c:278 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 166 [ fs_names.1168 ])
        (nil)))

(jump_insn 277 92 278 10 (set (pc)
        (label_ref 114)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180 225


;; Succ edge  14 [100.0%] 

(barrier 278 277 95)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 172 175 179 180 225
;; live  gen 	 168
;; live  kill	

;; Pred edge  9 [28.0%] 
(code_label 95 278 96 11 53 "" [1 uses])

(note 96 95 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 106 11 init/do_mounts.c:278 (set (reg:SI 168 [ ivtmp.1163 ])
        (reg/v/f:SI 172 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 172 [ p ])
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180 225


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168
;; lr  def 	 24 [cc] 161 162 163 166 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 175 179 180 225
;; live  gen 	 24 [cc] 161 162 163 166 168
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  12 [86.0%]  (dfs_back)
(code_label 106 97 98 12 55 "" [1 uses])

(note 98 106 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 269 12 init/do_mounts.c:280 discrim 1 (set (reg:SI 163 [ temp.1171 ])
        (zero_extend:SI (mem:QI (plus:SI (reg:SI 168 [ ivtmp.1163 ])
                    (const_int 2 [0x2])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 269 99 104 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 162 [ fs_names.1172 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) 167 {*arm_movsi_insn} (nil))

(insn 104 269 103 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 161 [ fs_names.1173 ])
        (reg/v/f:SI 166 [ fs_names.1168 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 166 [ fs_names.1168 ])
        (nil)))

(insn 103 104 107 12 init/do_mounts.c:280 discrim 1 (set (reg:SI 168 [ ivtmp.1163 ])
        (plus:SI (reg:SI 168 [ ivtmp.1163 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 107 103 101 12 init/do_mounts.c:280 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ temp.1171 ])
            (const_int 10 [0xa]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ temp.1171 ])
        (nil)))

(insn 101 107 105 12 init/do_mounts.c:280 discrim 1 (set (mem:QI (post_inc:SI (reg/v/f:SI 162 [ fs_names.1172 ])) [0 S1 A8])
        (subreg/s/u:QI (reg:SI 163 [ temp.1171 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_INC (reg/v/f:SI 162 [ fs_names.1172 ])
        (nil)))

(insn 105 101 108 12 init/do_mounts.c:280 discrim 1 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 108 105 109 12 init/do_mounts.c:280 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 106)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 12 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 166 168 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 166 168 175 179 180 225


;; Succ edge  12 [86.0%]  (dfs_back)
;; Succ edge  13 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 225
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 162 164 175 179 180 225
;; live  gen 	
;; live  kill	

;; Pred edge  12 [14.0%]  (fallthru,loop_exit)
(note 109 108 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 113 109 114 13 init/do_mounts.c:282 (set (mem:QI (reg/v/f:SI 161 [ fs_names.1173 ]) [0 S1 A8])
        (subreg:QI (reg:SI 225) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/v/f:SI 161 [ fs_names.1173 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180 225


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 10) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164
;; lr  def 	 166 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 175 179 180 225
;; live  gen 	 166 172
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 114 113 115 14 54 "" [1 uses])

(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 14 init/do_mounts.c:282 (set (reg/v/f:SI 172 [ p ])
        (reg/v/f:SI 164 [ p.1170 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 164 [ p.1170 ])
        (nil)))

(insn 117 116 118 14 init/do_mounts.c:282 (set (reg/v/f:SI 166 [ fs_names.1168 ])
        (reg/v/f:SI 162 [ fs_names.1172 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 162 [ fs_names.1172 ])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 8) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 118 117 119 15 52 "" [1 uses])

(note 119 118 121 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 121 119 122 15 init/do_mounts.c:276 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 172 [ p ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 15 init/do_mounts.c:276 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 15 -> ( 9 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 172 175 179 180 225


;; Succ edge  9 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15 7) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 192 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 175 179 180
;; live  gen 	 192 221
;; live  kill	

;; Pred edge  15 [9.0%]  (fallthru,loop_exit)
;; Pred edge  7 [100.0%] 
(code_label 123 122 124 16 51 "" [1 uses])

(note 124 123 134 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 134 124 125 16 init/do_mounts.c:318 (set (reg/f:SI 221)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 125 134 127 16 init/do_mounts.c:285 (set (reg:SI 192)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 127 125 128 16 init/do_mounts.c:285 (set (mem:QI (reg/v/f:SI 166 [ fs_names.1168 ]) [0 S1 A8])
        (subreg:QI (reg:SI 192) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg/v/f:SI 166 [ fs_names.1168 ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 22) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221
;; live  gen 	 174
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (dfs_back)
(code_label 128 127 129 17 57 ("retry") [1 uses])

(note 129 128 260 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 260 129 279 17 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 279 260 280 17 init/do_mounts.c:317 (set (pc)
        (label_ref 188)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221


;; Succ edge  25 [100.0%] 

(barrier 280 279 190)

;; Start of basic block ( 25) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 179 180 221
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 173 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 173 194
;; live  kill	 14 [lr]

;; Pred edge  25 [100.0%] 
(code_label 190 280 133 18 63 "" [1 uses])

(note 133 190 135 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 135 133 136 18 init/do_mounts.c:318 (set (reg:SI 0 r0)
        (reg/v/f:SI 179 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 18 init/do_mounts.c:318 (set (reg:SI 1 r1)
        (reg/v/f:SI 174 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 18 init/do_mounts.c:318 (set (reg:SI 2 r2)
        (reg/v:SI 180 [ flags ])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 18 init/do_mounts.c:318 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 221)
                (const_int 4 [0x4])) [0 root_mount_data+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 root_mount_data+0 S4 A32])
        (nil)))

(call_insn 139 138 140 18 init/do_mounts.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 140 139 141 18 init/do_mounts.c:318 (set (reg/v:SI 173 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 141 140 262 18 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -13 [0xfffffffffffffff3]))) 219 {*arm_cmpsi_insn} (nil))

(insn 262 141 142 18 init/do_mounts.c:318 (set (reg/f:SI 194)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 142 262 248 18 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 18 -> ( 22 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221


;; Succ edge  22 [29.0%]  (loop_exit)
;; Succ edge  19 [71.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [71.0%]  (fallthru)
(note 248 142 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 248 144 19 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 249 19 init/do_mounts.c:319 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 19 -> ( 30 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221


;; Succ edge  30 [50.0%]  (loop_exit)
;; Succ edge  20 [50.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174 175 179 180 194 221
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 249 144 145 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 145 249 146 20 init/do_mounts.c:319 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ err ])
            (const_int -22 [0xffffffffffffffea]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 173 [ err ])
        (nil)))

(jump_insn 146 145 282 20 init/do_mounts.c:319 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 281)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 20 -> ( 21 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 194 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 194 221


;; Succ edge  21 [29.0%]  (fallthru)
;; Succ edge  24 [71.0%]  (loop_exit)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  gen 	
;; live  kill	

;; Pred edge  20 [29.0%]  (fallthru)
(note 282 146 283 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(jump_insn 283 282 284 21 (set (pc)
        (label_ref 154)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221


;; Succ edge  23 [100.0%] 

(barrier 284 283 149)

;; Start of basic block ( 18) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221
;; live  gen 	 180
;; live  kill	

;; Pred edge  18 [29.0%]  (loop_exit)
(code_label 149 284 150 22 61 "" [1 uses])

(note 150 149 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 285 22 init/do_mounts.c:323 (set (reg/v:SI 180 [ flags ])
        (ior:SI (reg/v:SI 180 [ flags ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 285 151 286 22 init/do_mounts.c:324 (set (pc)
        (label_ref 128)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 179 180 221


;; Succ edge  17 [100.0%]  (dfs_back)

(barrier 286 285 154)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 174 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  gen 	 0 [r0] 174 196
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%] 
(code_label 154 286 155 23 60 "" [1 uses])

(note 155 154 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 158 155 156 23 NOTE_INSN_DELETED)

(insn 156 158 157 23 init/do_mounts.c:317 (set (reg:SI 0 r0)
        (reg/v/f:SI 174 [ p ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 157 156 160 23 init/do_mounts.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 160 157 161 23 init/do_mounts.c:317 (set (reg:SI 196)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 161 160 287 23 init/do_mounts.c:317 (set (reg/v/f:SI 174 [ p ])
        (plus:SI (reg/v/f:SI 174 [ p ])
            (reg:SI 196))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 287 161 288 23 (set (pc)
        (label_ref 188)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221


;; Succ edge  25 [100.0%]  (dfs_back)

(barrier 288 287 281)

;; Start of basic block ( 20) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 197 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 197 198
;; live  kill	 14 [lr]

;; Pred edge  20 [71.0%]  (loop_exit)
(code_label 281 288 165 24 71 "" [1 uses])

(note 165 281 166 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 166 165 167 24 init/do_mounts.c:334 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 169 24 init/do_mounts.c:334 (set (reg/f:SI 198)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 169 167 168 24 init/do_mounts.c:334 (set (reg:SI 1 r1)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(insn 168 169 170 24 init/do_mounts.c:334 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 197) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 197)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
            (nil))))

(call_insn 170 168 175 24 init/do_mounts.c:334 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 175 170 176 24 init/do_mounts.c:336 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 194)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 194)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 84 [0x54]))) [0 root_device_name+0 S4 A32])
            (nil))))

(insn 176 175 174 24 init/do_mounts.c:336 (set (reg:SI 2 r2)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(insn 174 176 177 24 init/do_mounts.c:336 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x121779b0>)
        (nil)))

(call_insn 177 174 179 24 init/do_mounts.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 179 177 180 24 init/do_mounts.c:338 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x121c2770>)
        (nil)))

(call_insn 180 179 181 24 init/do_mounts.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 181 180 185 24 init/do_mounts.c:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 185 181 184 24 init/do_mounts.c:345 (set (reg:SI 1 r1)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 184 185 186 24 init/do_mounts.c:345 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
        (nil)))

(call_insn 186 184 187 24 init/do_mounts.c:345 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 24 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 187 186 188)

;; Start of basic block ( 17 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc] 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  gen 	 24 [cc] 205
;; live  kill	

;; Pred edge  17 [100.0%] 
;; Pred edge  23 [100.0%]  (dfs_back)
(code_label 188 187 189 25 58 "" [2 uses])

(note 189 188 191 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 191 189 192 25 init/do_mounts.c:317 discrim 1 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (reg/v/f:SI 174 [ p ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 192 191 193 25 init/do_mounts.c:317 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 205)
        (nil)))

(jump_insn 193 192 194 25 init/do_mounts.c:317 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 25 -> ( 18 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 175 179 180 221


;; Succ edge  18 [100.0%] 
;; Succ edge  26 [0.0%]  (fallthru,loop_exit)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 167
;; live  kill	 14 [lr]

;; Pred edge  25 [0.0%]  (fallthru,loop_exit)
(note 194 193 196 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 196 194 202 26 init/do_mounts.c:348 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1218bb40>)
        (nil)))

(insn 202 196 197 26 init/do_mounts.c:351 (set (reg/v/f:SI 167 [ p.1164 ])
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 175 [ fs_names ])
        (nil)))

(call_insn 197 202 198 26 init/do_mounts.c:348 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 198 197 200 26 init/do_mounts.c:349 (parallel [
            (call (mem:SI (symbol_ref:SI ("printk_all_partitions") [flags 0x41] <function_decl 0x115c3e80 printk_all_partitions>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 200 198 201 26 init/do_mounts.c:350 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x12177a00>)
        (nil)))

(call_insn 201 200 289 26 init/do_mounts.c:350 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 289 201 290 26 init/do_mounts.c:351 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167


;; Succ edge  28 [100.0%] 

(barrier 290 289 218)

;; Start of basic block ( 28) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	 0 [r0] 1 [r1] 167 210
;; live  kill	 14 [lr]

;; Pred edge  28 [0.0%] 
(code_label 218 290 205 27 65 "" [1 uses])

(note 205 218 212 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 212 205 208 27 NOTE_INSN_DELETED)

(insn 208 212 258 27 init/do_mounts.c:352 (set (reg:SI 1 r1)
        (reg/v/f:SI 167 [ p.1164 ])) 167 {*arm_movsi_insn} (nil))

(insn 258 208 209 27 init/do_mounts.c:352 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x121ccfe0>)) 167 {*arm_movsi_insn} (nil))

(call_insn 209 258 210 27 init/do_mounts.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 210 209 211 27 init/do_mounts.c:351 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 167 [ p.1164 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 211 210 214 27 init/do_mounts.c:351 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 214 211 215 27 init/do_mounts.c:351 discrim 2 (set (reg:SI 210)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 215 214 216 27 init/do_mounts.c:351 discrim 2 (set (reg/v/f:SI 167 [ p.1164 ])
        (plus:SI (reg/v/f:SI 167 [ p.1164 ])
            (reg:SI 210))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167


;; Succ edge  28 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	 24 [cc] 211
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru,dfs_back)
;; Pred edge  26 [100.0%] 
(code_label 216 215 217 28 64 "" [1 uses])

(note 217 216 219 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 219 217 220 28 init/do_mounts.c:351 discrim 1 (set (reg:SI 211)
        (zero_extend:SI (mem:QI (reg/v/f:SI 167 [ p.1164 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 220 219 221 28 init/do_mounts.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 211)
        (nil)))

(jump_insn 221 220 222 28 init/do_mounts.c:351 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 218)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 28 -> ( 27 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167


;; Succ edge  27 [0.0%] 
;; Succ edge  29 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 213 214
;; live  kill	 14 [lr]

;; Pred edge  28 [100.0%]  (fallthru,loop_exit)
(note 222 221 224 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 224 222 227 29 init/do_mounts.c:353 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x121ccf60>)
        (nil)))

(insn 227 224 225 29 init/do_mounts.c:355 (set (reg/f:SI 214)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(call_insn 225 227 226 29 init/do_mounts.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 226 225 229 29 init/do_mounts.c:355 (set (reg/f:SI 213)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 229 226 228 29 init/do_mounts.c:355 (set (reg:SI 1 r1)
        (reg/f:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(insn 228 229 230 29 init/do_mounts.c:355 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 213) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
            (nil))))

(call_insn 230 228 234 29 init/do_mounts.c:355 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__bdevname") [flags 0x41] <function_decl 0x1115b800 __bdevname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 234 230 233 29 init/do_mounts.c:357 (set (reg:SI 1 r1)
        (reg/f:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0]))
            (nil))))

(insn 233 234 235 29 init/do_mounts.c:357 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1218bb00>)
        (nil)))

(call_insn 235 233 236 29 init/do_mounts.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 236 235 237)

;; Start of basic block ( 19) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 1 [r1] 217
;; live  kill	 14 [lr]

;; Pred edge  19 [50.0%]  (loop_exit)
(code_label 237 236 238 30 62 ("out") [1 uses])

(note 238 237 239 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 241 30 init/do_mounts.c:359 (set (reg/f:SI 217)
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>)) 167 {*arm_movsi_insn} (nil))

(insn 241 239 240 30 init/do_mounts.c:359 (set (reg:SI 1 r1)
        (reg/v/f:SI 175 [ fs_names ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 175 [ fs_names ])
        (nil)))

(insn 240 241 242 30 init/do_mounts.c:359 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 217) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 217)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x1114f6c0 names_cachep>) [0 names_cachep+0 S4 A32])
            (nil))))

(call_insn 242 240 291 30 init/do_mounts.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_free") [flags 0x41] <function_decl 0x11460b00 kmem_cache_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 30 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 291 242 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function mount_root (mount_root)[0:2717] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 16 (  1.5)


mount_root

Dataflow summary:
def_info->table_size = 877, use_info->table_size = 106
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={12d,4u} r2={10d,2u} r3={9d,1u} r11={1d,10u} r12={8d} r13={1d,17u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,4u} r25={1d,14u} r26={1d,9u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,1u} r135={1d,3u} r137={2d,2u} r138={2d,2u} r140={1d,1u} r142={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={2d,2u} r165={1d,1u} r166={1d,1u} r168={1d,1u} 
;;    total ref usage 959{867d,92u,0e} in 50{43 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d26(1){ }d36(2){ }d45(3){ }d46(11){ }d54(12){ }d55(13){ }d63(14){ }d139(25){ }d140(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 9 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[3]->( 8 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 138 166 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 138 166 168
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168

( 4 7 )->[5]->( 10 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168

( 5 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168

( 6 )->[7]->( 5 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  gen 	 0 [r0] 133 137 138
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168

( 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 150 151
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 152 157 159 160 161 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 152 157 159 160 161 165
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 9 5 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u102(11){ }u103(13){ }u104(14){ }u105(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 18 to worklist
  Adding insn 15 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 35 to worklist
  Adding insn 94 to worklist
  Adding insn 40 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 81 to worklist
  Adding insn 76 to worklist
  Adding insn 61 to worklist
Finished finding needed instructions:
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
  Adding insn 34 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 166 168
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 92 to worklist
  Adding insn 25 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
  Adding insn 37 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 8 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 21 (  1.9)
;;   ======================================================
;;   -- basic block 5 from 25 to 32 -- before reload
;;   ======================================================

;;	  0-->    92 r1=`*.LC11'                       :cortex_a8_load_store_1
;;	  1-->    27 r2=[r166]                         :cortex_a8_load_store_1
;;	  2-->    28 r3=[sfp-0x8]                      :cortex_a8_load_store_1
;;	  3-->    25 r0=[sfp-0x4]                      :cortex_a8_load_store_1
;;	  4-->    29 r0=call [`do_mount_root']         :cortex_a8_issue_branch
;;	 36-->    31 cc=cmp(r0,0x0)                    :cortex_a8_default
changing bb of uid 39
  from 7 to 5
;;	 37-->    39 r0=r168*r137                      :cortex_a8_multiply_2
;;	 38-->    32 pc={(cc==0x0)?L87:pc}             :cortex_a8_branch
;;	Ready list (final):    34/b1
;;   total time = 38
;;   new head = 25
;;   new tail = 32

;;   ======================================================
;;   -- basic block 6 from 34 to 35 -- before reload
;;   ======================================================

;;	  0-->    34 cc=cmp(r138,0x6)                  :cortex_a8_default
changing bb of uid 43
  from 7 to 6
;;	  0-->    43 r138=r138+0x1                     :cortex_a8_default
;;	  2-->    35 pc={(cc==0x0)?L47:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 34
;;   new tail = 35

;;   ======================================================
;;   -- basic block 7 from 40 to 94 -- before reload
;;   ======================================================

;;	  0-->    40 call [`msleep']                   :cortex_a8_issue_branch
;;	  0-->    41 r133=r137<<0x1                    :cortex_a8_default
;;	  1-->    42 {r137=umin(r133,0x1e);clobber cc;}:cortex_a8_default
;;	  1-->    94 pc=L44                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 40
;;   new tail = 94

;;   ======================================================
;;   -- basic block 2 from 5 to 9 -- before reload
;;   ======================================================

;;	  0-->     5 r140=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  3-->     6 r142=[r140]                       :cortex_a8_load_store_1
;;	  5-->     8 {cc=cmp(r142 0>>0x14,0x0);clobber :cortex_a8_default
;;	  7-->     9 pc={(cc!=0x0)?L55:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 5
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 13 to 18 -- before reload
;;   ======================================================

;;	  0-->    13 r0=sfp-0x4                        :cortex_a8_default
;;	  0-->    14 r1=sfp-0x8                        :cortex_a8_default
;;	  1-->    15 r0=call [`nfs_root_data']         :cortex_a8_issue_branch
;;	 33-->    17 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    18 pc={(cc!=0x0)?L47:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 13
;;   new tail = 18

;;   ======================================================
;;   -- basic block 4 from 20 to 37 -- before reload
;;   ======================================================

;;	  0-->    24 r166=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    20 r138=0x1                          :cortex_a8_default
;;	  1-->    21 r137=0x5                          :cortex_a8_default
;;	  1-->    37 r168=0x3e8                        :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 20
;;   new tail = 37

;;   ======================================================
;;   -- basic block 8 from 50 to 54 -- before reload
;;   ======================================================

;;	  0-->    50 r0=`*.LC12'                       :cortex_a8_load_store_1
;;	  1-->    51 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->    52 r150=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  2-->    53 r151=0x200000                     :cortex_a8_default
;;	  4-->    54 [r150]=r151                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 50
;;   new tail = 54

;;   ======================================================
;;   -- basic block 9 from 57 to 81 -- before reload
;;   ======================================================

;;	  0-->    57 r152=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  1-->    60 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	  3-->    58 r135=[r152]                       :cortex_a8_load_store_1
;;	  3-->    61 r0=call [`sys_unlink']            :cortex_a8_issue_branch
;;	  4-->    96 r161=0xfff00                      :cortex_a8_load_store_1
;;	  4-->    74 r1=0x6180                         :cortex_a8_default
;;	  5-->    68 r159=r135&0xff                    :cortex_a8_default
;;	  5-->    73 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	  6-->    66 r157=r135 0>>0x14                 :cortex_a8_default
;;	  6-->    97 r161=r135&r161                    :cortex_a8_default
;;	  8-->    69 r160=r157<<0x8|r159               :cortex_a8_default
;;	  9-->    75 r2=r161<<0xc|r160                 :cortex_a8_default
;;	 10-->    76 r0=call [`sys_mknod']             :cortex_a8_issue_branch
;;	 10-->    78 r165=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	 11-->    79 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	 13-->    80 r1=[r165]                         :cortex_a8_load_store_1
;;	 14-->    81 call [`mount_block_root']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 14
;;   new head = 57
;;   new tail = 81


;; Procedure interblock/speculative motions == 2/2 




mount_root

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={12d,4u} r2={10d,2u} r3={9d,1u} r11={1d,10u} r12={8d} r13={1d,17u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,4u} r25={1d,14u} r26={1d,9u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,1u} r135={1d,3u} r137={2d,2u} r138={2d,2u} r140={1d,1u} r142={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={2d,2u} r165={1d,1u} r166={1d,1u} r168={1d,1u} 
;;    total ref usage 959{867d,92u,0e} in 50{43 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 140 142
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 2 5 2 NOTE_INSN_DELETED)

(insn 5 7 6 2 init/do_mounts.c:435 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 init/do_mounts.c:435 (set (reg:SI 142 [ ROOT_DEV ])
        (mem/c/i:SI (reg/f:SI 140) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
            (nil))))

(insn 8 6 9 2 init/do_mounts.c:435 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (lshiftrt:SI (reg:SI 142 [ ROOT_DEV ])
                        (const_int 20 [0x14]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 119 {*shiftsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 142 [ ROOT_DEV ])
        (nil)))

(jump_insn 9 8 10 2 init/do_mounts.c:435 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 10 12 3 NOTE_INSN_DELETED)

(note 12 11 16 3 NOTE_INSN_DELETED)

(note 16 12 13 3 NOTE_INSN_DELETED)

(insn 13 16 14 3 init/do_mounts.c:374 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 3 init/do_mounts.c:374 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(call_insn 15 14 17 3 init/do_mounts.c:374 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("nfs_root_data") [flags 0x41] <function_decl 0x11f60f00 nfs_root_data>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 15 18 3 init/do_mounts.c:375 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 18 17 19 3 init/do_mounts.c:375 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  8 [100.0%] 
;; Succ edge  4 [0.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 138 166 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 138 166 168
;; live  kill	

;; Pred edge  3 [0.0%]  (fallthru)
(note 19 18 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 19 20 4 init/do_mounts.c:385 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 20 24 21 4 init/do_mounts.c:375 (set (reg/v:SI 138 [ try ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 37 4 init/do_mounts.c:375 (set (reg/v:SI 137 [ timeout ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 37 21 44 4 include/linux/delay.h:52 (set (reg:SI 168)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 7) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (dfs_back)
(code_label 44 37 22 5 81 "" [1 uses])

(note 22 44 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 22 92 5 NOTE_INSN_DELETED)

(insn 92 30 27 5 init/do_mounts.c:385 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) 167 {*arm_movsi_insn} (nil))

(insn 27 92 28 5 init/do_mounts.c:385 (set (reg:SI 2 r2)
        (mem/c/i:SI (reg/f:SI 166) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 28 27 25 5 init/do_mounts.c:385 (set (reg:SI 3 r3)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 root_data+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 25 28 29 5 init/do_mounts.c:385 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 root_dev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 25 31 5 init/do_mounts.c:385 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_mount_root") [flags 0x3] <function_decl 0x12135c00 do_mount_root>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 31 29 39 5 init/do_mounts.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 39 31 32 5 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (mult:SI (reg:SI 168)
            (reg/v:SI 137 [ timeout ]))) 32 {*arm_mulsi3_v6} (nil))

(jump_insn 32 39 33 5 init/do_mounts.c:387 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 87)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168


;; Succ edge  10 [4.5%]  (loop_exit)
;; Succ edge  6 [95.5%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [95.5%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 43 6 init/do_mounts.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ try ])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(insn 43 34 35 6 init/do_mounts.c:384 (set (reg/v:SI 138 [ try ])
        (plus:SI (reg/v:SI 138 [ try ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 35 43 36 6 init/do_mounts.c:389 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1667 [0x683])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168


;; Succ edge  8 [16.7%]  (loop_exit)
;; Succ edge  7 [83.3%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  gen 	 0 [r0] 133 137 138
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  6 [83.3%]  (fallthru)
(note 36 35 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 38 36 40 7 NOTE_INSN_DELETED)

(call_insn 40 38 41 7 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 7 init/do_mounts.c:394 (set (reg/v:SI 133 [ timeout.1213 ])
        (ashift:SI (reg/v:SI 137 [ timeout ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ timeout ])
        (nil)))

(insn 42 41 94 7 init/do_mounts.c:394 (parallel [
            (set (reg/v:SI 137 [ timeout ])
                (umin:SI (reg/v:SI 133 [ timeout.1213 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ timeout.1213 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(jump_insn 94 42 95 7 (set (pc)
        (label_ref 44)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 166 168


;; Succ edge  5 [100.0%]  (dfs_back)

(barrier 95 94 47)

;; Start of basic block ( 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 150 151
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%] 
;; Pred edge  6 [16.7%]  (loop_exit)
(code_label 47 95 48 8 79 "" [2 uses])

(note 48 47 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 48 51 8 init/do_mounts.c:439 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10c70d80>)
        (nil)))

(call_insn 51 50 52 8 init/do_mounts.c:439 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 8 init/do_mounts.c:440 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 init/do_mounts.c:440 (set (reg:SI 151)
        (const_int 2097152 [0x200000])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 8 init/do_mounts.c:440 (set (mem/c/i:SI (reg/f:SI 150) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/f:SI 150)
            (expr_list:REG_EQUAL (const_int 2097152 [0x200000])
                (nil)))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 152 157 159 160 161 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 152 157 159 160 161 165
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 55 54 56 9 78 "" [1 uses])

(note 56 55 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 62 56 63 9 NOTE_INSN_DELETED)

(note 63 62 67 9 NOTE_INSN_DELETED)

(note 67 63 71 9 NOTE_INSN_DELETED)

(note 71 67 72 9 NOTE_INSN_DELETED)

(note 72 71 57 9 NOTE_INSN_DELETED)

(insn 57 72 60 9 init/do_mounts.c:456 (set (reg/f:SI 152)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 57 58 9 init/do_mounts.h:18 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 58 60 61 9 init/do_mounts.c:456 (set (reg:SI 135 [ ROOT_DEV.1211 ])
        (mem/c/i:SI (reg/f:SI 152) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
            (nil))))

(call_insn 61 58 96 9 init/do_mounts.h:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_unlink") [flags 0x41] <function_decl 0x12103280 sys_unlink>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 96 61 74 9 init/do_mounts.h:19 (set (reg:SI 161)
        (const_int 1048320 [0xfff00])) 167 {*arm_movsi_insn} (nil))

(insn 74 96 68 9 init/do_mounts.h:19 (set (reg:SI 1 r1)
        (const_int 24960 [0x6180])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 24960 [0x6180])
        (nil)))

(insn 68 74 73 9 init/do_mounts.h:19 (set (reg:SI 159)
        (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 73 68 66 9 init/do_mounts.h:19 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 66 73 97 9 init/do_mounts.h:19 (set (reg:SI 157)
        (lshiftrt:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 97 66 69 9 init/do_mounts.h:19 (set (reg:SI 161)
        (and:SI (reg:SI 135 [ ROOT_DEV.1211 ])
            (reg:SI 161))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 135 [ ROOT_DEV.1211 ])
        (nil)))

(insn 69 97 75 9 init/do_mounts.h:19 (set (reg:SI 160)
        (ior:SI (ashift:SI (reg:SI 157)
                (const_int 8 [0x8]))
            (reg:SI 159))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:SI 157)
            (nil))))

(insn 75 69 76 9 init/do_mounts.h:19 (set (reg:SI 2 r2)
        (ior:SI (ashift:SI (reg:SI 161)
                (const_int 12 [0xc]))
            (reg:SI 160))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_DEAD (reg:SI 160)
            (nil))))

(call_insn 76 75 78 9 init/do_mounts.h:19 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mknod") [flags 0x41] <function_decl 0x12103100 sys_mknod>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 78 76 79 9 init/do_mounts.c:457 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 init/do_mounts.c:457 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x121e4690>)
        (nil)))

(insn 80 79 81 9 init/do_mounts.c:457 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 165) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 165)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
            (nil))))

(call_insn 81 80 87 9 init/do_mounts.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 5) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  5 [4.5%]  (loop_exit)
(code_label 87 81 90 10 82 "" [1 uses])

(note 90 87 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 100 90 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function name_to_dev_t (name_to_dev_t)[0:2707]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 90 (    2)


name_to_dev_t

Dataflow summary:
def_info->table_size = 2141, use_info->table_size = 410
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={34d,39u} r1={30d,12u} r2={24d,6u} r3={20d,2u} r11={1d,44u} r12={18d} r13={1d,61u} r14={18d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={43d,26u} r25={1d,63u,5d} r26={1d,43u} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} r134={3d,5u} r136={1d,4u} r137={1d,2u} r138={1d,6u} r139={1d,3u} r140={1d,2u} r141={1d,4u} r142={1d,1u} r143={2d,5u,1d} r145={1d,1u} r147={9d,4u,1d} r148={1d,2u} r149={1d,1u} r153={1d,3u} r154={1d,2u} r155={1d,2u} r161={1d,5u} r163={1d,1u} r171={1d,1u} r173={1d,1u} r186={1d,1u} r187={1d,1u} r189={1d,1u} r190={1d,1u} r196={1d,2u} r200={1d,1u} r201={1d,1u} r202={1d,2u} r205={1d,1u,1d} r206={1d,1u} r208={1d,4u} r209={1d,1u} r210={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u,1d} r217={1d,1u} r219={1d,1u} r223={1d,1u} r224={2d,2u} r226={1d,1u} r227={1d,1u} r230={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} 
;;    total ref usage 2516{2121d,386u,9e} in 179{162 regular + 17 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d33(0){ }d63(1){ }d87(2){ }d107(3){ }d108(11){ }d126(12){ }d127(13){ }d145(14){ }d342(25){ }d343(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 11 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 163
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 161 163
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163

( 2 )->[3]->( 43 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 143 233 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; live  gen 	 143 233 234
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234

( 4 8 )->[5]->( 8 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 145 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 0 [r0] 24 [cc] 134 145 171
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 234
;; lr  def 	 24 [cc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 24 [cc] 173
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 134
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234

( 6 7 5 )->[8]->( 5 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 24 [cc] 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234

( 8 )->[9]->( 43 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 142
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142

( 9 )->[10]->( 44 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 147
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 2 )->[11]->( 12 18 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161

( 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161

( 12 )->[13]->( 43 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 154 155
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154

( 13 )->[14]->( 43 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; live  gen 	 24 [cc] 186 187
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 14 )->[15]->( 44 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 12 )->[16]->( 17 42 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 153 189 190
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153

( 16 )->[17]->( 43 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 11 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u167(11){ }u168(13){ }u169(25){ }u170(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 18 )->[19]->( 44 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 18 )->[20]->( 21 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 20 )->[21]->( 44 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 20 )->[22]->( 43 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 22 )->[23]->( 27 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 196 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 196 237
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237

( 27 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237

( 24 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u233(11){ }u234(13){ }u235(25){ }u236(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  gen 	 200 201
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237

( 26 23 )->[27]->( 24 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237

( 27 )->[28]->( 44 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 147 202
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202

( 28 )->[29]->( 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202

( 33 )->[30]->( 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u263(11){ }u264(13){ }u265(25){ }u266(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 149 235 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 235 236
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 235 236

( 29 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 202
;; lr  def 	 235 236
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202
;; live  gen 	 235 236
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 235 236

( 31 30 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 235
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 235 236
;; live  gen 	 24 [cc] 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 235 236

( 32 )->[33]->( 30 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 235 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 236
;; lr  def 	 24 [cc] 149 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 235 236
;; live  gen 	 24 [cc] 149 205 206
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 149 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 149 235 236

( 32 33 )->[34]->( 44 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u295(11){ }u296(13){ }u297(25){ }u298(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147
;; live  gen 	 24 [cc] 208
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208

( 34 )->[35]->( 44 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208
;; live  gen 	 24 [cc] 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147 208

( 35 )->[36]->( 44 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147 208
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208

( 36 )->[37]->( 44 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 147 148 209 210
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 208

( 37 )->[38]->( 44 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u338(11){ }u339(13){ }u340(25){ }u341(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208
;; lr  def 	 24 [cc] 136 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 208
;; live  gen 	 24 [cc] 136 214
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208

( 38 )->[39]->( 44 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u347(11){ }u348(13){ }u349(25){ }u350(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 215 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 24 [cc] 215 216 217
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208

( 39 )->[40]->( 44 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u358(11){ }u359(13){ }u360(25){ }u361(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 24 [cc] 219
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208

( 40 )->[41]->( 44 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 0 [r0] 1 [r1] 147
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 16 )->[42]->( 44 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u378(11){ }u379(13){ }u380(25){ }u381(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 147 223 224 226 227 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; live  gen 	 147 223 224 226 227 230
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 9 13 3 14 22 17 )->[43]->( 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 43 41 19 28 37 21 36 10 15 40 39 38 34 35 42 )->[44]->( 1 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u398(11){ }u399(13){ }u400(25){ }u401(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 44 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u404(0){ }u405(11){ }u406(13){ }u407(14){ }u408(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 23 to worklist
  Adding insn 19 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 33 to worklist
  Adding insn 29 to worklist
  Adding insn 49 to worklist
  Adding insn 60 to worklist
  Adding insn 72 to worklist
  Adding insn 69 to worklist
  Adding insn 328 to worklist
  Adding insn 76 to worklist
  Adding insn 89 to worklist
  Adding insn 85 to worklist
  Adding insn 101 to worklist
  Adding insn 98 to worklist
  Adding insn 109 to worklist
  Adding insn 114 to worklist
  Adding insn 331 to worklist
  Adding insn 129 to worklist
  Adding insn 124 to worklist
  Adding insn 335 to worklist
  Adding insn 143 to worklist
  Adding insn 139 to worklist
  Adding insn 337 to worklist
  Adding insn 157 to worklist
  Adding insn 153 to worklist
  Adding insn 339 to worklist
  Adding insn 169 to worklist
  Adding insn 165 to worklist
  Adding insn 341 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 181 to worklist
  Adding insn 185 to worklist
  Adding insn 190 to worklist
  Adding insn 197 to worklist
  Adding insn 205 to worklist
  Adding insn 202 to worklist
  Adding insn 345 to worklist
  Adding insn 348 to worklist
  Adding insn 210 to worklist
  Adding insn 216 to worklist
  Adding insn 225 to worklist
  Adding insn 230 to worklist
  Adding insn 234 to worklist
  Adding insn 237 to worklist
  Adding insn 255 to worklist
  Adding insn 252 to worklist
  Adding insn 248 to worklist
  Adding insn 242 to worklist
  Adding insn 261 to worklist
  Adding insn 268 to worklist
  Adding insn 273 to worklist
  Adding insn 350 to worklist
  Adding insn 281 to worklist
  Adding insn 277 to worklist
  Adding insn 352 to worklist
  Adding insn 314 to worklist
Finished finding needed instructions:
processing block 44 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 308 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 301 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 74 to worklist
processing block 9 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
  Adding insn 71 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
  Adding insn 59 to worklist
  Adding insn 57 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
  Adding insn 54 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
  Adding insn 48 to worklist
  Adding insn 46 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
  Adding insn 45 to worklist
  Adding insn 35 to worklist
  Adding insn 25 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 163
  Adding insn 22 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
  Adding insn 108 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 42 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 296 to worklist
  Adding insn 294 to worklist
  Adding insn 291 to worklist
  Adding insn 290 to worklist
  Adding insn 355 to worklist
  Adding insn 354 to worklist
  Adding insn 287 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
  Adding insn 100 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 145 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 159 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
  Adding insn 189 to worklist
  Adding insn 188 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
  Adding insn 180 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
processing block 41 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
  Adding insn 282 to worklist
  Adding insn 280 to worklist
  Adding insn 279 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
  Adding insn 272 to worklist
  Adding insn 271 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
  Adding insn 267 to worklist
  Adding insn 265 to worklist
  Adding insn 264 to worklist
  Adding insn 263 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
  Adding insn 260 to worklist
  Adding insn 259 to worklist
  Adding insn 257 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
  Adding insn 254 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 243 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
  Adding insn 239 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
  Adding insn 236 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
  Adding insn 233 to worklist
  Adding insn 232 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
  Adding insn 229 to worklist
  Adding insn 228 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 149 235 236
  Adding insn 224 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 218 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 235 236
  Adding insn 215 to worklist
  Adding insn 213 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
  Adding insn 220 to worklist
  Adding insn 214 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
processing block 28 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
  Adding insn 204 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
  Adding insn 196 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
  Adding insn 183 to worklist
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 168 to worklist
  Adding insn 164 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 156 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 142 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 135 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
  Adding insn 88 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 45 n_edges 70 count 94 (  2.1)
;;   ======================================================
;;   -- basic block 5 from 28 to 44 -- before reload
;;   ======================================================

;;	  0-->    28 r0=zxn([r134])                    :cortex_a8_load_store_1
;;	  1-->    29 r0=call [`hex_to_bin']            :cortex_a8_issue_branch
;;	  1-->    30 r145=r0                           :cortex_a8_default
;;	  2-->    32 r0=zxn([r134+0x1])                :cortex_a8_load_store_1
;;	  2-->    42 r134=r134+0x2                     :cortex_a8_default
;;	  3-->    33 r0=call [`hex_to_bin']            :cortex_a8_issue_branch
changing bb of uid 46
  from 6 to 5
;;	  3-->    46 r173=r234<<r143                   :cortex_a8_default
;;	  4-->    43 cc=cmp(r143,0x9)                  :cortex_a8_default
;;	 35-->    39 r171=r145<<0x4|r0                 :cortex_a8_default
;;	 35-->    41 [r233+r143]=r171#0                :cortex_a8_load_store_1
changing bb of uid 57
  from 8 to 5
;;	 36-->    57 r143=r143+0x1                     :cortex_a8_default
;;	 36-->    44 pc={(gtu(cc,0x0))?L55:pc}         :cortex_a8_branch
;;	Ready list (final):    48/b1
;;   total time = 36
;;   new head = 28
;;   new tail = 44

;;   ======================================================
;;   -- basic block 6 from 48 to 49 -- before reload
;;   ======================================================

;;	  0-->    48 {cc=cmp(r173&0x2a8,0x0);clobber sc:cortex_a8_default
;;	  2-->    49 pc={(cc==0x0)?L55:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 48
;;   new tail = 49

;;   ======================================================
;;   -- basic block 7 from 54 to 54 -- before reload
;;   ======================================================

;;	  0-->    54 r134=r134+0x1                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 54
;;   new tail = 54

;;   ======================================================
;;   -- basic block 8 from 59 to 60 -- before reload
;;   ======================================================

;;	  0-->    59 cc=cmp(r143,0x10)                 :cortex_a8_default
;;	  2-->    60 pc={(cc!=0x0)?L58:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 59
;;   new tail = 60

;;   ======================================================
;;   -- basic block 27 from 193 to 197 -- before reload
;;   ======================================================

;;	  0-->   193 r140=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  3-->   194 r139=zxn([r140])                  :cortex_a8_load_store_1
;;	  5-->   196 cc=cmp(r139,0x0)                  :cortex_a8_default
;;	  7-->   197 pc={(cc!=0x0)?L195:pc}            :cortex_a8_branch
;;	Ready list (final):    180/b1
;;   total time = 7
;;   new head = 193
;;   new tail = 197

;;   ======================================================
;;   -- basic block 24 from 180 to 181 -- before reload
;;   ======================================================

;;	  0-->   180 cc=cmp(r139,0x2f)                 :cortex_a8_default
;;	  2-->   181 pc={(cc!=0x0)?L186:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 180
;;   new tail = 181

;;   ======================================================
;;   -- basic block 25 from 185 to 185 -- before reload
;;   ======================================================

;;	  0-->   185 [r140]=r237#0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 185
;;   new tail = 185

;;   ======================================================
;;   -- basic block 26 from 188 to 190 -- before reload
;;   ======================================================

;;	  0-->   188 r200=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  2-->   189 r201=r200+0x1                     :cortex_a8_default
;;	  2-->   190 [sfp-0x4]=r201                    :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 188
;;   new tail = 190

;;   ======================================================
;;   -- basic block 32 from 213 to 216 -- before reload
;;   ======================================================

;;	  0-->   213 r138=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  2-->   215 cc=cmp(r138,r235)                 :cortex_a8_default
changing bb of uid 218
  from 33 to 32
;;	  2-->   218 r149=r138-0x1                     :cortex_a8_default
;;	  4-->   216 pc={(leu(cc,0x0))?L226:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 213
;;   new tail = 216

;;   ======================================================
;;   -- basic block 33 from 221 to 225 -- before reload
;;   ======================================================

;;	  0-->   221 r205=zxn([r138-0x1])              :cortex_a8_load_store_1
;;	  3-->   222 r206=zxn([r236+r205])             :cortex_a8_load_store_1
;;	  5-->   224 cc=cmp(zxt(r206,0x1,0x2),0x0)     :cortex_a8_default
;;	  7-->   225 pc={(cc!=0x0)?L219:pc}            :cortex_a8_branch
;;	Ready list (final):    210/b2
;;   total time = 7
;;   new head = 221
;;   new tail = 225

;;   ======================================================
;;   -- basic block 30 from 210 to 348 -- before reload
;;   ======================================================

;;	  0-->   210 [sfp-0x4]=r149                    :cortex_a8_load_store_1
;;	  0-->   348 pc=L347                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 210
;;   new tail = 348

;;   ======================================================
;;   -- basic block 2 from 3 to 15 -- before reload
;;   ======================================================

;;	  0-->     9 r1=`*.LC14'                       :cortex_a8_load_store_1
;;	  0-->    10 r2=0x9                            :cortex_a8_default
;;	  1-->     3 r161=r0                           :cortex_a8_default
;;	  1-->    11 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 33-->    14 {cc=cmp(r0,0x0);r163=r0;}         :cortex_a8_default
;;	 35-->    15 pc={(cc!=0x0)?L79:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 3
;;   new tail = 15

;;   ======================================================
;;   -- basic block 3 from 17 to 23 -- before reload
;;   ======================================================

;;	  0-->    17 r134=r161+0x9                     :cortex_a8_default
;;	  1-->    18 r0=r134                           :cortex_a8_default
;;	  2-->    19 r0=call [`strlen']                :cortex_a8_issue_branch
;;	 34-->    22 cc=cmp(r0,0x24)                   :cortex_a8_default
;;	 36-->    23 pc={(cc!=0x0)?L299:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 17
;;   new tail = 23

;;   ======================================================
;;   -- basic block 4 from 25 to 45 -- before reload
;;   ======================================================

;;	  0-->    25 r143=r163                         :cortex_a8_default
;;	  0-->    35 r233=sfp-0x1c                     :cortex_a8_default
;;	  1-->    45 r234=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 25
;;   new tail = 45

;;   ======================================================
;;   -- basic block 9 from 65 to 72 -- before reload
;;   ======================================================

;;	  0-->    65 r0=`block_class'                  :cortex_a8_load_store_1
;;	  0-->    66 r1=0x0                            :cortex_a8_default
;;	  1-->    67 r2=sfp-0x1c                       :cortex_a8_default
;;	  1-->    68 r3=`match_dev_by_uuid'            :cortex_a8_load_store_1
;;	  2-->    69 r0=call [`class_find_device']     :cortex_a8_issue_branch
;;	 34-->    71 {cc=cmp(r0,0x0);r142=r0;}         :cortex_a8_default
;;	 36-->    72 pc={(cc==0x0)?L299:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 65
;;   new tail = 72

;;   ======================================================
;;   -- basic block 10 from 74 to 328 -- before reload
;;   ======================================================

;;	  0-->    74 r147=[r142+0x134]                 :cortex_a8_load_store_1
;;	  0-->    76 call [`put_device']               :cortex_a8_issue_branch
;;	  1-->   328 pc=L302                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 74
;;   new tail = 328

;;   ======================================================
;;   -- basic block 11 from 82 to 89 -- before reload
;;   ======================================================

;;	  0-->    82 r0=r161                           :cortex_a8_default
;;	  0-->    83 r1=`*.LC15'                       :cortex_a8_load_store_1
;;	  1-->    84 r2=0x5                            :cortex_a8_default
;;	  2-->    85 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 34-->    88 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->    89 pc={(cc==0x0)?L133:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 82
;;   new tail = 89

;;   ======================================================
;;   -- basic block 12 from 94 to 101 -- before reload
;;   ======================================================

;;	  0-->    94 r0=r161                           :cortex_a8_default
;;	  0-->    95 r1=`*.LC16'                       :cortex_a8_load_store_1
;;	  1-->    96 r2=sfp-0x8                        :cortex_a8_default
;;	  1-->    97 r3=sfp-0xc                        :cortex_a8_default
;;	  2-->    98 r0=call [`sscanf']                :cortex_a8_issue_branch
;;	 34-->   100 cc=cmp(r0,0x2)                    :cortex_a8_default
;;	 36-->   101 pc={(cc!=0x0)?L118:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 94
;;   new tail = 101

;;   ======================================================
;;   -- basic block 13 from 103 to 109 -- before reload
;;   ======================================================

;;	  0-->   103 r155=[sfp-0x8]                    :cortex_a8_load_store_1
;;	  1-->   104 r154=[sfp-0xc]                    :cortex_a8_load_store_1
;;	  3-->   106 r147=r155<<0x14|r154              :cortex_a8_default
;;	  5-->   108 cc=cmp(r147 0>>0x14,r155)         :cortex_a8_default
;;	  7-->   109 pc={(cc!=0x0)?L299:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 103
;;   new tail = 109

;;   ======================================================
;;   -- basic block 14 from 111 to 114 -- before reload
;;   ======================================================

;;	  0-->   111 r187=r147&0xffffff                :cortex_a8_default
;;	  1-->   112 r186=r187&0xffffffffff0fffff      :cortex_a8_default
;;	  2-->   113 cc=cmp(r154,r186)                 :cortex_a8_default
;;	  4-->   114 pc={(cc!=0x0)?L299:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 111
;;   new tail = 114

;;   ======================================================
;;   -- basic block 15 from 331 to 331 -- before reload
;;   ======================================================

;;	  0-->   331 pc=L302                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 331
;;   new tail = 331

;;   ======================================================
;;   -- basic block 16 from 121 to 129 -- before reload
;;   ======================================================

;;	  0-->   121 r0=r161                           :cortex_a8_default
;;	  0-->   122 r1=sfp-0x4                        :cortex_a8_default
;;	  1-->   123 r2=0x10                           :cortex_a8_default
;;	  2-->   124 r0=call [`simple_strtoul']        :cortex_a8_issue_branch
;;	  2-->   125 r153=r0                           :cortex_a8_default
;;	  3-->   126 r189=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  6-->   127 r190=zxn([r189])                  :cortex_a8_load_store_1
;;	  8-->   128 cc=cmp(r190,0x0)                  :cortex_a8_default
;;	 10-->   129 pc={(cc==0x0)?L333:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 121
;;   new tail = 129

;;   ======================================================
;;   -- basic block 17 from 335 to 335 -- before reload
;;   ======================================================

;;	  0-->   335 pc=L299                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 335
;;   new tail = 335

;;   ======================================================
;;   -- basic block 18 from 135 to 143 -- before reload
;;   ======================================================

;;	  0-->   135 r141=r161+0x5                     :cortex_a8_default
;;	  0-->   138 r1=`*.LC11'                       :cortex_a8_load_store_1
;;	  1-->   137 r0=r141                           :cortex_a8_default
;;	  2-->   139 r0=call [`strcmp']                :cortex_a8_issue_branch
;;	 34-->   142 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->   143 pc={(cc!=0x0)?L148:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 135
;;   new tail = 143

;;   ======================================================
;;   -- basic block 19 from 145 to 337 -- before reload
;;   ======================================================

;;	  0-->   145 r147=0xff                         :cortex_a8_default
;;	  0-->   337 pc=L302                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 145
;;   new tail = 337

;;   ======================================================
;;   -- basic block 20 from 151 to 157 -- before reload
;;   ======================================================

;;	  0-->   151 r0=r141                           :cortex_a8_default
;;	  0-->   152 r1=`*.LC17'                       :cortex_a8_load_store_1
;;	  1-->   153 r0=call [`strcmp']                :cortex_a8_issue_branch
;;	 33-->   156 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->   157 pc={(cc!=0x0)?L162:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 151
;;   new tail = 157

;;   ======================================================
;;   -- basic block 21 from 159 to 339 -- before reload
;;   ======================================================

;;	  0-->   159 r147=0x100000                     :cortex_a8_default
;;	  0-->   339 pc=L302                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 159
;;   new tail = 339

;;   ======================================================
;;   -- basic block 22 from 164 to 169 -- before reload
;;   ======================================================

;;	  0-->   164 r0=r141                           :cortex_a8_default
;;	  1-->   165 r0=call [`strlen']                :cortex_a8_issue_branch
;;	 33-->   168 cc=cmp(r0,0x1f)                   :cortex_a8_default
;;	 35-->   169 pc={(gtu(cc,0x0))?L299:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 164
;;   new tail = 169

;;   ======================================================
;;   -- basic block 23 from 171 to 341 -- before reload
;;   ======================================================

;;	  0-->   171 r196=sfp-0x3c                     :cortex_a8_default
;;	  0-->   173 r1=r141                           :cortex_a8_default
;;	  1-->   172 r0=r196                           :cortex_a8_default
;;	  2-->   174 r0=call [`strcpy']                :cortex_a8_issue_branch
;;	  2-->   176 [sfp-0x4]=r196                    :cortex_a8_load_store_1
;;	  3-->   183 r237=0x21                         :cortex_a8_default
;;	  3-->   341 pc=L191                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 171
;;   new tail = 341

;;   ======================================================
;;   -- basic block 28 from 199 to 205 -- before reload
;;   ======================================================

;;	  0-->   199 r202=sfp-0x3c                     :cortex_a8_default
;;	  0-->   201 r1=r139                           :cortex_a8_default
;;	  1-->   200 r0=r202                           :cortex_a8_default
;;	  2-->   202 r0=call [`blk_lookup_devt']       :cortex_a8_issue_branch
;;	 34-->   204 {cc=cmp(r0,0x0);r147=r0;}         :cortex_a8_default
;;	 36-->   205 pc={(cc!=0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 199
;;   new tail = 205

;;   ======================================================
;;   -- basic block 29 from 345 to 345 -- before reload
;;   ======================================================

;;	  0-->   345 pc=L344                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 345
;;   new tail = 345

;;   ======================================================
;;   -- basic block 31 from 214 to 220 -- before reload
;;   ======================================================

;;	  0-->   220 r236=`_ctype'                     :cortex_a8_load_store_1
;;	  0-->   214 r235=r202                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 214
;;   new tail = 220

;;   ======================================================
;;   -- basic block 34 from 228 to 230 -- before reload
;;   ======================================================

;;	  0-->   228 r208=sfp-0x3c                     :cortex_a8_default
;;	  1-->   229 cc=cmp(r138,r208)                 :cortex_a8_default
;;	  3-->   230 pc={(cc==0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 228
;;   new tail = 230

;;   ======================================================
;;   -- basic block 35 from 232 to 234 -- before reload
;;   ======================================================

;;	  0-->   232 r137=zxn([r138])                  :cortex_a8_load_store_1
;;	  2-->   233 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  4-->   234 pc={(cc==0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 232
;;   new tail = 234

;;   ======================================================
;;   -- basic block 36 from 236 to 237 -- before reload
;;   ======================================================

;;	  0-->   236 cc=cmp(r137,0x30)                 :cortex_a8_default
;;	  2-->   237 pc={(cc==0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 236
;;   new tail = 237

;;   ======================================================
;;   -- basic block 37 from 239 to 255 -- before reload
;;   ======================================================

;;	  0-->   239 r0=r138                           :cortex_a8_default
;;	  0-->   240 r1=0x0                            :cortex_a8_default
;;	  1-->   241 r2=0xa                            :cortex_a8_default
;;	  2-->   242 r0=call [`simple_strtoul']        :cortex_a8_issue_branch
;;	  2-->   243 r148=r0                           :cortex_a8_default
;;	  3-->   245 r209=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  3-->   246 r210=0x0                          :cortex_a8_default
;;	  4-->   250 r0=r208                           :cortex_a8_default
;;	  4-->   251 r1=r148                           :cortex_a8_default
;;	  6-->   248 [r209]=r210#0                     :cortex_a8_load_store_1
;;	  7-->   252 r0=call [`blk_lookup_devt']       :cortex_a8_issue_branch
;;	 39-->   254 {cc=cmp(r0,0x0);r147=r0;}         :cortex_a8_default
;;	 41-->   255 pc={(cc!=0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 41
;;   new head = 239
;;   new tail = 255

;;   ======================================================
;;   -- basic block 38 from 257 to 261 -- before reload
;;   ======================================================

;;	  0-->   257 r136=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  0-->   259 r214=r208+0x2                     :cortex_a8_default
;;	  2-->   260 cc=cmp(r136,r214)                 :cortex_a8_default
;;	  4-->   261 pc={(ltu(cc,0x0))?L302:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 257
;;   new tail = 261

;;   ======================================================
;;   -- basic block 39 from 263 to 268 -- before reload
;;   ======================================================

;;	  0-->   263 r215=`_ctype'                     :cortex_a8_load_store_1
;;	  1-->   264 r216=zxn([r136-0x2])              :cortex_a8_load_store_1
;;	  4-->   265 r217=zxn([r215+r216])             :cortex_a8_load_store_1
;;	  6-->   267 cc=cmp(zxt(r217,0x1,0x2),0x0)     :cortex_a8_default
;;	  8-->   268 pc={(cc==0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 263
;;   new tail = 268

;;   ======================================================
;;   -- basic block 40 from 271 to 273 -- before reload
;;   ======================================================

;;	  0-->   271 r219=zxn([r136-0x1])              :cortex_a8_load_store_1
;;	  2-->   272 cc=cmp(r219,0x70)                 :cortex_a8_default
;;	  4-->   273 pc={(cc!=0x0)?L302:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 271
;;   new tail = 273

;;   ======================================================
;;   -- basic block 41 from 277 to 350 -- before reload
;;   ======================================================

;;	  0-->   277 [r136-0x1]=r147#0                 :cortex_a8_load_store_1
;;	  0-->   279 r0=r208                           :cortex_a8_default
;;	  1-->   280 r1=r148                           :cortex_a8_default
;;	  2-->   281 r0=call [`blk_lookup_devt']       :cortex_a8_issue_branch
;;	  2-->   282 r147=r0                           :cortex_a8_default
;;	  3-->   350 pc=L302                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 277
;;   new tail = 350

;;   ======================================================
;;   -- basic block 42 from 287 to 352 -- before reload
;;   ======================================================

;;	  0-->   354 r224=0xfff00                      :cortex_a8_load_store_1
;;	  0-->   287 r223=r153 0>>0xc                  :cortex_a8_default
;;	  1-->   294 r230=zxt(r153,0xc,0x8)            :cortex_a8_default
;;	  1-->   290 r226=r153&0xff                    :cortex_a8_default
;;	  2-->   355 r224=r223&r224                    :cortex_a8_default
;;	  3-->   291 r227=r224|r226                    :cortex_a8_default
;;	  4-->   296 r147=r230<<0x14|r227              :cortex_a8_default
;;	  4-->   352 pc=L302                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 287
;;   new tail = 352

;;   ======================================================
;;   -- basic block 43 from 301 to 301 -- before reload
;;   ======================================================

;;	  0-->   301 r147=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 301
;;   new tail = 301

;;   ======================================================
;;   -- basic block 44 from 308 to 314 -- before reload
;;   ======================================================

;;	  0-->   308 r0=r147                           :cortex_a8_default
;;	  0-->   314 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 308
;;   new tail = 314


;; Procedure interblock/speculative motions == 3/2 




name_to_dev_t

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={34d,39u} r1={30d,12u} r2={24d,6u} r3={20d,2u} r11={1d,44u} r12={18d} r13={1d,61u} r14={18d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={43d,26u} r25={1d,63u,5d} r26={1d,43u} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} r134={3d,5u} r136={1d,4u} r137={1d,2u} r138={1d,6u} r139={1d,3u} r140={1d,2u} r141={1d,4u} r142={1d,1u} r143={2d,5u,1d} r145={1d,1u} r147={9d,4u,1d} r148={1d,2u} r149={1d,1u} r153={1d,3u} r154={1d,2u} r155={1d,2u} r161={1d,5u} r163={1d,1u} r171={1d,1u} r173={1d,1u} r186={1d,1u} r187={1d,1u} r189={1d,1u} r190={1d,1u} r196={1d,2u} r200={1d,1u} r201={1d,1u} r202={1d,2u} r205={1d,1u,1d} r206={1d,1u} r208={1d,4u} r209={1d,1u} r210={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u,1d} r217={1d,1u} r219={1d,1u} r223={1d,1u} r224={2d,2u} r226={1d,1u} r227={1d,1u} r230={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} 
;;    total ref usage 2516{2121d,386u,9e} in 179{162 regular + 17 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 163
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 161 163
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 4 9 2 NOTE_INSN_DELETED)

(insn 9 12 10 2 init/do_mounts.c:144 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x121f8870>)
        (nil)))

(insn 10 9 3 2 init/do_mounts.c:144 (set (reg:SI 2 r2)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(insn 3 10 11 2 init/do_mounts.c:137 (set (reg/v/f:SI 161 [ name ])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 11 3 14 2 init/do_mounts.c:144 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 14 11 15 2 init/do_mounts.c:144 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 163)
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 15 14 16 2 init/do_mounts.c:144 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 163
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 20 16 17 3 NOTE_INSN_DELETED)

(insn 17 20 18 3 init/do_mounts.c:145 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 9 [0x9]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 161 [ name ])
        (nil)))

(insn 18 17 19 3 init/do_mounts.c:146 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ name.1256 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 19 18 22 3 init/do_mounts.c:146 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 22 19 23 3 init/do_mounts.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 36 [0x24]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 23 22 24 3 init/do_mounts.c:146 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 3 -> ( 43 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163


;; Succ edge  43 [62.2%] 
;; Succ edge  4 [37.8%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 143 233 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163
;; live  gen 	 143 233 234
;; live  kill	

;; Pred edge  3 [37.8%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 35 4 init/do_mounts.c:146 (set (reg/v:SI 143 [ i ])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 35 25 45 4 include/linux/genhd.h:210 (set (reg/f:SI 233)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(insn 45 35 58 4 include/linux/genhd.h:213 (set (reg:SI 234)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 8) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 145 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 0 [r0] 24 [cc] 134 145 171
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  8 [93.8%]  (dfs_back)
(code_label 58 45 26 5 90 "" [1 uses])

(note 26 58 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 26 31 5 NOTE_INSN_DELETED)

(note 31 27 34 5 NOTE_INSN_DELETED)

(note 34 31 36 5 NOTE_INSN_DELETED)

(note 36 34 28 5 NOTE_INSN_DELETED)

(insn 28 36 29 5 include/linux/genhd.h:210 (set (reg:SI 0 r0)
        (zero_extend:SI (mem:QI (reg/v/f:SI 134 [ name.1256 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(call_insn 29 28 30 5 include/linux/genhd.h:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 32 5 include/linux/genhd.h:210 (set (reg:SI 145 [ D.53098 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 32 30 42 5 include/linux/genhd.h:211 (set (reg:SI 0 r0)
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 134 [ name.1256 ])
                    (const_int 1 [0x1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 42 32 33 5 include/linux/genhd.h:212 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(call_insn 33 42 46 5 include/linux/genhd.h:211 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hex_to_bin") [flags 0x41] <function_decl 0x10a82e00 hex_to_bin>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 46 33 43 5 include/linux/genhd.h:213 (set (reg:SI 173)
        (ashift:SI (reg:SI 234)
            (reg/v:SI 143 [ i ]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg/v:SI 143 [ i ]))
        (nil)))

(insn 43 46 39 5 include/linux/genhd.h:213 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 9 [0x9]))) 219 {*arm_cmpsi_insn} (nil))

(insn 39 43 41 5 include/linux/genhd.h:210 (set (reg:SI 171)
        (ior:SI (ashift:SI (reg:SI 145 [ D.53098 ])
                (const_int 4 [0x4]))
            (reg:SI 0 r0))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 145 [ D.53098 ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 41 39 57 5 include/linux/genhd.h:210 (set (mem:QI (plus:SI (reg/f:SI 233)
                (reg/v:SI 143 [ i ])) [0 S1 A8])
        (subreg:QI (reg:SI 171) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 57 41 44 5 include/linux/genhd.h:209 (set (reg/v:SI 143 [ i ])
        (plus:SI (reg/v:SI 143 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 44 57 316 5 include/linux/genhd.h:213 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234


;; Succ edge  8 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 234
;; lr  def 	 24 [cc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 173 233 234
;; live  gen 	 24 [cc] 173
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 316 44 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 47 316 48 6 NOTE_INSN_DELETED)

(insn 48 47 49 6 include/linux/genhd.h:213 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 173)
                        (const_int 680 [0x2a8]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(jump_insn 49 48 52 6 include/linux/genhd.h:213 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 134
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(code_label 52 49 53 7 89 "" [0 uses])

(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 include/linux/genhd.h:218 (set (reg/v/f:SI 134 [ name.1256 ])
        (plus:SI (reg/v/f:SI 134 [ name.1256 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [50.0%] 
(code_label 55 54 56 8 88 "" [2 uses])

(note 56 55 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 60 8 include/linux/genhd.h:209 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ i ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 60 59 61 8 include/linux/genhd.h:209 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9375 [0x249f])
            (nil))))
;; End of basic block 8 -> ( 5 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 143 233 234


;; Succ edge  5 [93.8%]  (dfs_back)
;; Succ edge  9 [6.2%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 142
;; live  kill	 14 [lr]

;; Pred edge  8 [6.2%]  (fallthru,loop_exit)
(note 61 60 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 63 61 70 9 NOTE_INSN_DELETED)

(note 70 63 65 9 NOTE_INSN_DELETED)

(insn 65 70 66 9 init/do_mounts.c:105 (set (reg:SI 0 r0)
        (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("block_class") [flags 0xc0] <var_decl 0x11593de0 block_class>)
        (nil)))

(insn 66 65 67 9 init/do_mounts.c:105 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 9 init/do_mounts.c:105 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(insn 68 67 69 9 init/do_mounts.c:105 (set (reg:SI 3 r3)
        (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("match_dev_by_uuid") [flags 0x3] <function_decl 0x12135300 match_dev_by_uuid>)
        (nil)))

(call_insn 69 68 71 9 init/do_mounts.c:105 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("class_find_device") [flags 0x41] <function_decl 0x11201980 class_find_device>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 71 69 72 9 init/do_mounts.c:106 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 142 [ dev ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 72 71 73 9 init/do_mounts.c:106 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 9 -> ( 43 10)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142


;; Succ edge  43 [30.2%] 
;; Succ edge  10 [69.8%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 147
;; live  kill	 14 [lr]

;; Pred edge  9 [69.8%]  (fallthru)
(note 73 72 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 10 init/do_mounts.c:109 (set (reg/v:SI 147 [ res ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ dev ])
                (const_int 308 [0x134])) [0 <variable>.devt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ dev ])
        (nil)))

(call_insn 76 74 328 10 init/do_mounts.c:110 (parallel [
            (call (mem:SI (symbol_ref:SI ("put_device") [flags 0x41] <function_decl 0x11229c80 put_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 328 76 329 10 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%] 

(barrier 329 328 79)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
(code_label 79 329 80 11 86 "" [1 uses])

(note 80 79 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 86 80 82 11 NOTE_INSN_DELETED)

(insn 82 86 83 11 init/do_mounts.c:155 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 11 init/do_mounts.c:155 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
        (nil)))

(insn 84 83 85 11 init/do_mounts.c:155 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 88 11 init/do_mounts.c:155 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 88 85 89 11 init/do_mounts.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 89 88 90 11 init/do_mounts.c:155 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  18 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 90 89 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 92 90 93 12 NOTE_INSN_DELETED)

(note 93 92 99 12 NOTE_INSN_DELETED)

(note 99 93 94 12 NOTE_INSN_DELETED)

(insn 94 99 95 12 init/do_mounts.c:158 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 12 init/do_mounts.c:158 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x121f9960>)
        (nil)))

(insn 96 95 97 12 init/do_mounts.c:158 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 97 96 98 12 init/do_mounts.c:158 (set (reg:SI 3 r3)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(call_insn 98 97 100 12 init/do_mounts.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sscanf") [flags 0x41] <function_decl 0x5115e880 sscanf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 100 98 101 12 init/do_mounts.c:158 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 101 100 102 12 init/do_mounts.c:158 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5123 [0x1403])
            (nil))))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161


;; Succ edge  13 [48.8%]  (fallthru)
;; Succ edge  16 [51.2%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 154 155
;; live  kill	

;; Pred edge  12 [48.8%]  (fallthru)
(note 102 101 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 105 102 107 13 NOTE_INSN_DELETED)

(note 107 105 103 13 NOTE_INSN_DELETED)

(insn 103 107 104 13 init/do_mounts.c:159 (set (reg:SI 155 [ maj.879 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 maj+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 106 13 init/do_mounts.c:159 (set (reg:SI 154 [ min.880 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 min+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 106 104 108 13 init/do_mounts.c:159 (set (reg/v:SI 147 [ res ])
        (ior:SI (ashift:SI (reg:SI 155 [ maj.879 ])
                (const_int 20 [0x14]))
            (reg:SI 154 [ min.880 ]))) 270 {*arith_shiftsi} (nil))

(insn 108 106 109 13 init/do_mounts.c:160 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg/v:SI 147 [ res ])
                (const_int 20 [0x14]))
            (reg:SI 155 [ maj.879 ]))) 221 {*arm_cmpsi_shiftsi_swp} (expr_list:REG_DEAD (reg:SI 155 [ maj.879 ])
        (nil)))

(jump_insn 109 108 110 13 init/do_mounts.c:160 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_SWP 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 13 -> ( 43 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154


;; Succ edge  43 [62.2%] 
;; Succ edge  14 [37.8%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 154
;; live  gen 	 24 [cc] 186 187
;; live  kill	

;; Pred edge  13 [37.8%]  (fallthru)
(note 110 109 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 14 init/do_mounts.c:160 discrim 1 (set (reg:SI 187)
        (and:SI (reg/v:SI 147 [ res ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 112 111 113 14 init/do_mounts.c:160 discrim 1 (set (reg:SI 186)
        (and:SI (reg:SI 187)
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ res ])
                (const_int 1048575 [0xfffff]))
            (nil))))

(insn 113 112 114 14 init/do_mounts.c:160 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154 [ min.880 ])
            (reg:SI 186))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_DEAD (reg:SI 154 [ min.880 ])
            (nil))))

(jump_insn 114 113 330 14 init/do_mounts.c:160 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 14 -> ( 43 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  43 [62.2%] 
;; Succ edge  15 [37.8%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	
;; live  kill	

;; Pred edge  14 [37.8%]  (fallthru)
(note 330 114 331 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn 331 330 332 15 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%] 

(barrier 332 331 118)

;; Start of basic block ( 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 153 189 190
;; live  kill	 14 [lr]

;; Pred edge  12 [51.2%] 
(code_label 118 332 119 16 93 "" [1 uses])

(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 120 119 121 16 NOTE_INSN_DELETED)

(insn 121 120 122 16 init/do_mounts.c:163 (set (reg:SI 0 r0)
        (reg/v/f:SI 161 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 161 [ name ])
        (nil)))

(insn 122 121 123 16 init/do_mounts.c:163 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 123 122 124 16 init/do_mounts.c:163 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 124 123 125 16 init/do_mounts.c:163 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 125 124 126 16 init/do_mounts.c:163 (set (reg:SI 153 [ D.52725 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 126 125 127 16 init/do_mounts.c:164 (set (reg/f:SI 189 [ p ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 16 init/do_mounts.c:164 (set (reg:SI 190)
        (zero_extend:SI (mem:QI (reg/f:SI 189 [ p ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 189 [ p ])
        (nil)))

(insn 128 127 129 16 init/do_mounts.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 190)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(jump_insn 129 128 334 16 init/do_mounts.c:164 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 333)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 16 -> ( 17 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153


;; Succ edge  17 [39.0%]  (fallthru)
;; Succ edge  42 [61.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [39.0%]  (fallthru)
(note 334 129 335 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 335 334 336 17 (set (pc)
        (label_ref 299)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 43)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  43 [100.0%] 

(barrier 336 335 133)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u167(11){ }u168(13){ }u169(25){ }u170(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141
;; live  kill	 14 [lr]

;; Pred edge  11 [71.0%] 
(code_label 133 336 134 18 92 "" [1 uses])

(note 134 133 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 140 134 135 18 NOTE_INSN_DELETED)

(insn 135 140 138 18 init/do_mounts.c:170 (set (reg/v/f:SI 141 [ name.1246 ])
        (plus:SI (reg/v/f:SI 161 [ name ])
            (const_int 5 [0x5]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 161 [ name ])
        (nil)))

(insn 138 135 137 18 init/do_mounts.c:172 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x121e0cc0>)
        (nil)))

(insn 137 138 139 18 init/do_mounts.c:172 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 139 137 142 18 init/do_mounts.c:172 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 142 139 143 18 init/do_mounts.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 143 142 144 18 init/do_mounts.c:172 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 148)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 337 19 init/do_mounts.c:171 (set (reg/v:SI 147 [ res ])
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 337 145 338 19 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%] 

(barrier 338 337 148)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%] 
(code_label 148 338 149 20 95 "" [1 uses])

(note 149 148 154 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 154 149 151 20 NOTE_INSN_DELETED)

(insn 151 154 152 20 init/do_mounts.c:175 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 20 init/do_mounts.c:175 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x121ff060>)
        (nil)))

(call_insn/i 153 152 156 20 init/do_mounts.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 156 153 157 20 init/do_mounts.c:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 157 156 158 20 init/do_mounts.c:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 158 157 159 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 339 21 init/do_mounts.c:174 (set (reg/v:SI 147 [ res ])
        (const_int 1048576 [0x100000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 339 159 340 21 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%] 

(barrier 340 339 162)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  20 [50.0%] 
(code_label 162 340 163 22 96 "" [1 uses])

(note 163 162 166 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 166 163 164 22 NOTE_INSN_DELETED)

(insn 164 166 165 22 init/do_mounts.c:178 (set (reg:SI 0 r0)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 165 164 168 22 init/do_mounts.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 168 165 169 22 init/do_mounts.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 169 168 170 22 init/do_mounts.c:178 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 299)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 22 -> ( 43 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  43 [61.0%] 
;; Succ edge  23 [39.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 196 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 196 237
;; live  kill	 14 [lr]

;; Pred edge  22 [39.0%]  (fallthru)
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 173 23 init/do_mounts.c:180 (set (reg/f:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 173 171 172 23 init/do_mounts.c:180 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ name.1246 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ name.1246 ])
        (nil)))

(insn 172 173 174 23 init/do_mounts.c:180 (set (reg:SI 0 r0)
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(call_insn 174 172 176 23 init/do_mounts.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 176 174 183 23 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 196)
        (nil)))

(insn 183 176 341 23 init/do_mounts.c:183 (set (reg:SI 237)
        (const_int 33 [0x21])) 167 {*arm_movsi_insn} (nil))

(jump_insn 341 183 342 23 init/do_mounts.c:181 (set (pc)
        (label_ref 191)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237


;; Succ edge  27 [100.0%] 

(barrier 342 341 195)

;; Start of basic block ( 27) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [91.0%] 
(code_label 195 342 179 24 99 "" [1 uses])

(note 179 195 180 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 24 init/do_mounts.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 47 [0x2f]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ temp.1248 ])
        (nil)))

(jump_insn 181 180 182 24 init/do_mounts.c:182 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 186)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237


;; Succ edge  25 [28.0%]  (fallthru)
;; Succ edge  26 [72.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 237
;; live  gen 	
;; live  kill	

;; Pred edge  24 [28.0%]  (fallthru)
(note 182 181 185 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 185 182 186 25 init/do_mounts.c:183 (set (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8])
        (subreg:QI (reg:SI 237) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ p.1247 ])
        (expr_list:REG_EQUAL (const_int 33 [0x21])
            (nil))))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u233(11){ }u234(13){ }u235(25){ }u236(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  gen 	 200 201
;; live  kill	

;; Pred edge  24 [72.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 186 185 187 26 98 "" [1 uses])

(note 187 186 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 189 26 init/do_mounts.c:181 (set (reg/f:SI 200 [ p ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 26 init/do_mounts.c:181 (set (reg/f:SI 201)
        (plus:SI (reg/f:SI 200 [ p ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 200 [ p ])
        (nil)))

(insn 190 189 191 26 init/do_mounts.c:181 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 201)
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 26 23) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 237
;; live  gen 	 24 [cc] 139 140
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
;; Pred edge  23 [100.0%] 
(code_label 191 190 192 27 97 "" [1 uses])

(note 192 191 193 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 27 init/do_mounts.c:181 discrim 1 (set (reg/f:SI 140 [ p.1247 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 194 193 196 27 init/do_mounts.c:181 discrim 1 (set (reg:SI 139 [ temp.1248 ])
        (zero_extend:SI (mem:QI (reg/f:SI 140 [ p.1247 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 196 194 197 27 init/do_mounts.c:181 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ temp.1248 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 197 196 198 27 init/do_mounts.c:181 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 195)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 27 -> ( 24 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 237


;; Succ edge  24 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 147 202
;; live  kill	 14 [lr]

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 198 197 203 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 203 198 199 28 NOTE_INSN_DELETED)

(insn 199 203 201 28 init/do_mounts.c:184 (set (reg/f:SI 202)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 201 199 200 28 init/do_mounts.c:184 (set (reg:SI 1 r1)
        (reg:SI 139 [ temp.1248 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ temp.1248 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 200 201 202 28 init/do_mounts.c:184 (set (reg:SI 0 r0)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(call_insn 202 200 204 28 init/do_mounts.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 204 202 205 28 init/do_mounts.c:185 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 147 [ res ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 205 204 343 28 init/do_mounts.c:185 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 44 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202


;; Succ edge  44 [50.0%] 
;; Succ edge  29 [50.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202
;; live  gen 	
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 343 205 345 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(jump_insn 345 343 346 29 (set (pc)
        (label_ref 344)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202


;; Succ edge  31 [100.0%] 

(barrier 346 345 219)

;; Start of basic block ( 33) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u263(11){ }u264(13){ }u265(25){ }u266(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 149 235 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 235 236
;; live  gen 	
;; live  kill	

;; Pred edge  33 [95.5%] 
(code_label 219 346 209 30 102 "" [1 uses])

(note 209 219 210 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 348 30 init/do_mounts.c:193 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])
        (reg/f:SI 149 [ p.885 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ p.885 ])
        (nil)))

(jump_insn 348 210 349 30 (set (pc)
        (label_ref 347)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 235 236


;; Succ edge  32 [100.0%]  (dfs_back)

(barrier 349 348 344)

;; Start of basic block ( 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 202
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 202
;; lr  def 	 235 236
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 202
;; live  gen 	 235 236
;; live  kill	

;; Pred edge  29 [100.0%] 
(code_label 344 349 212 31 106 "" [1 uses])

(note 212 344 220 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 220 212 214 31 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 236)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) 167 {*arm_movsi_insn} (nil))

(insn 214 220 347 31 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 235)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4]))
            (nil))))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 235 236


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u275(11){ }u276(13){ }u277(25){ }u278(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 235 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 235
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 235 236
;; live  gen 	 24 [cc] 138
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (dfs_back)
(code_label 347 214 320 32 107 "" [1 uses])

(note 320 347 213 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 213 320 215 32 init/do_mounts.c:192 discrim 1 (set (reg/f:SI 138 [ p.1250 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 215 213 218 32 init/do_mounts.c:192 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg/f:SI 235))) 219 {*arm_cmpsi_insn} (nil))

(insn 218 215 216 32 init/do_mounts.c:192 discrim 2 (set (reg/f:SI 149 [ p.885 ])
        (plus:SI (reg/f:SI 138 [ p.1250 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 216 218 217 32 init/do_mounts.c:192 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 235 236


;; Succ edge  33 [95.5%]  (fallthru)
;; Succ edge  34 [4.5%]  (loop_exit)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 235 236
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 236
;; lr  def 	 24 [cc] 149 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 149 235 236
;; live  gen 	 24 [cc] 149 205 206
;; live  kill	

;; Pred edge  32 [95.5%]  (fallthru)
(note 217 216 223 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 223 217 221 33 NOTE_INSN_DELETED)

(insn 221 223 222 33 init/do_mounts.c:192 discrim 2 (set (reg:SI 205)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 138 [ p.1250 ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 222 221 224 33 init/do_mounts.c:192 discrim 2 (set (reg:SI 206)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 236)
                    (reg:SI 205)) [0 _ctype S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg:SI 205)
                        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) [0 _ctype S1 A8]))
            (nil))))

(insn 224 222 225 33 init/do_mounts.c:192 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 206)
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(jump_insn 225 224 226 33 init/do_mounts.c:192 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 33 -> ( 30 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 149 235 236
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 149 235 236


;; Succ edge  30 [95.5%] 
;; Succ edge  34 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u295(11){ }u296(13){ }u297(25){ }u298(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147
;; live  gen 	 24 [cc] 208
;; live  kill	

;; Pred edge  32 [4.5%]  (loop_exit)
;; Pred edge  33 [4.5%]  (fallthru,loop_exit)
(code_label 226 225 227 34 101 "" [1 uses])

(note 227 226 228 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 34 init/do_mounts.c:194 (set (reg/f:SI 208)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(insn 229 228 230 34 init/do_mounts.c:194 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ p.1250 ])
            (reg/f:SI 208))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 230 229 231 34 init/do_mounts.c:194 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 34 -> ( 44 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208


;; Succ edge  44 [10.1%] 
;; Succ edge  35 [89.9%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  34 [89.9%]  (fallthru)
(note 231 230 232 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 232 231 233 35 init/do_mounts.c:194 discrim 1 (set (reg:SI 137 [ temp.1251 ])
        (zero_extend:SI (mem:QI (reg/f:SI 138 [ p.1250 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 233 232 234 35 init/do_mounts.c:194 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 235 35 init/do_mounts.c:194 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 35 -> ( 44 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147 208


;; Succ edge  44 [39.0%] 
;; Succ edge  36 [61.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u310(11){ }u311(13){ }u312(25){ }u313(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 147 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147 208
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [61.0%]  (fallthru)
(note 235 234 236 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 36 init/do_mounts.c:194 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ temp.1251 ])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ temp.1251 ])
        (nil)))

(jump_insn 237 236 238 36 init/do_mounts.c:194 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3784 [0xec8])
            (nil))))
;; End of basic block 36 -> ( 44 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 147 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 147 208


;; Succ edge  44 [37.8%] 
;; Succ edge  37 [62.2%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u316(11){ }u317(13){ }u318(25){ }u319(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 208
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 147 148 209 210
;; live  kill	 14 [lr]

;; Pred edge  36 [62.2%]  (fallthru)
(note 238 237 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note 253 238 239 37 NOTE_INSN_DELETED)

(insn 239 253 240 37 init/do_mounts.c:198 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ p.1250 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ p.1250 ])
        (nil)))

(insn 240 239 241 37 init/do_mounts.c:198 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 241 240 242 37 init/do_mounts.c:198 (set (reg:SI 2 r2)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn 242 241 243 37 init/do_mounts.c:198 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a77e00 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 243 242 245 37 init/do_mounts.c:198 (set (reg:SI 148 [ D.52751 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 245 243 246 37 init/do_mounts.c:199 (set (reg/f:SI 209 [ p ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 246 245 250 37 init/do_mounts.c:199 (set (reg:SI 210)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 250 246 251 37 init/do_mounts.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -60 [0xffffffffffffffc4]))
        (nil)))

(insn 251 250 248 37 init/do_mounts.c:200 (set (reg:SI 1 r1)
        (reg:SI 148 [ D.52751 ])) 167 {*arm_movsi_insn} (nil))

(insn 248 251 252 37 init/do_mounts.c:199 (set (mem:QI (reg/f:SI 209 [ p ]) [0 S1 A8])
        (subreg:QI (reg:SI 210) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_DEAD (reg/f:SI 209 [ p ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(call_insn 252 248 254 37 init/do_mounts.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 254 252 255 37 init/do_mounts.c:201 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 147 [ res ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 255 254 256 37 init/do_mounts.c:201 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37 -> ( 44 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 208


;; Succ edge  44 [50.0%] 
;; Succ edge  38 [50.0%]  (fallthru)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u338(11){ }u339(13){ }u340(25){ }u341(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208
;; lr  def 	 24 [cc] 136 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 208
;; live  gen 	 24 [cc] 136 214
;; live  kill	

;; Pred edge  37 [50.0%]  (fallthru)
(note 256 255 257 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 259 38 init/do_mounts.c:205 (set (reg/f:SI 136 [ p.1253 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 p+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 259 257 260 38 init/do_mounts.c:205 (set (reg/f:SI 214)
        (plus:SI (reg/f:SI 208)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 260 259 261 38 init/do_mounts.c:205 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ p.1253 ])
            (reg/f:SI 214))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 214)
        (nil)))

(jump_insn 261 260 262 38 init/do_mounts.c:205 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 38 -> ( 44 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208


;; Succ edge  44 [39.0%] 
;; Succ edge  39 [61.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u347(11){ }u348(13){ }u349(25){ }u350(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 215 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 24 [cc] 215 216 217
;; live  kill	

;; Pred edge  38 [61.0%]  (fallthru)
(note 262 261 266 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 266 262 263 39 NOTE_INSN_DELETED)

(insn 263 266 264 39 init/do_mounts.c:205 discrim 1 (set (reg/f:SI 215)
        (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) 167 {*arm_movsi_insn} (nil))

(insn 264 263 265 39 init/do_mounts.c:205 discrim 1 (set (reg:SI 216)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                    (const_int -2 [0xfffffffffffffffe])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 265 264 267 39 init/do_mounts.c:205 discrim 1 (set (reg:SI 217)
        (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg/f:SI 215)
                    (reg:SI 216)) [0 _ctype S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg/f:SI 215)
            (expr_list:REG_EQUAL (zero_extend:SI (mem/s/u/j:QI (plus:SI (reg:SI 216)
                            (symbol_ref:SI ("_ctype") [flags 0xc0] <var_decl 0x10fff720 _ctype>)) [0 _ctype S1 A8]))
                (nil)))))

(insn 267 265 268 39 init/do_mounts.c:205 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 217)
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(jump_insn 268 267 269 39 init/do_mounts.c:205 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 39 -> ( 44 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208


;; Succ edge  44 [39.0%] 
;; Succ edge  40 [61.0%]  (fallthru)

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u358(11){ }u359(13){ }u360(25){ }u361(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 24 [cc] 219
;; live  kill	

;; Pred edge  39 [61.0%]  (fallthru)
(note 269 268 271 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 271 269 272 40 init/do_mounts.c:205 discrim 2 (set (reg:SI 219)
        (zero_extend:SI (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                    (const_int -1 [0xffffffffffffffff])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 272 271 273 40 init/do_mounts.c:205 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 112 [0x70]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(jump_insn 273 272 274 40 init/do_mounts.c:205 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
            (nil))))
;; End of basic block 40 -> ( 44 41)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 147 148 208
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208


;; Succ edge  44 [80.1%] 
;; Succ edge  41 [19.9%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u365(11){ }u366(13){ }u367(25){ }u368(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 147 148 208
;; live  gen 	 0 [r0] 1 [r1] 147
;; live  kill	 14 [lr]

;; Pred edge  40 [19.9%]  (fallthru)
(note 274 273 277 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 277 274 279 41 init/do_mounts.c:207 (set (mem:QI (plus:SI (reg/f:SI 136 [ p.1253 ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (subreg:QI (reg/v:SI 147 [ res ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ res ])
        (expr_list:REG_DEAD (reg/f:SI 136 [ p.1253 ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 279 277 280 41 init/do_mounts.c:208 (set (reg:SI 0 r0)
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4]))
            (nil))))

(insn 280 279 281 41 init/do_mounts.c:208 (set (reg:SI 1 r1)
        (reg:SI 148 [ D.52751 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ D.52751 ])
        (nil)))

(call_insn 281 280 282 41 init/do_mounts.c:208 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("blk_lookup_devt") [flags 0x41] <function_decl 0x115c3b00 blk_lookup_devt>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 282 281 350 41 init/do_mounts.c:208 (set (reg/v:SI 147 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 350 282 351 41 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%] 

(barrier 351 350 333)

;; Start of basic block ( 16) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u378(11){ }u379(13){ }u380(25){ }u381(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 147 223 224 226 227 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; live  gen 	 147 223 224 226 227 230
;; live  kill	

;; Pred edge  16 [61.0%] 
(code_label 333 351 286 42 105 "" [1 uses])

(note 286 333 293 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 293 286 295 42 NOTE_INSN_DELETED)

(note 295 293 354 42 NOTE_INSN_DELETED)

(insn 354 295 287 42 include/linux/kdev_t.h:52 (set (reg:SI 224)
        (const_int 1048320 [0xfff00])) 167 {*arm_movsi_insn} (nil))

(insn 287 354 294 42 include/linux/kdev_t.h:52 (set (reg:SI 223)
        (lshiftrt:SI (reg:SI 153 [ D.52725 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 294 287 290 42 include/linux/kdev_t.h:52 (set (reg:SI 230)
        (zero_extract:SI (reg:SI 153 [ D.52725 ])
            (const_int 12 [0xc])
            (const_int 8 [0x8]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 153 [ D.52725 ])
        (nil)))

(insn 290 294 355 42 include/linux/kdev_t.h:52 (set (reg:SI 226)
        (and:SI (reg:SI 153 [ D.52725 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 355 290 291 42 include/linux/kdev_t.h:52 (set (reg:SI 224)
        (and:SI (reg:SI 223)
            (reg:SI 224))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 223)
        (nil)))

(insn 291 355 296 42 include/linux/kdev_t.h:52 (set (reg:SI 227)
        (ior:SI (reg:SI 224)
            (reg:SI 226))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_DEAD (reg:SI 224)
            (nil))))

(insn 296 291 352 42 include/linux/kdev_t.h:52 (set (reg/v:SI 147 [ res ])
        (ior:SI (ashift:SI (reg:SI 230)
                (const_int 20 [0x14]))
            (reg:SI 227))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_DEAD (reg:SI 227)
            (nil))))

(jump_insn 352 296 353 42 (set (pc)
        (label_ref 302)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%] 

(barrier 353 352 299)

;; Start of basic block ( 9 13 3 14 22 17) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 147
;; live  kill	

;; Pred edge  9 [30.2%] 
;; Pred edge  13 [62.2%] 
;; Pred edge  3 [62.2%] 
;; Pred edge  14 [62.2%] 
;; Pred edge  22 [61.0%] 
;; Pred edge  17 [100.0%] 
(code_label 299 353 300 43 87 "" [6 uses])

(note 300 299 301 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 301 300 302 43 init/do_mounts.c:213 (set (reg/v:SI 147 [ res ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  44 [100.0%]  (fallthru)

;; Start of basic block ( 43 41 19 28 37 21 36 10 15 40 39 38 34 35 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u398(11){ }u399(13){ }u400(25){ }u401(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  28 [50.0%] 
;; Pred edge  37 [50.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  36 [37.8%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  40 [80.1%] 
;; Pred edge  39 [39.0%] 
;; Pred edge  38 [39.0%] 
;; Pred edge  34 [10.1%] 
;; Pred edge  35 [39.0%] 
;; Pred edge  42 [100.0%] 
(code_label 302 301 303 44 91 "" [14 uses])

(note 303 302 308 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 308 303 314 44 init/do_mounts.c:216 (set (reg/i:SI 0 r0)
        (reg/v:SI 147 [ res ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ res ])
        (nil)))

(insn 314 308 357 44 init/do_mounts.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 44 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 357 314 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function prepare_namespace (prepare_namespace)[0:2718] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 15 from 119 to 123 -- before reload
;;   ======================================================

;;	  0-->   119 r0=call [`driver_probe_done']     :cortex_a8_issue_branch
;;	 32-->   122 cc=cmp(r0,0x0)                    :cortex_a8_default
changing bb of uid 161
  from 16 to 15
;;	 32-->   161 r0=const(`*.LANCHOR1'+0x10)       :cortex_a8_load_store_1
;;	 34-->   123 pc={(cc!=0x0)?L121:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 34
;;   new head = 119
;;   new tail = 123

;;   ======================================================
;;   -- basic block 16 from 128 to 133 -- before reload
;;   ======================================================

;;	  0-->   128 r0=call [`name_to_dev_t']         :cortex_a8_issue_branch
;;	  0-->   129 r133=r0                           :cortex_a8_default
;;	  1-->   132 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  1-->   131 [r187]=r133                       :cortex_a8_load_store_1
;;	  3-->   133 pc={(cc==0x0)?L121:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 128
;;   new tail = 133

;;   ======================================================
;;   -- basic block 14 from 163 to 116 -- before reload
;;   ======================================================

;;	  0-->   163 r0=0x64                           :cortex_a8_default
;;	  1-->   116 call [`msleep']                   :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 163
;;   new tail = 116

;;   ======================================================
;;   -- basic block 2 from 5 to 8 -- before reload
;;   ======================================================

;;	  0-->     5 r142=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  3-->     6 r141=[r142+0x50]                  :cortex_a8_load_store_1
;;	  5-->     7 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  7-->     8 pc={(cc==0x0)?L20:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 5
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 11 to 19 -- before reload
;;   ======================================================

;;	  0-->    12 r1=r141                           :cortex_a8_default
;;	  0-->    11 r0=`*.LC18'                       :cortex_a8_load_store_1
;;	  1-->    13 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->    15 r146=[r142+0x50]                  :cortex_a8_load_store_1
;;	  2-->    16 r147=0x3e8                        :cortex_a8_default
;;	  4-->    18 r0=r147*r146                      :cortex_a8_multiply_2
;;	  5-->    19 call [`msleep']                   :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 11
;;   new tail = 19

;;   ======================================================
;;   -- basic block 4 from 22 to 26 -- before reload
;;   ======================================================

;;	  0-->    23 r148=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->    22 call [`wait_for_device_probe']    :cortex_a8_issue_branch
;;	  3-->    24 r149=zxn([r148+0x10])             :cortex_a8_load_store_1
;;	  5-->    25 cc=cmp(r149,0x0)                  :cortex_a8_default
;;	  7-->    26 pc={(cc==0x0)?L89:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 22
;;   new tail = 26

;;   ======================================================
;;   -- basic block 5 from 30 to 42 -- before reload
;;   ======================================================

;;	  0-->    30 r152=r148+0x10                    :cortex_a8_default
;;	  0-->    36 r1=`*.LC19'                       :cortex_a8_load_store_1
;;	  1-->    35 r0=r152                           :cortex_a8_default
;;	  1-->    37 r2=0x3                            :cortex_a8_default
;;	  2-->    31 [r148+0x54]=r152                  :cortex_a8_load_store_1
;;	  2-->    38 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 34-->    41 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->    42 pc={(cc==0x0)?L55:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 30
;;   new tail = 42

;;   ======================================================
;;   -- basic block 6 from 47 to 54 -- before reload
;;   ======================================================

;;	  0-->    47 r0=r152                           :cortex_a8_default
;;	  0-->    48 r1=`*.LC20'                       :cortex_a8_load_store_1
;;	  1-->    49 r2=0x3                            :cortex_a8_default
;;	  2-->    50 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 34-->    53 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->    54 pc={(cc!=0x0)?L65:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 47
;;   new tail = 54

;;   ======================================================
;;   -- basic block 7 from 59 to 164 -- before reload
;;   ======================================================

;;	  0-->    59 r163=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->    60 r0=const(`*.LANCHOR1'+0x10)       :cortex_a8_load_store_1
;;	  3-->    61 r1=[r163]                         :cortex_a8_load_store_1
;;	  4-->    62 call [`mount_block_root']         :cortex_a8_issue_branch
;;	  4-->   164 pc=L139                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 59
;;   new tail = 164

;;   ======================================================
;;   -- basic block 8 from 69 to 84 -- before reload
;;   ======================================================

;;	  0-->    69 r0=r152                           :cortex_a8_default
;;	  1-->    70 r0=call [`name_to_dev_t']         :cortex_a8_issue_branch
;;	  1-->    72 r166=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  2-->    75 r140=[r148+0x54]                  :cortex_a8_load_store_1
;;	  2-->    79 r2=0x5                            :cortex_a8_default
;;	  3-->    78 r1=`*.LC15'                       :cortex_a8_load_store_1
;;	 33-->    73 [r166]=r0                         :cortex_a8_load_store_1
;;	 33-->    77 r0=r140                           :cortex_a8_default
;;	 34-->    80 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 66-->    83 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 68-->    84 pc={(cc!=0x0)?L89:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 68
;;   new head = 69
;;   new tail = 84

;;   ======================================================
;;   -- basic block 9 from 87 to 88 -- before reload
;;   ======================================================

;;	  0-->    87 r171=r140+0x5                     :cortex_a8_default
;;	  0-->    88 [r148+0x54]=r171                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 87
;;   new tail = 88

;;   ======================================================
;;   -- basic block 10 from 91 to 94 -- before reload
;;   ======================================================

;;	  0-->    91 r0=call [`initrd_load']           :cortex_a8_issue_branch
;;	 32-->    93 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 34-->    94 pc={(cc!=0x0)?L139:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 34
;;   new head = 91
;;   new tail = 94

;;   ======================================================
;;   -- basic block 11 from 96 to 99 -- before reload
;;   ======================================================

;;	  0-->    96 r172=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  3-->    97 r173=[r172]                       :cortex_a8_load_store_1
;;	  5-->    98 cc=cmp(r173,0x0)                  :cortex_a8_default
;;	  7-->    99 pc={(cc!=0x0)?L136:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 96
;;   new tail = 99

;;   ======================================================
;;   -- basic block 12 from 101 to 104 -- before reload
;;   ======================================================

;;	  0-->   101 r174=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  3-->   102 r175=[r174]                       :cortex_a8_load_store_1
;;	  5-->   103 cc=cmp(r175,0x0)                  :cortex_a8_default
;;	  7-->   104 pc={(cc==0x0)?L136:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 101
;;   new tail = 104

;;   ======================================================
;;   -- basic block 13 from 109 to 166 -- before reload
;;   ======================================================

;;	  0-->   110 r1=r174+0x10                      :cortex_a8_default
;;	  0-->   109 r0=`*.LC21'                       :cortex_a8_load_store_1
;;	  1-->   111 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   130 r187=r172                         :cortex_a8_default
;;	  2-->   166 pc=L117                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 109
;;   new tail = 166

;;   ======================================================
;;   -- basic block 17 from 135 to 135 -- before reload
;;   ======================================================

;;	  0-->   135 call [`async_synchronize_full']   :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 135
;;   new tail = 135

;;   ======================================================
;;   -- basic block 18 from 138 to 138 -- before reload
;;   ======================================================

;;	  0-->   138 call [`mount_root']               :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 138
;;   new tail = 138

;;   ======================================================
;;   -- basic block 19 from 143 to 152 -- before reload
;;   ======================================================

;;	  0-->   143 r184=0x0                          :cortex_a8_default
;;	  0-->   145 r0=`*.LC22'                       :cortex_a8_load_store_1
;;	  1-->   147 r2=r184                           :cortex_a8_default
;;	  1-->   146 r1=`*.LC23'                       :cortex_a8_load_store_1
;;	  2-->   148 r3=0x2000                         :cortex_a8_default
;;	  2-->   144 [sp]=r184                         :cortex_a8_load_store_1
;;	  3-->   149 r0=call [`sys_mount']             :cortex_a8_issue_branch
;;	  3-->   151 r0=`*.LC22'                       :cortex_a8_load_store_1
;;	  4-->   152 r0=call [`sys_chroot']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 143
;;   new tail = 152


;; Procedure interblock/speculative motions == 1/1 




prepare_namespace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,19u} r1={25d,7u} r2={22d,4u} r3={19d,1u} r11={1d,19u} r12={18d} r13={1d,37u} r14={17d,1u} r15={17d} r16={17d} r17={17d} r18={17d} r19={17d} r20={17d} r21={17d} r22={17d} r23={17d} r24={27d,10u} r25={1d,19u} r26={1d,18u} r27={17d} r28={17d} r29={17d} r30={17d} r31={17d} r32={17d} r33={17d} r34={17d} r35={17d} r36={17d} r37={17d} r38={17d} r39={17d} r40={17d} r41={17d} r42={17d} r43={17d} r44={17d} r45={17d} r46={17d} r47={17d} r48={17d} r49={17d} r50={17d} r51={17d} r52={17d} r53={17d} r54={17d} r55={17d} r56={17d} r57={17d} r58={17d} r59={17d} r60={17d} r61={17d} r62={17d} r63={17d} r64={17d} r65={17d} r66={17d} r67={17d} r68={17d} r69={17d} r70={17d} r71={17d} r72={17d} r73={17d} r74={17d} r75={17d} r76={17d} r77={17d} r78={17d} r79={17d} r80={17d} r81={17d} r82={17d} r83={17d} r84={17d} r85={17d} r86={17d} r87={17d} r88={17d} r89={17d} r90={17d} r91={17d} r92={17d} r93={17d} r94={17d} r95={17d} r96={17d} r97={17d} r98={17d} r99={17d} r100={17d} r101={17d} r102={17d} r103={17d} r104={17d} r105={17d} r106={17d} r107={17d} r108={17d} r109={17d} r110={17d} r111={17d} r112={17d} r113={17d} r114={17d} r115={17d} r116={17d} r117={17d} r118={17d} r119={17d} r120={17d} r121={17d} r122={17d} r123={17d} r124={17d} r125={17d} r126={17d} r127={17d} r133={1d,2u} r140={1d,2u} r141={1d,2u} r142={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,5u} r149={1d,1u} r152={1d,4u} r163={1d,1u} r166={1d,1u} r171={1d,1u} r172={1d,2u} r173={1d,1u} r174={1d,2u} r175={1d,1u} r184={1d,2u} r187={1d,1u} 
;;    total ref usage 2217{2050d,167u,0e} in 86{69 regular + 17 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 142
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/do_mounts.c:468 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/do_mounts.c:468 (set (reg:SI 141 [ root_delay.909 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 142)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 80 [0x50]))) [0 root_delay+0 S4 A32])
        (nil)))

(insn 7 6 8 2 init/do_mounts.c:468 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ root_delay.909 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 init/do_mounts.c:468 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 0 [r0] 1 [r1] 146 147
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 9 12 3 NOTE_INSN_DELETED)

(insn 12 17 11 3 init/do_mounts.c:469 (set (reg:SI 1 r1)
        (reg:SI 141 [ root_delay.909 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ root_delay.909 ])
        (nil)))

(insn 11 12 13 3 init/do_mounts.c:469 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x12177c80>)
        (nil)))

(call_insn 13 11 15 3 init/do_mounts.c:469 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 3 include/linux/delay.h:52 (set (reg:SI 146 [ root_delay ])
        (mem/c/i:SI (plus:SI (reg/f:SI 142)
                (const_int 80 [0x50])) [0 root_delay+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 80 [0x50]))) [0 root_delay+0 S4 A32])
            (nil))))

(insn 16 15 18 3 include/linux/delay.h:52 (set (reg:SI 147)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(insn 18 16 19 3 include/linux/delay.h:52 (set (reg:SI 0 r0)
        (mult:SI (reg:SI 147)
            (reg:SI 146 [ root_delay ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg:SI 146 [ root_delay ])
            (nil))))

(call_insn 19 18 20 3 include/linux/delay.h:52 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 149
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 113 "" [1 uses])

(note 21 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 22 4 init/do_mounts.c:485 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 23 24 4 init/do_mounts.c:481 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_device_probe") [flags 0x41] <function_decl 0x11201180 wait_for_device_probe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 24 22 25 4 init/do_mounts.c:485 (set (reg:SI 149 [ saved_root_name ])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 148)
                    (const_int 16 [0x10])) [0 saved_root_name+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 16 [0x10]))) [0 saved_root_name+0 S1 A32]))
        (nil)))

(insn 25 24 26 4 init/do_mounts.c:485 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149 [ saved_root_name ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ saved_root_name ])
        (nil)))

(jump_insn 26 25 27 4 init/do_mounts.c:485 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148


;; Succ edge  5 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 152
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
(note 27 26 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 39 27 30 5 NOTE_INSN_DELETED)

(insn 30 39 36 5 init/do_mounts.c:486 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 148)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 36 30 35 5 init/do_mounts.c:487 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x12215340>)
        (nil)))

(insn 35 36 37 5 init/do_mounts.c:487 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 37 35 31 5 init/do_mounts.c:487 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 31 37 38 5 init/do_mounts.c:486 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn/i 38 31 41 5 init/do_mounts.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 41 38 42 5 init/do_mounts.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 42 41 43 5 init/do_mounts.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152


;; Succ edge  7 [0.0%] 
;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
(note 43 42 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 43 47 6 NOTE_INSN_DELETED)

(insn 47 51 48 6 init/do_mounts.c:488 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 48 47 49 6 init/do_mounts.c:488 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x122153c0>)
        (nil)))

(insn 49 48 50 6 init/do_mounts.c:488 (set (reg:SI 2 r2)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 50 49 53 6 init/do_mounts.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 53 50 54 6 init/do_mounts.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 54 53 55 6 init/do_mounts.c:487 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4285 [0x10bd])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152


;; Succ edge  7 [57.1%]  (fallthru)
;; Succ edge  8 [42.9%] 

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 163
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%] 
;; Pred edge  6 [57.1%]  (fallthru)
(code_label 55 54 56 7 115 "" [1 uses])

(note 56 55 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 60 7 init/do_mounts.c:489 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 7 init/do_mounts.c:489 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 61 60 62 7 init/do_mounts.c:489 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 163) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 root_mountflags+0 S4 A32])
            (nil))))

(call_insn 62 61 164 7 init/do_mounts.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_block_root") [flags 0x3] <function_decl 0x1212c900 mount_block_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 164 62 165 7 init/do_mounts.c:490 (set (pc)
        (label_ref 139)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  19 [100.0%] 

(barrier 165 164 65)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 140 166
;; live  kill	 14 [lr]

;; Pred edge  6 [42.9%] 
(code_label 65 165 66 8 116 "" [1 uses])

(note 66 65 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 71 66 81 8 NOTE_INSN_DELETED)

(note 81 71 69 8 NOTE_INSN_DELETED)

(insn 69 81 70 8 init/do_mounts.c:492 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(call_insn 70 69 72 8 init/do_mounts.c:492 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 72 70 75 8 init/do_mounts.c:492 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 75 72 79 8 init/do_mounts.c:493 (set (reg/f:SI 140 [ root_device_name.910 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 84 [0x54]))) [0 root_device_name+0 S4 A32])
        (nil)))

(insn 79 75 78 8 init/do_mounts.c:493 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 78 79 73 8 init/do_mounts.c:493 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x121f9900>)
        (nil)))

(insn 73 78 77 8 init/do_mounts.c:492 (set (mem/c/i:SI (reg/f:SI 166) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 77 73 80 8 init/do_mounts.c:493 (set (reg:SI 0 r0)
        (reg/f:SI 140 [ root_device_name.910 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 80 77 83 8 init/do_mounts.c:493 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 83 80 84 8 init/do_mounts.c:493 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 84 83 85 8 init/do_mounts.c:493 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; lr  def 	 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; live  gen 	 171
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 85 84 87 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 87 85 88 9 init/do_mounts.c:494 (set (reg/f:SI 171)
        (plus:SI (reg/f:SI 140 [ root_device_name.910 ])
            (const_int 5 [0x5]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 140 [ root_device_name.910 ])
        (nil)))

(insn 88 87 89 9 init/do_mounts.c:494 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 84 [0x54])) [0 root_device_name+0 S4 A32])
        (reg/f:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_DEAD (reg/f:SI 148)
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 4 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%] 
;; Pred edge  8 [50.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 89 88 90 10 114 "" [2 uses])

(note 90 89 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 92 90 91 10 NOTE_INSN_DELETED)

(call_insn 91 92 93 10 init/do_mounts.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("initrd_load") [flags 0x41] <function_decl 0x1212ce00 initrd_load>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 93 91 94 10 init/do_mounts.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 94 93 95 10 init/do_mounts.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 10 -> ( 19 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  19 [100.0%] 
;; Succ edge  11 [0.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 172 173
;; live  kill	

;; Pred edge  10 [0.0%]  (fallthru)
(note 95 94 96 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 11 init/do_mounts.c:501 (set (reg/f:SI 172)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 11 init/do_mounts.c:501 (set (reg:SI 173 [ ROOT_DEV ])
        (mem/c/i:SI (reg/f:SI 172) [0 ROOT_DEV+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]) [0 ROOT_DEV+0 S4 A32])
        (nil)))

(insn 98 97 99 11 init/do_mounts.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173 [ ROOT_DEV ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173 [ ROOT_DEV ])
        (nil)))

(jump_insn 99 98 100 11 init/do_mounts.c:501 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172
;; live  gen 	 24 [cc] 174 175
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 100 99 101 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 12 init/do_mounts.c:501 discrim 1 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 12 init/do_mounts.c:501 discrim 1 (set (reg:SI 175 [ root_wait ])
        (mem/c/i:SI (reg/f:SI 174) [0 root_wait+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 root_wait+0 S4 A32])
        (nil)))

(insn 103 102 104 12 init/do_mounts.c:501 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175 [ root_wait ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175 [ root_wait ])
        (nil)))

(jump_insn 104 103 105 12 init/do_mounts.c:501 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 174


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  18 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 172 174
;; live  gen 	 0 [r0] 1 [r1] 187
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 105 104 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 110 105 109 13 init/do_mounts.c:502 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 174)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 174)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 109 110 111 13 init/do_mounts.c:502 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x12216340>)
        (nil)))

(call_insn 111 109 130 13 init/do_mounts.c:502 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 130 111 166 13 init/do_mounts.c:504 discrim 2 (set (reg/f:SI 187)
        (reg/f:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 172)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
            (nil))))

(jump_insn 166 130 167 13 init/do_mounts.c:504 (set (pc)
        (label_ref 117)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187


;; Succ edge  15 [100.0%] 

(barrier 167 166 121)

;; Start of basic block ( 15 16) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%] 
;; Pred edge  16 [91.0%] 
(code_label 121 167 114 14 120 "" [2 uses])

(note 114 121 163 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 163 114 116 14 init/do_mounts.c:506 (set (reg:SI 0 r0)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn 116 163 117 14 init/do_mounts.c:506 (parallel [
            (call (mem:SI (symbol_ref:SI ("msleep") [flags 0x41] <function_decl 0x11595a80 msleep>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  13 [100.0%] 
(code_label 117 116 118 15 119 "" [1 uses])

(note 118 117 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 120 118 119 15 NOTE_INSN_DELETED)

(call_insn 119 120 122 15 init/do_mounts.c:504 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("driver_probe_done") [flags 0x41] <function_decl 0x11201100 driver_probe_done>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 122 119 161 15 init/do_mounts.c:504 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 161 122 123 15 init/do_mounts.c:505 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (nil))

(jump_insn 123 161 124 15 init/do_mounts.c:504 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 15 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187


;; Succ edge  14 [29.0%] 
;; Succ edge  16 [71.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  15 [71.0%]  (fallthru)
(note 124 123 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 128 124 129 16 init/do_mounts.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("name_to_dev_t") [flags 0x3] <function_decl 0x115cbe00 name_to_dev_t>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 132 16 init/do_mounts.c:505 (set (reg:SI 133 [ ROOT_DEV.916 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 132 129 131 16 init/do_mounts.c:504 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ROOT_DEV.916 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ ROOT_DEV.916 ])
        (nil)))

(insn 131 132 133 16 init/do_mounts.c:504 discrim 2 (set (mem/c/i:SI (reg/f:SI 187) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 133 [ ROOT_DEV.916 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 133 131 134 16 init/do_mounts.c:504 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 16 -> ( 14 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 187


;; Succ edge  14 [91.0%] 
;; Succ edge  17 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  16 [9.0%]  (fallthru,loop_exit)
(note 134 133 135 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(call_insn 135 134 136 17 init/do_mounts.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x115d7000 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 11 12 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 136 135 137 18 118 "" [2 uses])

(note 137 136 138 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 138 137 139 18 init/do_mounts.c:515 (parallel [
            (call (mem:SI (symbol_ref:SI ("mount_root") [flags 0x3] <function_decl 0x1212c980 mount_root>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 10 18 7) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 184
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 139 138 140 19 117 "" [2 uses])

(note 140 139 143 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 143 140 145 19 init/do_mounts.c:518 (set (reg:SI 184)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 145 143 147 19 init/do_mounts.c:518 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
        (nil)))

(insn 147 145 146 19 init/do_mounts.c:518 (set (reg:SI 2 r2)
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 146 147 148 19 init/do_mounts.c:518 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x122230e0>)
        (nil)))

(insn 148 146 144 19 init/do_mounts.c:518 (set (reg:SI 3 r3)
        (const_int 8192 [0x2000])) 167 {*arm_movsi_insn} (nil))

(insn 144 148 149 19 init/do_mounts.c:518 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 149 144 151 19 init/do_mounts.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_mount") [flags 0x41] <function_decl 0x120f7880 sys_mount>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 151 149 152 19 init/do_mounts.c:519 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x12223080>)
        (nil)))

(call_insn/j 152 151 153 19 init/do_mounts.c:519 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_chroot") [flags 0x41] <function_decl 0x12103080 sys_chroot>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 19 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 153 152 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function match_dev_by_uuid (match_dev_by_uuid)[0:2705]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 3 to 9 -- before reload
;;   ======================================================

;;	  0-->     7 r135=[r0+0x174]                   :cortex_a8_load_store_1
;;	  0-->     3 r138=r1                           :cortex_a8_default
;;	  2-->     8 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	  4-->     9 pc={(cc!=0x0)?L14:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 3
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 41 -- before reload
;;   ======================================================

;;	  0-->    11 r133=r135                         :cortex_a8_default
;;	  0-->    41 pc=L25                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 11
;;   new tail = 41

;;   ======================================================
;;   -- basic block 4 from 16 to 23 -- before reload
;;   ======================================================

;;	  0-->    16 r0=r138                           :cortex_a8_default
;;	  0-->    17 r1=r135                           :cortex_a8_default
;;	  1-->    18 r2=0x10                           :cortex_a8_default
;;	  2-->    19 r0=call [`memcmp']                :cortex_a8_issue_branch
;;	 34-->    23 {r133=r0==0x0;clobber cc;}        :cortex_a8_default
;;	Ready list (final):  
;;   total time = 34
;;   new head = 16
;;   new tail = 23

;;   ======================================================
;;   -- basic block 5 from 31 to 37 -- before reload
;;   ======================================================

;;	  0-->    31 r0=r133                           :cortex_a8_default
;;	  0-->    37 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 31
;;   new tail = 37


;; Procedure interblock/speculative motions == 0/0 




match_dev_by_uuid

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,1u} r135={1d,3u} r138={1d,1u} 
;;    total ref usage 172{137d,35u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 4 2 NOTE_INSN_DELETED)

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 3 2 init/do_mounts.c:74 (set (reg/f:SI 135 [ D.52671 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 372 [0x174])) [0 <variable>.info+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dev ])
        (nil)))

(insn 3 7 8 2 init/do_mounts.c:70 (set (reg/v/f:SI 138 [ data ])
        (reg:SI 1 r1 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ data ])
        (nil)))

(insn 8 3 9 2 init/do_mounts.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.52671 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 init/do_mounts.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [15.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 41 3 init/do_mounts.c:82 (set (reg:SI 133 [ D.52676 ])
        (reg/f:SI 135 [ D.52671 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.52671 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 41 11 42 3 (set (pc)
        (label_ref 25)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%] 

(barrier 42 41 14)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [85.0%] 
(code_label 14 42 15 4 125 "" [1 uses])

(note 15 14 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 20 15 22 4 NOTE_INSN_DELETED)

(note 22 20 16 4 NOTE_INSN_DELETED)

(insn 16 22 17 4 init/do_mounts.c:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 17 16 18 4 init/do_mounts.c:77 (set (reg:SI 1 r1)
        (reg/f:SI 135 [ D.52671 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.52671 ])
        (nil)))

(insn 18 17 19 4 init/do_mounts.c:77 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 19 18 23 4 init/do_mounts.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcmp") [flags 0x41] <function_decl 0x51154b80 memcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 23 19 25 4 init/do_mounts.c:80 (parallel [
            (set (reg:SI 133 [ D.52676 ])
                (eq:SI (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 25 23 26 5 126 "" [1 uses])

(note 26 25 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 26 37 5 init/do_mounts.c:83 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.52676 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.52676 ])
        (nil)))

(insn 37 31 43 5 init/do_mounts.c:83 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 43 37 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
