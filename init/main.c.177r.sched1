
;; Function set_reset_devices (set_reset_devices)[0:2044] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 19 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->     7 r136=0x1                          :cortex_a8_default
;;	  1-->    13 r0=r136                           :cortex_a8_default
;;	  3-->     8 [r135]=r136                       :cortex_a8_load_store_1
;;	  3-->    19 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 6
;;   new tail = 19


;; Procedure interblock/speculative motions == 0/0 




set_reset_devices

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,2u} 
;;    total ref usage 26{13d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 init/main.c:146 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 13 2 init/main.c:146 (set (reg:SI 136)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 8 2 init/main.c:148 (set (reg/i:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 8 13 19 2 init/main.c:146 (set (mem/c/i:SI (reg/f:SI 135) [0 reset_devices+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 19 8 23 2 init/main.c:148 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function debug_kernel (debug_kernel)[0:2046] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 19 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`console_printk'             :cortex_a8_load_store_1
;;	  0-->     7 r136=0xa                          :cortex_a8_default
;;	  1-->    13 r0=0x0                            :cortex_a8_default
;;	  3-->     8 [r135]=r136                       :cortex_a8_load_store_1
;;	  3-->    19 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 6
;;   new tail = 19


;; Procedure interblock/speculative motions == 0/0 




debug_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 25{13d,12u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 6 2 NOTE_INSN_DELETED)

(insn 6 9 7 2 init/main.c:197 (set (reg/f:SI 135)
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 13 2 init/main.c:197 (set (reg:SI 136)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 8 2 init/main.c:199 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 13 19 2 init/main.c:197 (set (mem/s/j:SI (reg/f:SI 135) [0 console_printk+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (expr_list:REG_EQUAL (const_int 10 [0xa])
                (nil)))))

(insn 19 8 23 2 init/main.c:199 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function quiet_kernel (quiet_kernel)[0:2047] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 19 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`console_printk'             :cortex_a8_load_store_1
;;	  0-->     7 r136=0x4                          :cortex_a8_default
;;	  1-->    13 r0=0x0                            :cortex_a8_default
;;	  3-->     8 [r135]=r136                       :cortex_a8_load_store_1
;;	  3-->    19 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 6
;;   new tail = 19


;; Procedure interblock/speculative motions == 0/0 




quiet_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 25{13d,12u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 6 2 NOTE_INSN_DELETED)

(insn 6 9 7 2 init/main.c:203 (set (reg/f:SI 135)
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 13 2 init/main.c:203 (set (reg:SI 136)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 8 2 init/main.c:205 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 13 19 2 init/main.c:203 (set (mem/s/j:SI (reg/f:SI 135) [0 console_printk+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (expr_list:REG_EQUAL (const_int 4 [0x4])
                (nil)))))

(insn 19 8 23 2 init/main.c:205 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function init_setup (init_setup)[0:2050] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 37 to 43 -- before reload
;;   ======================================================

;;	  0-->    39 r165=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->    43 r172=0x0                          :cortex_a8_default
;;	  1-->    37 r168=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->    41 r164=r165+0x7c                    :cortex_a8_default
;;	  4-->    38 [r168+0x4]=r0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 37
;;   new tail = 43

;;   ======================================================
;;   -- basic block 3 from 44 to 48 -- before reload
;;   ======================================================

;;	  0-->    44 [++r165]=r172                     :cortex_a8_load_store_1
;;	  0-->    47 cc=cmp(r165,r164)                 :cortex_a8_default
;;	  2-->    48 pc={(cc!=0x0)?L46:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 44
;;   new tail = 48

;;   ======================================================
;;   -- basic block 4 from 54 to 60 -- before reload
;;   ======================================================

;;	  0-->    54 r0=0x1                            :cortex_a8_default
;;	  0-->    60 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 54
;;   new tail = 60


;; Procedure interblock/speculative motions == 0/0 




init_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r164={1d,1u} r165={2d,3u,1d} r168={1d,1u} r172={1d,1u} 
;;    total ref usage 44{17d,26u,1e} in 10{10 regular + 0 call} insns.
(note 32 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164 165 168 172
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 164 165 168 172
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 32 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 33 35 34 2 NOTE_INSN_DELETED)

(note 34 33 39 2 NOTE_INSN_FUNCTION_BEG)

(insn 39 34 43 2 init/main.c:293 (set (reg:SI 165 [ ivtmp.545 ])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 43 39 37 2 init/main.c:301 (set (reg:SI 172)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 37 43 41 2 init/main.c:293 (set (reg/f:SI 168)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 41 37 38 2 init/main.c:289 (set (reg/f:SI 164 [ D.38402 ])
        (plus:SI (reg:SI 165 [ ivtmp.545 ])
            (const_int 124 [0x7c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 124 [0x7c])))
        (nil)))

(insn 38 41 46 2 init/main.c:293 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 168)
                (const_int 4 [0x4])) [0 execute_command+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 168)
        (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 172
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 172


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 172
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 172
;; live  gen 	 24 [cc] 165
;; live  kill	

;; Pred edge  3 [96.8%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 46 38 42 3 14 "" [1 uses])

(note 42 46 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 44 42 47 3 init/main.c:301 (set (mem/s/f/j:SI (pre_inc:SI (reg:SI 165 [ ivtmp.545 ])) [0 argv_init S4 A32])
        (reg:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 165 [ ivtmp.545 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 47 44 48 3 init/main.c:300 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ ivtmp.545 ])
            (reg/f:SI 164 [ D.38402 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 165 [ ivtmp.545 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 124 [0x7c]))))
        (nil)))

(jump_insn 48 47 49 3 init/main.c:300 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9677 [0x25cd])
            (nil))))
;; End of basic block 3 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 172
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 172


;; Succ edge  3 [96.8%]  (dfs_back)
;; Succ edge  4 [3.2%]  (fallthru,loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [3.2%]  (fallthru,loop_exit)
(note 49 48 54 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 54 49 60 4 init/main.c:303 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 60 54 86 4 init/main.c:303 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 86 60 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function rdinit_setup (rdinit_setup)[0:2051] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 12 -- before reload
;;   ======================================================

;;	  0-->     8 r134=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->    12 r141=0x0                          :cortex_a8_default
;;	  1-->     6 r137=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->    10 r133=r134+0x7c                    :cortex_a8_default
;;	  4-->     7 [r137+0x8]=r0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 12

;;   ======================================================
;;   -- basic block 3 from 13 to 17 -- before reload
;;   ======================================================

;;	  0-->    13 [++r134]=r141                     :cortex_a8_load_store_1
;;	  0-->    16 cc=cmp(r134,r133)                 :cortex_a8_default
;;	  2-->    17 pc={(cc!=0x0)?L15:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 13
;;   new tail = 17

;;   ======================================================
;;   -- basic block 4 from 23 to 29 -- before reload
;;   ======================================================

;;	  0-->    23 r0=0x1                            :cortex_a8_default
;;	  0-->    29 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 23
;;   new tail = 29


;; Procedure interblock/speculative motions == 0/0 




rdinit_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,4u} r12={1d} r13={1d,4u} r14={1d,1u} r24={1d,1u} r25={1d,4u} r26={1d,3u} r133={1d,1u} r134={2d,3u,1d} r137={1d,1u} r141={1d,1u} 
;;    total ref usage 44{17d,26u,1e} in 10{10 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 137 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 137 141
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 12 2 init/main.c:310 (set (reg:SI 134 [ ivtmp.580 ])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 6 2 init/main.c:313 (set (reg:SI 141)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 6 12 10 2 init/main.c:310 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 6 7 2 init/main.c:306 (set (reg/f:SI 133 [ D.38437 ])
        (plus:SI (reg:SI 134 [ ivtmp.580 ])
            (const_int 124 [0x7c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 124 [0x7c])))
        (nil)))

(insn 7 10 15 2 init/main.c:310 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 141
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  gen 	 24 [cc] 134
;; live  kill	

;; Pred edge  3 [96.8%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 15 7 11 3 21 "" [1 uses])

(note 11 15 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 16 3 init/main.c:313 (set (mem/s/f/j:SI (pre_inc:SI (reg:SI 134 [ ivtmp.580 ])) [0 argv_init S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 134 [ ivtmp.580 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 16 13 17 3 init/main.c:312 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ ivtmp.580 ])
            (reg/f:SI 133 [ D.38437 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 134 [ ivtmp.580 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 124 [0x7c]))))
        (nil)))

(jump_insn 17 16 18 3 init/main.c:312 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9677 [0x25cd])
            (nil))))
;; End of basic block 3 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141


;; Succ edge  3 [96.8%]  (dfs_back)
;; Succ edge  4 [3.2%]  (fallthru,loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [3.2%]  (fallthru,loop_exit)
(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 init/main.c:315 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 29 23 36 4 init/main.c:315 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 36 29 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_setup_processor_id (smp_setup_processor_id)[0:2058] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

;; Procedure interblock/speculative motions == 0/0 




smp_setup_processor_id

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 12 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 12 2 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function thread_info_cache_init (thread_info_cache_init)[0:2059] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

;; Procedure interblock/speculative motions == 0/0 




thread_info_cache_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 12 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 12 2 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function loglevel (loglevel)[0:2048] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 40 to 13 -- before reload
;;   ======================================================

;;	  0-->    40 r136=sfp                          :cortex_a8_default
;;	  0-->     9 r1=sfp-0x4                        :cortex_a8_default
;;	  2-->     2 [pre r136+=0xfffffffffffffff4]=r0 :cortex_a8_load_store_1
;;	  2-->     8 r0=r136                           :cortex_a8_default
;;	  3-->    10 r0=call [`get_option']            :cortex_a8_issue_branch
;;	 35-->    12 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 37-->    13 pc={(cc!=0x0)?L18:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 37
;;   new head = 40
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 15 to 41 -- before reload
;;   ======================================================

;;	  0-->    15 r133=0xffffffffffffffea           :cortex_a8_default
;;	  0-->    41 pc=L24                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 41

;;   ======================================================
;;   -- basic block 4 from 20 to 23 -- before reload
;;   ======================================================

;;	  0-->    20 r138=`console_printk'             :cortex_a8_load_store_1
;;	  0-->    23 r133=0x0                          :cortex_a8_default
;;	  1-->    21 r139=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  4-->    22 [r138]=r139                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 20
;;   new tail = 23

;;   ======================================================
;;   -- basic block 5 from 30 to 36 -- before reload
;;   ======================================================

;;	  0-->    30 r0=r133                           :cortex_a8_default
;;	  0-->    36 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 30
;;   new tail = 36


;; Procedure interblock/speculative motions == 0/0 




loglevel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,8u,1d} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,1u} r136={2d,3u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 175{137d,37u,1e} in 15{14 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 11 2 NOTE_INSN_DELETED)

(note 11 7 40 2 NOTE_INSN_DELETED)

(insn 40 11 9 2 init/main.c:211 (set (reg/f:SI 136)
        (reg/f:SI 25 sfp)) 167 {*arm_movsi_insn} (nil))

(insn 9 40 2 2 init/main.c:219 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 2 9 8 2 init/main.c:211 (set (mem/f/c/i:SI (pre_modify:SI (reg/f:SI 136)
                (plus:SI (reg/f:SI 136)
                    (const_int -12 [0xfffffffffffffff4]))) [0 str+0 S4 A32])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (expr_list:REG_INC (reg/f:SI 136)
            (nil))))

(insn 8 2 10 2 init/main.c:219 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))

(call_insn 10 8 12 2 init/main.c:219 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_option") [flags 0x41] <function_decl 0x10a82500 get_option>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 10 13 2 init/main.c:219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 13 12 14 2 init/main.c:219 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 41 3 init/main.c:224 (set (reg:SI 133 [ D.37739 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 41 15 42 3 (set (pc)
        (label_ref 24)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%] 

(barrier 42 41 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 138 139
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 18 42 19 4 31 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 23 4 init/main.c:220 (set (reg/f:SI 138)
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a4ff00 console_printk>)) 167 {*arm_movsi_insn} (nil))

(insn 23 20 21 4 init/main.c:221 (set (reg:SI 133 [ D.37739 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 21 23 22 4 init/main.c:220 (set (reg:SI 139 [ newlevel ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 newlevel+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 24 4 init/main.c:220 (set (mem/s/j:SI (reg/f:SI 138) [0 console_printk+0 S4 A32])
        (reg:SI 139 [ newlevel ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ newlevel ])
        (expr_list:REG_DEAD (reg/f:SI 138)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 24 22 25 5 32 "" [1 uses])

(note 25 24 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 25 36 5 init/main.c:225 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.37739 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.37739 ])
        (nil)))

(insn 36 30 43 5 init/main.c:225 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 43 36 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_one_initcall (do_one_initcall)[0:2065]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 27 (  1.8)


do_one_initcall

Dataflow summary:
def_info->table_size = 1244, use_info->table_size = 158
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,13u} r1={17d,6u} r2={17d,6u} r3={11d} r11={1d,14u} r12={11d} r13={1d,28u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={19d,6u} r25={1d,17u,2d} r26={1d,13u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r137={1d,1u} r138={2d,5u} r139={1d,2u} r140={1d,1u} r143={1d,5u} r144={2d,3u} r146={1d,1u} r147={1d,1u} r151={1d,1u} r152={1d,2u} r155={2d,4u} r159={1d,3u} r160={1d,1u} r170={1d,1u} r174={2d,3u} r176={1d,1u} r186={1d,2u} r187={1d,1u} r192={2d,2u} r193={1d,1u} 
;;    total ref usage 1382{1235d,145u,2e} in 75{65 regular + 10 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d19(0){ }d36(1){ }d53(2){ }d64(3){ }d65(11){ }d76(12){ }d77(13){ }d88(14){ }d200(25){ }d201(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 143 144 146 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 143 144 146 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140 151 152 155 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 140 141 151 152 155 192 193
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143
;; live  gen 	 0 [r0] 138
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143

( 4 3 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143
;; live  gen 	 24 [cc] 159 160
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159
;; live  gen 	 24 [cc] 170
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143

( 6 5 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 174 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143
;; live  gen 	 24 [cc] 174 176
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 174

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 174
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143

( 8 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 24 [cc] 137
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143

( 10 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 24 [cc] 186 187
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143 186
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 186

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 186
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 186
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 186
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138

( 12 13 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u153(0){ }u154(11){ }u155(13){ }u156(14){ }u157(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 148 to worklist
  Adding insn 44 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 49 to worklist
  Adding insn 67 to worklist
  Adding insn 56 to worklist
  Adding insn 72 to worklist
  Adding insn 80 to worklist
  Adding insn 88 to worklist
  Adding insn 100 to worklist
  Adding insn 96 to worklist
  Adding insn 106 to worklist
  Adding insn 103 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 121 to worklist
  Adding insn 129 to worklist
  Adding insn 142 to worklist
Finished finding needed instructions:
processing block 14 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 136 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143 186
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
  Adding insn 105 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 174
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
  Adding insn 71 to worklist
  Adding insn 70 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
  Adding insn 66 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
  Adding insn 50 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 153 to worklist
  Adding insn 152 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 13 -- before reload
;;   ======================================================

;;	  0-->    10 r146=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   152 r144=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   153 r144=r144&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     2 r143=r0                           :cortex_a8_default
;;	  3-->    11 r147=[r146+0xc]                   :cortex_a8_load_store_1
;;	  4-->     9 r139=[r144+0x4]                   :cortex_a8_load_store_1
;;	  5-->    12 cc=cmp(r147,0x0)                  :cortex_a8_default
;;	  7-->    13 pc={(cc==0x0)?L47:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 19 to 148 -- before reload
;;   ======================================================

;;	  0-->    19 r151=[r144+0xc]                   :cortex_a8_load_store_1
;;	  0-->    21 r1=r143                           :cortex_a8_default
;;	  1-->    24 r152=sfp-0x8                      :cortex_a8_default
;;	  1-->    20 r0=`*.LC0'                        :cortex_a8_load_store_1
;;	  3-->    22 r2=[r151+0x214]                   :cortex_a8_load_store_1
;;	  4-->    23 r0=call [`printk']                :cortex_a8_issue_branch
;;	  4-->    25 r0=r152                           :cortex_a8_default
;;	  5-->    26 call [`ktime_get']                :cortex_a8_issue_branch
;;	  5-->    27 r140=[sfp-0x8]                    :cortex_a8_load_store_1
;;	  6-->    28 r0=call [r143]                    :cortex_a8_issue_branch
;;	  6-->    29 r138=r0                           :cortex_a8_default
;;	  7-->    31 r0=r152                           :cortex_a8_default
;;	  8-->    32 call [`ktime_get']                :cortex_a8_issue_branch
;;	  8-->    33 r155=[sfp-0x8]                    :cortex_a8_load_store_1
;;	  9-->    42 r1=r143                           :cortex_a8_default
;;	  9-->    43 r2=r138                           :cortex_a8_default
;;	 10-->    35 {r155=r155-r140;clobber cc;}      :cortex_a8_default
;;	 10-->    41 r0=`*.LC1'                        :cortex_a8_load_store_1
;;	 12-->    37 r192=r155#0 0>>0xa                :cortex_a8_default
;;	 12-->    39 r193=r155#4 0>>0xa                :cortex_a8_default
;;	 13-->   147 [sp+0x4]=r193                     :cortex_a8_load_store_1
;;	 13-->    38 r192=r155#4<<0x16|r192            :cortex_a8_default
;;	 14-->   146 [sp]=r192                         :cortex_a8_load_store_1
;;	 14-->    44 r0=call [`printk']                :cortex_a8_issue_branch
;;	 15-->   148 pc=L51                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 15
;;   new head = 19
;;   new tail = 148

;;   ======================================================
;;   -- basic block 4 from 49 to 50 -- before reload
;;   ======================================================

;;	  0-->    49 r0=call [r143]                    :cortex_a8_issue_branch
;;	  0-->    50 r138=r0                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 49
;;   new tail = 50

;;   ======================================================
;;   -- basic block 5 from 53 to 67 -- before reload
;;   ======================================================

;;	  0-->    53 r159=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    66 cc=cmp(r138!=0x0&r138!=0xfffffffff:cortex_a8_default
;;	  1-->    54 r160=0x0                          :cortex_a8_default
;;	  3-->    56 [r159+0x10]=r160#0                :cortex_a8_load_store_1
;;	  3-->    67 pc={(cc==0x0)?L81:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 53
;;   new tail = 67

;;   ======================================================
;;   -- basic block 6 from 70 to 72 -- before reload
;;   ======================================================

;;	  0-->    70 r170=[r159+0xc]                   :cortex_a8_load_store_1
;;	  2-->    71 cc=cmp(r170,0x0)                  :cortex_a8_default
;;	  4-->    72 pc={(cc==0x0)?L81:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 70
;;   new tail = 72

;;   ======================================================
;;   -- basic block 7 from 77 to 80 -- before reload
;;   ======================================================

;;	  0-->    77 r0=r159+0x10                      :cortex_a8_default
;;	  0-->    78 r1=`*.LC2'                        :cortex_a8_load_store_1
;;	  1-->    79 r2=r138                           :cortex_a8_default
;;	  2-->    80 r0=call [`sprintf']               :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 77
;;   new tail = 80

;;   ======================================================
;;   -- basic block 8 from 150 to 88 -- before reload
;;   ======================================================

;;	  0-->   150 r174=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   151 r174=r174&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    86 r176=[r174+0x4]                   :cortex_a8_load_store_1
;;	  5-->    87 cc=cmp(r176,r139)                 :cortex_a8_default
;;	  7-->    88 pc={(cc==0x0)?L101:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 150
;;   new tail = 88

;;   ======================================================
;;   -- basic block 9 from 93 to 100 -- before reload
;;   ======================================================

;;	  0-->    93 r0=const(`*.LANCHOR0'+0x10)       :cortex_a8_load_store_1
;;	  0-->    95 r2=0x40                           :cortex_a8_default
;;	  1-->    94 r1=`*.LC3'                        :cortex_a8_load_store_1
;;	  2-->    96 r0=call [`strlcat']               :cortex_a8_issue_branch
;;	  2-->   100 [r174+0x4]=r139                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 93
;;   new tail = 100

;;   ======================================================
;;   -- basic block 10 from 103 to 106 -- before reload
;;   ======================================================

;;	  0-->   103 {r137=asm_operands;clobber cc;clob:nothing
;;	  1-->   105 cc=cmp(zxt(r137,0x1,0x7),0x0)     :cortex_a8_default
;;	  3-->   106 pc={(cc==0x0)?L116:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 103
;;   new tail = 106

;;   ======================================================
;;   -- basic block 11 from 111 to 115 -- before reload
;;   ======================================================

;;	  0-->   112 r1=`*.LC4'                        :cortex_a8_load_store_1
;;	  0-->   113 r2=0x40                           :cortex_a8_default
;;	  1-->   111 r0=const(`*.LANCHOR0'+0x10)       :cortex_a8_load_store_1
;;	  2-->   114 r0=call [`strlcat']               :cortex_a8_issue_branch
;;	  3-->   115 {asm_operands;clobber cc;clobber [:nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 111
;;   new tail = 115

;;   ======================================================
;;   -- basic block 12 from 118 to 121 -- before reload
;;   ======================================================

;;	  0-->   118 r186=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->   119 r187=zxn([r186+0x10])             :cortex_a8_load_store_1
;;	  5-->   120 cc=cmp(r187,0x0)                  :cortex_a8_default
;;	  7-->   121 pc={(cc==0x0)?L130:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 118
;;   new tail = 121

;;   ======================================================
;;   -- basic block 13 from 126 to 129 -- before reload
;;   ======================================================

;;	  0-->   127 r1=r143                           :cortex_a8_default
;;	  0-->   128 r2=r186+0x10                      :cortex_a8_default
;;	  1-->   126 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	  2-->   129 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 126
;;   new tail = 129

;;   ======================================================
;;   -- basic block 14 from 136 to 142 -- before reload
;;   ======================================================

;;	  0-->   136 r0=r138                           :cortex_a8_default
;;	  0-->   142 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 136
;;   new tail = 142


;; Procedure interblock/speculative motions == 0/0 




do_one_initcall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,13u} r1={17d,6u} r2={17d,6u} r3={11d} r11={1d,14u} r12={11d} r13={1d,28u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={19d,6u} r25={1d,17u,2d} r26={1d,13u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r137={1d,1u} r138={2d,5u} r139={1d,2u} r140={1d,1u} r143={1d,5u} r144={2d,3u} r146={1d,1u} r147={1d,1u} r151={1d,1u} r152={1d,2u} r155={2d,4u} r159={1d,3u} r160={1d,1u} r170={1d,1u} r174={2d,3u} r176={1d,1u} r186={1d,2u} r187={1d,1u} r192={2d,2u} r193={1d,1u} 
;;    total ref usage 1382{1235d,145u,2e} in 75{65 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 143 144 146 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 143 144 146 147
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 10 2 NOTE_INSN_DELETED)

(insn 10 7 152 2 init/main.c:682 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 152 10 153 2 init/main.c:679 (set (reg:SI 144)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 153 152 2 2 init/main.c:679 (set (reg:SI 144)
        (and:SI (reg:SI 144)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 153 11 2 init/main.c:678 (set (reg/v/f:SI 143 [ fn ])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ fn ])
        (nil)))

(insn 11 2 9 2 init/main.c:682 (set (reg:SI 147 [ initcall_debug ])
        (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 12 [0xc])) [0 initcall_debug+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 initcall_debug+0 S4 A32])
            (nil))))

(insn 9 11 12 2 init/main.c:679 (set (reg/v:SI 139 [ count ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 9 13 2 init/main.c:682 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ initcall_debug ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ initcall_debug ])
        (nil)))

(jump_insn 13 12 14 2 init/main.c:682 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140 151 152 155 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 140 151 152 155 192 193
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 36 14 19 3 NOTE_INSN_DELETED)

(insn 19 36 21 3 init/main.c:665 (set (reg/f:SI 151 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 144)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 21 19 24 3 init/main.c:665 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 24 21 20 3 init/main.c:666 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 20 24 22 3 init/main.c:665 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11a9f360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11a9f360>)
        (nil)))

(insn 22 20 23 3 init/main.c:665 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ <variable>.task ])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ <variable>.task ])
        (nil)))

(call_insn 23 22 25 3 init/main.c:665 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 25 23 26 3 init/main.c:666 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 26 25 27 3 init/main.c:666 (parallel [
            (call (mem:SI (symbol_ref:SI ("ktime_get") [flags 0x41] <function_decl 0x11299080 ktime_get>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 27 26 28 3 init/main.c:666 (set (reg/v:DI 140 [ calltime ])
        (mem/s:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A64])) 163 {*arm_movdi} (nil))

(call_insn 28 27 29 3 init/main.c:667 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 143 [ fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (nil))

(insn 29 28 31 3 init/main.c:667 (set (reg/v:SI 138 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 31 29 32 3 init/main.c:668 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(call_insn 32 31 33 3 init/main.c:668 (parallel [
            (call (mem:SI (symbol_ref:SI ("ktime_get") [flags 0x41] <function_decl 0x11299080 ktime_get>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 33 32 42 3 init/main.c:668 (set (reg:DI 155)
        (mem/s:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 42 33 43 3 init/main.c:671 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 35 3 init/main.c:671 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 35 43 41 3 init/main.c:671 (parallel [
            (set (reg:DI 155)
                (minus:DI (reg:DI 155)
                    (reg/v:DI 140 [ calltime ])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_DEAD (reg/v:DI 140 [ calltime ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 41 35 37 3 init/main.c:671 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11add730>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11add730>)
        (nil)))

(insn 37 41 39 3 init/main.c:671 (set (reg:SI 192)
        (lshiftrt:SI (subreg:SI (reg:DI 155) 0)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (nil))

(insn 39 37 147 3 init/main.c:671 (set (reg:SI 193 [+4 ])
        (lshiftrt:SI (subreg:SI (reg:DI 155) 4)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:DI 155)
        (nil)))

(insn 147 39 38 3 init/main.c:671 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 193 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193 [+4 ])
        (nil)))

(insn 38 147 146 3 init/main.c:671 (set (reg:SI 192)
        (ior:SI (ashift:SI (subreg:SI (reg:DI 155) 4)
                (const_int 22 [0x16]))
            (reg:SI 192))) 270 {*arith_shiftsi} (nil))

(insn 146 38 44 3 init/main.c:671 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(call_insn 44 146 148 3 init/main.c:671 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 148 44 149 3 (set (pc)
        (label_ref 51)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143


;; Succ edge  5 [100.0%] 

(barrier 149 148 47)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143
;; live  gen 	 0 [r0] 138
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 47 149 48 4 37 "" [1 uses])

(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 49 48 50 4 init/main.c:685 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 143 [ fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (nil))

(insn 50 49 51 4 init/main.c:685 (set (reg/v:SI 138 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143
;; live  gen 	 24 [cc] 159 160
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 51 50 52 5 38 "" [1 uses])

(note 52 51 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 57 52 58 5 NOTE_INSN_DELETED)

(note 58 57 60 5 NOTE_INSN_DELETED)

(note 60 58 61 5 NOTE_INSN_DELETED)

(note 61 60 63 5 NOTE_INSN_DELETED)

(note 63 61 64 5 NOTE_INSN_DELETED)

(note 64 63 65 5 NOTE_INSN_DELETED)

(note 65 64 53 5 NOTE_INSN_DELETED)

(insn 53 65 66 5 init/main.c:687 (set (reg/f:SI 159)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 66 53 54 5 init/main.c:689 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg/v:SI 138 [ ret ])
                    (const_int 0 [0x0]))
                (ne:SI (reg/v:SI 138 [ ret ])
                    (const_int -19 [0xffffffffffffffed])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 54 66 56 5 init/main.c:687 (set (reg:SI 160)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 56 54 67 5 init/main.c:687 (set (mem/s/j:QI (plus:SI (reg/f:SI 159)
                (const_int 16 [0x10])) [0 msgbuf+0 S1 A32])
        (subreg:QI (reg:SI 160) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 67 56 68 5 init/main.c:689 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159
;; live  gen 	 24 [cc] 170
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 68 67 70 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 70 68 71 6 init/main.c:689 discrim 1 (set (reg:SI 170 [ initcall_debug ])
        (mem/c/i:SI (plus:SI (reg/f:SI 159)
                (const_int 12 [0xc])) [0 initcall_debug+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 initcall_debug+0 S4 A32])
        (nil)))

(insn 71 70 72 6 init/main.c:689 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ initcall_debug ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170 [ initcall_debug ])
        (nil)))

(jump_insn 72 71 73 6 init/main.c:689 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 159
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 73 72 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 77 73 78 7 init/main.c:690 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 159)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 159)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 78 77 79 7 init/main.c:690 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11b105d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11b105d0>)
        (nil)))

(insn 79 78 80 7 init/main.c:690 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ ret ])) 167 {*arm_movsi_insn} (nil))

(call_insn 80 79 81 7 init/main.c:690 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 174 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143
;; live  gen 	 24 [cc] 174 176
;; live  kill	

;; Pred edge  6 [71.0%] 
;; Pred edge  5 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 81 80 82 8 39 "" [2 uses])

(note 82 81 84 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 84 82 150 8 NOTE_INSN_DELETED)

(insn 150 84 151 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 174)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 151 150 86 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 174)
        (and:SI (reg:SI 174)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 86 151 87 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 176 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 174)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ <variable>.preempt_count ])
            (reg/v:SI 139 [ count ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ <variable>.preempt_count ])
        (nil)))

(jump_insn 88 87 89 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 143 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 174


;; Succ edge  9 [51.2%]  (fallthru)
;; Succ edge  10 [48.8%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 143 174
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  8 [51.2%]  (fallthru)
(note 89 88 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 93 89 95 9 init/main.c:693 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 95 93 94 9 init/main.c:693 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 94 95 96 9 init/main.c:693 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11b10930>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11b10930>)
        (nil)))

(call_insn 96 94 100 9 init/main.c:693 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcat") [flags 0x41] <function_decl 0x10bb1500 strlcat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 100 96 101 9 init/main.c:694 (set (mem/s/j:SI (plus:SI (reg:SI 174)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg/v:SI 139 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_DEAD (reg/v:SI 139 [ count ])
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 24 [cc] 137
;; live  kill	 24 [cc]

;; Pred edge  8 [48.8%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 101 100 102 10 40 "" [1 uses])

(note 102 101 104 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 104 102 103 10 NOTE_INSN_DELETED)

(insn 103 104 105 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 137 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118201))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 105 103 106 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ _flags ])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 137 [ _flags ])
        (nil)))

(jump_insn 106 105 107 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  10 [29.0%]  (fallthru)
(note 107 106 112 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 112 107 113 11 init/main.c:697 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11b10db0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11b10db0>)
        (nil)))

(insn 113 112 111 11 init/main.c:697 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 111 113 114 11 init/main.c:697 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 114 111 115 11 init/main.c:697 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcat") [flags 0x41] <function_decl 0x10bb1500 strlcat>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 115 114 116 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104761)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 186 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143
;; live  gen 	 24 [cc] 186 187
;; live  kill	

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 116 115 117 12 41 "" [1 uses])

(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 12 init/main.c:700 (set (reg/f:SI 186)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 119 118 120 12 init/main.c:700 (set (reg:SI 187 [ msgbuf ])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 186)
                    (const_int 16 [0x10])) [0 msgbuf+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [0 msgbuf+0 S1 A32]))
        (nil)))

(insn 120 119 121 12 init/main.c:700 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187 [ msgbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187 [ msgbuf ])
        (nil)))

(jump_insn 121 120 122 12 init/main.c:700 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 130)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 143 186
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 186


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 186
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 186
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 143 186
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 122 121 127 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 127 122 128 13 init/main.c:701 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ fn ])
        (nil)))

(insn 128 127 126 13 init/main.c:701 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 186)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 186)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 126 128 129 13 init/main.c:701 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11b089c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11b089c0>)
        (nil)))

(call_insn 129 126 130 13 init/main.c:701 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 130 129 131 14 42 "" [1 uses])

(note 131 130 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 136 131 142 14 init/main.c:705 (set (reg/i:SI 0 r0)
        (reg/v:SI 138 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ ret ])
        (nil)))

(insn 142 136 154 14 init/main.c:705 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 154 142 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_early_options (parse_early_options)[0:2055] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 13 -- before reload
;;   ======================================================

;;	  0-->     7 r135=`do_early_param'             :cortex_a8_load_store_1
;;	  0-->     2 r133=r0                           :cortex_a8_default
;;	  1-->    11 r2=0x0                            :cortex_a8_default
;;	  1-->    10 r1=r133                           :cortex_a8_default
;;	  2-->     9 r0=`*.LC6'                        :cortex_a8_load_store_1
;;	  2-->    12 r3=r2                             :cortex_a8_default
;;	  3-->     8 [sp]=r135                         :cortex_a8_load_store_1
;;	  3-->    13 r0=call [`parse_args']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 2
;;   new tail = 13


;; Procedure interblock/speculative motions == 0/0 




parse_early_options

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,2u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,1u} 
;;    total ref usage 151{133d,18u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 135
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(insn 7 6 2 2 init/main.c:410 (set (reg/f:SI 135)
        (symbol_ref:SI ("do_early_param") [flags 0x3] <function_decl 0x11a52d00 do_early_param>)) 167 {*arm_movsi_insn} (nil))

(insn 2 7 11 2 init/main.c:409 (set (reg/v/f:SI 133 [ cmdline ])
        (reg:SI 0 r0 [ cmdline ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cmdline ])
        (nil)))

(insn 11 2 10 2 init/main.c:410 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 11 9 2 init/main.c:410 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ cmdline ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ cmdline ])
        (nil)))

(insn 9 10 12 2 init/main.c:410 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11b10f00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11b10f00>)
        (nil)))

(insn 12 9 8 2 init/main.c:410 (set (reg:SI 3 r3)
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 12 13 2 init/main.c:410 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (symbol_ref:SI ("do_early_param") [flags 0x3] <function_decl 0x11a52d00 do_early_param>)
            (nil))))

(call_insn 13 8 21 2 init/main.c:410 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("parse_args") [flags 0x41] <function_decl 0x10ddb900 parse_args>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 21 13 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function rest_init (rest_init)[0:2053]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


rest_init

Dataflow summary:
def_info->table_size = 1202, use_info->table_size = 49
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={16d,7u} r1={14d,3u} r2={13d,2u} r3={11d} r11={1d,2u} r12={11d} r13={1d,13u} r14={10d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={1d,2u} r26={1d,1u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r138={1d,1u} r143={1d,1u} r145={2d,6u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 1240{1197d,43u,0e} in 33{23 regular + 10 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d29(1){ }d42(2){ }d53(3){ }d54(11){ }d65(12){ }d66(13){ }d76(14){ }d177(25){ }d178(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 143 145 148 149 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 143 145 148 149 151 152
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u45(11){ }u46(13){ }u47(14){ }u48(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 5 to worklist
Finished finding needed instructions:
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 32 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 27 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;;   ======================================================
;;   -- basic block 2 from 5 to 49 -- before reload
;;   ======================================================

;;	  0-->     5 call [`rcu_scheduler_starting']   :cortex_a8_issue_branch
;;	  0-->     8 r1=0x0                            :cortex_a8_default
;;	  1-->     9 r2=0xa00                          :cortex_a8_default
;;	  1-->     7 r0=`kernel_init'                  :cortex_a8_load_store_1
;;	  2-->    10 r0=call [`kernel_thread']         :cortex_a8_issue_branch
;;	  2-->    14 r2=0x600                          :cortex_a8_default
;;	  3-->    13 r1=0x0                            :cortex_a8_default
;;	  3-->    12 r0=`kthreadd'                     :cortex_a8_load_store_1
;;	  4-->    15 r0=call [`kernel_thread']         :cortex_a8_issue_branch
;;	  4-->    16 r138=r0                           :cortex_a8_default
;;	  5-->    17 call [`__rcu_read_lock']          :cortex_a8_issue_branch
;;	  5-->    19 r0=r138                           :cortex_a8_default
;;	  6-->    20 r1=`init_pid_ns'                  :cortex_a8_load_store_1
;;	  6-->    58 r145=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  7-->    21 r0=call [`find_task_by_pid_ns']   :cortex_a8_issue_branch
;;	  7-->    23 r143=`kthreadd_task'              :cortex_a8_load_store_1
;;	  8-->    59 r145=r145&0xffffffffffffffc0      :cortex_a8_default
;;	 39-->    24 [r143]=r0                         :cortex_a8_load_store_1
;;	 39-->    25 call [`__rcu_read_unlock']        :cortex_a8_issue_branch
;;	 40-->    27 r0=`*.LANCHOR2'                   :cortex_a8_load_store_1
;;	 41-->    28 call [`complete']                 :cortex_a8_issue_branch
;;	 41-->    32 r0=[r145+0xc]                     :cortex_a8_load_store_1
;;	 42-->    33 call [`init_idle_bootup_task']    :cortex_a8_issue_branch
;;	 43-->    34 {asm_operands;clobber [scratch];} :nothing
;;	 44-->    38 r148=[r145+0x4]                   :cortex_a8_load_store_1
;;	 46-->    39 r149=r148-0x1                     :cortex_a8_default
;;	 46-->    40 [r145+0x4]=r149                   :cortex_a8_load_store_1
;;	 47-->    41 call [`schedule']                 :cortex_a8_issue_branch
;;	 47-->    45 r151=[r145+0x4]                   :cortex_a8_load_store_1
;;	 49-->    46 r152=r151+0x1                     :cortex_a8_default
;;	 49-->    47 [r145+0x4]=r152                   :cortex_a8_load_store_1
;;	 50-->    48 {asm_operands;clobber [scratch];} :nothing
;;	 51-->    49 call [`cpu_idle']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 51
;;   new head = 5
;;   new tail = 49


;; Procedure interblock/speculative motions == 0/0 




rest_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={16d,7u} r1={14d,3u} r2={13d,2u} r3={11d} r11={1d,2u} r12={11d} r13={1d,13u} r14={10d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={10d} r25={1d,2u} r26={1d,1u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r138={1d,1u} r143={1d,1u} r145={2d,6u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 1240{1197d,43u,0e} in 33{23 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 143 145 148 149 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 143 145 148 149 151 152
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 11 2 NOTE_INSN_DELETED)

(note 11 6 18 2 NOTE_INSN_DELETED)

(note 18 11 22 2 NOTE_INSN_DELETED)

(note 22 18 26 2 NOTE_INSN_DELETED)

(note 26 22 30 2 NOTE_INSN_DELETED)

(note 30 26 5 2 NOTE_INSN_DELETED)

(call_insn 5 30 8 2 init/main.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("rcu_scheduler_starting") [flags 0x41] <function_decl 0x10d6a480 rcu_scheduler_starting>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 8 5 9 2 init/main.c:368 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 7 2 init/main.c:368 (set (reg:SI 2 r2)
        (const_int 2560 [0xa00])) 167 {*arm_movsi_insn} (nil))

(insn 7 9 10 2 init/main.c:368 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kernel_init") [flags 0x3] <function_decl 0x11a3bc80 kernel_init>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_init") [flags 0x3] <function_decl 0x11a3bc80 kernel_init>)
        (nil)))

(call_insn 10 7 14 2 init/main.c:368 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_thread") [flags 0x41] <function_decl 0x10ab8900 kernel_thread>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 14 10 13 2 init/main.c:370 (set (reg:SI 2 r2)
        (const_int 1536 [0x600])) 167 {*arm_movsi_insn} (nil))

(insn 13 14 12 2 init/main.c:370 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 13 15 2 init/main.c:370 (set (reg:SI 0 r0)
        (symbol_ref:SI ("kthreadd") [flags 0x41] <function_decl 0x119ac180 kthreadd>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("kthreadd") [flags 0x41] <function_decl 0x119ac180 kthreadd>)
        (nil)))

(call_insn 15 12 16 2 init/main.c:370 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_thread") [flags 0x41] <function_decl 0x10ab8900 kernel_thread>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 15 17 2 init/main.c:370 (set (reg/v:SI 138 [ pid ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(call_insn 17 16 19 2 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10d64600 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 19 17 20 2 init/main.c:372 (set (reg:SI 0 r0)
        (reg/v:SI 138 [ pid ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ pid ])
        (nil)))

(insn 20 19 58 2 init/main.c:372 (set (reg:SI 1 r1)
        (symbol_ref:SI ("init_pid_ns") [flags 0xc0] <var_decl 0x10f01540 init_pid_ns>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_pid_ns") [flags 0xc0] <var_decl 0x10f01540 init_pid_ns>)
        (nil)))

(insn 58 20 21 2 init/main.c:380 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 21 58 23 2 init/main.c:372 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_task_by_pid_ns") [flags 0x41] <function_decl 0x11342000 find_task_by_pid_ns>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 21 59 2 init/main.c:372 (set (reg/f:SI 143)
        (symbol_ref:SI ("kthreadd_task") [flags 0xc0] <var_decl 0x119a3b40 kthreadd_task>)) 167 {*arm_movsi_insn} (nil))

(insn 59 23 24 2 init/main.c:380 (set (reg:SI 145)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 24 59 25 2 init/main.c:372 (set (mem/f/c/i:SI (reg/f:SI 143) [0 kthreadd_task+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(call_insn 25 24 27 2 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10d64680 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 27 25 28 2 init/main.c:374 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(call_insn 28 27 32 2 init/main.c:374 (parallel [
            (call (mem:SI (symbol_ref:SI ("complete") [flags 0x41] <function_decl 0x10d64000 complete>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 32 28 33 2 init/main.c:380 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 2 init/main.c:380 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_idle_bootup_task") [flags 0x41] <function_decl 0x112b7480 init_idle_bootup_task>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 33 38 2 init/main.c:381 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 12103554)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 38 34 39 2 init/main.c:381 (set (reg:SI 148 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 init/main.c:381 (set (reg:SI 149)
        (plus:SI (reg:SI 148 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.preempt_count ])
        (nil)))

(insn 40 39 41 2 init/main.c:381 (set (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(call_insn 41 40 45 2 init/main.c:382 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x112be200 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 45 41 46 2 init/main.c:385 (set (reg:SI 151 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 2 init/main.c:385 (set (reg:SI 152)
        (plus:SI (reg:SI 151 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.preempt_count ])
        (nil)))

(insn 47 46 48 2 init/main.c:385 (set (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg:SI 145)
            (nil))))

(insn 48 47 49 2 init/main.c:385 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 12104066)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(call_insn/j 49 48 50 2 init/main.c:386 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_idle") [flags 0x41] <function_decl 0x10c8ed80 cpu_idle>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 50 49 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function run_init_process (run_init_process)[0:2069]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 14 -- before reload
;;   ======================================================

;;	  0-->     6 r134=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->    23 r137=r134                         :cortex_a8_default
;;	  2-->    12 r1=r134                           :cortex_a8_default
;;	  4-->     7 [post r137+=0x88]=r0              :cortex_a8_load_store_1
;;	  4-->    13 r2=r137                           :cortex_a8_default
;;	  5-->    14 r0=call [`kernel_execve']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 6
;;   new tail = 14


;; Procedure interblock/speculative motions == 0/0 




run_init_process

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r137={2d,3u} 
;;    total ref usage 149{131d,18u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 23 2 init/main.c:747 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 6 12 2 init/main.c:747 (set (reg/f:SI 137)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (nil))

(insn 12 23 7 2 init/main.c:748 (set (reg:SI 1 r1)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (nil))))

(insn 7 12 13 2 init/main.c:747 (set (mem/s/f/j:SI (post_modify:SI (reg/f:SI 137)
                (plus:SI (reg/f:SI 137)
                    (const_int 136 [0x88]))) [0 argv_init+0 S4 A32])
        (reg:SI 0 r0 [ init_filename ])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 137)
        (nil)))

(insn 13 7 14 2 init/main.c:748 (set (reg:SI 2 r2)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 136 [0x88])))
            (nil))))

(call_insn/j 14 13 15 2 init/main.c:748 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kernel_execve") [flags 0x41] <function_decl 0x11490800 kernel_execve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 15 14 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function init_post (init_post)[0:2070]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 7 (    1)


init_post

Dataflow summary:
def_info->table_size = 1322, use_info->table_size = 68
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,10u} r1={14d,2u} r2={12d} r3={12d} r11={1d,6u} r12={12d} r13={1d,18u} r14={12d,1u} r15={11d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={13d,2u} r25={1d,6u} r26={1d,5u} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r81={11d} r82={11d} r83={11d} r84={11d} r85={11d} r86={11d} r87={11d} r88={11d} r89={11d} r90={11d} r91={11d} r92={11d} r93={11d} r94={11d} r95={11d} r96={11d} r97={11d} r98={11d} r99={11d} r100={11d} r101={11d} r102={11d} r103={11d} r104={11d} r105={11d} r106={11d} r107={11d} r108={11d} r109={11d} r110={11d} r111={11d} r112={11d} r113={11d} r114={11d} r115={11d} r116={11d} r117={11d} r118={11d} r119={11d} r120={11d} r121={11d} r122={11d} r123={11d} r124={11d} r125={11d} r126={11d} r127={11d} r134={1d,2u} r135={1d,2u} r136={1d,2u} r138={1d,1u} r139={1d,1u} r140={2d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r148={1d,2u} 
;;    total ref usage 1389{1322d,67u,0e} in 40{29 regular + 11 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d20(0){ }d34(1){ }d46(2){ }d58(3){ }d59(11){ }d71(12){ }d72(13){ }d84(14){ }d197(25){ }d198(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 138 139 140 142 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 138 139 140 142 143 144 145
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 5 )->[6]->( )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u63(0){ }u64(11){ }u65(13){ }u66(14){ }u67(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 17 to worklist
  Adding insn 9 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 29 to worklist
  Adding insn 24 to worklist
  Adding insn 35 to worklist
  Adding insn 43 to worklist
  Adding insn 38 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 48 to worklist
Finished finding needed instructions:
processing block 6 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 59 to worklist
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 37 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 23 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 5 to 21 -- before reload
;;   ======================================================

;;	  0-->     5 call [`async_synchronize_full']   :cortex_a8_issue_branch
;;	  0-->    18 r145=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->     6 call [`free_initmem']             :cortex_a8_issue_branch
;;	  1-->    73 r140=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  2-->    74 r140=r140&0xffffffffffffffc0      :cortex_a8_default
;;	  2-->     7 r138=`*.LANCHOR3'                 :cortex_a8_load_store_1
;;	  3-->     8 r139=0x1                          :cortex_a8_default
;;	  4-->    13 r142=[r140+0xc]                   :cortex_a8_load_store_1
;;	  5-->     9 [r138]=r139                       :cortex_a8_load_store_1
;;	  7-->    14 r136=[r142+0x3a8]                 :cortex_a8_load_store_1
;;	 10-->    15 r143=[r136+0x40]                  :cortex_a8_load_store_1
;;	 12-->    16 r144=r143|0x40                    :cortex_a8_default
;;	 12-->    17 [r136+0x40]=r144                  :cortex_a8_load_store_1
;;	 13-->    19 r135=[r145+0x8]                   :cortex_a8_load_store_1
;;	 15-->    20 cc=cmp(r135,0x0)                  :cortex_a8_default
;;	 17-->    21 pc={(cc==0x0)?L30:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 17
;;   new head = 5
;;   new tail = 21

;;   ======================================================
;;   -- basic block 3 from 23 to 29 -- before reload
;;   ======================================================

;;	  0-->    23 r0=r135                           :cortex_a8_default
;;	  1-->    24 call [`run_init_process']         :cortex_a8_issue_branch
;;	  1-->    28 r1=[r145+0x8]                     :cortex_a8_load_store_1
;;	  2-->    27 r0=`*.LC7'                        :cortex_a8_load_store_1
;;	  3-->    29 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 23
;;   new tail = 29

;;   ======================================================
;;   -- basic block 4 from 32 to 35 -- before reload
;;   ======================================================

;;	  0-->    32 r148=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->    33 r134=[r148+0x4]                   :cortex_a8_load_store_1
;;	  5-->    34 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  7-->    35 pc={(cc==0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 32
;;   new tail = 35

;;   ======================================================
;;   -- basic block 5 from 37 to 43 -- before reload
;;   ======================================================

;;	  0-->    37 r0=r134                           :cortex_a8_default
;;	  1-->    38 call [`run_init_process']         :cortex_a8_issue_branch
;;	  1-->    42 r1=[r148+0x4]                     :cortex_a8_load_store_1
;;	  2-->    41 r0=`*.LC8'                        :cortex_a8_load_store_1
;;	  3-->    43 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 37
;;   new tail = 43

;;   ======================================================
;;   -- basic block 6 from 47 to 60 -- before reload
;;   ======================================================

;;	  0-->    47 r0=`*.LC9'                        :cortex_a8_load_store_1
;;	  1-->    48 call [`run_init_process']         :cortex_a8_issue_branch
;;	  1-->    50 r0=`*.LC10'                       :cortex_a8_load_store_1
;;	  2-->    51 call [`run_init_process']         :cortex_a8_issue_branch
;;	  2-->    53 r0=`*.LC11'                       :cortex_a8_load_store_1
;;	  3-->    54 call [`run_init_process']         :cortex_a8_issue_branch
;;	  3-->    56 r0=`*.LC12'                       :cortex_a8_load_store_1
;;	  4-->    57 call [`run_init_process']         :cortex_a8_issue_branch
;;	  4-->    59 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	  5-->    60 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 47
;;   new tail = 60


;; Procedure interblock/speculative motions == 0/0 




init_post

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,10u} r1={14d,2u} r2={12d} r3={12d} r11={1d,6u} r12={12d} r13={1d,18u} r14={12d,1u} r15={11d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={13d,2u} r25={1d,6u} r26={1d,5u} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r81={11d} r82={11d} r83={11d} r84={11d} r85={11d} r86={11d} r87={11d} r88={11d} r89={11d} r90={11d} r91={11d} r92={11d} r93={11d} r94={11d} r95={11d} r96={11d} r97={11d} r98={11d} r99={11d} r100={11d} r101={11d} r102={11d} r103={11d} r104={11d} r105={11d} r106={11d} r107={11d} r108={11d} r109={11d} r110={11d} r111={11d} r112={11d} r113={11d} r114={11d} r115={11d} r116={11d} r117={11d} r118={11d} r119={11d} r120={11d} r121={11d} r122={11d} r123={11d} r124={11d} r125={11d} r126={11d} r127={11d} r134={1d,2u} r135={1d,2u} r136={1d,2u} r138={1d,1u} r139={1d,1u} r140={2d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u} r148={1d,2u} 
;;    total ref usage 1389{1322d,67u,0e} in 40{29 regular + 11 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 138 139 140 142 143 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 138 139 140 142 143 144 145
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 2 5 2 NOTE_INSN_DELETED)

(call_insn 5 11 18 2 init/main.c:757 (parallel [
            (call (mem:SI (symbol_ref:SI ("async_synchronize_full") [flags 0x41] <function_decl 0x11a1fd00 async_synchronize_full>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 18 5 6 2 init/main.c:766 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(call_insn 6 18 73 2 init/main.c:758 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_initmem") [flags 0x41] <function_decl 0x11a52000 free_initmem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 73 6 74 2 init/main.c:764 (set (reg:SI 140)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 74 73 7 2 init/main.c:764 (set (reg:SI 140)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 74 8 2 init/main.c:760 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 13 2 init/main.c:760 (set (reg:SI 139)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 8 9 2 init/main.c:764 (set (reg/f:SI 142 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 140)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 9 13 14 2 init/main.c:760 (set (mem/c/i:SI (reg/f:SI 138) [0 system_state+0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg/f:SI 138)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 14 9 15 2 init/main.c:764 (set (reg/f:SI 136 [ D.38070 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 142 [ <variable>.task ])
                (const_int 936 [0x3a8])) [0 <variable>.signal+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ <variable>.task ])
        (nil)))

(insn 15 14 16 2 init/main.c:764 (set (reg:SI 143 [ <variable>.flags ])
        (mem/s/j:SI (plus:SI (reg/f:SI 136 [ D.38070 ])
                (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 init/main.c:764 (set (reg:SI 144)
        (ior:SI (reg:SI 143 [ <variable>.flags ])
            (const_int 64 [0x40]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 143 [ <variable>.flags ])
        (nil)))

(insn 17 16 19 2 init/main.c:764 (set (mem/s/j:SI (plus:SI (reg/f:SI 136 [ D.38070 ])
                (const_int 64 [0x40])) [0 <variable>.flags+0 S4 A64])
        (reg:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg/f:SI 136 [ D.38070 ])
            (nil))))

(insn 19 17 20 2 init/main.c:766 (set (reg/f:SI 135 [ ramdisk_execute_command.440 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 145)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
        (nil)))

(insn 20 19 21 2 init/main.c:766 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ ramdisk_execute_command.440 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 2 init/main.c:766 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 145
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 init/main.c:767 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ ramdisk_execute_command.440 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ ramdisk_execute_command.440 ])
        (nil)))

(call_insn 24 23 28 3 init/main.c:767 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 28 24 27 3 init/main.c:768 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 145)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
            (nil))))

(insn 27 28 29 3 init/main.c:768 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11b21d00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11b21d00>)
        (nil)))

(call_insn 29 27 30 3 init/main.c:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 148
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 30 29 31 4 59 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 4 init/main.c:778 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 init/main.c:778 (set (reg/f:SI 134 [ execute_command.441 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 4 [0x4])) [0 execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 execute_command+0 S4 A32])
        (nil)))

(insn 34 33 35 4 init/main.c:778 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ execute_command.441 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 4 init/main.c:778 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 5 init/main.c:779 (set (reg:SI 0 r0)
        (reg/f:SI 134 [ execute_command.441 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ execute_command.441 ])
        (nil)))

(call_insn 38 37 42 5 init/main.c:779 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 38 41 5 init/main.c:780 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 148)
                (const_int 4 [0x4])) [0 execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 execute_command+0 S4 A32])
            (nil))))

(insn 41 42 43 5 init/main.c:780 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11add780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11add780>)
        (nil)))

(call_insn 43 41 44 5 init/main.c:780 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 43 45 6 60 "" [1 uses])

(note 45 44 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 6 init/main.c:783 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11b2d090>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11b2d090>)
        (nil)))

(call_insn 48 47 50 6 init/main.c:783 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 50 48 51 6 init/main.c:784 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11b2d150>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x11b2d150>)
        (nil)))

(call_insn 51 50 53 6 init/main.c:784 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 53 51 54 6 init/main.c:785 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11b2d210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11b2d210>)
        (nil)))

(call_insn 54 53 56 6 init/main.c:785 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 56 54 57 6 init/main.c:786 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11b2d2d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11b2d2d0>)
        (nil)))

(call_insn 57 56 59 6 init/main.c:786 (parallel [
            (call (mem:SI (symbol_ref:SI ("run_init_process") [flags 0x3] <function_decl 0x11a78b80 run_init_process>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 59 57 60 6 init/main.c:788 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11ac8680>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11ac8680>)
        (nil)))

(call_insn 60 59 61 6 init/main.c:788 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 61 60 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function kernel_init (kernel_init)[0:2071] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 17 (  1.1)


kernel_init

Dataflow summary:
def_info->table_size = 2389, use_info->table_size = 127
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={32d,14u} r1={24d,3u} r2={22d,1u} r3={21d} r11={1d,14u} r12={21d} r13={1d,35u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={25d,5u} r25={1d,14u} r26={1d,13u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r133={2d,2u,1d} r134={2d,2u,1d} r142={2d,3u} r145={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r155={1d,2u} r156={1d,1u} r158={1d,1u} r159={1d,2u} r161={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 2509{2387d,120u,2e} in 66{46 regular + 20 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d31(0){ }d55(1){ }d77(2){ }d98(3){ }d99(11){ }d120(12){ }d121(13){ }d142(14){ }d348(25){ }d349(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 142 145 148 149 150 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 142 145 148 149 150 164
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164

( 4 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  gen 	 0 [r0] 134
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164

( 3 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 163
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163

( 7 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163

( 6 5 )->[7]->( 6 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 8 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 155 156
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  gen 	 158
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 10 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 159
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 161
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 12 13 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u122(0){ }u123(11){ }u124(13){ }u125(14){ }u126(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 121 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 15 to worklist
  Adding insn 8 to worklist
  Adding insn 31 to worklist
  Adding insn 38 to worklist
  Adding insn 123 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 53 to worklist
  Adding insn 60 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 73 to worklist
  Adding insn 83 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 87 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 115 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
  Adding insn 30 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
  Adding insn 52 to worklist
processing block 14 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 109 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 99 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
  Adding insn 95 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 86 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 78 to worklist
  Adding insn 76 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 72 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 68 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
  Adding insn 59 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
  Adding insn 58 to worklist
  Adding insn 48 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
  Adding insn 37 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
  Adding insn 36 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 7 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 19 count 30 (    2)
;;   ======================================================
;;   -- basic block 4 from 37 to 38 -- before reload
;;   ======================================================

;;	  0-->    37 cc=cmp(r134,r164)                 :cortex_a8_default
;;	  2-->    38 pc={(ltu(cc,0x0))?L35:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 37
;;   new tail = 38

;;   ======================================================
;;   -- basic block 3 from 30 to 31 -- before reload
;;   ======================================================

;;	  0-->    30 r0=[r134++]                       :cortex_a8_load_store_1
;;	  1-->    31 r0=call [`do_one_initcall']       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 30
;;   new tail = 31

;;   ======================================================
;;   -- basic block 7 from 59 to 60 -- before reload
;;   ======================================================

;;	  0-->    59 cc=cmp(r133,r163)                 :cortex_a8_default
;;	  2-->    60 pc={(ltu(cc,0x0))?L57:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 59
;;   new tail = 60

;;   ======================================================
;;   -- basic block 6 from 52 to 53 -- before reload
;;   ======================================================

;;	  0-->    52 r0=[r133++]                       :cortex_a8_load_store_1
;;	  1-->    53 r0=call [`do_one_initcall']       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 52
;;   new tail = 53

;;   ======================================================
;;   -- basic block 2 from 7 to 121 -- before reload
;;   ======================================================

;;	  0-->   125 r142=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     7 r0=`*.LANCHOR2'                   :cortex_a8_load_store_1
;;	  1-->   126 r142=r142&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     8 call [`wait_for_completion']      :cortex_a8_issue_branch
;;	  2-->    14 r1=`cpu_all_bits'                 :cortex_a8_load_store_1
;;	  3-->    13 r0=[r142+0xc]                     :cortex_a8_load_store_1
;;	  4-->    15 r0=call [`set_cpus_allowed_ptr']  :cortex_a8_issue_branch
;;	  4-->    20 r148=[r142+0xc]                   :cortex_a8_load_store_1
;;	  5-->    23 r150=`setup_max_cpus'             :cortex_a8_load_store_1
;;	  6-->    17 r145=`cad_pid'                    :cortex_a8_load_store_1
;;	  7-->    21 r149=[r148+0x250]                 :cortex_a8_load_store_1
;;	  8-->    24 r0=[r150]                         :cortex_a8_load_store_1
;;	  9-->    26 r134=`__initcall_start'           :cortex_a8_load_store_1
;;	 10-->    22 [r145]=r149                       :cortex_a8_load_store_1
;;	 10-->    25 call [`smp_prepare_cpus']         :cortex_a8_issue_branch
;;	 11-->    36 r164=`__early_initcall_end'       :cortex_a8_load_store_1
;;	 11-->   121 pc=L33                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 11
;;   new head = 7
;;   new tail = 121

;;   ======================================================
;;   -- basic block 5 from 40 to 123 -- before reload
;;   ======================================================

;;	  0-->    40 call [`lockup_detector_init']     :cortex_a8_issue_branch
;;	  0-->    48 r133=`__early_initcall_end'       :cortex_a8_load_store_1
;;	  1-->    41 call [`smp_init']                 :cortex_a8_issue_branch
;;	  1-->    58 r163=`__initcall_end'             :cortex_a8_load_store_1
;;	  2-->    42 call [`sched_init_smp']           :cortex_a8_issue_branch
;;	  3-->    43 call [`usermodehelper_init']      :cortex_a8_issue_branch
;;	  4-->    44 r0=call [`shmem_init']            :cortex_a8_issue_branch
;;	  5-->    45 call [`driver_init']              :cortex_a8_issue_branch
;;	  6-->    46 call [`init_irq_proc']            :cortex_a8_issue_branch
;;	  7-->    47 call [`usermodehelper_enable']    :cortex_a8_issue_branch
;;	  7-->   123 pc=L55                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 7
;;   new head = 40
;;   new tail = 123

;;   ======================================================
;;   -- basic block 8 from 63 to 69 -- before reload
;;   ======================================================

;;	  0-->    63 r0=`*.LC14'                       :cortex_a8_load_store_1
;;	  0-->    64 r1=0x2                            :cortex_a8_default
;;	  1-->    65 r2=0x0                            :cortex_a8_default
;;	  2-->    66 r0=call [`sys_open']              :cortex_a8_issue_branch
;;	 34-->    68 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->    69 pc={(cc>=0x0)?L74:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 63
;;   new tail = 69

;;   ======================================================
;;   -- basic block 9 from 72 to 73 -- before reload
;;   ======================================================

;;	  0-->    72 r0=`*.LC15'                       :cortex_a8_load_store_1
;;	  1-->    73 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 72
;;   new tail = 73

;;   ======================================================
;;   -- basic block 10 from 76 to 83 -- before reload
;;   ======================================================

;;	  0-->    76 r0=0x0                            :cortex_a8_default
;;	  1-->    77 r0=call [`sys_dup']               :cortex_a8_issue_branch
;;	  1-->    78 r0=0x0                            :cortex_a8_default
;;	  2-->    79 r0=call [`sys_dup']               :cortex_a8_issue_branch
;;	  2-->    80 r155=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  5-->    81 r156=[r155+0x8]                   :cortex_a8_load_store_1
;;	  7-->    82 cc=cmp(r156,0x0)                  :cortex_a8_default
;;	  9-->    83 pc={(cc!=0x0)?L88:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 76
;;   new tail = 83

;;   ======================================================
;;   -- basic block 11 from 86 to 87 -- before reload
;;   ======================================================

;;	  0-->    86 r158=`*.LC16'                     :cortex_a8_load_store_1
;;	  3-->    87 [r155+0x8]=r158                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 86
;;   new tail = 87

;;   ======================================================
;;   -- basic block 12 from 90 to 96 -- before reload
;;   ======================================================

;;	  0-->    90 r159=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    92 r1=0x0                            :cortex_a8_default
;;	  3-->    91 r0=[r159+0x8]                     :cortex_a8_load_store_1
;;	  4-->    93 r0=call [`sys_access']            :cortex_a8_issue_branch
;;	 36-->    95 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 38-->    96 pc={(cc==0x0)?L102:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 90
;;   new tail = 96

;;   ======================================================
;;   -- basic block 13 from 99 to 101 -- before reload
;;   ======================================================

;;	  0-->    99 r161=0x0                          :cortex_a8_default
;;	  0-->   100 [r159+0x8]=r161                   :cortex_a8_load_store_1
;;	  1-->   101 call [`prepare_namespace']        :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 99
;;   new tail = 101

;;   ======================================================
;;   -- basic block 14 from 104 to 115 -- before reload
;;   ======================================================

;;	  0-->   104 r0=call [`init_post']             :cortex_a8_issue_branch
;;	  0-->   109 r0=0x0                            :cortex_a8_default
;;	  1-->   115 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 104
;;   new tail = 115


;; Procedure interblock/speculative motions == 0/0 




kernel_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={32d,14u} r1={24d,3u} r2={22d,1u} r3={21d} r11={1d,14u} r12={21d} r13={1d,35u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={25d,5u} r25={1d,14u} r26={1d,13u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r133={2d,2u,1d} r134={2d,2u,1d} r142={2d,3u} r145={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r155={1d,2u} r156={1d,1u} r158={1d,1u} r159={1d,2u} r161={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 2509{2387d,120u,2e} in 66{46 regular + 20 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 142 145 148 149 150 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 142 145 148 149 150 164
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 125 2 NOTE_INSN_DELETED)

(insn 125 10 7 2 init/main.c:805 (set (reg:SI 142)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 125 126 2 init/main.c:797 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 126 7 8 2 init/main.c:805 (set (reg:SI 142)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 8 126 14 2 init/main.c:797 (parallel [
            (call (mem:SI (symbol_ref:SI ("wait_for_completion") [flags 0x41] <function_decl 0x10d1ac00 wait_for_completion>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 8 13 2 init/main.c:805 (set (reg:SI 1 r1)
        (symbol_ref:SI ("cpu_all_bits") [flags 0xc0] <var_decl 0x10c81900 cpu_all_bits>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_all_bits") [flags 0xc0] <var_decl 0x10c81900 cpu_all_bits>)
        (nil)))

(insn 13 14 15 2 init/main.c:805 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 13 20 2 init/main.c:805 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("set_cpus_allowed_ptr") [flags 0x41] <function_decl 0x11332480 set_cpus_allowed_ptr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 15 23 2 init/main.c:807 (set (reg/f:SI 148 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 23 20 17 2 init/main.c:809 (set (reg/f:SI 150)
        (symbol_ref:SI ("setup_max_cpus") [flags 0xc0] <var_decl 0x10c98de0 setup_max_cpus>)) 167 {*arm_movsi_insn} (nil))

(insn 17 23 21 2 init/main.c:807 (set (reg/f:SI 145)
        (symbol_ref:SI ("cad_pid") [flags 0xc0] <var_decl 0x1132e420 cad_pid>)) 167 {*arm_movsi_insn} (nil))

(insn 21 17 24 2 init/main.c:807 (set (reg/f:SI 149 [ <variable>.pid ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 148 [ <variable>.task ])
                (const_int 592 [0x250])) [0 <variable>.pid+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ <variable>.task ])
        (nil)))

(insn 24 21 26 2 init/main.c:809 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 150) [0 setup_max_cpus+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("setup_max_cpus") [flags 0xc0] <var_decl 0x10c98de0 setup_max_cpus>) [0 setup_max_cpus+0 S4 A32])
            (nil))))

(insn 26 24 22 2 init/main.c:741 (set (reg/v/f:SI 134 [ fn ])
        (symbol_ref:SI ("__initcall_start") [flags 0xc0] <var_decl 0x11a8fa80 __initcall_start>)) 167 {*arm_movsi_insn} (nil))

(insn 22 26 25 2 init/main.c:807 (set (mem/f/c/i:SI (reg/f:SI 145) [0 cad_pid+0 S4 A32])
        (reg/f:SI 149 [ <variable>.pid ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ <variable>.pid ])
        (expr_list:REG_DEAD (reg/f:SI 145)
            (nil))))

(call_insn 25 22 36 2 init/main.c:809 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_prepare_cpus") [flags 0x41] <function_decl 0x10c9f900 smp_prepare_cpus>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 36 25 121 2 init/main.c:741 discrim 1 (set (reg/f:SI 164)
        (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 121 36 122 2 (set (pc)
        (label_ref 33)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164


;; Succ edge  4 [100.0%] 

(barrier 122 121 35)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  gen 	 0 [r0] 134
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 35 122 29 3 66 "" [1 uses])

(note 29 35 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 3 init/main.c:742 (set (reg:SI 0 r0)
        (mem/f:SI (post_inc:SI (reg/v/f:SI 134 [ fn ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/v/f:SI 134 [ fn ])
        (nil)))

(call_insn 31 30 33 3 init/main.c:742 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_one_initcall") [flags 0x3] <function_decl 0x10a49a00 do_one_initcall>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 33 31 34 4 65 "" [1 uses])

(note 34 33 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 34 38 4 init/main.c:741 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ fn ])
            (reg/f:SI 164))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 134 [ fn ])
            (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>))
        (nil)))

(jump_insn 38 37 39 4 init/main.c:741 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 164


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 163
;; live  kill	 14 [lr]

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 39 48 5 init/main.c:812 (parallel [
            (call (mem:SI (symbol_ref:SI ("lockup_detector_init") [flags 0x41] <function_decl 0x112b7e80 lockup_detector_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 48 40 41 5 init/main.c:714 (set (reg/v/f:SI 133 [ fn ])
        (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__early_initcall_end") [flags 0xc0] <var_decl 0x11a8fb40 __early_initcall_end>)
        (nil)))

(call_insn 41 48 58 5 init/main.c:814 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_init") [flags 0x41] <function_decl 0x10ca2180 smp_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 58 41 42 5 init/main.c:714 discrim 1 (set (reg/f:SI 163)
        (symbol_ref:SI ("__initcall_end") [flags 0xc0] <var_decl 0x11a8fae0 __initcall_end>)) 167 {*arm_movsi_insn} (nil))

(call_insn 42 58 43 5 init/main.c:815 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_init_smp") [flags 0x41] <function_decl 0x112b7300 sched_init_smp>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 43 42 44 5 init/main.c:728 (parallel [
            (call (mem:SI (symbol_ref:SI ("usermodehelper_init") [flags 0x41] <function_decl 0x10d84a80 usermodehelper_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 44 43 45 5 init/main.c:729 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("shmem_init") [flags 0x41] <function_decl 0x11a3b300 shmem_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(call_insn 45 44 46 5 init/main.c:730 (parallel [
            (call (mem:SI (symbol_ref:SI ("driver_init") [flags 0x41] <function_decl 0x11564a80 driver_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 46 45 47 5 init/main.c:731 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_irq_proc") [flags 0x41] <function_decl 0x115f3500 init_irq_proc>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 47 46 123 5 init/main.c:733 (parallel [
            (call (mem:SI (symbol_ref:SI ("usermodehelper_enable") [flags 0x41] <function_decl 0x10d84b80 usermodehelper_enable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 123 47 124 5 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163


;; Succ edge  7 [100.0%] 

(barrier 124 123 57)

;; Start of basic block ( 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]

;; Pred edge  7 [91.0%] 
(code_label 57 124 51 6 68 "" [1 uses])

(note 51 57 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 6 init/main.c:715 (set (reg:SI 0 r0)
        (mem/f:SI (post_inc:SI (reg/v/f:SI 133 [ fn ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/v/f:SI 133 [ fn ])
        (nil)))

(call_insn 53 52 55 6 init/main.c:715 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_one_initcall") [flags 0x3] <function_decl 0x10a49a00 do_one_initcall>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  5 [100.0%] 
(code_label 55 53 56 7 67 "" [1 uses])

(note 56 55 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 60 7 init/main.c:714 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ fn ])
            (reg/f:SI 163))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 133 [ fn ])
            (symbol_ref:SI ("__initcall_end") [flags 0xc0] <var_decl 0x11a8fae0 __initcall_end>))
        (nil)))

(jump_insn 60 59 61 7 init/main.c:714 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 7 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 163


;; Succ edge  6 [91.0%] 
;; Succ edge  8 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [9.0%]  (fallthru,loop_exit)
(note 61 60 67 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 67 61 63 8 NOTE_INSN_DELETED)

(insn 63 67 64 8 init/main.c:820 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11b3de10>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11b3de10>)
        (nil)))

(insn 64 63 65 8 init/main.c:820 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 8 init/main.c:820 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 68 8 init/main.c:820 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_open") [flags 0x41] <function_decl 0x1146d100 sys_open>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 68 66 69 8 init/main.c:820 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 69 68 70 8 init/main.c:820 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  8 [0.0%]  (fallthru)
(note 70 69 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 72 70 73 9 init/main.c:821 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11add870>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11add870>)
        (nil)))

(call_insn 73 72 74 9 init/main.c:821 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 155 156
;; live  kill	 14 [lr]

;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 74 73 75 10 69 "" [1 uses])

(note 75 74 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 10 init/main.c:823 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 76 78 10 init/main.c:823 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_dup") [flags 0x41] <function_decl 0x11468980 sys_dup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 78 77 79 10 init/main.c:824 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 79 78 80 10 init/main.c:824 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_dup") [flags 0x41] <function_decl 0x11468980 sys_dup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 80 79 81 10 init/main.c:830 (set (reg/f:SI 155)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 10 init/main.c:830 (set (reg/f:SI 156 [ ramdisk_execute_command ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 155)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
        (nil)))

(insn 82 81 83 10 init/main.c:830 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 156 [ ramdisk_execute_command ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 156 [ ramdisk_execute_command ])
        (nil)))

(jump_insn 83 82 84 10 init/main.c:830 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 88)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155


;; Succ edge  11 [15.0%]  (fallthru)
;; Succ edge  12 [85.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  gen 	 158
;; live  kill	

;; Pred edge  10 [15.0%]  (fallthru)
(note 84 83 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 86 84 87 11 init/main.c:831 (set (reg/f:SI 158)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11b3c440>)) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 11 init/main.c:831 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 155)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (reg/f:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 155)
            (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11b3c440>)
                (nil)))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 159
;; live  kill	 14 [lr]

;; Pred edge  10 [85.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 88 87 89 12 70 "" [1 uses])

(note 89 88 94 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 94 89 90 12 NOTE_INSN_DELETED)

(insn 90 94 92 12 init/main.c:833 (set (reg/f:SI 159)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 92 90 91 12 init/main.c:833 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 91 92 93 12 init/main.c:833 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 159)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 ramdisk_execute_command+0 S4 A32])
        (nil)))

(call_insn 93 91 95 12 init/main.c:833 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_access") [flags 0x41] <function_decl 0x1146d200 sys_access>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 95 93 96 12 init/main.c:833 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 96 95 97 12 init/main.c:833 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159
;; live  gen 	 161
;; live  kill	 14 [lr]

;; Pred edge  12 [39.0%]  (fallthru)
(note 97 96 99 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 99 97 100 13 init/main.c:834 (set (reg:SI 161)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 13 init/main.c:834 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 159)
                (const_int 8 [0x8])) [0 ramdisk_execute_command+0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_DEAD (reg/f:SI 159)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(call_insn 101 100 102 13 init/main.c:835 (parallel [
            (call (mem:SI (symbol_ref:SI ("prepare_namespace") [flags 0x41] <function_decl 0x10a49b00 prepare_namespace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  12 [61.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 102 101 103 14 71 "" [1 uses])

(note 103 102 104 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn 104 103 109 14 init/main.c:844 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("init_post") [flags 0x3] <function_decl 0x11a78c80 init_post>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (nil))

(insn 109 104 115 14 init/main.c:846 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 115 109 127 14 init/main.c:846 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 127 115 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function unknown_bootoption (unknown_bootoption)[0:2049] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 4 to 10 -- before reload
;;   ======================================================

;;	  0-->     9 {cc=cmp(r1,0x0);r155=r1;}         :cortex_a8_default
;;	  0-->     4 r154=r0                           :cortex_a8_default
;;	  2-->    10 pc={(cc==0x0)?L56:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 4
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 13 to 19 -- before reload
;;   ======================================================

;;	  0-->    13 r0=call [`strlen']                :cortex_a8_issue_branch
;;	  0-->    14 r156=r0                           :cortex_a8_default
;;	  1-->    16 r157=r156+0x1                     :cortex_a8_default
;;	  2-->    17 r158=r154+r157                    :cortex_a8_default
;;	  3-->    18 cc=cmp(r155,r158)                 :cortex_a8_default
;;	  5-->    19 pc={(cc!=0x0)?L26:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 13
;;   new tail = 19

;;   ======================================================
;;   -- basic block 4 from 21 to 257 -- before reload
;;   ======================================================

;;	  0-->    21 r159=0x3d                         :cortex_a8_default
;;	  0-->    23 [r155-0x1]=r159#0                 :cortex_a8_load_store_1
;;	  1-->   257 pc=L56                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 21
;;   new tail = 257

;;   ======================================================
;;   -- basic block 5 from 28 to 31 -- before reload
;;   ======================================================

;;	  0-->    28 r161=r156+0x2                     :cortex_a8_default
;;	  1-->    29 r162=r154+r161                    :cortex_a8_default
;;	  2-->    30 cc=cmp(r155,r162)                 :cortex_a8_default
;;	  4-->    31 pc={(cc!=0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 28
;;   new tail = 31

;;   ======================================================
;;   -- basic block 6 from 33 to 259 -- before reload
;;   ======================================================

;;	  0-->    37 r0=r155                           :cortex_a8_default
;;	  0-->    33 r163=0x3d                         :cortex_a8_default
;;	  1-->    35 [r155-0x2]=r163#0                 :cortex_a8_load_store_1
;;	  1-->    36 r151=r155-0x1                     :cortex_a8_default
;;	  2-->    38 r0=call [`strlen']                :cortex_a8_issue_branch
;;	  2-->    43 r1=r155                           :cortex_a8_default
;;	  3-->    46 r155=r151                         :cortex_a8_default
;;	 34-->    41 r166=r0+0x1                       :cortex_a8_default
;;	 34-->    42 r0=r151                           :cortex_a8_default
;;	 35-->    44 r2=r166                           :cortex_a8_default
;;	 36-->    45 r0=call [`memmove']               :cortex_a8_issue_branch
;;	 36-->   259 pc=L56                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 36
;;   new head = 33
;;   new tail = 259

;;   ======================================================
;;   -- basic block 7 from 52 to 54 -- before reload
;;   ======================================================

;;	  0-->    52 r0=`*.LC17'                       :cortex_a8_load_store_1
;;	  0-->    53 r1=0xf5                           :cortex_a8_default
;;	  1-->    54 call [`__bug']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 52
;;   new tail = 54

;;   ======================================================
;;   -- basic block 8 from 58 to 119 -- before reload
;;   ======================================================

;;	  0-->    59 r143=`__setup_start'              :cortex_a8_load_store_1
;;	  0-->    58 r144=0x0                          :cortex_a8_default
;;	  1-->   119 r212=`__setup_end'                :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 58
;;   new tail = 119

;;   ======================================================
;;   -- basic block 9 from 61 to 73 -- before reload
;;   ======================================================

;;	  0-->    61 r137=[r143]                       :cortex_a8_load_store_1
;;	  2-->    62 r0=r137                           :cortex_a8_default
;;	  3-->    63 r0=call [`strlen']                :cortex_a8_issue_branch
;;	  3-->    64 r168=r0                           :cortex_a8_default
;;	  4-->    66 r0=r154                           :cortex_a8_default
;;	  4-->    67 r1=r137                           :cortex_a8_default
;;	  5-->    68 r2=r168                           :cortex_a8_default
;;	  6-->    69 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 38-->    72 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 40-->    73 pc={(cc!=0x0)?L115:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 40
;;   new head = 61
;;   new tail = 73

;;   ======================================================
;;   -- basic block 10 from 75 to 77 -- before reload
;;   ======================================================

;;	  0-->    75 r170=[r143+0x8]                   :cortex_a8_load_store_1
;;	  2-->    76 cc=cmp(r170,0x0)                  :cortex_a8_default
;;	  4-->    77 pc={(cc==0x0)?L95:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 75
;;   new tail = 77

;;   ======================================================
;;   -- basic block 11 from 79 to 261 -- before reload
;;   ======================================================

;;	  0-->    79 r140=zxn([r154+r168])             :cortex_a8_load_store_1
;;	  2-->   241 cc=cmp(r140==0x3d|r140==0x0,0x0)  :cortex_a8_default
;;	  3-->   242 r144={(cc==0x0)?r144:0x1}         :cortex_a8_default
;;	  3-->   261 pc=L115                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 79
;;   new tail = 261

;;   ======================================================
;;   -- basic block 12 from 97 to 99 -- before reload
;;   ======================================================

;;	  0-->    97 r141=[r143+0x4]                   :cortex_a8_load_store_1
;;	  2-->    98 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  4-->    99 pc={(cc!=0x0)?L107:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 97
;;   new tail = 99

;;   ======================================================
;;   -- basic block 13 from 102 to 263 -- before reload
;;   ======================================================

;;	  0-->   103 r1=r137                           :cortex_a8_default
;;	  0-->   102 r0=`*.LC18'                       :cortex_a8_load_store_1
;;	  1-->   104 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   263 pc=L225                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 102
;;   new tail = 263

;;   ======================================================
;;   -- basic block 14 from 110 to 114 -- before reload
;;   ======================================================

;;	  0-->   110 r0=r154+r168                      :cortex_a8_default
;;	  1-->   111 r0=call [r141]                    :cortex_a8_issue_branch
;;	 33-->   113 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->   114 pc={(cc!=0x0)?L225:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 110
;;   new tail = 114

;;   ======================================================
;;   -- basic block 15 from 117 to 121 -- before reload
;;   ======================================================

;;	  0-->   117 r143=r143+0xc                     :cortex_a8_default
;;	  1-->   120 cc=cmp(r143,r212)                 :cortex_a8_default
;;	  3-->   121 pc={(ltu(cc,0x0))?L118:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 117
;;   new tail = 121

;;   ======================================================
;;   -- basic block 16 from 123 to 124 -- before reload
;;   ======================================================

;;	  0-->   123 cc=cmp(r144,0x0)                  :cortex_a8_default
;;	  2-->   124 pc={(cc!=0x0)?L225:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 123
;;   new tail = 124

;;   ======================================================
;;   -- basic block 17 from 126 to 132 -- before reload
;;   ======================================================

;;	  0-->   126 r0=r154                           :cortex_a8_default
;;	  0-->   127 r1=0x2e                           :cortex_a8_default
;;	  1-->   128 r0=call [`strchr']                :cortex_a8_issue_branch
;;	 33-->   131 {cc=cmp(r0,0x0);r181=r0;}         :cortex_a8_default
;;	 35-->   132 pc={(cc==0x0)?L139:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 126
;;   new tail = 132

;;   ======================================================
;;   -- basic block 18 from 134 to 135 -- before reload
;;   ======================================================

;;	  0-->   134 cc=cmp(r155,0x0)                  :cortex_a8_default
;;	  2-->   135 pc={(cc==0x0)?L225:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 134
;;   new tail = 135

;;   ======================================================
;;   -- basic block 19 from 137 to 138 -- before reload
;;   ======================================================

;;	  0-->   137 cc=cmp(r181,r155)                 :cortex_a8_default
;;	  2-->   138 pc={(ltu(cc,0x0))?L225:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 137
;;   new tail = 138

;;   ======================================================
;;   -- basic block 20 from 141 to 144 -- before reload
;;   ======================================================

;;	  0-->   141 r182=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->   142 r183=[r182+0x50]                  :cortex_a8_load_store_1
;;	  5-->   143 cc=cmp(r183,0x0)                  :cortex_a8_default
;;	  7-->   144 pc={(cc!=0x0)?L225:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 141
;;   new tail = 144

;;   ======================================================
;;   -- basic block 21 from 146 to 147 -- before reload
;;   ======================================================

;;	  0-->   146 cc=cmp(r155,0x0)                  :cortex_a8_default
;;	  2-->   147 pc={(cc==0x0)?L152:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 146
;;   new tail = 147

;;   ======================================================
;;   -- basic block 22 from 149 to 265 -- before reload
;;   ======================================================

;;	  0-->   149 r146=r183                         :cortex_a8_default
;;	  0-->   164 r207=r182                         :cortex_a8_default
;;	  1-->   171 r209=r155-r154                    :cortex_a8_default
;;	  1-->   185 r206=const(`*.LANCHOR1'+0x88)     :cortex_a8_load_store_1
;;	  2-->   165 r208=`*.LC19'                     :cortex_a8_load_store_1
;;	  2-->   265 pc=L182                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 149
;;   new tail = 265

;;   ======================================================
;;   -- basic block 23 from 155 to 267 -- before reload
;;   ======================================================

;;	  0-->   156 r136=r155                         :cortex_a8_default
;;	  0-->   155 r135=[r182+0x54]                  :cortex_a8_load_store_1
;;	  1-->   157 r145=r136                         :cortex_a8_default
;;	  1-->   213 r210=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->   245 r211=`*.LC20'                     :cortex_a8_load_store_1
;;	  2-->   267 pc=L210                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 155
;;   new tail = 267

;;   ======================================================
;;   -- basic block 24 from 161 to 162 -- before reload
;;   ======================================================

;;	  0-->   161 cc=cmp(r146,0x20)                 :cortex_a8_default
;;	  2-->   162 pc={(cc!=0x0)?L169:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 161
;;   new tail = 162

;;   ======================================================
;;   -- basic block 25 from 166 to 168 -- before reload
;;   ======================================================

;;	  0-->   166 [r207+0x50]=r208                  :cortex_a8_load_store_1
;;	  1-->   168 [r207+0x54]=r154                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 166
;;   new tail = 168

;;   ======================================================
;;   -- basic block 26 from 172 to 179 -- before reload
;;   ======================================================

;;	  0-->   173 r1=r148                           :cortex_a8_default
;;	  0-->   172 r0=r154                           :cortex_a8_default
;;	  1-->   174 r2=r209                           :cortex_a8_default
;;	  2-->   175 r0=call [`strncmp']               :cortex_a8_issue_branch
;;	 34-->   178 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->   179 pc={(cc==0x0)?L191:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 172
;;   new tail = 179

;;   ======================================================
;;   -- basic block 27 from 181 to 181 -- before reload
;;   ======================================================

;;	  0-->   181 r146=r146+0x1                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 181
;;   new tail = 181

;;   ======================================================
;;   -- basic block 28 from 187 to 190 -- before reload
;;   ======================================================

;;	  0-->   187 r148=[r146*0x4+r206]              :cortex_a8_load_store_1
;;	  2-->   189 cc=cmp(r148,0x0)                  :cortex_a8_default
;;	  4-->   190 pc={(cc!=0x0)?L188:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 187
;;   new tail = 190

;;   ======================================================
;;   -- basic block 29 from 193 to 269 -- before reload
;;   ======================================================

;;	  0-->   193 r193=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->   196 r196=r146*0x4+r193                :cortex_a8_default
;;	  4-->   198 [r196+0x88]=r154                  :cortex_a8_load_store_1
;;	  4-->   269 pc=L225                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 193
;;   new tail = 269

;;   ======================================================
;;   -- basic block 30 from 243 to 209 -- before reload
;;   ======================================================

;;	  0-->   243 cc=cmp(r145,0x20)                 :cortex_a8_default
;;	  0-->   209 r145=r145+0x1                     :cortex_a8_default
;;	  1-->   247 r136={(cc!=0x0)?r136:r211}        :cortex_a8_default
;;	  1-->   244 r135={(cc!=0x0)?r135:r154}        :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 243
;;   new tail = 209

;;   ======================================================
;;   -- basic block 31 from 254 to 217 -- before reload
;;   ======================================================

;;	  0-->   215 r200=[r145*0x4+r210]              :cortex_a8_load_store_1
;;	  1-->   254 r198=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->   216 cc=cmp(r200,0x0)                  :cortex_a8_default
;;	  4-->   217 pc={(cc!=0x0)?L212:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 254
;;   new tail = 217

;;   ======================================================
;;   -- basic block 32 from 219 to 224 -- before reload
;;   ======================================================

;;	  0-->   219 r201=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->   224 [r145*0x4+r198]=r154              :cortex_a8_load_store_1
;;	  3-->   222 [r201+0x54]=r135                  :cortex_a8_load_store_1
;;	  4-->   220 [r201+0x50]=r136                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 219
;;   new tail = 224

;;   ======================================================
;;   -- basic block 33 from 231 to 237 -- before reload
;;   ======================================================

;;	  0-->   231 r0=0x0                            :cortex_a8_default
;;	  0-->   237 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 231
;;   new tail = 237


;; Procedure interblock/speculative motions == 0/0 




unknown_bootoption

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,21u} r1={17d,8u} r2={14d,3u} r3={11d} r11={1d,33u} r12={11d} r13={1d,43u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={30d,21u} r25={1d,33u} r26={1d,32u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r135={2d,2u} r136={2d,3u} r137={1d,3u} r140={1d,2u} r141={1d,2u} r143={2d,5u,1d} r144={2d,2u} r145={2d,4u} r146={2d,4u} r148={1d,2u} r151={1d,2u} r154={1d,12u} r155={2d,12u} r156={1d,2u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r166={1d,1u} r168={1d,3u} r170={1d,1u} r181={1d,1u} r182={1d,3u} r183={1d,2u} r193={1d,1u} r196={1d,1u} r198={1d,1u} r200={1d,1u} r201={1d,2u} r206={1d,1u} r207={1d,2u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} 
;;    total ref usage 1548{1264d,283u,1e} in 126{116 regular + 10 call} insns.
(note 3 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 154 155
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 154 155
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 3 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 7 6 2 NOTE_INSN_DELETED)

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 4 2 init/main.c:236 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 1 r1 [ val ])
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 155 [ val ])
                (reg:SI 1 r1 [ val ]))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 1 r1 [ val ])
        (nil)))

(insn 4 9 10 2 init/main.c:234 (set (reg/v/f:SI 154 [ param ])
        (reg:SI 0 r0 [ param ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 10 4 11 2 init/main.c:236 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  8 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 156 157 158
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 0 [r0] 24 [cc] 156 157 158
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn/i 13 11 14 3 init/main.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 13 16 3 init/main.c:238 (set (reg:SI 156)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 16 14 17 3 init/main.c:238 (set (reg:SI 157)
        (plus:SI (reg:SI 156)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 3 init/main.c:238 (set (reg:SI 158)
        (plus:SI (reg/v/f:SI 154 [ param ])
            (reg:SI 157))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 18 17 19 3 init/main.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 155 [ val ])
            (reg:SI 158))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 19 18 20 3 init/main.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 156


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 159
;; live  kill	

;; Pred edge  3 [0.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 23 4 init/main.c:239 (set (reg:SI 159)
        (const_int 61 [0x3d])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 257 4 init/main.c:239 (set (mem:QI (plus:SI (reg/v/f:SI 155 [ val ])
                (const_int -1 [0xffffffffffffffff])) [0 S1 A8])
        (subreg:QI (reg:SI 159) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (const_int 61 [0x3d])
            (nil))))

(jump_insn 257 23 258 4 (set (pc)
        (label_ref 56)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  8 [100.0%] 

(barrier 258 257 26)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 156
;; lr  def 	 24 [cc] 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 156
;; live  gen 	 24 [cc] 161 162
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 26 258 27 5 77 "" [1 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 init/main.c:240 (set (reg:SI 161)
        (plus:SI (reg:SI 156)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 29 28 30 5 init/main.c:240 (set (reg:SI 162)
        (plus:SI (reg/v/f:SI 154 [ param ])
            (reg:SI 161))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 30 29 31 5 init/main.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 155 [ val ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(jump_insn 31 30 32 5 init/main.c:240 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  6 [100.0%]  (fallthru)
;; Succ edge  7 [0.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 155 163 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 151 155 163 166
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
(note 32 31 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 39 32 37 6 NOTE_INSN_DELETED)

(insn 37 39 33 6 init/main.c:242 (set (reg:SI 0 r0)
        (reg/v/f:SI 155 [ val ])) 167 {*arm_movsi_insn} (nil))

(insn 33 37 35 6 init/main.c:241 (set (reg:SI 163)
        (const_int 61 [0x3d])) 167 {*arm_movsi_insn} (nil))

(insn 35 33 36 6 init/main.c:241 (set (mem:QI (plus:SI (reg/v/f:SI 155 [ val ])
                (const_int -2 [0xfffffffffffffffe])) [0 S1 A8])
        (subreg:QI (reg:SI 163) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_EQUAL (const_int 61 [0x3d])
            (nil))))

(insn 36 35 38 6 init/main.c:242 (set (reg/f:SI 151 [ D.37769 ])
        (plus:SI (reg/v/f:SI 155 [ val ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(call_insn/i 38 36 43 6 init/main.c:242 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 43 38 46 6 init/main.c:242 (set (reg:SI 1 r1)
        (reg/v/f:SI 155 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 155 [ val ])
        (nil)))

(insn 46 43 41 6 init/main.c:243 (set (reg/v/f:SI 155 [ val ])
        (reg/f:SI 151 [ D.37769 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ D.37769 ])
        (nil)))

(insn 41 46 42 6 init/main.c:242 (set (reg:SI 166)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 41 44 6 init/main.c:242 (set (reg:SI 0 r0)
        (reg/f:SI 151 [ D.37769 ])) 167 {*arm_movsi_insn} (nil))

(insn 44 42 45 6 init/main.c:242 (set (reg:SI 2 r2)
        (reg:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(call_insn 45 44 259 6 init/main.c:242 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memmove") [flags 0x41] <function_decl 0x51154d80 memmove>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 259 45 260 6 (set (pc)
        (label_ref 56)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  8 [100.0%] 

(barrier 260 259 49)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%] 
(code_label 49 260 50 7 78 "" [1 uses])

(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 53 7 init/main.c:245 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11b56450>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11b56450>)
        (nil)))

(insn 53 52 54 7 init/main.c:245 (set (reg:SI 1 r1)
        (const_int 245 [0xf5])) 167 {*arm_movsi_insn} (nil))

(call_insn 54 53 55 7 init/main.c:245 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 55 54 56)

;; Start of basic block ( 2 4 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143 144 212
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 143 144 212
;; live  kill	

;; Pred edge  2 [0.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 56 55 57 8 76 "" [3 uses])

(note 57 56 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 58 8 init/main.c:163 (set (reg/v/f:SI 143 [ p ])
        (symbol_ref:SI ("__setup_start") [flags 0xc0] <var_decl 0x11a54420 __setup_start>)) 167 {*arm_movsi_insn} (nil))

(insn 58 59 119 8 init/main.c:161 (set (reg/v:SI 144 [ had_early_param ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 119 58 118 8 init/main.c:182 (set (reg/f:SI 212)
        (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 15) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 168
;; live  kill	 14 [lr]

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  15 [86.0%]  (dfs_back)
(code_label 118 119 60 9 83 "" [1 uses])

(note 60 118 70 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 70 60 61 9 NOTE_INSN_DELETED)

(insn 61 70 62 9 init/main.c:165 (set (reg/f:SI 137 [ D.38255 ])
        (mem/s/f/j:SI (reg/v/f:SI 143 [ p ]) [0 <variable>.str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 9 init/main.c:165 (set (reg:SI 0 r0)
        (reg/f:SI 137 [ D.38255 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 63 62 64 9 init/main.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 64 63 66 9 init/main.c:165 (set (reg:SI 168)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 66 64 67 9 init/main.c:166 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ param ])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 9 init/main.c:166 (set (reg:SI 1 r1)
        (reg/f:SI 137 [ D.38255 ])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 9 init/main.c:166 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (nil))

(call_insn/i 69 68 72 9 init/main.c:166 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 72 69 73 9 init/main.c:166 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 73 72 74 9 init/main.c:166 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212
;; live  gen 	 24 [cc] 170
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 10 init/main.c:167 (set (reg:SI 170 [ <variable>.early ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ p ])
                (const_int 8 [0x8])) [0 <variable>.early+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 10 init/main.c:167 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170 [ <variable>.early ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170 [ <variable>.early ])
        (nil)))

(jump_insn 77 76 78 10 init/main.c:167 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 154 155 168 212
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 154 168
;; lr  def 	 24 [cc] 140 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 168 212
;; live  gen 	 24 [cc] 140 144
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 78 77 80 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 80 78 81 11 NOTE_INSN_DELETED)

(note 81 80 83 11 NOTE_INSN_DELETED)

(note 83 81 84 11 NOTE_INSN_DELETED)

(note 84 83 86 11 NOTE_INSN_DELETED)

(note 86 84 87 11 NOTE_INSN_DELETED)

(note 87 86 88 11 NOTE_INSN_DELETED)

(note 88 87 79 11 NOTE_INSN_DELETED)

(insn 79 88 241 11 init/main.c:172 (set (reg:SI 140 [ D.38248 ])
        (zero_extend:SI (mem:QI (plus:SI (reg/v/f:SI 154 [ param ])
                    (reg:SI 168)) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 241 79 242 11 init/main.c:173 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg:SI 140 [ D.38248 ])
                    (const_int 61 [0x3d]))
                (eq:SI (reg:SI 140 [ D.38248 ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg:SI 140 [ D.38248 ])
        (nil)))

(insn 242 241 261 11 init/main.c:173 (set (reg/v:SI 144 [ had_early_param ])
        (if_then_else:SI (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 144 [ had_early_param ])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (nil)))

(jump_insn 261 242 262 11 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 154 155 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212


;; Succ edge  15 [100.0%] 

(barrier 262 261 95)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143 144 154 155 168 212
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 95 262 96 12 80 "" [1 uses])

(note 96 95 97 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 98 12 init/main.c:174 (set (reg/f:SI 141 [ D.38244 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ p ])
                (const_int 4 [0x4])) [0 <variable>.setup_func+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 12 init/main.c:174 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 141 [ D.38244 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 12 init/main.c:174 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 154 155 168 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 143 144 154 155 168 212


;; Succ edge  13 [0.0%]  (fallthru,loop_exit)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru,loop_exit)
(note 100 99 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 103 100 102 13 init/main.c:175 (set (reg:SI 1 r1)
        (reg/f:SI 137 [ D.38255 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ D.38255 ])
        (nil)))

(insn 102 103 104 13 init/main.c:175 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11b39ec0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11b39ec0>)
        (nil)))

(call_insn 104 102 263 13 init/main.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 263 104 264 13 (set (pc)
        (label_ref 225)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  33 [100.0%] 

(barrier 264 263 107)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 154 155 168 212
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 154 155 168 212
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [100.0%] 
(code_label 107 264 108 14 81 "" [1 uses])

(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 109 108 112 14 NOTE_INSN_DELETED)

(note 112 109 110 14 NOTE_INSN_DELETED)

(insn 110 112 111 14 init/main.c:178 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 154 [ param ])
            (reg:SI 168))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(call_insn 111 110 113 14 init/main.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 141 [ D.38244 ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 141 [ D.38244 ])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 113 111 114 14 init/main.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 114 113 115 14 init/main.c:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 300 [0x12c])
            (nil))))
;; End of basic block 14 -> ( 33 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 154 155 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212


;; Succ edge  33 [3.0%]  (loop_exit)
;; Succ edge  15 [97.0%]  (fallthru)

;; Start of basic block ( 9 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 154 155 212
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 212
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  14 [97.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
(code_label 115 114 116 15 79 "" [2 uses])

(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 120 15 init/main.c:181 (set (reg/v/f:SI 143 [ p ])
        (plus:SI (reg/v/f:SI 143 [ p ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 120 117 121 15 init/main.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ p ])
            (reg/f:SI 212))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 143 [ p ])
            (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>))
        (nil)))

(jump_insn 121 120 122 15 init/main.c:182 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 15 -> ( 9 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 154 155 212
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 154 155 212


;; Succ edge  9 [86.0%]  (dfs_back)
;; Succ edge  16 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 154 155
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [14.0%]  (fallthru,loop_exit)
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 16 init/main.c:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ had_early_param ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ had_early_param ])
        (nil)))

(jump_insn 124 123 125 16 init/main.c:249 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3567 [0xdef])
            (nil))))
;; End of basic block 16 -> ( 33 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  33 [35.7%] 
;; Succ edge  17 [64.3%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 181
;; live  kill	 14 [lr]

;; Pred edge  16 [64.3%]  (fallthru)
(note 125 124 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 129 125 126 17 NOTE_INSN_DELETED)

(insn 126 129 127 17 init/main.c:253 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ param ])) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 17 init/main.c:253 (set (reg:SI 1 r1)
        (const_int 46 [0x2e])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 128 127 131 17 init/main.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strchr") [flags 0x41] <function_decl 0x51157580 strchr>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 131 128 132 17 init/main.c:253 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 181)
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 132 131 133 17 init/main.c:253 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 181


;; Succ edge  18 [85.0%]  (fallthru)
;; Succ edge  20 [15.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 181
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [85.0%]  (fallthru)
(note 133 132 134 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 18 init/main.c:253 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 155 [ val ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 135 134 136 18 init/main.c:253 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 18 -> ( 33 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 181


;; Succ edge  33 [10.1%] 
;; Succ edge  19 [89.9%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 181
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 181
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [89.9%]  (fallthru)
(note 136 135 137 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 19 init/main.c:253 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (reg/v/f:SI 155 [ val ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(jump_insn 138 137 139 19 init/main.c:253 discrim 2 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 19 -> ( 33 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155


;; Succ edge  33 [39.0%] 
;; Succ edge  20 [61.0%]  (fallthru)

;; Start of basic block ( 17 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155
;; live  gen 	 24 [cc] 182 183
;; live  kill	

;; Pred edge  17 [15.0%] 
;; Pred edge  19 [61.0%]  (fallthru)
(code_label 139 138 140 20 84 "" [1 uses])

(note 140 139 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 20 init/main.c:256 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 20 init/main.c:256 (set (reg/f:SI 183 [ panic_later ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 80 [0x50]))) [0 panic_later+0 S4 A32])
        (nil)))

(insn 143 142 144 20 init/main.c:256 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 183 [ panic_later ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 144 143 145 20 init/main.c:256 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 225)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7837 [0x1e9d])
            (nil))))
;; End of basic block 20 -> ( 33 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 182 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 182 183


;; Succ edge  33 [78.4%] 
;; Succ edge  21 [21.6%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u185(11){ }u186(13){ }u187(25){ }u188(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 182 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 182 183
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [21.6%]  (fallthru)
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 21 init/main.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 155 [ val ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 147 146 148 21 init/main.c:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 182 183
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 182 183


;; Succ edge  22 [85.0%]  (fallthru)
;; Succ edge  23 [15.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 182 183
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 182 183
;; lr  def 	 146 206 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 182 183
;; live  gen 	 146 206 207 208 209
;; live  kill	

;; Pred edge  21 [85.0%]  (fallthru)
(note 148 147 149 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 164 22 init/main.c:259 (set (reg/v:SI 146 [ i ])
        (reg/f:SI 183 [ panic_later ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183 [ panic_later ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 164 149 171 22 init/main.c:264 (set (reg/f:SI 207)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(insn 171 164 185 22 init/main.c:267 (set (reg:SI 209)
        (minus:SI (reg/v/f:SI 155 [ val ])
            (reg/v/f:SI 154 [ param ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v/f:SI 155 [ val ])
        (nil)))

(insn 185 171 165 22 init/main.c:262 discrim 1 (set (reg/f:SI 206)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 136 [0x88])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 136 [0x88])))
        (nil)))

(insn 165 185 265 22 init/main.c:264 (set (reg/f:SI 208)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11ae3740>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 265 165 266 22 (set (pc)
        (label_ref 182)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 206 207 208 209


;; Succ edge  28 [100.0%] 

(barrier 266 265 152)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 155 182
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 182
;; lr  def 	 135 136 145 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 155 182
;; live  gen 	 135 136 145 210 211
;; live  kill	

;; Pred edge  21 [15.0%] 
(code_label 152 266 153 23 85 "" [1 uses])

(note 153 152 156 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 156 153 155 23 init/main.c:259 (set (reg/f:SI 136 [ panic_later_lsm.842 ])
        (reg/v/f:SI 155 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 155 [ val ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 155 156 157 23 init/main.c:259 (set (reg/v/f:SI 135 [ param.868 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 84 [0x54]))) [0 panic_param+0 S4 A32])
            (nil))))

(insn 157 155 213 23 init/main.c:259 (set (reg/v:SI 145 [ i ])
        (reg/f:SI 136 [ panic_later_lsm.842 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 213 157 245 23 init/main.c:274 discrim 1 (set (reg/f:SI 210)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 245 213 267 23 init/main.c:277 (set (reg/f:SI 211)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11ae3780>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 267 245 268 23 (set (pc)
        (label_ref 210)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 145 154 210 211
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 210 211


;; Succ edge  31 [100.0%] 

(barrier 268 267 188)

;; Start of basic block ( 28) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [95.5%] 
(code_label 188 268 160 24 90 "" [1 uses])

(note 160 188 161 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 24 init/main.c:263 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 162 161 163 24 init/main.c:263 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 169)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209


;; Succ edge  25 [28.0%]  (fallthru)
;; Succ edge  26 [72.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 207 208
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; live  gen 	
;; live  kill	

;; Pred edge  24 [28.0%]  (fallthru)
(note 163 162 166 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 166 163 168 25 init/main.c:264 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 207)
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
        (reg/f:SI 208)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11ae3740>)
        (nil)))

(insn 168 166 169 25 init/main.c:265 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 207)
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])
        (reg/v/f:SI 154 [ param ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 154 209
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  24 [72.0%] 
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 169 168 170 26 88 "" [1 uses])

(note 170 169 176 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 176 170 173 26 NOTE_INSN_DELETED)

(insn 173 176 172 26 init/main.c:267 (set (reg:SI 1 r1)
        (reg/f:SI 148 [ D.37792 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ D.37792 ])
        (nil)))

(insn 172 173 174 26 init/main.c:267 (set (reg:SI 0 r0)
        (reg/v/f:SI 154 [ param ])) 167 {*arm_movsi_insn} (nil))

(insn 174 172 175 26 init/main.c:267 (set (reg:SI 2 r2)
        (reg:SI 209)) 167 {*arm_movsi_insn} (nil))

(call_insn/i 175 174 178 26 init/main.c:267 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strncmp") [flags 0x41] <function_decl 0x51157e80 strncmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 178 175 179 26 init/main.c:267 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 179 178 180 26 init/main.c:267 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 26 -> ( 29 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 206 207 208 209


;; Succ edge  29 [4.5%]  (loop_exit)
;; Succ edge  27 [95.5%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; live  gen 	 146
;; live  kill	

;; Pred edge  26 [95.5%]  (fallthru)
(note 180 179 181 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 181 180 182 27 init/main.c:262 (set (reg/v:SI 146 [ i ])
        (plus:SI (reg/v:SI 146 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 206 207 208 209


;; Succ edge  28 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 27 22) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 206
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154 206 207 208 209
;; live  gen 	 24 [cc] 148
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru,dfs_back)
;; Pred edge  22 [100.0%] 
(code_label 182 181 183 28 86 "" [1 uses])

(note 183 182 187 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 187 183 189 28 init/main.c:262 discrim 1 (set (reg/f:SI 148 [ D.37792 ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 146 [ i ])
                    (const_int 4 [0x4]))
                (reg/f:SI 206)) [0 envp_init S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 189 187 190 28 init/main.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 148 [ D.37792 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 190 189 191 28 init/main.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 28 -> ( 24 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 154 206 207 208 209


;; Succ edge  24 [95.5%] 
;; Succ edge  29 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 26 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154
;; lr  def 	 193 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 154
;; live  gen 	 193 196
;; live  kill	

;; Pred edge  26 [4.5%]  (loop_exit)
;; Pred edge  28 [4.5%]  (fallthru,loop_exit)
(code_label 191 190 192 29 89 "" [1 uses])

(note 192 191 195 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 195 192 193 29 NOTE_INSN_DELETED)

(insn 193 195 196 29 init/main.c:270 (set (reg/f:SI 193)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 196 193 198 29 init/main.c:270 (set (reg:SI 196)
        (plus:SI (mult:SI (reg/v:SI 146 [ i ])
                (const_int 4 [0x4]))
            (reg/f:SI 193))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 193)
        (expr_list:REG_DEAD (reg/v:SI 146 [ i ])
            (nil))))

(insn 198 196 269 29 init/main.c:270 (set (mem/s/f/j:SI (plus:SI (reg:SI 196)
                (const_int 136 [0x88])) [0 envp_init S4 A32])
        (reg/v/f:SI 154 [ param ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_DEAD (reg/v/f:SI 154 [ param ])
            (nil))))

(jump_insn 269 198 270 29 (set (pc)
        (label_ref 225)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  33 [100.0%] 

(barrier 270 269 212)

;; Start of basic block ( 31) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u259(11){ }u260(13){ }u261(25){ }u262(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 145 154 210 211
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 211
;; lr  def 	 24 [cc] 135 136 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 210 211
;; live  gen 	 24 [cc] 135 136 145
;; live  kill	

;; Pred edge  31 [97.1%] 
(code_label 212 270 201 30 92 "" [1 uses])

(note 201 212 243 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 243 201 209 30 init/main.c:277 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(insn 209 243 247 30 init/main.c:274 (set (reg/v:SI 145 [ i ])
        (plus:SI (reg/v:SI 145 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 247 209 244 30 init/main.c:277 (set (reg/f:SI 136 [ panic_later_lsm.842 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 136 [ panic_later_lsm.842 ])
            (reg/f:SI 211))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 244 247 210 30 init/main.c:277 (set (reg/v/f:SI 135 [ param.868 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v/f:SI 135 [ param.868 ])
            (reg/v/f:SI 154 [ param ]))) 240 {*movsicc_insn} (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 145 154 210 211
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 210 211


;; Succ edge  31 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 30 23) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 145 154 210 211
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 210
;; lr  def 	 24 [cc] 198 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 210 211
;; live  gen 	 24 [cc] 198 200
;; live  kill	

;; Pred edge  30 [100.0%]  (fallthru,dfs_back)
;; Pred edge  23 [100.0%] 
(code_label 210 244 211 31 87 "" [1 uses])

(note 211 210 215 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 215 211 254 31 init/main.c:233 (set (reg/f:SI 200)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 145 [ i ])
                    (const_int 4 [0x4]))
                (reg/f:SI 210)) [0 argv_init S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 254 215 216 31 init/main.c:274 discrim 1 (set (reg/f:SI 198)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 216 254 217 31 init/main.c:233 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 200)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 200)
        (nil)))

(jump_insn 217 216 218 31 init/main.c:233 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9706 [0x25ea])
            (nil))))
;; End of basic block 31 -> ( 30 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 145 154 198 210 211
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 198 210 211


;; Succ edge  30 [97.1%] 
;; Succ edge  32 [2.9%]  (fallthru,loop_exit)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u281(11){ }u282(13){ }u283(25){ }u284(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 145 154 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 198
;; lr  def 	 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 145 154 198
;; live  gen 	 201
;; live  kill	

;; Pred edge  31 [2.9%]  (fallthru,loop_exit)
(note 218 217 219 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 224 32 init/main.c:233 (set (reg/f:SI 201)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 224 219 222 32 init/main.c:280 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 145 [ i ])
                    (const_int 4 [0x4]))
                (reg/f:SI 198)) [0 argv_init S4 A32])
        (reg/v/f:SI 154 [ param ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_DEAD (reg/v/f:SI 154 [ param ])
            (expr_list:REG_DEAD (reg/v:SI 145 [ i ])
                (nil)))))

(insn 222 224 220 32 init/main.c:233 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 201)
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])
        (reg/v/f:SI 135 [ param.868 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_DEAD (reg/v/f:SI 135 [ param.868 ])
            (nil))))

(insn 220 222 225 32 init/main.c:233 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 201)
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])
        (reg/f:SI 136 [ panic_later_lsm.842 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ panic_later_lsm.842 ])
        (nil)))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 16 19 20 32 18 13 14 29) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u292(11){ }u293(13){ }u294(25){ }u295(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  16 [35.7%] 
;; Pred edge  19 [39.0%] 
;; Pred edge  20 [78.4%] 
;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  18 [10.1%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [3.0%]  (loop_exit)
;; Pred edge  29 [100.0%] 
(code_label 225 220 226 33 82 "" [7 uses])

(note 226 225 231 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 231 226 237 33 init/main.c:283 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 237 231 271 33 init/main.c:283 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 33 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 271 237 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_early_param (parse_early_param)[0:2056] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 8 -- before reload
;;   ======================================================

;;	  0-->     5 r133=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  3-->     6 r134=[r133+0x14]                  :cortex_a8_load_store_1
;;	  5-->     7 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  7-->     8 pc={(cc!=0x0)?L31:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 5
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 15 to 25 -- before reload
;;   ======================================================

;;	  0-->    16 r1=const(`*.LANCHOR2'+0x418)      :cortex_a8_load_store_1
;;	  0-->    17 r2=0x400                          :cortex_a8_default
;;	  1-->    15 r0=r133+0x18                      :cortex_a8_default
;;	  2-->    18 r0=call [`strlcpy']               :cortex_a8_issue_branch
;;	  2-->    21 r0=r133+0x18                      :cortex_a8_default
;;	  3-->    22 call [`parse_early_options']      :cortex_a8_issue_branch
;;	  3-->    24 r143=0x1                          :cortex_a8_default
;;	  4-->    25 [r133+0x14]=r143                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 15
;;   new tail = 25


;; Procedure interblock/speculative motions == 0/0 




parse_early_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,2u} r1={4d,1u} r2={4d,1u} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,4u} r134={1d,1u} r143={1d,1u} 
;;    total ref usage 281{252d,29u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 init/main.c:419 (set (reg/f:SI 133)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 init/main.c:419 (set (reg:SI 134 [ done ])
        (mem/c/i:SI (plus:SI (reg/f:SI 133)
                (const_int 20 [0x14])) [0 done+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                    (const_int 20 [0x14]))) [0 done+0 S4 A32])
        (nil)))

(insn 7 6 8 2 init/main.c:419 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ done ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ done ])
        (nil)))

(jump_insn 8 7 9 2 init/main.c:419 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 143
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 9 17 3 init/main.c:423 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(insn 17 16 15 3 init/main.c:423 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(insn 15 17 18 3 init/main.c:423 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 133)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(call_insn 18 15 21 3 init/main.c:423 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 18 22 3 init/main.c:424 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 133)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(call_insn 22 21 24 3 init/main.c:424 (parallel [
            (call (mem:SI (symbol_ref:SI ("parse_early_options") [flags 0x3] <function_decl 0x10a57480 parse_early_options>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 24 22 25 3 init/main.c:425 (set (reg:SI 143)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 31 3 init/main.c:425 (set (mem/c/i:SI (plus:SI (reg/f:SI 133)
                (const_int 20 [0x14])) [0 done+0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 133)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 31 25 34 4 99 "" [1 uses])

(note 34 31 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 35 34 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function start_kernel (start_kernel)[0:2061] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 17 (  1.1)


start_kernel

Dataflow summary:
def_info->table_size = 8530, use_info->table_size = 255
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={95d,26u} r1={86d,13u} r2={77d,4u} r3={74d,1u} r11={1d,14u} r12={73d} r13={1d,88u} r14={73d,1u} r15={72d} r16={72d} r17={72d} r18={72d} r19={72d} r20={72d} r21={72d} r22={72d} r23={72d} r24={84d,7u} r25={1d,16u} r26={1d,13u} r27={72d} r28={72d} r29={72d} r30={72d} r31={72d} r32={72d} r33={72d} r34={72d} r35={72d} r36={72d} r37={72d} r38={72d} r39={72d} r40={72d} r41={72d} r42={72d} r43={72d} r44={72d} r45={72d} r46={72d} r47={72d} r48={72d} r49={72d} r50={72d} r51={72d} r52={72d} r53={72d} r54={72d} r55={72d} r56={72d} r57={72d} r58={72d} r59={72d} r60={72d} r61={72d} r62={72d} r63={72d} r64={72d} r65={72d} r66={72d} r67={72d} r68={72d} r69={72d} r70={72d} r71={72d} r72={72d} r73={72d} r74={72d} r75={72d} r76={72d} r77={72d} r78={72d} r79={72d} r80={72d} r81={72d} r82={72d} r83={72d} r84={72d} r85={72d} r86={72d} r87={72d} r88={72d} r89={72d} r90={72d} r91={72d} r92={72d} r93={72d} r94={72d} r95={72d} r96={72d} r97={72d} r98={72d} r99={72d} r100={72d} r101={72d} r102={72d} r103={72d} r104={72d} r105={72d} r106={72d} r107={72d} r108={72d} r109={72d} r110={72d} r111={72d} r112={72d} r113={72d} r114={72d} r115={72d} r116={72d} r117={72d} r118={72d} r119={72d} r120={72d} r121={72d} r122={72d} r123={72d} r124={72d} r125={72d} r126={72d} r127={72d} r139={1d,4u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,1u} r150={1d,5u} r152={2d,4u} r162={1d,5u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r183={1d,1u} r185={1d,1u} r186={1d,1u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,2u} r198={1d,2u} r199={1d,1u} r200={1d,2u} r201={1d,1u} r204={1d,2u} r205={1d,1u} r209={1d,1u} r210={1d,2u} 
;;    total ref usage 8757{8518d,239u,0e} in 170{98 regular + 72 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d94(0){ }d180(1){ }d257(2){ }d331(3){ }d332(11){ }d405(12){ }d406(13){ }d479(14){ }d1212(25){ }d1213(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 148 149 150 152 162 177 178 179 183 185 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 139 142 148 149 150 152 162 177 178 179 183 185 186
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 141
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 191 192 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 191 192 194 195 196
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196

( 6 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]

( 6 )->[8]->( 9 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 198
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198

( 8 )->[9]->( 10 12 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
;; live  gen 	 24 [cc] 199 200
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 144 201 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
;; live  gen 	 24 [cc] 144 201 204 205
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 8 9 10 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 143 209
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 12 13 )->[14]->( 1 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 210
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 14 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u251(11){ }u252(13){ }u253(14){ }u254(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 126 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 99 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 72 to worklist
  Adding insn 65 to worklist
  Adding insn 62 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 43 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 131 to worklist
  Adding insn 130 to worklist
  Adding insn 151 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 141 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
  Adding insn 155 to worklist
  Adding insn 171 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 162 to worklist
  Adding insn 161 to worklist
  Adding insn 176 to worklist
  Adding insn 183 to worklist
  Adding insn 188 to worklist
  Adding insn 198 to worklist
  Adding insn 207 to worklist
  Adding insn 204 to worklist
  Adding insn 214 to worklist
  Adding insn 210 to worklist
  Adding insn 216 to worklist
  Adding insn 238 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 229 to worklist
  Adding insn 228 to worklist
  Adding insn 227 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
Finished finding needed instructions:
processing block 7 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 175 to worklist
  Adding insn 174 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 231 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
  Adding insn 213 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 193 to worklist
  Adding insn 190 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
  Adding insn 187 to worklist
  Adding insn 186 to worklist
  Adding insn 185 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
  Adding insn 182 to worklist
  Adding insn 181 to worklist
  Adding insn 180 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 154 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 150 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 129 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 125 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 105 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 96 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 80 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 5 to 126 -- before reload
;;   ======================================================

;;	  0-->     5 call [`smp_setup_processor_id']   :cortex_a8_issue_branch
;;	  1-->     6 r0=call [`cgroup_init_early']     :cortex_a8_issue_branch
;;	  2-->     7 {asm_operands;clobber cc;clobber [:nothing
;;	  3-->     8 r149=`*.LANCHOR3'                 :cortex_a8_load_store_1
;;	  3-->   246 r152=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  4-->   247 r152=r152&0xffffffffffffffc0      :cortex_a8_default
;;	  4-->     9 r150=0x1                          :cortex_a8_default
;;	  5-->    52 r162=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  6-->    11 [r149+0x4]=r150#0                 :cortex_a8_load_store_1
;;	  6-->    12 call [`tick_init']                :cortex_a8_issue_branch
;;	  7-->    16 r139=[r152+0x14]                  :cortex_a8_load_store_1
;;	  7-->    18 r1=r150                           :cortex_a8_default
;;	  9-->    17 r0=r139                           :cortex_a8_default
;;	 10-->    19 call [`set_cpu_online']           :cortex_a8_issue_branch
;;	 10-->    20 r0=r139                           :cortex_a8_default
;;	 11-->    21 r1=r150                           :cortex_a8_default
;;	 12-->    22 call [`set_cpu_active']           :cortex_a8_issue_branch
;;	 12-->    23 r0=r139                           :cortex_a8_default
;;	 13-->    24 r1=r150                           :cortex_a8_default
;;	 14-->    25 call [`set_cpu_present']          :cortex_a8_issue_branch
;;	 14-->    26 r0=r139                           :cortex_a8_default
;;	 15-->    27 r1=r150                           :cortex_a8_default
;;	 16-->    28 call [`set_cpu_possible']         :cortex_a8_issue_branch
;;	 17-->    29 call [`page_address_init']        :cortex_a8_issue_branch
;;	 17-->    33 r1=`linux_banner'                 :cortex_a8_load_store_1
;;	 18-->    32 r0=`*.LC21'                       :cortex_a8_load_store_1
;;	 19-->    34 r0=call [`printk']                :cortex_a8_issue_branch
;;	 19-->    36 r0=sfp-0x4                        :cortex_a8_default
;;	 20-->    37 call [`setup_arch']               :cortex_a8_issue_branch
;;	 20-->    42 r0=const(`*.LANCHOR2'+0x418)      :cortex_a8_load_store_1
;;	 21-->    43 r0=call [`strlen']                :cortex_a8_issue_branch
;;	 21-->    48 r1=0x20                           :cortex_a8_default
;;	 22-->    49 r2=0x3fffffff                     :cortex_a8_default
;;	 22-->    38 r148=[sfp-0x4]                    :cortex_a8_load_store_1
;;	 53-->    47 r0=r0+0x1                         :cortex_a8_default
;;	 54-->    50 r0=call [`__alloc_bootmem']       :cortex_a8_issue_branch
;;	 86-->    53 [r162+0x58]=r0                    :cortex_a8_load_store_1
;;	 86-->    54 r0=r148                           :cortex_a8_default
;;	 87-->    55 r0=call [`strlen']                :cortex_a8_issue_branch
;;	 87-->    61 r2=0x3fffffff                     :cortex_a8_default
;;	 88-->    60 r1=0x20                           :cortex_a8_default
;;	119-->    59 r0=r0+0x1                         :cortex_a8_default
;;	120-->    62 r0=call [`__alloc_bootmem']       :cortex_a8_issue_branch
;;	120-->    71 r1=const(`*.LANCHOR2'+0x418)      :cortex_a8_load_store_1
;;	152-->    65 [r162+0x5c]=r0                    :cortex_a8_load_store_1
;;	153-->    70 r0=[r162+0x58]                    :cortex_a8_load_store_1
;;	154-->    72 r0=call [`strcpy']                :cortex_a8_issue_branch
;;	154-->    75 r1=r148                           :cortex_a8_default
;;	155-->    74 r0=[r162+0x5c]                    :cortex_a8_load_store_1
;;	156-->    76 r0=call [`strcpy']                :cortex_a8_issue_branch
;;	157-->    77 call [`setup_nr_cpu_ids']         :cortex_a8_issue_branch
;;	158-->    78 call [`setup_per_cpu_areas']      :cortex_a8_issue_branch
;;	159-->    79 call [`smp_prepare_boot_cpu']     :cortex_a8_issue_branch
;;	159-->    80 r0=0x0                            :cortex_a8_default
;;	160-->    81 call [`build_all_zonelists']      :cortex_a8_issue_branch
;;	161-->    82 call [`page_alloc_init']          :cortex_a8_issue_branch
;;	161-->    88 r1=const(`*.LANCHOR2'+0x418)      :cortex_a8_load_store_1
;;	162-->    87 r0=`*.LC22'                       :cortex_a8_load_store_1
;;	163-->    89 r0=call [`printk']                :cortex_a8_issue_branch
;;	164-->    90 call [`parse_early_param']        :cortex_a8_issue_branch
;;	164-->    93 r177=`__start___param'            :cortex_a8_load_store_1
;;	165-->    94 r179=`__stop___param'             :cortex_a8_load_store_1
;;	166-->    98 r183=`unknown_bootoption'         :cortex_a8_load_store_1
;;	166-->   102 r2=r177                           :cortex_a8_default
;;	167-->    96 r178=r179-r177                    :cortex_a8_default
;;	167-->   101 r1=[r162+0x5c]                    :cortex_a8_load_store_1
;;	168-->   100 r0=`*.LC23'                       :cortex_a8_load_store_1
;;	169-->   103 r3=r178>>0x4                      :cortex_a8_default
;;	169-->    99 [sp]=r183                         :cortex_a8_load_store_1
;;	170-->   104 r0=call [`parse_args']            :cortex_a8_issue_branch
;;	170-->   105 r0=0x0                            :cortex_a8_default
;;	171-->   106 call [`setup_log_buf']            :cortex_a8_issue_branch
;;	172-->   107 call [`pidhash_init']             :cortex_a8_issue_branch
;;	173-->   108 call [`vfs_caches_init_early']    :cortex_a8_issue_branch
;;	174-->   109 call [`sort_main_extable']        :cortex_a8_issue_branch
;;	175-->   110 call [`trap_init']                :cortex_a8_issue_branch
;;	176-->   111 call [`mem_init']                 :cortex_a8_issue_branch
;;	177-->   112 call [`kmem_cache_init']          :cortex_a8_issue_branch
;;	178-->   113 call [`percpu_init_late']         :cortex_a8_issue_branch
;;	179-->   114 call [`vmalloc_init']             :cortex_a8_issue_branch
;;	180-->   115 call [`sched_init']               :cortex_a8_issue_branch
;;	180-->   119 r185=[r152+0x4]                   :cortex_a8_load_store_1
;;	182-->   120 r186=r185+0x1                     :cortex_a8_default
;;	182-->   121 [r152+0x4]=r186                   :cortex_a8_load_store_1
;;	183-->   122 {asm_operands;clobber [scratch];} :nothing
;;	184-->   123 {r142=asm_operands;clobber cc;clob:nothing
;;	185-->   125 cc=cmp(zxt(r142,0x1,0x7),0x0)     :cortex_a8_default
;;	187-->   126 pc={(cc!=0x0)?L132:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 187
;;   new head = 5
;;   new tail = 126

;;   ======================================================
;;   -- basic block 3 from 129 to 131 -- before reload
;;   ======================================================

;;	  0-->   129 r0=`*.LC24'                       :cortex_a8_load_store_1
;;	  1-->   130 r0=call [`printk']                :cortex_a8_issue_branch
;;	  2-->   131 {asm_operands;clobber cc;clobber [:nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 129
;;   new tail = 131

;;   ======================================================
;;   -- basic block 4 from 134 to 151 -- before reload
;;   ======================================================

;;	  0-->   134 call [`idr_init_cache']           :cortex_a8_issue_branch
;;	  1-->   135 call [`perf_event_init']          :cortex_a8_issue_branch
;;	  2-->   136 call [`rcu_init']                 :cortex_a8_issue_branch
;;	  3-->   137 call [`radix_tree_init']          :cortex_a8_issue_branch
;;	  4-->   138 r0=call [`early_irq_init']        :cortex_a8_issue_branch
;;	  5-->   139 call [`init_IRQ']                 :cortex_a8_issue_branch
;;	  6-->   140 call [`prio_tree_init']           :cortex_a8_issue_branch
;;	  7-->   141 call [`init_timers']              :cortex_a8_issue_branch
;;	  8-->   142 call [`hrtimers_init']            :cortex_a8_issue_branch
;;	  9-->   143 call [`softirq_init']             :cortex_a8_issue_branch
;;	 10-->   144 call [`timekeeping_init']         :cortex_a8_issue_branch
;;	 11-->   145 call [`time_init']                :cortex_a8_issue_branch
;;	 12-->   146 r0=call [`profile_init']          :cortex_a8_issue_branch
;;	 13-->   147 call [`call_function_init']       :cortex_a8_issue_branch
;;	 14-->   148 {r141=asm_operands;clobber cc;clob:nothing
;;	 15-->   150 cc=cmp(zxt(r141,0x1,0x7),0x0)     :cortex_a8_default
;;	 17-->   151 pc={(cc!=0x0)?L156:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 17
;;   new head = 134
;;   new tail = 151

;;   ======================================================
;;   -- basic block 5 from 154 to 155 -- before reload
;;   ======================================================

;;	  0-->   154 r0=`*.LC25'                       :cortex_a8_load_store_1
;;	  1-->   155 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 154
;;   new tail = 155

;;   ======================================================
;;   -- basic block 6 from 158 to 171 -- before reload
;;   ======================================================

;;	  0-->   158 r191=`*.LANCHOR3'                 :cortex_a8_load_store_1
;;	  0-->   159 r192=0x0                          :cortex_a8_default
;;	  3-->   161 [r191+0x4]=r192#0                 :cortex_a8_load_store_1
;;	  4-->   162 {asm_operands;clobber cc;clobber [:nothing
;;	  5-->   163 r194=`gfp_allowed_mask'           :cortex_a8_load_store_1
;;	  5-->   164 r195=0xffffff                     :cortex_a8_default
;;	  8-->   165 [r194]=r195                       :cortex_a8_load_store_1
;;	  8-->   166 call [`kmem_cache_init_late']     :cortex_a8_issue_branch
;;	  9-->   167 call [`console_init']             :cortex_a8_issue_branch
;;	  9-->   168 r196=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	 12-->   169 r147=[r196+0x50]                  :cortex_a8_load_store_1
;;	 14-->   170 cc=cmp(r147,0x0)                  :cortex_a8_default
;;	 16-->   171 pc={(cc==0x0)?L178:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 16
;;   new head = 158
;;   new tail = 171

;;   ======================================================
;;   -- basic block 7 from 174 to 176 -- before reload
;;   ======================================================

;;	  0-->   174 r0=r147                           :cortex_a8_default
;;	  0-->   175 r1=[r196+0x54]                    :cortex_a8_load_store_1
;;	  1-->   176 call [`panic']                    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 174
;;   new tail = 176

;;   ======================================================
;;   -- basic block 8 from 180 to 183 -- before reload
;;   ======================================================

;;	  0-->   180 r198=`initrd_start'               :cortex_a8_load_store_1
;;	  3-->   181 r146=[r198]                       :cortex_a8_load_store_1
;;	  5-->   182 cc=cmp(r146,0x0)                  :cortex_a8_default
;;	  7-->   183 pc={(cc==0x0)?L208:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 180
;;   new tail = 183

;;   ======================================================
;;   -- basic block 9 from 185 to 188 -- before reload
;;   ======================================================

;;	  0-->   185 r199=`initrd_below_start_ok'      :cortex_a8_load_store_1
;;	  3-->   186 r200=[r199]                       :cortex_a8_load_store_1
;;	  5-->   187 cc=cmp(r200,0x0)                  :cortex_a8_default
;;	  7-->   188 pc={(cc!=0x0)?L208:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 185
;;   new tail = 188

;;   ======================================================
;;   -- basic block 10 from 190 to 198 -- before reload
;;   ======================================================

;;	  0-->   195 r205=`min_low_pfn'                :cortex_a8_load_store_1
;;	  0-->   190 r201=r146+0x40000000              :cortex_a8_default
;;	  2-->   193 r204=r201 0>>0xc                  :cortex_a8_default
;;	  3-->   196 r144=[r205]                       :cortex_a8_load_store_1
;;	  5-->   197 cc=cmp(r204,r144)                 :cortex_a8_default
;;	  7-->   198 pc={(geu(cc,0x0))?L208:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 190
;;   new tail = 198

;;   ======================================================
;;   -- basic block 11 from 201 to 207 -- before reload
;;   ======================================================

;;	  0-->   202 r1=r204                           :cortex_a8_default
;;	  0-->   203 r2=r144                           :cortex_a8_default
;;	  1-->   201 r0=`*.LC26'                       :cortex_a8_load_store_1
;;	  2-->   204 r0=call [`printk']                :cortex_a8_issue_branch
;;	  2-->   207 [r198]=r200                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 2
;;   new head = 201
;;   new tail = 207

;;   ======================================================
;;   -- basic block 12 from 210 to 214 -- before reload
;;   ======================================================

;;	  0-->   210 call [`setup_per_cpu_pageset']    :cortex_a8_issue_branch
;;	  0-->   211 r209=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	  3-->   212 r143=[r209+0x818]                 :cortex_a8_load_store_1
;;	  5-->   213 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  7-->   214 pc={(cc==0x0)?L217:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 210
;;   new tail = 214

;;   ======================================================
;;   -- basic block 13 from 216 to 216 -- before reload
;;   ======================================================

;;	  0-->   216 call [r143]                       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 216
;;   new tail = 216

;;   ======================================================
;;   -- basic block 14 from 219 to 238 -- before reload
;;   ======================================================

;;	  0-->   225 r210=`totalram_pages'             :cortex_a8_load_store_1
;;	  0-->   219 call [`sched_clock_init']         :cortex_a8_issue_branch
;;	  1-->   220 call [`calibrate_delay']          :cortex_a8_issue_branch
;;	  2-->   221 call [`pidmap_init']              :cortex_a8_issue_branch
;;	  3-->   222 call [`anon_vma_init']            :cortex_a8_issue_branch
;;	  4-->   223 call [`thread_info_cache_init']   :cortex_a8_issue_branch
;;	  5-->   224 call [`cred_init']                :cortex_a8_issue_branch
;;	  5-->   226 r0=[r210]                         :cortex_a8_load_store_1
;;	  6-->   227 call [`fork_init']                :cortex_a8_issue_branch
;;	  7-->   228 call [`proc_caches_init']         :cortex_a8_issue_branch
;;	  8-->   229 call [`buffer_init']              :cortex_a8_issue_branch
;;	  8-->   231 r0=[r210]                         :cortex_a8_load_store_1
;;	  9-->   232 call [`vfs_caches_init']          :cortex_a8_issue_branch
;;	 10-->   233 call [`signals_init']             :cortex_a8_issue_branch
;;	 11-->   234 call [`page_writeback_init']      :cortex_a8_issue_branch
;;	 12-->   235 call [`proc_root_init']           :cortex_a8_issue_branch
;;	 13-->   236 r0=call [`cgroup_init']           :cortex_a8_issue_branch
;;	 14-->   237 call [`check_writebuffer_bugs']   :cortex_a8_issue_branch
;;	 15-->   238 call [`rest_init']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 15
;;   new head = 219
;;   new tail = 238


;; Procedure interblock/speculative motions == 0/0 




start_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={95d,26u} r1={86d,13u} r2={77d,4u} r3={74d,1u} r11={1d,14u} r12={73d} r13={1d,88u} r14={73d,1u} r15={72d} r16={72d} r17={72d} r18={72d} r19={72d} r20={72d} r21={72d} r22={72d} r23={72d} r24={84d,7u} r25={1d,16u} r26={1d,13u} r27={72d} r28={72d} r29={72d} r30={72d} r31={72d} r32={72d} r33={72d} r34={72d} r35={72d} r36={72d} r37={72d} r38={72d} r39={72d} r40={72d} r41={72d} r42={72d} r43={72d} r44={72d} r45={72d} r46={72d} r47={72d} r48={72d} r49={72d} r50={72d} r51={72d} r52={72d} r53={72d} r54={72d} r55={72d} r56={72d} r57={72d} r58={72d} r59={72d} r60={72d} r61={72d} r62={72d} r63={72d} r64={72d} r65={72d} r66={72d} r67={72d} r68={72d} r69={72d} r70={72d} r71={72d} r72={72d} r73={72d} r74={72d} r75={72d} r76={72d} r77={72d} r78={72d} r79={72d} r80={72d} r81={72d} r82={72d} r83={72d} r84={72d} r85={72d} r86={72d} r87={72d} r88={72d} r89={72d} r90={72d} r91={72d} r92={72d} r93={72d} r94={72d} r95={72d} r96={72d} r97={72d} r98={72d} r99={72d} r100={72d} r101={72d} r102={72d} r103={72d} r104={72d} r105={72d} r106={72d} r107={72d} r108={72d} r109={72d} r110={72d} r111={72d} r112={72d} r113={72d} r114={72d} r115={72d} r116={72d} r117={72d} r118={72d} r119={72d} r120={72d} r121={72d} r122={72d} r123={72d} r124={72d} r125={72d} r126={72d} r127={72d} r139={1d,4u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={1d,1u} r150={1d,5u} r152={2d,4u} r162={1d,5u} r177={1d,2u} r178={1d,1u} r179={1d,1u} r183={1d,1u} r185={1d,1u} r186={1d,1u} r191={1d,1u} r192={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,2u} r198={1d,2u} r199={1d,1u} r200={1d,2u} r201={1d,1u} r204={1d,2u} r205={1d,1u} r209={1d,1u} r210={1d,2u} 
;;    total ref usage 8757{8518d,239u,0e} in 170{98 regular + 72 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 148 149 150 152 162 177 178 179 183 185 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 139 142 148 149 150 152 162 177 178 179 183 185 186
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 14 2 NOTE_INSN_FUNCTION_BEG)

(note 14 2 35 2 NOTE_INSN_DELETED)

(note 35 14 44 2 NOTE_INSN_DELETED)

(note 44 35 46 2 NOTE_INSN_DELETED)

(note 46 44 51 2 NOTE_INSN_DELETED)

(note 51 46 56 2 NOTE_INSN_DELETED)

(note 56 51 58 2 NOTE_INSN_DELETED)

(note 58 56 63 2 NOTE_INSN_DELETED)

(note 63 58 97 2 NOTE_INSN_DELETED)

(note 97 63 124 2 NOTE_INSN_DELETED)

(note 124 97 5 2 NOTE_INSN_DELETED)

(call_insn 5 124 6 2 init/main.c:472 (parallel [
            (call (mem:SI (symbol_ref/i:SI ("smp_setup_processor_id") [flags 0x1] <function_decl 0x10ca2280 smp_setup_processor_id>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 6 5 7 2 init/main.c:486 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cgroup_init_early") [flags 0x41] <function_decl 0x11385c00 cgroup_init_early>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105913)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 8 7 246 2 init/main.c:489 (set (reg/f:SI 149)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 246 8 247 2 init/main.c:434 (set (reg:SI 152)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 247 246 9 2 init/main.c:434 (set (reg:SI 152)
        (and:SI (reg:SI 152)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 247 52 2 init/main.c:489 (set (reg:SI 150)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 52 9 11 2 init/main.c:341 (set (reg/f:SI 162)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 11 52 12 2 init/main.c:489 (set (mem/c/i:QI (plus:SI (reg/f:SI 149)
                (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])
        (subreg:QI (reg:SI 150) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(call_insn 12 11 16 2 init/main.c:495 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_init") [flags 0x41] <function_decl 0x1185d480 tick_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 16 12 18 2 init/main.c:434 (set (reg:SI 139 [ D.38262 ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 16 17 2 init/main.c:436 (set (reg:SI 1 r1)
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 17 18 19 2 init/main.c:436 (set (reg:SI 0 r0)
        (reg:SI 139 [ D.38262 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 17 20 2 init/main.c:436 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 19 21 2 init/main.c:437 (set (reg:SI 0 r0)
        (reg:SI 139 [ D.38262 ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 init/main.c:437 (set (reg:SI 1 r1)
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(call_insn 22 21 23 2 init/main.c:437 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_active") [flags 0x41] <function_decl 0x10c85680 set_cpu_active>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 23 22 24 2 init/main.c:438 (set (reg:SI 0 r0)
        (reg:SI 139 [ D.38262 ])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 2 init/main.c:438 (set (reg:SI 1 r1)
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(call_insn 25 24 26 2 init/main.c:438 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_present") [flags 0x41] <function_decl 0x10c85580 set_cpu_present>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 2 init/main.c:439 (set (reg:SI 0 r0)
        (reg:SI 139 [ D.38262 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.38262 ])
        (nil)))

(insn 27 26 28 2 init/main.c:439 (set (reg:SI 1 r1)
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(call_insn 28 27 29 2 init/main.c:439 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_possible") [flags 0x41] <function_decl 0x10c85500 set_cpu_possible>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 29 28 33 2 init/main.c:497 (parallel [
            (call (mem:SI (symbol_ref:SI ("page_address_init") [flags 0x41] <function_decl 0x111b9a00 page_address_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 33 29 32 2 init/main.c:498 (set (reg:SI 1 r1)
        (symbol_ref:SI ("linux_banner") [flags 0xc0] <var_decl 0x10a4fe40 linux_banner>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("linux_banner") [flags 0xc0] <var_decl 0x10a4fe40 linux_banner>)
        (nil)))

(insn 32 33 34 2 init/main.c:498 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11aee220>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11aee220>)
        (nil)))

(call_insn 34 32 36 2 init/main.c:498 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 36 34 37 2 init/main.c:499 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(call_insn 37 36 42 2 init/main.c:499 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_arch") [flags 0x41] <function_decl 0x10a49a80 setup_arch>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 37 43 2 init/main.c:341 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(call_insn/i 43 42 48 2 init/main.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 48 43 49 2 init/main.c:341 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 38 2 init/main.c:341 (set (reg:SI 2 r2)
        (const_int 1073741823 [0x3fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 38 49 47 2 init/main.c:502 (set (reg/f:SI 148 [ command_line.422 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 command_line+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 38 50 2 init/main.c:341 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 50 47 53 2 init/main.c:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_bootmem") [flags 0x41] <function_decl 0x114b6380 __alloc_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 53 50 54 2 init/main.c:341 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 162)
                (const_int 88 [0x58])) [0 saved_command_line+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 54 53 55 2 init/main.c:342 (set (reg:SI 0 r0)
        (reg/f:SI 148 [ command_line.422 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 55 54 61 2 init/main.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlen") [flags 0x41] <function_decl 0x51157b80 strlen>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 61 55 60 2 init/main.c:342 (set (reg:SI 2 r2)
        (const_int 1073741823 [0x3fffffff])) 167 {*arm_movsi_insn} (nil))

(insn 60 61 59 2 init/main.c:342 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 59 60 62 2 init/main.c:342 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 62 59 71 2 init/main.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_bootmem") [flags 0x41] <function_decl 0x114b6380 __alloc_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 71 62 65 2 init/main.c:343 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(insn 65 71 70 2 init/main.c:342 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 162)
                (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 70 65 72 2 init/main.c:343 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 162)
                (const_int 88 [0x58])) [0 saved_command_line+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 88 [0x58]))) [0 saved_command_line+0 S4 A32])
        (nil)))

(call_insn 72 70 75 2 init/main.c:343 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 75 72 74 2 init/main.c:344 (set (reg:SI 1 r1)
        (reg/f:SI 148 [ command_line.422 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ command_line.422 ])
        (nil)))

(insn 74 75 76 2 init/main.c:344 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 162)
                (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 92 [0x5c]))) [0 static_command_line+0 S4 A32])
        (nil)))

(call_insn 76 74 77 2 init/main.c:344 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157780 strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 77 76 78 2 init/main.c:503 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_nr_cpu_ids") [flags 0x41] <function_decl 0x10ca2100 setup_nr_cpu_ids>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 78 77 79 2 init/main.c:504 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_per_cpu_areas") [flags 0x41] <function_decl 0x10ca2880 setup_per_cpu_areas>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 79 78 80 2 init/main.c:505 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_prepare_boot_cpu") [flags 0x41] <function_decl 0x10ca2080 smp_prepare_boot_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 80 79 81 2 init/main.c:507 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 81 80 82 2 init/main.c:507 (parallel [
            (call (mem:SI (symbol_ref:SI ("build_all_zonelists") [flags 0x41] <function_decl 0x10c53300 build_all_zonelists>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 82 81 88 2 init/main.c:508 (parallel [
            (call (mem:SI (symbol_ref:SI ("page_alloc_init") [flags 0x41] <function_decl 0x10cd6a80 page_alloc_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 88 82 87 2 init/main.c:510 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                (const_int 1048 [0x418])))
        (nil)))

(insn 87 88 89 2 init/main.c:510 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11ae73c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11ae73c0>)
        (nil)))

(call_insn 89 87 90 2 init/main.c:510 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 90 89 93 2 init/main.c:511 (parallel [
            (call (mem:SI (symbol_ref:SI ("parse_early_param") [flags 0x3] <function_decl 0x10a57400 parse_early_param>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 93 90 94 2 init/main.c:512 (set (reg/f:SI 177)
        (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>)) 167 {*arm_movsi_insn} (nil))

(insn 94 93 98 2 init/main.c:512 (set (reg/f:SI 179)
        (symbol_ref:SI ("__stop___param") [flags 0xc0] <var_decl 0x11a754e0 __stop___param>)) 167 {*arm_movsi_insn} (nil))

(insn 98 94 102 2 init/main.c:512 (set (reg/f:SI 183)
        (symbol_ref:SI ("unknown_bootoption") [flags 0x3] <function_decl 0x11a52800 unknown_bootoption>)) 167 {*arm_movsi_insn} (nil))

(insn 102 98 96 2 init/main.c:512 (set (reg:SI 2 r2)
        (reg/f:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>)
            (nil))))

(insn 96 102 101 2 init/main.c:512 (set (reg:SI 178)
        (minus:SI (reg/f:SI 179)
            (reg/f:SI 177))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__stop___param") [flags 0xc0] <var_decl 0x11a754e0 __stop___param>)
                (symbol_ref:SI ("__start___param") [flags 0xc0] <var_decl 0x11a75480 __start___param>))
            (nil))))

(insn 101 96 100 2 init/main.c:512 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 162)
                (const_int 92 [0x5c])) [0 static_command_line+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 92 [0x5c]))) [0 static_command_line+0 S4 A32])
            (nil))))

(insn 100 101 103 2 init/main.c:512 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11ae4120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11ae4120>)
        (nil)))

(insn 103 100 99 2 init/main.c:512 (set (reg:SI 3 r3)
        (ashiftrt:SI (reg:SI 178)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(insn 99 103 104 2 init/main.c:512 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_EQUAL (symbol_ref:SI ("unknown_bootoption") [flags 0x3] <function_decl 0x11a52800 unknown_bootoption>)
            (nil))))

(call_insn 104 99 105 2 init/main.c:512 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("parse_args") [flags 0x41] <function_decl 0x10ddb900 parse_args>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 105 104 106 2 init/main.c:519 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 106 105 107 2 init/main.c:519 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_log_buf") [flags 0x41] <function_decl 0x10a57d00 setup_log_buf>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 107 106 108 2 init/main.c:520 (parallel [
            (call (mem:SI (symbol_ref:SI ("pidhash_init") [flags 0x41] <function_decl 0x113bf200 pidhash_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 108 107 109 2 init/main.c:521 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfs_caches_init_early") [flags 0x41] <function_decl 0x10feaa80 vfs_caches_init_early>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 109 108 110 2 init/main.c:522 (parallel [
            (call (mem:SI (symbol_ref:SI ("sort_main_extable") [flags 0x41] <function_decl 0x10e04e00 sort_main_extable>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 110 109 111 2 init/main.c:523 (parallel [
            (call (mem:SI (symbol_ref:SI ("trap_init") [flags 0x41] <function_decl 0x112b7a80 trap_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 111 110 112 2 init/main.c:460 (parallel [
            (call (mem:SI (symbol_ref:SI ("mem_init") [flags 0x41] <function_decl 0x111e0480 mem_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 112 111 113 2 init/main.c:461 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_init") [flags 0x41] <function_decl 0x10e39700 kmem_cache_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 113 112 114 2 init/main.c:462 (parallel [
            (call (mem:SI (symbol_ref:SI ("percpu_init_late") [flags 0x41] <function_decl 0x10ca2900 percpu_init_late>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 114 113 115 2 init/main.c:464 (parallel [
            (call (mem:SI (symbol_ref:SI ("vmalloc_init") [flags 0x41] <function_decl 0x115b4580 vmalloc_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 115 114 119 2 init/main.c:531 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_init") [flags 0x41] <function_decl 0x112b7280 sched_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 119 115 120 2 init/main.c:536 (set (reg:SI 185 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 2 init/main.c:536 (set (reg:SI 186)
        (plus:SI (reg:SI 185 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185 [ <variable>.preempt_count ])
        (nil)))

(insn 121 120 122 2 init/main.c:536 (set (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_DEAD (reg:SI 152)
            (nil))))

(insn 122 121 123 2 init/main.c:536 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 12123394)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 123 122 125 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 142 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118201))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 125 123 126 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 142 [ _flags ])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 142 [ _flags ])
        (nil)))

(jump_insn 126 125 127 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 132)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [0.0%]  (fallthru)
(note 127 126 129 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 129 127 130 3 init/main.c:538 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11b6d770>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11b6d770>)
        (nil)))

(call_insn 130 129 131 3 init/main.c:538 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 131 130 132 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105913)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 141
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 132 131 133 4 103 "" [1 uses])

(note 133 132 149 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 149 133 134 4 NOTE_INSN_DELETED)

(call_insn 134 149 135 4 init/main.c:542 (parallel [
            (call (mem:SI (symbol_ref:SI ("idr_init_cache") [flags 0x41] <function_decl 0x11385b80 idr_init_cache>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 135 134 136 4 init/main.c:543 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_event_init") [flags 0x41] <function_decl 0x11430600 perf_event_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 136 135 137 4 init/main.c:544 (parallel [
            (call (mem:SI (symbol_ref:SI ("rcu_init") [flags 0x41] <function_decl 0x10d64a00 rcu_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 137 136 138 4 init/main.c:545 (parallel [
            (call (mem:SI (symbol_ref:SI ("radix_tree_init") [flags 0x41] <function_decl 0x10ef4180 radix_tree_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 138 137 139 4 init/main.c:547 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("early_irq_init") [flags 0x41] <function_decl 0x115f3680 early_irq_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(call_insn 139 138 140 4 init/main.c:548 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_IRQ") [flags 0x41] <function_decl 0x11212d80 init_IRQ>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 140 139 141 4 init/main.c:549 (parallel [
            (call (mem:SI (symbol_ref:SI ("prio_tree_init") [flags 0x41] <function_decl 0x11a3bf00 prio_tree_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 141 140 142 4 init/main.c:550 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_timers") [flags 0x41] <function_decl 0x10d01f00 init_timers>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 142 141 143 4 init/main.c:551 (parallel [
            (call (mem:SI (symbol_ref:SI ("hrtimers_init") [flags 0x41] <function_decl 0x112a1380 hrtimers_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 143 142 144 4 init/main.c:552 (parallel [
            (call (mem:SI (symbol_ref:SI ("softirq_init") [flags 0x41] <function_decl 0x115d0f80 softirq_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 144 143 145 4 init/main.c:553 (parallel [
            (call (mem:SI (symbol_ref:SI ("timekeeping_init") [flags 0x41] <function_decl 0x10b86200 timekeeping_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 145 144 146 4 init/main.c:554 (parallel [
            (call (mem:SI (symbol_ref:SI ("time_init") [flags 0x41] <function_decl 0x11a52180 time_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 146 145 147 4 init/main.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("profile_init") [flags 0x41] <function_decl 0x1177f280 profile_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(call_insn 147 146 148 4 init/main.c:556 (parallel [
            (call (mem:SI (symbol_ref:SI ("call_function_init") [flags 0x41] <function_decl 0x10c9fc80 call_function_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 148 147 150 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 141 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118201))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 150 148 151 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 141 [ _flags ])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 141 [ _flags ])
        (nil)))

(jump_insn 151 150 152 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 152 151 154 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 154 152 155 5 init/main.c:558 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11adda50>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11adda50>)
        (nil)))

(call_insn 155 154 156 5 init/main.c:558 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 191 192 194 195 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 147 191 192 194 195 196
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 156 155 157 6 104 "" [1 uses])

(note 157 156 158 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 6 init/main.c:560 (set (reg/f:SI 191)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 159 158 161 6 init/main.c:560 (set (reg:SI 192)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 161 159 162 6 init/main.c:560 (set (mem/c/i:QI (plus:SI (reg/f:SI 191)
                (const_int 4 [0x4])) [0 early_boot_irqs_disabled+0 S1 A8])
        (subreg:QI (reg:SI 192) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg/f:SI 191)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 162 161 163 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104761)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 163 162 164 6 init/main.c:564 (set (reg/f:SI 194)
        (symbol_ref:SI ("gfp_allowed_mask") [flags 0xc0] <var_decl 0x10cd82a0 gfp_allowed_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 164 163 165 6 init/main.c:564 (set (reg:SI 195)
        (const_int 16777215 [0xffffff])) 167 {*arm_movsi_insn} (nil))

(insn 165 164 166 6 init/main.c:564 (set (mem/c/i:SI (reg/f:SI 194) [0 gfp_allowed_mask+0 S4 A32])
        (reg:SI 195)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_DEAD (reg/f:SI 194)
            (expr_list:REG_EQUAL (const_int 16777215 [0xffffff])
                (nil)))))

(call_insn 166 165 167 6 init/main.c:566 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_init_late") [flags 0x41] <function_decl 0x10e60880 kmem_cache_init_late>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 167 166 168 6 init/main.c:573 (parallel [
            (call (mem:SI (symbol_ref:SI ("console_init") [flags 0x41] <function_decl 0x11588300 console_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 168 167 169 6 init/main.c:574 (set (reg/f:SI 196)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 6 init/main.c:574 (set (reg/f:SI 147 [ panic_later.428 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 196)
                (const_int 80 [0x50])) [0 panic_later+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 80 [0x50]))) [0 panic_later+0 S4 A32])
        (nil)))

(insn 170 169 171 6 init/main.c:574 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 147 [ panic_later.428 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 171 170 172 6 init/main.c:574 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 178)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 196
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  6 [0.0%]  (fallthru)
(note 172 171 174 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 174 172 175 7 init/main.c:575 (set (reg:SI 0 r0)
        (reg/f:SI 147 [ panic_later.428 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147 [ panic_later.428 ])
        (nil)))

(insn 175 174 176 7 init/main.c:575 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 196)
                (const_int 84 [0x54])) [0 panic_param+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 196)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 84 [0x54]))) [0 panic_param+0 S4 A32])
            (nil))))

(call_insn 176 175 177 7 init/main.c:575 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



(barrier 177 176 178)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 198
;; live  kill	

;; Pred edge  6 [100.0%] 
(code_label 178 177 179 8 105 "" [1 uses])

(note 179 178 180 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 180 179 181 8 init/main.c:587 (set (reg/f:SI 198)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114a4f00 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 181 180 182 8 init/main.c:587 (set (reg:SI 146 [ initrd_start.430 ])
        (mem/c/i:SI (reg/f:SI 198) [0 initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x114a4f00 initrd_start>) [0 initrd_start+0 S4 A32])
        (nil)))

(insn 182 181 183 8 init/main.c:587 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ initrd_start.430 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 183 182 184 8 init/main.c:587 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198
;; live  gen 	 24 [cc] 199 200
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 184 183 185 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 186 9 init/main.c:587 discrim 1 (set (reg/f:SI 199)
        (symbol_ref:SI ("initrd_below_start_ok") [flags 0xc0] <var_decl 0x114a4ea0 initrd_below_start_ok>)) 167 {*arm_movsi_insn} (nil))

(insn 186 185 187 9 init/main.c:587 discrim 1 (set (reg:SI 200 [ initrd_below_start_ok ])
        (mem/c/i:SI (reg/f:SI 199) [0 initrd_below_start_ok+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("initrd_below_start_ok") [flags 0xc0] <var_decl 0x114a4ea0 initrd_below_start_ok>) [0 initrd_below_start_ok+0 S4 A32])
            (nil))))

(insn 187 186 188 9 init/main.c:587 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 200 [ initrd_below_start_ok ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 188 187 189 9 init/main.c:587 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 144 201 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 198 200
;; live  gen 	 24 [cc] 144 201 204 205
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 189 188 191 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 191 189 192 10 NOTE_INSN_DELETED)

(note 192 191 195 10 NOTE_INSN_DELETED)

(insn 195 192 190 10 init/main.c:588 (set (reg/f:SI 205)
        (symbol_ref:SI ("min_low_pfn") [flags 0xc0] <var_decl 0x114a4480 min_low_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 190 195 193 10 init/main.c:588 (set (reg:SI 201)
        (plus:SI (reg:SI 146 [ initrd_start.430 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146 [ initrd_start.430 ])
        (nil)))

(insn 193 190 196 10 init/main.c:588 (set (reg:SI 204)
        (lshiftrt:SI (reg:SI 201)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 196 193 197 10 init/main.c:588 (set (reg:SI 144 [ min_low_pfn.432 ])
        (mem/c/i:SI (reg/f:SI 205) [0 min_low_pfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("min_low_pfn") [flags 0xc0] <var_decl 0x114a4480 min_low_pfn>) [0 min_low_pfn+0 S4 A32])
            (nil))))

(insn 197 196 198 10 init/main.c:587 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 204)
            (reg:SI 144 [ min_low_pfn.432 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 198 197 199 10 init/main.c:587 discrim 2 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204


;; Succ edge  11 [0.0%]  (fallthru)
;; Succ edge  12 [100.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 198 200 204
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  10 [0.0%]  (fallthru)
(note 199 198 202 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 202 199 203 11 init/main.c:589 (set (reg:SI 1 r1)
        (reg:SI 204)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 203 202 201 11 init/main.c:589 (set (reg:SI 2 r2)
        (reg:SI 144 [ min_low_pfn.432 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ min_low_pfn.432 ])
        (nil)))

(insn 201 203 204 11 init/main.c:589 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x10e89900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x10e89900>)
        (nil)))

(call_insn 204 201 207 11 init/main.c:589 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 207 204 208 11 init/main.c:593 (set (mem/c/i:SI (reg/f:SI 198) [0 initrd_start+0 S4 A32])
        (reg:SI 200 [ initrd_below_start_ok ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 200 [ initrd_below_start_ok ])
        (expr_list:REG_DEAD (reg/f:SI 198)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 8 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 143 209
;; live  kill	 14 [lr]

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 208 207 209 12 106 "" [3 uses])

(note 209 208 210 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(call_insn 210 209 211 12 init/main.c:600 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_per_cpu_pageset") [flags 0x41] <function_decl 0x111e0780 setup_per_cpu_pageset>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 211 210 212 12 init/main.c:602 (set (reg/f:SI 209)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 12 init/main.c:602 (set (reg/f:SI 143 [ late_time_init.433 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 209)
                (const_int 2072 [0x818])) [0 late_time_init+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
                        (const_int 2072 [0x818]))) [0 late_time_init+0 S4 A32])
            (nil))))

(insn 213 212 214 12 init/main.c:602 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ late_time_init.433 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 214 213 215 12 init/main.c:602 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  13 [78.3%]  (fallthru)
;; Succ edge  14 [21.6%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  12 [78.3%]  (fallthru)
(note 215 214 216 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(call_insn 216 215 217 13 init/main.c:603 (parallel [
            (call (mem:SI (reg/f:SI 143 [ late_time_init.433 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 143 [ late_time_init.433 ])
        (nil))
    (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 210
;; live  kill	 14 [lr]

;; Pred edge  12 [21.6%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 217 216 218 14 107 "" [1 uses])

(note 218 217 225 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 225 218 219 14 init/main.c:614 (set (reg/f:SI 210)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(call_insn 219 225 220 14 init/main.c:604 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_clock_init") [flags 0x41] <function_decl 0x11332800 sched_clock_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 220 219 221 14 init/main.c:605 (parallel [
            (call (mem:SI (symbol_ref:SI ("calibrate_delay") [flags 0x41] <function_decl 0x1149bc00 calibrate_delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 221 220 222 14 init/main.c:606 (parallel [
            (call (mem:SI (symbol_ref:SI ("pidmap_init") [flags 0x41] <function_decl 0x113bf280 pidmap_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 222 221 223 14 init/main.c:607 (parallel [
            (call (mem:SI (symbol_ref:SI ("anon_vma_init") [flags 0x41] <function_decl 0x1187ce80 anon_vma_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 223 222 224 14 init/main.c:612 (parallel [
            (call (mem:SI (symbol_ref/i:SI ("thread_info_cache_init") [flags 0x1] <function_decl 0x11359880 thread_info_cache_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 224 223 226 14 init/main.c:613 (parallel [
            (call (mem:SI (symbol_ref:SI ("cred_init") [flags 0x41] <function_decl 0x112ac480 cred_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 226 224 227 14 init/main.c:614 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 210) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(call_insn 227 226 228 14 init/main.c:614 (parallel [
            (call (mem:SI (symbol_ref:SI ("fork_init") [flags 0x41] <function_decl 0x11a3bd80 fork_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 228 227 229 14 init/main.c:615 (parallel [
            (call (mem:SI (symbol_ref:SI ("proc_caches_init") [flags 0x41] <function_decl 0x11342700 proc_caches_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 229 228 231 14 init/main.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("buffer_init") [flags 0x41] <function_decl 0x1197b680 buffer_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 231 229 232 14 init/main.c:620 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 210) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x110b50c0 totalram_pages>) [0 totalram_pages+0 S4 A32])
            (nil))))

(call_insn 232 231 233 14 init/main.c:620 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfs_caches_init") [flags 0x41] <function_decl 0x10feab00 vfs_caches_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 233 232 234 14 init/main.c:621 (parallel [
            (call (mem:SI (symbol_ref:SI ("signals_init") [flags 0x41] <function_decl 0x11269280 signals_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 234 233 235 14 init/main.c:623 (parallel [
            (call (mem:SI (symbol_ref:SI ("page_writeback_init") [flags 0x41] <function_decl 0x1178b780 page_writeback_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 235 234 236 14 init/main.c:625 (parallel [
            (call (mem:SI (symbol_ref:SI ("proc_root_init") [flags 0x41] <function_decl 0x11036280 proc_root_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 236 235 237 14 init/main.c:627 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cgroup_init") [flags 0x41] <function_decl 0x11385c80 cgroup_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(call_insn 237 236 238 14 init/main.c:632 (parallel [
            (call (mem:SI (symbol_ref:SI ("check_writebuffer_bugs") [flags 0x41] <function_decl 0x11a3b800 check_writebuffer_bugs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 238 237 248 14 init/main.c:640 (parallel [
            (call (mem:SI (symbol_ref:SI ("rest_init") [flags 0x3] <function_decl 0x11a52c00 rest_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 248 238 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_early_param (do_early_param)[0:2054] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 10 from 61 to 62 -- before reload
;;   ======================================================

changing bb of uid 15
  from 4 to 10
;;	  0-->    15 r0=r139                           :cortex_a8_default
;;	  0-->    61 cc=cmp(r133,r151)                 :cortex_a8_default
;;	  2-->    62 pc={(ltu(cc,0x0))?L59:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 61
;;   new tail = 62

;;   ======================================================
;;   -- basic block 3 from 11 to 13 -- before reload
;;   ======================================================

;;	  0-->    11 r141=[r133+0x8]                   :cortex_a8_load_store_1
;;	  2-->    12 cc=cmp(r141,0x0)                  :cortex_a8_default
;;	  4-->    13 pc={(cc==0x0)?L22:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 11
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 16 to 21 -- before reload
;;   ======================================================

;;	  0-->    16 r1=[r133]                         :cortex_a8_load_store_1
;;	  1-->    17 r0=call [`strcmp']                :cortex_a8_issue_branch
;;	 33-->    20 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    21 pc={(cc==0x0)?L41:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 16
;;   new tail = 21

;;   ======================================================
;;   -- basic block 5 from 25 to 31 -- before reload
;;   ======================================================

;;	  0-->    80 r1=`*.LC27'                       :cortex_a8_load_store_1
;;	  0-->    25 r0=r139                           :cortex_a8_default
;;	  1-->    27 r0=call [`strcmp']                :cortex_a8_issue_branch
changing bb of uid 81
  from 6 to 5
;;	  1-->    81 r1=`*.LC28'                       :cortex_a8_load_store_1
;;	 33-->    30 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    31 pc={(cc!=0x0)?L54:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 25
;;   new tail = 31

;;   ======================================================
;;   -- basic block 6 from 34 to 40 -- before reload
;;   ======================================================

;;	  0-->    34 r0=[r133]                         :cortex_a8_load_store_1
;;	  1-->    36 r0=call [`strcmp']                :cortex_a8_issue_branch
;;	 33-->    39 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    40 pc={(cc!=0x0)?L54:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 34
;;   new tail = 40

;;   ======================================================
;;   -- basic block 7 from 44 to 48 -- before reload
;;   ======================================================

;;	  0-->    44 r0=r140                           :cortex_a8_default
;;	  1-->    45 r0=call [[r133+0x4]]              :cortex_a8_issue_branch
;;	 33-->    47 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    48 pc={(cc==0x0)?L54:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 44
;;   new tail = 48

;;   ======================================================
;;   -- basic block 8 from 79 to 53 -- before reload
;;   ======================================================

;;	  0-->    79 r0=`*.LC29'                       :cortex_a8_load_store_1
;;	  0-->    52 r1=r139                           :cortex_a8_default
;;	  1-->    53 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 79
;;   new tail = 53

;;   ======================================================
;;   -- basic block 9 from 56 to 56 -- before reload
;;   ======================================================

;;	  0-->    56 r133=r133+0xc                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 56
;;   new tail = 56

;;   ======================================================
;;   -- basic block 2 from 2 to 82 -- before reload
;;   ======================================================

;;	  0-->     2 r139=r0                           :cortex_a8_default
;;	  0-->     3 r140=r1                           :cortex_a8_default
;;	  1-->     7 r133=`__setup_start'              :cortex_a8_load_store_1
;;	  2-->    60 r151=`__setup_end'                :cortex_a8_load_store_1
;;	  2-->    82 pc=L57                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2
;;   new tail = 82

;;   ======================================================
;;   -- basic block 11 from 68 to 74 -- before reload
;;   ======================================================

;;	  0-->    68 r0=0x0                            :cortex_a8_default
;;	  0-->    74 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 68
;;   new tail = 74


;; Procedure interblock/speculative motions == 2/2 




do_early_param

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,12u} r1={10d,5u} r2={6d} r3={6d} r11={1d,11u} r12={6d} r13={1d,16u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={11d,6u} r25={1d,11u} r26={1d,10u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={2d,6u,1d} r139={1d,3u} r140={1d,1u} r141={1d,1u} r151={1d,1u} 
;;    total ref usage 702{617d,84u,1e} in 35{30 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 139 140 151
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 139 140 151
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 init/main.c:391 (set (reg/v/f:SI 139 [ param ])
        (reg:SI 0 r0 [ param ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ param ])
        (nil)))

(insn 3 2 7 2 init/main.c:391 (set (reg/v/f:SI 140 [ val ])
        (reg:SI 1 r1 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ val ])
        (nil)))

(insn 7 3 60 2 init/main.c:394 (set (reg/v/f:SI 133 [ p ])
        (symbol_ref:SI ("__setup_start") [flags 0xc0] <var_decl 0x11a54420 __setup_start>)) 167 {*arm_movsi_insn} (nil))

(insn 60 7 82 2 init/main.c:394 discrim 1 (set (reg/f:SI 151)
        (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 82 60 83 2 init/main.c:394 (set (pc)
        (label_ref 57)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  10 [100.0%] 

(barrier 83 82 59)

;; Start of basic block ( 10) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  10 [91.0%] 
(code_label 59 83 10 3 116 "" [1 uses])

(note 10 59 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 init/main.c:395 (set (reg:SI 141 [ <variable>.early ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ p ])
                (const_int 8 [0x8])) [0 <variable>.early+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 init/main.c:395 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ <variable>.early ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.early ])
        (nil)))

(jump_insn 13 12 14 3 init/main.c:395 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 14 16 4 NOTE_INSN_DELETED)

(insn 16 18 17 4 init/main.c:395 discrim 1 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (reg/v/f:SI 133 [ p ]) [0 <variable>.str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 17 16 20 4 init/main.c:395 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 20 17 21 4 init/main.c:395 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 21 20 22 4 init/main.c:395 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  7 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%]  (fallthru)
(code_label 22 21 23 5 113 "" [1 uses])

(note 23 22 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 28 23 80 5 NOTE_INSN_DELETED)

(insn 80 28 25 5 init/main.c:396 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11b9acf0>)) 167 {*arm_movsi_insn} (nil))

(insn 25 80 27 5 init/main.c:396 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ param ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 27 25 81 5 init/main.c:396 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 81 27 30 5 init/main.c:397 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x11b9af30>)) 167 {*arm_movsi_insn} (nil))

(insn 30 81 31 5 init/main.c:395 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 31 30 32 5 init/main.c:395 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%]  (fallthru)
(note 32 31 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 37 32 34 6 NOTE_INSN_DELETED)

(insn 34 37 36 6 init/main.c:397 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (reg/v/f:SI 133 [ p ]) [0 <variable>.str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 36 34 39 6 init/main.c:397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 39 36 40 6 init/main.c:395 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 40 39 41 6 init/main.c:395 discrim 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  6 [50.0%]  (fallthru)
(code_label 41 40 42 7 114 "" [1 uses])

(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 43 42 46 7 NOTE_INSN_DELETED)

(note 46 43 44 7 NOTE_INSN_DELETED)

(insn 44 46 45 7 init/main.c:399 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ val ])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 47 7 init/main.c:399 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ p ])
                                (const_int 4 [0x4])) [0 <variable>.setup_func+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 45 48 7 init/main.c:399 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 48 47 49 7 init/main.c:399 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [0.0%]  (fallthru)
(note 49 48 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 79 49 52 8 init/main.c:400 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11af05c0>)) 167 {*arm_movsi_insn} (nil))

(insn 52 79 53 8 init/main.c:400 (set (reg:SI 1 r1)
        (reg/v/f:SI 139 [ param ])) 167 {*arm_movsi_insn} (nil))

(call_insn 53 52 54 8 init/main.c:400 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 133
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 54 53 55 9 115 "" [3 uses])

(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 9 init/main.c:394 (set (reg/v/f:SI 133 [ p ])
        (plus:SI (reg/v/f:SI 133 [ p ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  10 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 9 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 57 56 58 10 112 "" [1 uses])

(note 58 57 15 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 15 58 61 10 init/main.c:395 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ param ])) 167 {*arm_movsi_insn} (nil))

(insn 61 15 62 10 init/main.c:394 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ p ])
            (reg/f:SI 151))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 133 [ p ])
            (symbol_ref:SI ("__setup_end") [flags 0xc0] <var_decl 0x11a54480 __setup_end>))
        (nil)))

(jump_insn 62 61 63 10 init/main.c:394 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 10 -> ( 3 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 139 140 151


;; Succ edge  3 [91.0%] 
;; Succ edge  11 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  10 [9.0%]  (fallthru,loop_exit)
(note 63 62 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 68 63 74 11 init/main.c:406 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 74 68 84 11 init/main.c:406 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 84 74 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
