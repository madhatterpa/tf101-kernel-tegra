
;; Function lpj_setup (lpj_setup)[0:370] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; preset_lpj.130 = simple_strtoul (str, 0B, 0);

(insn 6 5 7 init/calibrate.c:18 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ str ])) -1 (nil))

(insn 7 6 8 init/calibrate.c:18 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 init/calibrate.c:18 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 9 8 10 init/calibrate.c:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a71000 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 0 init/calibrate.c:18 (set (reg:SI 133 [ preset_lpj.130 ])
        (reg:SI 0 r0)) -1 (nil))

;; preset_lpj = preset_lpj.130;

(insn 11 10 12 init/calibrate.c:18 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 12 11 0 init/calibrate.c:18 (set (mem/c/i:SI (reg/f:SI 136) [0 preset_lpj+0 S4 A32])
        (reg:SI 133 [ preset_lpj.130 ])) -1 (nil))

;; return 1;

(insn 13 12 14 init/calibrate.c:20 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 14 13 15 init/calibrate.c:20 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 15 14 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 init/calibrate.c:17 (set (reg/v/f:SI 135 [ str ])
        (reg:SI 0 r0 [ str ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 init/calibrate.c:18 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ str ])) -1 (nil))

(insn 7 6 8 3 init/calibrate.c:18 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 3 init/calibrate.c:18 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 9 8 10 3 init/calibrate.c:18 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("simple_strtoul") [flags 0x41] <function_decl 0x10a71000 simple_strtoul>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 11 3 init/calibrate.c:18 (set (reg:SI 133 [ preset_lpj.130 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 11 10 12 3 init/calibrate.c:18 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 12 11 13 3 init/calibrate.c:18 (set (mem/c/i:SI (reg/f:SI 136) [0 preset_lpj+0 S4 A32])
        (reg:SI 133 [ preset_lpj.130 ])) -1 (nil))

(insn 13 12 14 3 init/calibrate.c:20 (set (reg:SI 134 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 14 13 15 3 init/calibrate.c:20 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 15 14 24)

;; Start of basic block () -> 4
(note 24 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 24 19 4 init/calibrate.c:20 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 19 18 20 4 init/calibrate.c:20 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 20 19 21 4 init/calibrate.c:20 (set (pc)
        (label_ref 22)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 21 20 16)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 16 21 25 5 1 "" [1 uses])

(note 25 16 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 25 22 5 init/calibrate.c:20 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 22 17 26 6 2 "" [1 uses])

(note 26 22 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 23 26 0 6 init/calibrate.c:20 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function calibrate_delay (calibrate_delay)[0:373] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; sp.83 = sp;

(insn 5 4 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 149 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; this_cpu = (int) ((struct thread_info *) (sp.83 & 4294959104))->cpu;

(insn 6 5 7 init/calibrate.c:253 (set (reg:SI 157)
        (and:SI (reg:SI 149 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 7 6 8 init/calibrate.c:253 (set (reg:SI 156)
        (and:SI (reg:SI 157)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 149 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 8 7 0 init/calibrate.c:253 (set (reg/v:SI 153 [ this_cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 156)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

;; __asm__("" : "=r" __ptr : "0" &cpu_loops_per_jiffy);

(insn 9 8 10 init/calibrate.c:255 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 10 9 0 init/calibrate.c:255 (set (reg/v:SI 152 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 158)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2785931)) -1 (nil))

;; D.6774 = __per_cpu_offset[this_cpu];

(insn 11 10 12 init/calibrate.c:255 (set (reg/f:SI 159)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) -1 (nil))

(insn 12 11 0 init/calibrate.c:255 (set (reg:SI 155 [ D.6774 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 153 [ this_cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 159)) [0 __per_cpu_offset S4 A32])) -1 (nil))

;; if (*(long unsigned int *) (__ptr + D.6774) != 0)

(insn 13 12 14 init/calibrate.c:255 (set (reg:SI 160)
        (mem:SI (plus:SI (reg/v:SI 152 [ __ptr ])
                (reg:SI 155 [ D.6774 ])) [0 S4 A32])) -1 (nil))

(insn 14 13 15 init/calibrate.c:255 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 0 init/calibrate.c:255 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 3

;; __asm__("" : "=r" __ptr : "0" &cpu_loops_per_jiffy);

(insn 17 16 18 init/calibrate.c:256 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 18 17 0 init/calibrate.c:256 (set (reg/v:SI 151 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 161)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2786062)) -1 (nil))

;; lpj = *(long unsigned int *) (__ptr + D.6774);

(insn 19 18 0 init/calibrate.c:256 (set (reg/v:SI 154 [ lpj ])
        (mem:SI (plus:SI (reg/v:SI 151 [ __ptr ])
                (reg:SI 155 [ D.6774 ])) [0 S4 A32])) -1 (nil))

;; if (printed == 0)

(insn 20 19 21 init/calibrate.c:257 (set (reg/f:SI 162)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 21 20 22 init/calibrate.c:257 (set (reg:SI 163)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 162)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 22 21 23 init/calibrate.c:257 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 0 init/calibrate.c:257 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; printk (&"<6>Calibrating delay loop (skipped) already calibrated this CPU"[0]);

(insn 25 24 26 init/calibrate.c:258 (set (reg:SI 164)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10a205a0>)) -1 (nil))

(insn 26 25 27 init/calibrate.c:258 (set (reg:SI 0 r0)
        (reg:SI 164)) -1 (nil))

(call_insn 27 26 0 init/calibrate.c:258 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 30 29 31 6 "" [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; lpj = preset_lpj;

(insn 32 31 33 init/calibrate.c:260 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 33 32 0 init/calibrate.c:260 (set (reg/v:SI 154 [ lpj ])
        (mem/c/i:SI (reg/f:SI 165) [0 preset_lpj+0 S4 A32])) -1 (nil))

;; if (lpj != 0)

(insn 34 33 35 init/calibrate.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 154 [ lpj ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 35 34 0 init/calibrate.c:260 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))

;; Generating RTL for gimple basic block 6

;; if (printed == 0)

(insn 37 36 38 init/calibrate.c:262 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 38 37 39 init/calibrate.c:262 (set (reg:SI 167)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 166)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 39 38 40 init/calibrate.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 40 39 0 init/calibrate.c:262 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 7

;; printk (&"<6>Calibrating delay loop (skipped) preset value.. "[0]);

(insn 42 41 43 init/calibrate.c:263 (set (reg:SI 168)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10c46690>)) -1 (nil))

(insn 43 42 44 init/calibrate.c:263 (set (reg:SI 0 r0)
        (reg:SI 168)) -1 (nil))

(call_insn 44 43 0 init/calibrate.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 8

;; 

(code_label 47 46 48 8 "" [0 uses])

(note 48 47 0 NOTE_INSN_BASIC_BLOCK)

;; if (printed == 0)

(insn 49 48 50 init/calibrate.c:265 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 50 49 51 init/calibrate.c:265 (set (reg:SI 170)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 169)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 51 50 52 init/calibrate.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 0 init/calibrate.c:265 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))

;; Generating RTL for gimple basic block 9

;; lpj = lpj_fine;

(insn 54 53 55 init/calibrate.c:265 discrim 1 (set (reg/f:SI 171)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 55 54 0 init/calibrate.c:265 discrim 1 (set (reg/v:SI 154 [ lpj ])
        (mem/c/i:SI (plus:SI (reg/f:SI 171)
                (const_int 8 [0x8])) [0 lpj_fine+0 S4 A32])) -1 (nil))

;; if (lpj != 0)

(insn 56 55 57 init/calibrate.c:265 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 154 [ lpj ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 57 56 0 init/calibrate.c:265 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))

;; Generating RTL for gimple basic block 10

;; printk (&"<6>Calibrating delay loop (skipped), value calculated using timer frequency.. "[0]);

(insn 59 58 60 init/calibrate.c:267 (set (reg:SI 172)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10c5f0e0>)) -1 (nil))

(insn 60 59 61 init/calibrate.c:267 (set (reg:SI 0 r0)
        (reg:SI 172)) -1 (nil))

(call_insn 61 60 0 init/calibrate.c:267 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 11

;; 

(code_label 64 63 65 10 "" [0 uses])

(note 65 64 0 NOTE_INSN_BASIC_BLOCK)

;; printk (&"<6>Calibrating delay loop... "[0]);

(insn 66 65 67 init/calibrate.c:275 (set (reg:SI 173)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c51380>)) -1 (nil))

(insn 67 66 68 init/calibrate.c:275 (set (reg:SI 0 r0)
        (reg:SI 173)) -1 (nil))

(call_insn 68 67 0 init/calibrate.c:275 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 12

;; 

(code_label 69 68 70 9 "" [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)

;; ticks ={v} jiffies;

(insn 71 70 72 init/calibrate.c:192 (set (reg/f:SI 174)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 72 71 0 init/calibrate.c:192 (set (reg/v:SI 143 [ ticks ])
        (mem/v/c/i:SI (reg/f:SI 174) [0 jiffies+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 13

;; jiffies.131 ={v} jiffies;

(insn 74 73 75 init/calibrate.c:193 discrim 1 (set (reg/f:SI 175)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 75 74 0 init/calibrate.c:193 discrim 1 (set (reg:SI 139 [ jiffies.131 ])
        (mem/v/c/i:SI (reg/f:SI 175) [0 jiffies+0 S4 A32])) -1 (nil))

;; if (ticks == jiffies.131)

(insn 77 75 78 init/calibrate.c:193 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ ticks ])
            (reg:SI 139 [ jiffies.131 ]))) -1 (nil))

(jump_insn 78 77 0 init/calibrate.c:193 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))

;; Generating RTL for gimple basic block 14

;; ticks.199 ={v} jiffies;

(insn 80 79 81 init/calibrate.c:196 (set (reg/f:SI 176)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 81 80 0 init/calibrate.c:196 (set (reg/v:SI 138 [ ticks.199 ])
        (mem/v/c/i:SI (reg/f:SI 176) [0 jiffies+0 S4 A32])) -1 (nil))

;; trial_in_band = 0;

(insn 82 81 0 init/calibrate.c:187 (set (reg/v:SI 148 [ trial_in_band ])
        (const_int 0 [0x0])) -1 (nil))

;; band = 0;

(insn 83 82 0 init/calibrate.c:187 (set (reg/v:SI 147 [ band ])
        (const_int 0 [0x0])) -1 (nil))

;; trials = 0;

(insn 84 83 0 init/calibrate.c:187 (set (reg/v:SI 146 [ trials ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 15

;; trial_in_band = trial_in_band + 1;

(insn 86 85 0 init/calibrate.c:198 (set (reg/v:SI 148 [ trial_in_band ])
        (plus:SI (reg/v:SI 148 [ trial_in_band ])
            (const_int 1 [0x1]))) -1 (nil))

;; if (trial_in_band == 1 << band)

(insn 87 86 88 init/calibrate.c:198 (set (reg:SI 178)
        (const_int 1 [0x1])) -1 (nil))

(insn 88 87 89 init/calibrate.c:198 (set (reg:SI 177)
        (ashift:SI (reg:SI 178)
            (reg/v:SI 147 [ band ]))) -1 (nil))

(insn 89 88 90 init/calibrate.c:198 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ trial_in_band ])
            (reg:SI 177))) -1 (nil))

(jump_insn 90 89 0 init/calibrate.c:198 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))

;; Generating RTL for gimple basic block 16

;; band = band + 1;

(insn 92 91 0 init/calibrate.c:199 (set (reg/v:SI 147 [ band ])
        (plus:SI (reg/v:SI 147 [ band ])
            (const_int 1 [0x1]))) -1 (nil))

;; trial_in_band = 0;

(insn 93 92 0 init/calibrate.c:200 (set (reg/v:SI 148 [ trial_in_band ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 94 93 95 12 "" [0 uses])

(note 95 94 0 NOTE_INSN_BASIC_BLOCK)

;; loopadd = (long unsigned int) band * 4096;

(insn 96 95 0 init/calibrate.c:202 (set (reg/v:SI 144 [ loopadd ])
        (ashift:SI (reg/v:SI 147 [ band ])
            (const_int 12 [0xc]))) -1 (nil))

;; __delay ((int) loopadd);

(insn 97 96 98 init/calibrate.c:202 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ loopadd ])) -1 (nil))

(call_insn 98 97 0 init/calibrate.c:202 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; trials = band + trials;

(insn 99 98 0 init/calibrate.c:203 (set (reg/v:SI 146 [ trials ])
        (plus:SI (reg/v:SI 146 [ trials ])
            (reg/v:SI 147 [ band ]))) -1 (nil))

;; jiffies.133 ={v} jiffies;

(insn 100 99 101 init/calibrate.c:204 (set (reg/f:SI 179)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 101 100 0 init/calibrate.c:204 (set (reg:SI 140 [ jiffies.133 ])
        (mem/v/c/i:SI (reg/f:SI 179) [0 jiffies+0 S4 A32])) -1 (nil))

;; if (ticks.199 == jiffies.133)

(insn 103 101 104 init/calibrate.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ ticks.199 ])
            (reg:SI 140 [ jiffies.133 ]))) -1 (nil))

(jump_insn 104 103 0 init/calibrate.c:204 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))

;; Generating RTL for gimple basic block 18

;; lpj.201 = (long unsigned int) (trials - band) * 4096;

(insn 106 105 107 init/calibrate.c:211 (set (reg:SI 180)
        (minus:SI (reg/v:SI 146 [ trials ])
            (reg/v:SI 147 [ band ]))) -1 (nil))

(insn 107 106 0 init/calibrate.c:211 (set (reg/v:SI 137 [ lpj.201 ])
        (ashift:SI (reg:SI 180)
            (const_int 12 [0xc]))) -1 (nil))

;; Generating RTL for gimple basic block 19

;; recalibrate:

(code_label 108 107 109 14 ("recalibrate") [0 uses])

(note 109 108 0 NOTE_INSN_BASIC_BLOCK)

;; chop_limit = lpj.201 >> 8;

(insn 110 109 0 init/calibrate.c:221 (set (reg/v:SI 145 [ chop_limit ])
        (lshiftrt:SI (reg/v:SI 137 [ lpj.201 ])
            (const_int 8 [0x8]))) -1 (nil))

;; loopadd.202 = loopadd;

(insn 111 110 0 init/calibrate.c:215 (set (reg/v:SI 136 [ loopadd.202 ])
        (reg/v:SI 144 [ loopadd ])) -1 (nil))

;; lpj = lpj.201;

(insn 112 111 0 init/calibrate.c:214 (set (reg/v:SI 154 [ lpj ])
        (reg/v:SI 137 [ lpj.201 ])) -1 (nil))

;; Generating RTL for gimple basic block 20

;; lpj = loopadd.202 + lpj;

(insn 116 115 0 init/calibrate.c:223 (set (reg/v:SI 154 [ lpj ])
        (plus:SI (reg/v:SI 154 [ lpj ])
            (reg/v:SI 136 [ loopadd.202 ]))) -1 (nil))

;; ticks.203 ={v} jiffies;

(insn 117 116 118 init/calibrate.c:224 (set (reg/f:SI 181)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 118 117 0 init/calibrate.c:224 (set (reg/v:SI 135 [ ticks.203 ])
        (mem/v/c/i:SI (reg/f:SI 181) [0 jiffies+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 21

;; jiffies.135 ={v} jiffies;

(insn 120 119 121 init/calibrate.c:225 discrim 1 (set (reg/f:SI 182)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 121 120 0 init/calibrate.c:225 discrim 1 (set (reg:SI 141 [ jiffies.135 ])
        (mem/v/c/i:SI (reg/f:SI 182) [0 jiffies+0 S4 A32])) -1 (nil))

;; if (ticks.203 == jiffies.135)

(insn 123 121 124 init/calibrate.c:225 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ ticks.203 ])
            (reg:SI 141 [ jiffies.135 ]))) -1 (nil))

(jump_insn 124 123 0 init/calibrate.c:225 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))

;; Generating RTL for gimple basic block 22

;; ticks.204 ={v} jiffies;

(insn 126 125 127 init/calibrate.c:227 (set (reg/f:SI 183)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 127 126 0 init/calibrate.c:227 (set (reg/v:SI 134 [ ticks.204 ])
        (mem/v/c/i:SI (reg/f:SI 183) [0 jiffies+0 S4 A32])) -1 (nil))

;; __delay ((int) lpj);

(insn 128 127 129 init/calibrate.c:228 (set (reg:SI 0 r0)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(call_insn 129 128 0 init/calibrate.c:228 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; jiffies.137 ={v} jiffies;

(insn 130 129 131 init/calibrate.c:229 (set (reg/f:SI 184)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 131 130 0 init/calibrate.c:229 (set (reg:SI 142 [ jiffies.137 ])
        (mem/v/c/i:SI (reg/f:SI 184) [0 jiffies+0 S4 A32])) -1 (nil))

;; if (jiffies.137 != ticks.204)

(insn 132 131 133 init/calibrate.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ jiffies.137 ])
            (reg/v:SI 134 [ ticks.204 ]))) -1 (nil))

(jump_insn 133 132 0 init/calibrate.c:229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))

;; Generating RTL for gimple basic block 23

;; lpj = lpj - loopadd.202;

(insn 135 134 0 init/calibrate.c:230 (set (reg/v:SI 154 [ lpj ])
        (minus:SI (reg/v:SI 154 [ lpj ])
            (reg/v:SI 136 [ loopadd.202 ]))) -1 (nil))

;; Generating RTL for gimple basic block 24

;; 

(code_label 136 135 137 17 "" [0 uses])

(note 137 136 0 NOTE_INSN_BASIC_BLOCK)

;; loopadd.202 = loopadd.202 >> 1;

(insn 138 137 0 init/calibrate.c:231 (set (reg/v:SI 136 [ loopadd.202 ])
        (lshiftrt:SI (reg/v:SI 136 [ loopadd.202 ])
            (const_int 1 [0x1]))) -1 (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 139 138 140 15 "" [0 uses])

(note 140 139 0 NOTE_INSN_BASIC_BLOCK)

;; if (loopadd.202 > chop_limit)

(insn 142 140 143 init/calibrate.c:222 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ loopadd.202 ])
            (reg/v:SI 145 [ chop_limit ]))) -1 (nil))

(jump_insn 143 142 0 init/calibrate.c:222 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))

;; Generating RTL for gimple basic block 26

;; lpj.205 = lpj;

(insn 145 144 0 init/calibrate.c:222 discrim 1 (set (reg/v:SI 133 [ lpj.205 ])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

;; if (loopadd.202 * 2 + lpj.205 == loopadd * 2 + lpj.201)

(insn 146 145 147 init/calibrate.c:238 (set (reg:SI 185)
        (ashift:SI (reg/v:SI 136 [ loopadd.202 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 147 146 148 init/calibrate.c:238 (set (reg:SI 186)
        (plus:SI (reg:SI 185)
            (reg/v:SI 133 [ lpj.205 ]))) -1 (nil))

(insn 148 147 149 init/calibrate.c:238 (set (reg:SI 187)
        (ashift:SI (reg/v:SI 144 [ loopadd ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 149 148 150 init/calibrate.c:238 (set (reg:SI 188)
        (plus:SI (reg:SI 187)
            (reg/v:SI 137 [ lpj.201 ]))) -1 (nil))

(insn 150 149 151 init/calibrate.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (reg:SI 188))) -1 (nil))

(jump_insn 151 150 0 init/calibrate.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))

;; Generating RTL for gimple basic block 27

;; loopadd = loopadd << 2;

(insn 153 152 0 init/calibrate.c:240 (set (reg/v:SI 144 [ loopadd ])
        (ashift:SI (reg/v:SI 144 [ loopadd ])
            (const_int 2 [0x2]))) -1 (nil))

;; lpj.201 = lpj;

(insn 154 153 0 init/calibrate.c:240 (set (reg/v:SI 137 [ lpj.201 ])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

;; Generating RTL for gimple basic block 28

;; 

(code_label 157 156 158 7 "" [0 uses])

(note 158 157 0 NOTE_INSN_BASIC_BLOCK)

;; __asm__("" : "=r" __ptr : "0" &cpu_loops_per_jiffy);

(insn 159 158 160 init/calibrate.c:278 (set (reg/f:SI 189)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 160 159 0 init/calibrate.c:278 (set (reg/v:SI 150 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 189)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2788871)) -1 (nil))

;; *(long unsigned int *) (__ptr + __per_cpu_offset[this_cpu]) = lpj;

(insn 161 160 162 init/calibrate.c:278 (set (reg/f:SI 190)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) -1 (nil))

(insn 162 161 163 init/calibrate.c:278 (set (reg:SI 191)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 153 [ this_cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 190)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 163 162 0 init/calibrate.c:278 (set (mem:SI (plus:SI (reg/v:SI 150 [ __ptr ])
                (reg:SI 191)) [0 S4 A32])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

;; if (printed == 0)

(insn 164 163 165 init/calibrate.c:279 (set (reg/f:SI 192)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 165 164 166 init/calibrate.c:279 (set (reg:SI 193)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 192)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 166 165 167 init/calibrate.c:279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 167 166 0 init/calibrate.c:279 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 29

;; printk (&"<c>%lu.%02lu BogoMIPS (lpj=%lu)\n"[0], lpj / 5000, (lpj / 50) % 100, lpj);

(insn 169 168 170 init/calibrate.c:280 (set (reg:SI 194)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10c67600>)) -1 (nil))

(insn 170 169 171 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 171 170 172 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) -1 (nil))

(call_insn/u 172 171 173 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 173 172 174 init/calibrate.c:280 (set (reg:SI 198)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 154 [ lpj ])
            (const_int 5000 [0x1388]))
        (nil)))

(insn 174 173 175 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 175 174 176 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) -1 (nil))

(call_insn/u 176 175 177 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 177 176 178 init/calibrate.c:280 (set (reg:SI 202)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 154 [ lpj ])
            (const_int 50 [0x32]))
        (nil)))

(insn 178 177 179 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg:SI 202)) -1 (nil))

(insn 179 178 180 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) -1 (nil))

(call_insn/u 180 179 181 init/calibrate.c:280 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 181 180 182 init/calibrate.c:280 (set (reg:SI 208)
        (reg:SI 1 r1 [+4 ])) -1 (expr_list:REG_EQUAL (umod:SI (reg:SI 202)
            (const_int 100 [0x64]))
        (nil)))

(insn 182 181 183 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg:SI 194)) -1 (nil))

(insn 183 182 184 init/calibrate.c:280 (set (reg:SI 1 r1)
        (reg:SI 198)) -1 (nil))

(insn 184 183 185 init/calibrate.c:280 (set (reg:SI 2 r2)
        (reg:SI 208)) -1 (nil))

(insn 185 184 186 init/calibrate.c:280 (set (reg:SI 3 r3)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(call_insn 186 185 0 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 30

;; 

(code_label 187 186 188 19 "" [0 uses])

(note 188 187 0 NOTE_INSN_BASIC_BLOCK)

;; loops_per_jiffy = lpj;

(insn 189 188 190 init/calibrate.c:284 (set (reg/f:SI 209)
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10b96180 loops_per_jiffy>)) -1 (nil))

(insn 190 189 0 init/calibrate.c:284 (set (mem/c/i:SI (reg/f:SI 209) [0 loops_per_jiffy+0 S4 A32])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

;; printed = 1;

(insn 191 190 192 init/calibrate.c:285 (set (reg/f:SI 210)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 192 191 193 init/calibrate.c:285 (set (reg:SI 211)
        (const_int 1 [0x1])) -1 (nil))

(insn 193 192 194 init/calibrate.c:285 (set (reg:QI 212)
        (subreg:QI (reg:SI 211) 0)) -1 (nil))

(insn 194 193 0 init/calibrate.c:285 (set (mem/c/i:QI (plus:SI (reg/f:SI 210)
                (const_int 4 [0x4])) [0 printed+0 S1 A8])
        (reg:QI 212)) -1 (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 149 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 6 5 7 3 init/calibrate.c:253 (set (reg:SI 157)
        (and:SI (reg:SI 149 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 7 6 8 3 init/calibrate.c:253 (set (reg:SI 156)
        (and:SI (reg:SI 157)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 149 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 8 7 9 3 init/calibrate.c:253 (set (reg/v:SI 153 [ this_cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 156)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 9 8 10 3 init/calibrate.c:255 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 10 9 11 3 init/calibrate.c:255 (set (reg/v:SI 152 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 158)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2785931)) -1 (nil))

(insn 11 10 12 3 init/calibrate.c:255 (set (reg/f:SI 159)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) -1 (nil))

(insn 12 11 13 3 init/calibrate.c:255 (set (reg:SI 155 [ D.6774 ])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 153 [ this_cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 159)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 13 12 14 3 init/calibrate.c:255 (set (reg:SI 160)
        (mem:SI (plus:SI (reg/v:SI 152 [ __ptr ])
                (reg:SI 155 [ D.6774 ])) [0 S4 A32])) -1 (nil))

(insn 14 13 15 3 init/calibrate.c:255 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 15 14 16 3 init/calibrate.c:255 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 6)

;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 init/calibrate.c:256 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 18 17 19 4 init/calibrate.c:256 (set (reg/v:SI 151 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 161)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2786062)) -1 (nil))

(insn 19 18 20 4 init/calibrate.c:256 (set (reg/v:SI 154 [ lpj ])
        (mem:SI (plus:SI (reg/v:SI 151 [ __ptr ])
                (reg:SI 155 [ D.6774 ])) [0 S4 A32])) -1 (nil))

(insn 20 19 21 4 init/calibrate.c:257 (set (reg/f:SI 162)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 21 20 22 4 init/calibrate.c:257 (set (reg:SI 163)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 162)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 22 21 23 4 init/calibrate.c:257 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 24 4 init/calibrate.c:257 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 29)

;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  29 [100.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [0.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 init/calibrate.c:258 (set (reg:SI 164)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10a205a0>)) -1 (nil))

(insn 26 25 27 5 init/calibrate.c:258 (set (reg:SI 0 r0)
        (reg:SI 164)) -1 (nil))

(call_insn 27 26 28 5 init/calibrate.c:258 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 28 27 29 5 init/calibrate.c:258 (set (pc)
        (label_ref 157)) -1 (nil))
;; End of basic block 5 -> ( 29)

;; Succ edge  29 [100.0%] 

(barrier 29 28 30)

;; Start of basic block ( 3) -> 6
;; Pred edge  3 [50.0%] 
(code_label 30 29 31 6 6 "" [1 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 init/calibrate.c:260 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 33 32 34 6 init/calibrate.c:260 (set (reg/v:SI 154 [ lpj ])
        (mem/c/i:SI (reg/f:SI 165) [0 preset_lpj+0 S4 A32])) -1 (nil))

(insn 34 33 35 6 init/calibrate.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 154 [ lpj ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 35 34 36 6 init/calibrate.c:260 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 9)

;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [50.0%]  (fallthru)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 7 init/calibrate.c:262 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 38 37 39 7 init/calibrate.c:262 (set (reg:SI 167)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 166)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 39 38 40 7 init/calibrate.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 40 39 41 7 init/calibrate.c:262 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 29)

;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  29 [100.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [0.0%]  (fallthru)
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 8 init/calibrate.c:263 (set (reg:SI 168)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10c46690>)) -1 (nil))

(insn 43 42 44 8 init/calibrate.c:263 (set (reg:SI 0 r0)
        (reg:SI 168)) -1 (nil))

(call_insn 44 43 45 8 init/calibrate.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 45 44 46 8 init/calibrate.c:263 (set (pc)
        (label_ref 157)) -1 (nil))
;; End of basic block 8 -> ( 29)

;; Succ edge  29 [100.0%] 

(barrier 46 45 47)

;; Start of basic block ( 6) -> 9
;; Pred edge  6 [50.0%] 
(code_label 47 46 48 9 8 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 init/calibrate.c:265 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 50 49 51 9 init/calibrate.c:265 (set (reg:SI 170)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 169)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 51 50 52 9 init/calibrate.c:265 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 53 9 init/calibrate.c:265 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 9 -> ( 10 13)

;; Succ edge  10 [100.0%]  (fallthru)
;; Succ edge  13 [0.0%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
(note 53 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 10 init/calibrate.c:265 discrim 1 (set (reg/f:SI 171)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 55 54 56 10 init/calibrate.c:265 discrim 1 (set (reg/v:SI 154 [ lpj ])
        (mem/c/i:SI (plus:SI (reg/f:SI 171)
                (const_int 8 [0x8])) [0 lpj_fine+0 S4 A32])) -1 (nil))

(insn 56 55 57 10 init/calibrate.c:265 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 154 [ lpj ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 57 56 58 10 init/calibrate.c:265 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 10 -> ( 11 12)

;; Succ edge  11 [100.0%]  (fallthru)
;; Succ edge  12

;; Start of basic block ( 10) -> 11
;; Pred edge  10 [100.0%]  (fallthru)
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 11 init/calibrate.c:267 (set (reg:SI 172)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10c5f0e0>)) -1 (nil))

(insn 60 59 61 11 init/calibrate.c:267 (set (reg:SI 0 r0)
        (reg:SI 172)) -1 (nil))

(call_insn 61 60 62 11 init/calibrate.c:267 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 62 61 63 11 init/calibrate.c:265 discrim 2 (set (pc)
        (label_ref 157)) -1 (nil))
;; End of basic block 11 -> ( 29)

;; Succ edge  29 [100.0%] 

(barrier 63 62 64)

;; Start of basic block ( 10) -> 12
;; Pred edge  10
(code_label 64 63 65 12 10 "" [1 uses])

(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 12 init/calibrate.c:275 (set (reg:SI 173)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c51380>)) -1 (nil))

(insn 67 66 68 12 init/calibrate.c:275 (set (reg:SI 0 r0)
        (reg:SI 173)) -1 (nil))

(call_insn 68 67 69 12 init/calibrate.c:275 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 9 12) -> 13
;; Pred edge  9 [0.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 69 68 70 13 9 "" [1 uses])

(note 70 69 71 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 13 init/calibrate.c:192 (set (reg/f:SI 174)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 72 71 76 13 init/calibrate.c:192 (set (reg/v:SI 143 [ ticks ])
        (mem/v/c/i:SI (reg/f:SI 174) [0 jiffies+0 S4 A32])) -1 (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 14
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  14 [86.0%]  (dfs_back)
(code_label 76 72 73 14 11 "" [1 uses])

(note 73 76 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 14 init/calibrate.c:193 discrim 1 (set (reg/f:SI 175)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 75 74 77 14 init/calibrate.c:193 discrim 1 (set (reg:SI 139 [ jiffies.131 ])
        (mem/v/c/i:SI (reg/f:SI 175) [0 jiffies+0 S4 A32])) -1 (nil))

(insn 77 75 78 14 init/calibrate.c:193 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ ticks ])
            (reg:SI 139 [ jiffies.131 ]))) -1 (nil))

(jump_insn 78 77 79 14 init/calibrate.c:193 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 14 -> ( 14 15)

;; Succ edge  14 [86.0%]  (dfs_back)
;; Succ edge  15 [14.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 [14.0%]  (fallthru)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 15 init/calibrate.c:196 (set (reg/f:SI 176)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 81 80 82 15 init/calibrate.c:196 (set (reg/v:SI 138 [ ticks.199 ])
        (mem/v/c/i:SI (reg/f:SI 176) [0 jiffies+0 S4 A32])) -1 (nil))

(insn 82 81 83 15 init/calibrate.c:187 (set (reg/v:SI 148 [ trial_in_band ])
        (const_int 0 [0x0])) -1 (nil))

(insn 83 82 84 15 init/calibrate.c:187 (set (reg/v:SI 147 [ band ])
        (const_int 0 [0x0])) -1 (nil))

(insn 84 83 102 15 init/calibrate.c:187 (set (reg/v:SI 146 [ trials ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 18) -> 16
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  18 [86.0%]  (dfs_back)
(code_label 102 84 85 16 13 "" [1 uses])

(note 85 102 86 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 16 init/calibrate.c:198 (set (reg/v:SI 148 [ trial_in_band ])
        (plus:SI (reg/v:SI 148 [ trial_in_band ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 87 86 88 16 init/calibrate.c:198 (set (reg:SI 178)
        (const_int 1 [0x1])) -1 (nil))

(insn 88 87 89 16 init/calibrate.c:198 (set (reg:SI 177)
        (ashift:SI (reg:SI 178)
            (reg/v:SI 147 [ band ]))) -1 (nil))

(insn 89 88 90 16 init/calibrate.c:198 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ trial_in_band ])
            (reg:SI 177))) -1 (nil))

(jump_insn 90 89 91 16 init/calibrate.c:198 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 16 -> ( 17 18)

;; Succ edge  17 [28.0%]  (fallthru)
;; Succ edge  18 [72.0%] 

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [28.0%]  (fallthru)
(note 91 90 92 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 17 init/calibrate.c:199 (set (reg/v:SI 147 [ band ])
        (plus:SI (reg/v:SI 147 [ band ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 93 92 94 17 init/calibrate.c:200 (set (reg/v:SI 148 [ trial_in_band ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; Pred edge  16 [72.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 94 93 95 18 12 "" [1 uses])

(note 95 94 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 18 init/calibrate.c:202 (set (reg/v:SI 144 [ loopadd ])
        (ashift:SI (reg/v:SI 147 [ band ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 97 96 98 18 init/calibrate.c:202 (set (reg:SI 0 r0)
        (reg/v:SI 144 [ loopadd ])) -1 (nil))

(call_insn 98 97 99 18 init/calibrate.c:202 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 99 98 100 18 init/calibrate.c:203 (set (reg/v:SI 146 [ trials ])
        (plus:SI (reg/v:SI 146 [ trials ])
            (reg/v:SI 147 [ band ]))) -1 (nil))

(insn 100 99 101 18 init/calibrate.c:204 (set (reg/f:SI 179)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 101 100 103 18 init/calibrate.c:204 (set (reg:SI 140 [ jiffies.133 ])
        (mem/v/c/i:SI (reg/f:SI 179) [0 jiffies+0 S4 A32])) -1 (nil))

(insn 103 101 104 18 init/calibrate.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ ticks.199 ])
            (reg:SI 140 [ jiffies.133 ]))) -1 (nil))

(jump_insn 104 103 105 18 init/calibrate.c:204 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 18 -> ( 16 19)

;; Succ edge  16 [86.0%]  (dfs_back)
;; Succ edge  19 [14.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 [14.0%]  (fallthru)
(note 105 104 106 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 19 init/calibrate.c:211 (set (reg:SI 180)
        (minus:SI (reg/v:SI 146 [ trials ])
            (reg/v:SI 147 [ band ]))) -1 (nil))

(insn 107 106 108 19 init/calibrate.c:211 (set (reg/v:SI 137 [ lpj.201 ])
        (ashift:SI (reg:SI 180)
            (const_int 12 [0xc]))) -1 (nil))
;; End of basic block 19 -> ( 20)

;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 28) -> 20
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  28 [100.0%]  (dfs_back)
(code_label 108 107 109 20 14 ("recalibrate") [1 uses])

(note 109 108 110 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 20 init/calibrate.c:221 (set (reg/v:SI 145 [ chop_limit ])
        (lshiftrt:SI (reg/v:SI 137 [ lpj.201 ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 111 110 112 20 init/calibrate.c:215 (set (reg/v:SI 136 [ loopadd.202 ])
        (reg/v:SI 144 [ loopadd ])) -1 (nil))

(insn 112 111 113 20 init/calibrate.c:214 (set (reg/v:SI 154 [ lpj ])
        (reg/v:SI 137 [ lpj.201 ])) -1 (nil))

(jump_insn 113 112 114 20 init/calibrate.c:214 (set (pc)
        (label_ref 139)) -1 (nil))
;; End of basic block 20 -> ( 26)

;; Succ edge  26 [100.0%] 

(barrier 114 113 141)

;; Start of basic block ( 26) -> 21
;; Pred edge  26 [91.0%] 
(code_label 141 114 115 21 18 "" [1 uses])

(note 115 141 116 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 21 init/calibrate.c:223 (set (reg/v:SI 154 [ lpj ])
        (plus:SI (reg/v:SI 154 [ lpj ])
            (reg/v:SI 136 [ loopadd.202 ]))) -1 (nil))

(insn 117 116 118 21 init/calibrate.c:224 (set (reg/f:SI 181)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 118 117 122 21 init/calibrate.c:224 (set (reg/v:SI 135 [ ticks.203 ])
        (mem/v/c/i:SI (reg/f:SI 181) [0 jiffies+0 S4 A32])) -1 (nil))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 22
;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  22 [86.0%]  (dfs_back)
(code_label 122 118 119 22 16 "" [1 uses])

(note 119 122 120 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 22 init/calibrate.c:225 discrim 1 (set (reg/f:SI 182)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 121 120 123 22 init/calibrate.c:225 discrim 1 (set (reg:SI 141 [ jiffies.135 ])
        (mem/v/c/i:SI (reg/f:SI 182) [0 jiffies+0 S4 A32])) -1 (nil))

(insn 123 121 124 22 init/calibrate.c:225 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ ticks.203 ])
            (reg:SI 141 [ jiffies.135 ]))) -1 (nil))

(jump_insn 124 123 125 22 init/calibrate.c:225 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 22 -> ( 22 23)

;; Succ edge  22 [86.0%]  (dfs_back)
;; Succ edge  23 [14.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; Pred edge  22 [14.0%]  (fallthru)
(note 125 124 126 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 126 125 127 23 init/calibrate.c:227 (set (reg/f:SI 183)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 127 126 128 23 init/calibrate.c:227 (set (reg/v:SI 134 [ ticks.204 ])
        (mem/v/c/i:SI (reg/f:SI 183) [0 jiffies+0 S4 A32])) -1 (nil))

(insn 128 127 129 23 init/calibrate.c:228 (set (reg:SI 0 r0)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(call_insn 129 128 130 23 init/calibrate.c:228 (parallel [
            (call (mem:SI (symbol_ref:SI ("__delay") [flags 0x41] <function_decl 0x10b98200 __delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 130 129 131 23 init/calibrate.c:229 (set (reg/f:SI 184)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) -1 (nil))

(insn 131 130 132 23 init/calibrate.c:229 (set (reg:SI 142 [ jiffies.137 ])
        (mem/v/c/i:SI (reg/f:SI 184) [0 jiffies+0 S4 A32])) -1 (nil))

(insn 132 131 133 23 init/calibrate.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ jiffies.137 ])
            (reg/v:SI 134 [ ticks.204 ]))) -1 (nil))

(jump_insn 133 132 134 23 init/calibrate.c:229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 23 -> ( 24 25)

;; Succ edge  24 [72.0%]  (fallthru)
;; Succ edge  25 [28.0%] 

;; Start of basic block ( 23) -> 24
;; Pred edge  23 [72.0%]  (fallthru)
(note 134 133 135 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 24 init/calibrate.c:230 (set (reg/v:SI 154 [ lpj ])
        (minus:SI (reg/v:SI 154 [ lpj ])
            (reg/v:SI 136 [ loopadd.202 ]))) -1 (nil))
;; End of basic block 24 -> ( 25)

;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 23 24) -> 25
;; Pred edge  23 [28.0%] 
;; Pred edge  24 [100.0%]  (fallthru)
(code_label 136 135 137 25 17 "" [1 uses])

(note 137 136 138 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 139 25 init/calibrate.c:231 (set (reg/v:SI 136 [ loopadd.202 ])
        (lshiftrt:SI (reg/v:SI 136 [ loopadd.202 ])
            (const_int 1 [0x1]))) -1 (nil))
;; End of basic block 25 -> ( 26)

;; Succ edge  26 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 20 25) -> 26
;; Pred edge  20 [100.0%] 
;; Pred edge  25 [100.0%]  (fallthru,dfs_back)
(code_label 139 138 140 26 15 "" [1 uses])

(note 140 139 142 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 142 140 143 26 init/calibrate.c:222 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ loopadd.202 ])
            (reg/v:SI 145 [ chop_limit ]))) -1 (nil))

(jump_insn 143 142 144 26 init/calibrate.c:222 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 26 -> ( 21 27)

;; Succ edge  21 [91.0%] 
;; Succ edge  27 [9.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; Pred edge  26 [9.0%]  (fallthru)
(note 144 143 145 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 145 144 146 27 init/calibrate.c:222 discrim 1 (set (reg/v:SI 133 [ lpj.205 ])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 146 145 147 27 init/calibrate.c:238 (set (reg:SI 185)
        (ashift:SI (reg/v:SI 136 [ loopadd.202 ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 147 146 148 27 init/calibrate.c:238 (set (reg:SI 186)
        (plus:SI (reg:SI 185)
            (reg/v:SI 133 [ lpj.205 ]))) -1 (nil))

(insn 148 147 149 27 init/calibrate.c:238 (set (reg:SI 187)
        (ashift:SI (reg/v:SI 144 [ loopadd ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 149 148 150 27 init/calibrate.c:238 (set (reg:SI 188)
        (plus:SI (reg:SI 187)
            (reg/v:SI 137 [ lpj.201 ]))) -1 (nil))

(insn 150 149 151 27 init/calibrate.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (reg:SI 188))) -1 (nil))

(jump_insn 151 150 152 27 init/calibrate.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 157)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil)))
;; End of basic block 27 -> ( 28 29)

;; Succ edge  28 [91.0%]  (fallthru)
;; Succ edge  29 [9.0%] 

;; Start of basic block ( 27) -> 28
;; Pred edge  27 [91.0%]  (fallthru)
(note 152 151 153 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 28 init/calibrate.c:240 (set (reg/v:SI 144 [ loopadd ])
        (ashift:SI (reg/v:SI 144 [ loopadd ])
            (const_int 2 [0x2]))) -1 (nil))

(insn 154 153 155 28 init/calibrate.c:240 (set (reg/v:SI 137 [ lpj.201 ])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(jump_insn 155 154 156 28 init/calibrate.c:240 (set (pc)
        (label_ref 108)) -1 (nil))
;; End of basic block 28 -> ( 20)

;; Succ edge  20 [100.0%]  (dfs_back)

(barrier 156 155 157)

;; Start of basic block ( 5 8 11 7 27 4) -> 29
;; Pred edge  5 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  27 [9.0%] 
;; Pred edge  4 [100.0%] 
(code_label 157 156 158 29 7 "" [6 uses])

(note 158 157 159 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 29 init/calibrate.c:278 (set (reg/f:SI 189)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 160 159 161 29 init/calibrate.c:278 (set (reg/v:SI 150 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 189)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 2788871)) -1 (nil))

(insn 161 160 162 29 init/calibrate.c:278 (set (reg/f:SI 190)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c0ba20 __per_cpu_offset>)) -1 (nil))

(insn 162 161 163 29 init/calibrate.c:278 (set (reg:SI 191)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 153 [ this_cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 190)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 163 162 164 29 init/calibrate.c:278 (set (mem:SI (plus:SI (reg/v:SI 150 [ __ptr ])
                (reg:SI 191)) [0 S4 A32])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 164 163 165 29 init/calibrate.c:279 (set (reg/f:SI 192)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 165 164 166 29 init/calibrate.c:279 (set (reg:SI 193)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 192)
                    (const_int 4 [0x4])) [0 printed+0 S1 A8]))) -1 (nil))

(insn 166 165 167 29 init/calibrate.c:279 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 167 166 168 29 init/calibrate.c:279 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 29 -> ( 30 31)

;; Succ edge  30 [0.0%]  (fallthru)
;; Succ edge  31 [100.0%] 

;; Start of basic block ( 29) -> 30
;; Pred edge  29 [0.0%]  (fallthru)
(note 168 167 169 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 30 init/calibrate.c:280 (set (reg:SI 194)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10c67600>)) -1 (nil))

(insn 170 169 171 30 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 171 170 172 30 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) -1 (nil))

(call_insn/u 172 171 173 30 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 173 172 174 30 init/calibrate.c:280 (set (reg:SI 198)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 154 [ lpj ])
            (const_int 5000 [0x1388]))
        (nil)))

(insn 174 173 175 30 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 175 174 176 30 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) -1 (nil))

(call_insn/u 176 175 177 30 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 177 176 178 30 init/calibrate.c:280 (set (reg:SI 202)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 154 [ lpj ])
            (const_int 50 [0x32]))
        (nil)))

(insn 178 177 179 30 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg:SI 202)) -1 (nil))

(insn 179 178 180 30 init/calibrate.c:280 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) -1 (nil))

(call_insn/u 180 179 181 30 init/calibrate.c:280 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 181 180 182 30 init/calibrate.c:280 (set (reg:SI 208)
        (reg:SI 1 r1 [+4 ])) -1 (expr_list:REG_EQUAL (umod:SI (reg:SI 202)
            (const_int 100 [0x64]))
        (nil)))

(insn 182 181 183 30 init/calibrate.c:280 (set (reg:SI 0 r0)
        (reg:SI 194)) -1 (nil))

(insn 183 182 184 30 init/calibrate.c:280 (set (reg:SI 1 r1)
        (reg:SI 198)) -1 (nil))

(insn 184 183 185 30 init/calibrate.c:280 (set (reg:SI 2 r2)
        (reg:SI 208)) -1 (nil))

(insn 185 184 186 30 init/calibrate.c:280 (set (reg:SI 3 r3)
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(call_insn 186 185 187 30 init/calibrate.c:280 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a4bf80 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 30 -> ( 31)

;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; Pred edge  29 [100.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 187 186 188 31 19 "" [1 uses])

(note 188 187 189 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 31 init/calibrate.c:284 (set (reg/f:SI 209)
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10b96180 loops_per_jiffy>)) -1 (nil))

(insn 190 189 191 31 init/calibrate.c:284 (set (mem/c/i:SI (reg/f:SI 209) [0 loops_per_jiffy+0 S4 A32])
        (reg/v:SI 154 [ lpj ])) -1 (nil))

(insn 191 190 192 31 init/calibrate.c:285 (set (reg/f:SI 210)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 192 191 193 31 init/calibrate.c:285 (set (reg:SI 211)
        (const_int 1 [0x1])) -1 (nil))

(insn 193 192 194 31 init/calibrate.c:285 (set (reg:QI 212)
        (subreg:QI (reg:SI 211) 0)) -1 (nil))

(insn 194 193 199 31 init/calibrate.c:285 (set (mem/c/i:QI (plus:SI (reg/f:SI 210)
                (const_int 4 [0x4])) [0 printed+0 S1 A8])
        (reg:QI 212)) -1 (nil))
;; End of basic block 31 -> ( 32)

;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; Pred edge  31 [100.0%]  (fallthru)
(note 199 194 196 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(jump_insn 196 199 197 32 init/calibrate.c:286 (set (pc)
        (label_ref 198)) -1 (nil))
;; End of basic block 32 -> ( 34)

;; Succ edge  34 [100.0%] 

(barrier 197 196 195)

;; Start of basic block () -> 33
(code_label 195 197 200 33 5 "" [0 uses])

(note 200 195 198 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 33 -> ( 34)

;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 32 33) -> 34
;; Pred edge  32 [100.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 198 200 201 34 20 "" [1 uses])

(note 201 198 0 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 34 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

